"use strict";function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}

game.import("extension",function(lib,game,ui,get,ai,_status){return {name:"血色衣冠",editable:false,content:function (config,pack){
	
	lib.skill._XSzhengwang={
		trigger:{
			global:'dieBegin',
		},  
		priority:-1,
		forced:true,
		unique:true,  
		content:function(){					
			game.playAudio('..','extension','血色衣冠',trigger.player.name);													 						          					        
		},
	};
	
	if(config.XS_buchang){
		lib.skill._addbuchang={
			trigger:{
				global:'gameStart',
			},
			direct:true,
			firstDo:true,
			priority:9999,
			filter:function(event,player){
				return game.hasPlayer(function(current){
					return current.identity=='zhong'||current.identity=='nei';
				});
			},
			content:function(){
				game.countPlayer(function(current){
					if(current.identity=='zhong'||current.identity=='nei') {
						current.addSkill('XS_qinwang1');
					}
				});
			}
		};
	};
	
	lib.element.player.gainPlayerEquip=function(target,forced){
		var next=game.createEvent('gainPlayerEquip');
		next.player=this;
		next.target=target;
		next.forced=forced;
		next.setContent('gainPlayerEquip');
		return next;
	};
	lib.element.content.gainPlayerEquip=function(){
		"step 0"
		if(target.countCards('e')) {
			var str='你可获得'+get.translation(target)+'装备区的一张牌';
			if(forced) str+='，然后将其置入你装备区对应位置';
			if(player.hasSkill('XS_binglie')) str+='；否则，你可将你装备区的一张牌置于一名其他角色装备区';
			player.chooseCardButton(str,target.getCards('e'),1,false).ai=function(button){
				var sub=get.subtype(button.link);
				if(player.hasSkill('XS_binglie')) {
					if(player.countCards('e')==1) {
						if(player.getEquip(sub)) return 20;
						else return -1;
					}
					else if(!player.countCards('e')) {
						return get.equipValue(button.link);
					}
				}
				else {
					if(!player.getEquip(sub)) return get.equipValue(button.link);
					return get.equipValue(button.link)-get.equipValue(player.getEquip(sub));
				}
			};
		}
		"step 1"
		if(result.bool){
			var eq=result.links[0];
			player.gain(eq,'gain2');
			if(forced) {
				player.equip(eq);
			}
			event.finish();
		}
		"step 2"
		if(player.hasSkill('XS_binglie')&&player.countCards('e')) {
			player.chooseCardTarget({
				filterCard:function(card){
					return get.type(card)=='equip';
				},
				position:"e",
				selectCard:1,
				selectTarget:1,
				filterTarget:function(card,player,target){
					return player!=target;
				},
				ai1:function(card){
					return 6.5-get.value(card);
				},
				ai2:function(target){
					var att=get.attitude(_status.event.player,target);
					return att;
				},
				prompt:'你可将你装备区的一张牌置于一名其他角色的装备区'
			});
		}
		else event.finish();
		"step 3"
		if(result.bool){
			result.targets[0].gain(result.cards[0],player,'giveAuto');
			result.targets[0].equip(result.cards[0]);
		}
    };
	lib.element.player.getMinValueCard=function(position,filter){
		if(typeof position!='string'){
			position='h';
		}
		var i,j;
		var cds=this.getCards(position);
		if(typeof filter=='object'){
			for(i=0;i<cds.length;i++){
				for(j in filter){
					var value;
					if(j=='type'||j=='subtype'||j=='color'||j=='suit'||j=='number'){
						value=get[j](cds[i]);
					}
					else{
						value=cds[i][j];
					}
					if((typeof filter[j]=='string'&&value!=filter[j])||
						(Array.isArray(filter[j])&&!filter[j].contains(value))){
						cds.splice(i--,1);break;
					}
				}
			}
		}
		game.log(cds);
		if(cds.length) {
			var cd=cds[0],vl=get.value(cd);
			for(i=1;i<cds.length;i++) {
				if(get.value(cds[i])<vl) {
					vl=get.value(cds[i]);
					cd=cds[i];
				}
			}
			return cd;
		}
		else return 'none';
	};
	lib.element.player.givePlayerCard=function(){
		var next=game.createEvent('givePlayerCard');
		next.player=this;
		for(var i=0;i<arguments.length;i++){
			if(get.itemtype(arguments[i])=='player'){
				next.target=arguments[i];
			}
			else if(typeof arguments[i]=='number'){
				next.selectButton=[arguments[i],arguments[i]];
			}
			else if(get.itemtype(arguments[i])=='select'){
				next.selectButton=arguments[i];
			}
			else if(typeof arguments[i]=='boolean'){
				next.forced=arguments[i];
			}
			else if(get.itemtype(arguments[i])=='position'){
				next.position=arguments[i];
			}
			else if(get.itemtype(arguments[i])=='cards'){
				next.cards=arguments[i].slice(0);
			}
		}
		if(next.position==undefined) next.position='h';
		if(next.selectButton==undefined) next.selectButton=[1,1];
		if(next.forced==undefined) next.forced=false;
		next.setContent('givePlayerCard');
		return next;
	};
	lib.element.content.givePlayerCard=function(){
		"step 0"
		var str='交给'+get.translation(target);
		var range=get.select(event.selectButton);
		if(range[0]==range[1]) str+=get.cnNumber(range[0]);
		else if(range[1]==Infinity) str+='至少'+get.cnNumber(range[0]);
		else str+=get.cnNumber(range[0])+'至'+get.cnNumber(range[1]);
		str+='张';
		if(event.position=='h'||event.position==undefined) str+='手';
		if(event.position=='e') str+='装备';
		str+='牌';
		player.choosePlayerCard(str,player,event.selectButton,event.forced).set('filterButton',function(button){
			return !event.cards.contains(button.link);
		});
		"step 1"
		if(result.bool){
			target.gain(result.links,player,'giveAuto');
		}
		event.finish();
		return;
	};
	lib.element.player.chongzhuCards=function(cds){
		this.lose(cds,ui.discardPile);
		this.$throw(cds,1000);
		game.log(this,'将',cds,'置入了弃牌堆');
		this.draw(cds.length);
	};
	game.playXSAudio=function(skill,num){
		var lt=[];
		for(var i=1;i<=num;i++) {
			lt.push(i);
		}
		var tp=lt.randomGet();
		game.playAudio('..','extension','血色衣冠',skill+tp);
	};	

// ---------------------------------------武将分栏------------------------------------------//

	if(config.XSYG){
		for(var i in lib.characterPack['XSYG']) {
			if(lib.character[i][4].indexOf("forbidai")<0) lib.character[i][4].push("forbidai");
		};
	};
	if(config.XS_nicheng) {
		lib.translate['XS_guanyiwusp']='神管仲';
		lib.translate['XS_jixuanyuan']='黄帝';
		lib.translate['XS_jigaoyang']='颛顼';
		lib.translate['XS_jijun']='帝喾';
		lib.translate['XS_guichonghua']='舜';
		lib.translate['XS_qifangxun']='尧';
		lib.translate['XS_siyu']='大禹';
		lib.translate['XS_jiangxiaobaisp']='神齐桓公';
		lib.translate['XS_wuyuan']='伍子胥';
		lib.translate['XS_miao']='孙叔敖';
		lib.translate['XS_milv']='楚庄王';
		lib.translate['XS_yingzhengsp']='神秦始皇';
		lib.translate['XS_jichonger']='晋文公';
		lib.translate['XS_jiangxi']='百里奚';
		lib.translate['XS_yingrenhao']='秦穆公';
		lib.translate['XS_tiemuzhensp']='神成吉思汗';
		lib.translate['XS_xiangjisp']='神项羽';
		lib.translate['XS_weishuyu']='韦孝宽';
		lib.translate['XS_gaosu']='高长恭';
		lib.translate['XS_chengtang']='商汤';
		lib.translate['XS_jidan']='周公';
		lib.translate['XS_jifa']='周武王';
		lib.translate['XS_jichang']='周文王';
		lib.translate['XS_dixin']='商纣王';
		lib.translate['XS_lishimin']='唐太宗';
		lib.translate['XS_yangyuhuan']='杨贵妃';
		lib.translate['XS_lilongji']='唐玄宗';
		lib.translate['XS_wuzhao']='武则天';
		lib.translate['XS_liuche']='汉武帝';
		lib.translate['XS_quping']='屈原';
		lib.translate['XS_xishi']='西施';
		lib.translate['XS_fangqiao']='房玄龄';
		lib.translate['XS_guanyiwu']='管仲';
		lib.translate['XS_xueli']='薛仁贵';
		lib.translate['XS_tiemuzhen']='成吉思汗';
		lib.translate['XS_liuji']='刘伯温';
		lib.translate['XS_kongqiu']='孔子';
		lib.translate['XS_lier']='老子';
		lib.translate['XS_modi']='墨子';
		lib.translate['XS_yingzheng']='秦始皇';
		lib.translate['XS_mibazi']='芈月';
		lib.translate['XS_zhangjizhongjing']='张仲景';
		lib.translate['XS_xiangji']='项羽';
		lib.translate['XS_jiangshang']='姜子牙';
		lib.translate['XS_weizhe']='黄石公';
		lib.translate['XS_jiangxiaobai']='齐桓公';
		lib.translate['XS_liji']='徐懋功';
		lib.translate['XS_sulie']='苏定方';
		lib.translate['XS_xuewen']='孟尝君';
		lib.translate['XS_lvzhi']='吕后';
		lib.translate['XS_huishi']='惠子';
		lib.translate['XS_mengke']='孟子';
		lib.translate['XS_weiwuji']='信陵君';
		lib.translate['XS_tianrangju']='司马穰苴';
		lib.translate['XS_yangguang']='隋炀帝';
		lib.translate['XS_wangxu']='鬼谷子';
		lib.translate['XS_gongshuban']='鲁班';
	}
},precontent:function (XS){

     if(XS.enable){
		//群像模式
		//魔改东方project包
		game.addMode('XS_lib', {
            game: {
                syncMenu: true,
				createview: function(node,charalist){
					
					var player = ui.create.player(null, true);
					player.init(charalist[0][0]);
					player.style.left = '160px';
					player.style.top = '34px';
					player.style.zIndex = '10';
					player.style.cursor = 'pointer';
					player.style.position = 'fixed';
					player.node.count.remove();
					player.node.hp.remove();
					player.style.transition = 'all 0.5s';
					node.appendChild(player);
					node.playernode = player;
			
					var dialog = ui.create.dialog('hidden');
					dialog.style.left = "135px";
					dialog.style.top = "10px";
					dialog.style.width = "83%";
					dialog.style.height = "205px";
					dialog.style.position = 'fixed';
					dialog.noopen = true;
					node.appendChild(dialog);
					dialog.addText('<div><div id="Cdetail" style="display:block;left:150px;text-align:left;font-size:16px">'+charalist[0][2]+'</br><span class="bluetext">角色介绍</span>：' +get.characterIntro(charalist[0][0])+'</br>' +charalist[0][1]);
					
					var dialog1 = ui.create.dialog('hidden');
					dialog1.style.left = "0px";
					dialog1.style.top = "220px";
					dialog1.style.width = "100%";
					dialog1.style.height = "50%";
					dialog1.noopen = true;
					node.appendChild(dialog1);
					var tp=[];
					for(var i=0;i<charalist.length;i++) {
						tp.push(charalist[i][0]);
					}
					dialog1.add([tp, 'character']);
					for (var i = 0; i < dialog1.buttons.length; i++) {
						dialog1.buttons[i].classList.add('noclick');
						dialog1.buttons[i].value = i;
						dialog1.buttons[i].onclick = function () {
							player.init(charalist[this.value][0]);
							document.getElementById("Cdetail").innerHTML=charalist[this.value][2]+'</br><span class="bluetext">角色介绍</span>：' +get.characterIntro(charalist[this.value][0])+'</br>' +charalist[this.value][1];							
						};
					}
				},
            },
            start: function () {
                ui.auto.hide();
                if (!lib.storage.scene) {
                    lib.storage.scene = {};
                }
                if (!lib.storage.stage) {
                    lib.storage.stage = {};
                }
                if (!_status.extensionmade) {
                    _status.extensionmade = [];
                }
                if (_status.extensionscene) {
                    game.save('scene', lib.storage.scene);
                }
                if (_status.extensionstage) {
                    game.save('stage', lib.storage.stage);
                }
                var dialog = ui.create.dialog('hidden');
                dialog.classList.add('fixed');
                dialog.classList.add('scroll1');
                dialog.classList.add('scroll2');
                dialog.classList.add('fullwidth');
                dialog.classList.add('fullheight');
                dialog.classList.add('noupdate');
                dialog.classList.add('character');
                dialog.contentContainer.style.overflow = 'visible';
                dialog.style.overflow = 'scroll';
                dialog.content.style.height = '100%';
                dialog.contentContainer.style.transition = 'all 0s';
                if (!lib.storage.directStage) dialog.open();
                var packnode = ui.create.div('.packnode', dialog);
                lib.setScroll(packnode);
                ui.background.setBackgroundImage('extension/血色衣冠/bk_library.jpg');
                //背景
                var clickCapt = function () {
                    var active = this.parentNode.querySelector('.active');
                    if (this.link == 'stage') {
                        if (get.is.empty(lib.storage.scene)) {
                            alert('请创建至少1个场景');
                            return;
                        }
                    }
                    if (active) {
                        if (active == this) return;
                        for (var i = 0; i < active.nodes.length; i++) {
                            active.nodes[i].remove();
                            if (active.nodes[i].showcaseinterval) {
                                clearInterval(active.nodes[i].showcaseinterval);
                                delete active.nodes[i].showcaseinterval;
                            }
                        }
                        active.classList.remove('active');
                    }
                    this.classList.add('active');
                    for (var i = 0; i < this.nodes.length; i++) {
                        dialog.content.appendChild(this.nodes[i]);
                    }
                    var showcase = this.nodes[this.nodes.length - 1];
                    showcase.style.height = (dialog.content.offsetHeight - showcase.offsetTop) + 'px';
                    if (typeof showcase.action == 'function') {
                        if (showcase.action(showcase._showcased ? false : true) !== false) {
                            showcase._showcased = true;
                        }
                    }
                    if (this._nostart) start.style.display = 'none';
                    else start.style.display = '';
                    game.save('currentBrawl', 'help');
                }
                // 应该是这里是制作列表的地方
                var createNode = function (name) {
                    var info = lib.brawl[name];
                    var node = ui.create.div('.dialogbutton.menubutton.large', info.name, packnode, clickCapt);
                    node.style.transition = 'all 0s';
                    var caption = info.name;
                    var modeinfo = '';
                    if (info.mode) {
                        modeinfo = get.translation(info.mode) + '模式';	// 这个是标注哪个模式下使用的
                    }
                    if (info.submode) {
                        if (modeinfo) {
                            modeinfo += ' - ';
                        }
                        modeinfo += info.submode;
                    }
                    var intro;
                    if (Array.isArray(info.intro)) {
                        intro = '<ul style="text-align:left;margin-top:10">';
                        if (modeinfo) {
                            intro += '<li>' + modeinfo;
                        }
                        for (var i = 0; i < info.intro.length; i++) {
                            intro += '<br>' + info.intro[i];
                        }
                    }
                    else {
                        intro = '';
                        if (modeinfo) {
                            intro += '（' + modeinfo + '）';
                        }
                        intro += info.intro;
                    }
                    var today = new Date();
                    var i = ui.create.div('.text center', intro);
                    i.style.overflow = 'scroll';
                    i.style.margin = '0px';
                    i.style.padding = '0px';
                    var showcase = ui.create.div();
                    showcase.style.margin = '0px';
                    showcase.style.padding = '0px';
                    showcase.style.width = '100%';
                    showcase.style.display = 'block'
                    showcase.style.overflow = 'scroll';
                    showcase.action = info.showcase;
                    showcase.link = name;
                    if (info.fullshow) {
                        node.nodes = [showcase];
                        showcase.style.height = '100%';
                    }
                    else {
                        node.nodes = [
                            i,
                            showcase,
                        ];
                    }
                    node.link = name;
                    node._nostart = info.nostart;
                    if (lib.storage.currentBrawl == name) {
                        clickCapt.call(node);
                    }
                    return node;
                }
                // 点那个巨大的“斗”之后
                var clickStart = function () {
                    dialog.delete();
                    ui.auto.show();
                    game.switchMode('identity');
                };
                // 制作那个“斗”的键的。去掉会出bug，不知道为什么
                var start = ui.create.div('.menubutton.round.highlight', '←', dialog.content, clickStart);
                start.style.position = 'absolute';
                start.style.left = '-100px';
                start.style.right = 'auto';
                start.style.top = 'auto';
                start.style.bottom = '10px';
                start.style.width = '80px';
                start.style.height = '80px';
                start.style.lineHeight = '80px';
                start.style.margin = '0';
                start.style.padding = '5px';
                start.style.fontSize = '72px';
                start.style.zIndex = 3;
                start.style.transition = 'all 0s';
                start.hide();
                game.addScene = function (name, clear) {
                    var scene = lib.storage.scene[name];
                    var brawl = {
                        name: name,
                        intro: scene.intro,
                    };
                    for (var i in lib.brawl.scene.template) {
                        brawl[i] = get.copy(lib.brawl.scene.template[i]);
                    }
                    if (!scene.gameDraw) {
                        brawl.content.noGameDraw = true;
                    }
                    brawl.content.scene = scene;
                    lib.brawl['scene_' + name] = brawl;
                    var node = createNode('scene_' + name);
                    if (clear) {
                        game.addSceneClear();
                        clickCapt.call(node);
                        _status.sceneChanged = true;
                    }
                };
                game.addStage = function (name, clear) {
                    var stage = lib.storage.stage[name];
                    var brawl = {
                        name: name,
                        intro: stage.intro,
                        content: {}
                    };
                    for (var i in lib.brawl.stage.template) {
                        brawl[i] = get.copy(lib.brawl.stage.template[i]);
                    }
                    brawl.content.stage = stage;
                    lib.brawl['stage_' + name] = brawl;
                    var node = createNode('stage_' + name);
                    if (clear) {
                        game.addStageClear();
                        clickCapt.call(node);
                    }
                }
                game.removeScene = function (name) {
                    delete lib.storage.scene[name];
                    game.save('scene', lib.storage.scene);
                    _status.sceneChanged = true;
                    for (var i = 0; i < packnode.childElementCount; i++) {
                        if (packnode.childNodes[i].link == 'scene_' + name) {
                            if (packnode.childNodes[i].classList.contains('active')) {
                                for (var j = 0; j < packnode.childElementCount; j++) {
                                    if (packnode.childNodes[j].link == 'scene') {
                                        clickCapt.call(packnode.childNodes[j]);
                                    }
                                }
                            }
                            packnode.childNodes[i].remove();
                            break;
                        }
                    }
                }
                game.removeStage = function (name) {
                    delete lib.storage.stage[name];
                    game.save('stage', lib.storage.stage);
                    for (var i = 0; i < packnode.childElementCount; i++) {
                        if (packnode.childNodes[i].link == 'stage_' + name) {
                            if (packnode.childNodes[i].classList.contains('active')) {
                                for (var j = 0; j < packnode.childElementCount; j++) {
                                    if (get.is.empty(lib.storage.scene)) {
                                        if (packnode.childNodes[j].link == 'scene') {
                                            clickCapt.call(packnode.childNodes[j]);
                                        }
                                    }
                                    else {
                                        if (packnode.childNodes[j].link == 'stage') {
                                            clickCapt.call(packnode.childNodes[j]);
                                        }
                                    }
                                }
                            }
                            packnode.childNodes[i].remove();
                            break;
                        }
                    }
                }
                var sceneNode;
                for (var i in lib.brawl) {
                    if (get.config(i) === false) continue;
                    if (i == 'scene') {
                        sceneNode = createNode(i);
                    }
                    else {
                        createNode(i);
                    }
                }
                if (sceneNode) {
                    game.switchScene = function () {
                        clickCapt.call(sceneNode);
                    }
                }
                for (var i in lib.storage.scene) {
                    game.addScene(i);
                }
                for (var i in lib.storage.stage) {
                    game.addStage(i);
                }
                if (!lib.storage.currentBrawl) {
                    clickCapt.call(packnode.firstChild);
                }
                game.save('lastStage');
                if (lib.storage.directStage) {
                    var directStage = lib.storage.directStage;
                    game.save('directStage');
                    clickStart(directStage);
                }
                lib.init.onfree();
            },
brawl: {
diwangview: {
	name: '圣帝明王',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
['XS_yingzhengsp',
'</br><span class="bluetext">关联角色</span>：大秦一众角色<br><span class="bluetext">角色分析</span>：始皇帝——SP嬴政。',
'进攻：☆☆☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★☆☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★★★★☆☆</br>'],
['XS_lishiminsp',
'</br><span class="bluetext">关联角色</span>：大唐一众角色<br><span class="bluetext">角色分析</span>：天策上将—SP李世民，强力控场、爆发型角色。一技能纯粹强度较低，但通过与二技能的配合可以带来攻防一体的效果，同时作为变相转换技，可以通过一定的代价换来强制的相同效果触发。二技能是一技能有效发挥的根本，替换判定牌花色或点数的效果更易于使闪电的效果触发，同时通过调整手牌结构带来的额外基本牌也是不错的收益。与天可汗李世民相似，同样具备改判并基于此获得收益的能力，与一众大唐角色配合优秀，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：★★★★★★ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_xiangjisp',
'</br><span class="bluetext">关联角色</span>：楚汉一众角色<br><span class="bluetext">角色分析</span>：穷途末路的霸王——SP项羽，燃烧生命换来极致破坏能力的强攻型角色。一技能是SP项籍破坏力的来源，多杀与无法规避的强大拆迁能力其堪称破核能手。二技能反映着霸王的穷途末路，正面与负面效果兼具，收益虽然很高但是往往意味着自身处境的进一步危险，战斗拖得越久对自身越不利。与常态项籍一样，技能围绕着强大的伤害、杀和决斗展开，与楚汉一种角色联动极佳，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：★★★★★☆ </br>防御：☆☆☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★★☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_liubangsp',
'</br><span class="bluetext">关联角色</span>：楚汉一众角色<br><span class="bluetext">角色分析</span>：斩蛇起义的英主——SP刘邦，具备极强生存能力、一定辅助能力的强控制型角色。一技能是控制能力的来源，一旦发动将带来巨大的收益，同时对敌方造成极大干扰，弃牌阶段的夺取赋予了SP刘邦一定的辅助能力。二技能使得嘲讽很高的SP刘邦具备了相当强大的生存能力，敌方对其使用杀前往往需要考虑再三。相比于汉高祖刘邦以团队辅助能力换来了更强的个人能力，但仍与楚汉一众角色有着紧密的联动，角色契合度很高。',
'进攻：☆☆☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★★★☆☆ 生存：★☆☆☆☆☆ </br>控制：★★★★★★ 辅助：★☆☆☆☆☆</br>'],
['XS_liuchesp',
'</br><span class="bluetext">关联角色</span>：西汉一众角色<br><span class="bluetext">角色分析</span>：汉武帝—刘彻',
'进攻：☆☆☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★★★☆☆☆</br>'],
['XS_zhuyuanzhangsp',
'</br><span class="bluetext">关联角色</span>：大明一众角色<br><span class="bluetext">角色分析</span>：SP朱元璋',
'进攻：★★☆☆☆☆ 爆发：★★★★★☆ </br>防御：★★★☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_tiemuzhensp',
'</br><span class="bluetext">关联角色</span>：耶律楚材 速不台 博尔术 木华黎<br><span class="bluetext">角色分析</span>：成吉思汗——SP铁木真，具备极强团队增益能力的多功能型菜刀。一技能为核心技，兼具了团队增益和自身极强的菜刀能力增强，初始2个效果较弱的问题可以通过二技能来解决。二技能在极大增强一技能效果的同时，也给了SP铁木真极强的控场能力，通过合理调整一技能的状态列表可以带来最大的收益，需要注意的是状态一旦删除将无法再次获得。与原版铁木真相同，与蒙古一种角色具备极佳的联动，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_jiangxiaobaisp',
'</br><span class="bluetext">关联角色</span>：管夷吾 姜尚 田单 薛文 田穰苴<br><span class="bluetext">角色分析</span>：神齐桓公',
'进攻：☆☆☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★★★☆☆ 辅助：★★★☆☆☆</br>']
];
			lib.game.createview(node,charalist);
		}
	},
},		
guoshiview: {
	name: '国士无双',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
// ['XS_guanyiwusp',
// '</br><span class="bluetext">关联角色</span>：姜小白 神姜小白等<br><span class="bluetext">角色分析</span>：神管仲',
// '进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★★★ 辅助：★★★★★★</br>'],
['XS_wangmengsp',
'</br><span class="bluetext">关联角色</span>：苻坚 慕容垂 张蚝 邓羌等<br><span class="bluetext">角色分析</span>：神王猛',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★★★ 辅助：★★★★★★</br>'],
['XS_lijingsp',
'</br><span class="bluetext">关联角色</span>：李世民 杜如晦 红拂女等<br><span class="bluetext">角色分析</span>：神李靖',
'进攻：★★★☆☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★☆☆☆☆☆</br>'],
['XS_yuefeisp',
'</br><span class="bluetext">关联角色</span>：赵匡胤 秦桧 岳云 韩世忠等<br><span class="bluetext">角色分析</span>：神岳飞',
'进攻：★★★★☆☆ 爆发：★★★★★☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★☆☆☆☆☆</br>'],
['XS_hanxinsp',
'</br><span class="bluetext">关联角色</span>：刘邦 萧何 吕雉等<br><span class="bluetext">角色分析</span>：神韩信',
'进攻：☆☆☆☆☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★★☆ 辅助：★☆☆☆☆☆</br>'],
['XS_baiqisp',
'</br><span class="bluetext">关联角色</span>：嬴政 司马错等<br><span class="bluetext">角色分析</span>：神白起',
'进攻：☆☆☆☆☆☆ 爆发：★★★★★★ </br>防御：☆☆☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★★★ 辅助：☆☆☆☆☆☆</br>'],
];
			lib.game.createview(node,charalist);
		}
	},
},		
shenhuaview: {
	name: '神话时代',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
['XS_jixuanyuan',
'</br><span class="bluetext">关联角色</span>：嫘祖 姬高阳 姬俊 祁放勋 妫重华 姒禹</br><span class="bluetext">角色分析</span>：黄帝',
'进攻：★★★★☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_leizu',
'</br><span class="bluetext">关联角色</span>：姬轩辕</br><span class="bluetext">角色分析</span>：嫘祖',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_jigaoyang',
'</br><span class="bluetext">关联角色</span>：姬轩辕 姬俊 祁放勋 妫重华 姒禹</br><span class="bluetext">角色分析</span>：颛顼',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★☆☆☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_jijun',
'</br><span class="bluetext">关联角色</span>：姬轩辕 姬高阳 祁放勋 妫重华 姒禹</br><span class="bluetext">角色分析</span>：帝喾',
'进攻：☆☆☆☆☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★☆</br>'],
['XS_guichonghua',
'</br><span class="bluetext">关联角色</span>：姬轩辕 姬高阳 姬俊 妫重华 姒禹</br><span class="bluetext">角色分析</span>：帝舜',
'进攻：★☆☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★★☆☆☆ 辅助：★☆☆☆☆☆</br>'],
['XS_qifangxun',
'</br><span class="bluetext">关联角色</span>：姬轩辕 姬高阳 姬俊 妫重华 姒禹</br><span class="bluetext">角色分析</span>：帝尧',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_nvjiao',
'</br><span class="bluetext">关联角色</span>：姒禹</br><span class="bluetext">角色分析</span>：女娇',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★★☆ 辅助：★★★★☆☆</br>'],
['XS_siyu',
'</br><span class="bluetext">关联角色</span>：女娇</br><span class="bluetext">角色分析</span>：夏禹',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★★★ 辅助：★★★☆☆☆</br>'],
['XS_jiangshang',
'</br><span class="bluetext">关联角色</span>：姜小白 苏妲己 帝辛 田单 田穰苴 苏秦</br><span class="bluetext">角色分析</span>：太公姜子牙，技能偏神棍向角色。自身没有太强的进攻手段，但具有为队友提供稳定增伤、强力保核的能力，在这两项强大能力发挥作用的同时，自身也具备不错的过牌与防御能力，可以在一定程度上保证生存以最大化辅助效果。在角色联动方面，对苏妲己、帝辛具有一定程度的克制，同时作为齐国始祖，与齐国一众角色有着极为优秀的配合，角色契合度很高。',
'进攻：☆☆☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★★★☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★☆</br>'],
['XS_daji',
'</br><span class="bluetext">关联角色</span>：姜尚</br><span class="bluetext">角色分析</span>：商代著名妖姬—苏妲己，强力干扰控制型角色。一技能控制能力极强，虽然需要杀中，但一旦得以发动将带来极大的收益。二技能进一步强化了苏妲己的干扰能力，使敌方回复量减少的效果可以带来2收益，进一步减少所受伤害和获得造成伤害的牌的效果在3收益之外也为一技能解决了断杀的缺点。任务联动方面，与姜尚姜子牙形成了互克的关系，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★★☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★★☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_dixin',
'</br><span class="bluetext">关联角色</span>：苏妲己 姜尚 姬昌 姬发</br><span class="bluetext">角色分析</span>：商末著名暴君，商纣王—帝辛。一技能乍看收益极高，使用南蛮、万箭带来的收益巨大，但通常情况只能发挥2回合的作用，其他的牌诸如杀、决斗、火攻则较少用到。二技能则为帝辛带来了持久的战力，非伤害卡牌效果多样，跳过弃牌阶段也极为优秀，尤其是通过一技能获得大量的牌后更能发挥作用。虽然技能强大，但由于技能的特性而受到姜尚、苏妲己一定程度的克制，被姬发更是克制得极为严重，同时对姬昌有着较强的克制作用，角色契合度极高。',
'进攻：★★★☆☆☆ 爆发：★★★★☆☆ </br>防御：★★★☆☆☆ 生存：★★★☆☆☆ </br>控制：★★☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_jichang',
'</br><span class="bluetext">关联角色</span>：姬发 姜尚 帝辛</br><span class="bluetext">角色分析</span>：中国历史一代明君，周文王—姬昌。一技能收益可观，敌方面临着失去1张牌或者可能成为姬昌使用牌的额外目标两者间的抉择，而友方则可以无脑不响应，极大可能获得额外收益。二技能最坏情况下等同闭月，而一张AOE或者与一技能配合就可以白嫖一张AOE，效果拔群。擅长开AOE的特点与姜尚配合极为优秀，同时削减敌方手牌可以与武王姬发打出一套组合拳，此外纣王由于跳过弃牌阶段对于饵贤响应起来往往不心疼，存在一定的克制，角色契合度极高。',
'进攻：★★★★☆☆ 爆发：★★☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_jifa',
'</br><span class="bluetext">关联角色</span>：姬昌 姜尚 姬旦 帝辛</br><span class="bluetext">角色分析</span>：西周开国君主，周武王—姬发，削手牌控制型角色。一技能在敌对角色数足够多时收益极高，一方面可以减少敌方手牌，同时当手牌数很低时也可用于补充手牌，而副作用则可忽略不计。二技能与一技能形成了完美联动，可以通过一技能将手牌耗尽以直接通过二技能让敌方裸奔。技能特性决定了姬发可以和文王、姜尚、周公等施展组合拳最大化征讨的收益，使敌方裸奔的同时自身获得收益，角色契合度极高。',
'进攻：★☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★★★ 辅助：☆☆☆☆☆☆</br>'],
['XS_jidan',
'</br><span class="bluetext">关联角色</span>：姬发</br><span class="bluetext">角色分析</span>：西周名臣，周公—姬旦，兼具控制和辅助能力的强过牌型角色。一技能收益巨大，虽然存在风险，但通过合理的手牌管理与二技能的配合负面可忽略不计。二技能为姬旦带来了不错的控制和辅助能力，拆队友的判定牌、拆敌方的关键牌，为队友补牌。需要注意的是，二技能在对敌方发动时存在一定的风险，但也能一定程度上防止限制敌方的进攻，灵活度极高。姬旦与兄长姬发可以打出一套完美的组合拳，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★★★☆☆ </br>控制：★★☆☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_chengtang',
'</br><span class="bluetext">关联角色</span>：伊尹</br><span class="bluetext">角色分析</span>：有着众多名字的商朝开国君主—成汤，具有辅助能力的强过牌型角色。一技能与扶苏的一技能有异曲同工之效，可以给敌方废牌，也可以给队友关键牌，同时还有着过牌的效果。二技能在有角色死亡后会获得极高的收益，与一技能搭配给敌方毒坑死对方是较为有效的策略。与伊尹相似，当有角色死亡时可以获得巨大的收益，角色契合度高。',
'进攻：☆☆☆☆☆☆ 爆发：★★★★☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_yiyin',
'</br><span class="bluetext">关联角色</span>：成汤</br><span class="bluetext">角色分析</span>：殷商名臣——伊尹，活得越久，战力越强的成长型角色。一技能初始收益有限，但藉由二技能的强化，到游戏残局时将发挥巨大的威力。二技能给了伊尹以成长空间，当然，必要时选择不提升一技能而是伤害敌方或辅助队友都是可以的，颇具灵活度。与成汤有着一定的联动，角色契合度较高。',
'进攻：★★★☆☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：☆☆☆☆☆☆</br>']
];
			lib.game.createview(node,charalist);
		}
	},
},		
xianqinview: {
	name: '先秦往烈',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
['XS_baoshuya',
'</br><span class="bluetext">关联角色</span>：管夷吾 姜小白<br><span class="bluetext">角色分析</span>：鲍叔牙',
'进攻：☆☆☆☆☆☆ 爆发：★☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★★☆ 辅助：★★★☆☆☆</br>'],
['XS_wuyuan',
'</br><span class="bluetext">关联角色</span>：阖闾 勾践 孙武<br><span class="bluetext">角色分析</span>：吴国名将——伍子胥。',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★☆☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_helv',
'</br><span class="bluetext">关联角色</span>：勾践 伍员 孙武 专诸<br><span class="bluetext">角色分析</span>：春秋五霸之吴王阖闾。',
'进攻：★★★☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_miao',
'</br><span class="bluetext">关联角色</span>：芈侣<br><span class="bluetext">角色分析</span>：循吏之首——孙叔敖。',
'进攻：☆☆☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：★★★☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_milv',
'</br><span class="bluetext">关联角色</span>：芈敖<br><span class="bluetext">角色分析</span>：春秋五霸之楚庄王。',
'进攻：★★★★☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_xianzhen1',
'</br><span class="bluetext">关联角色</span>：姬重耳<br><span class="bluetext">角色分析</span>：晋国大将——元帅先轸，攻防辅助于一身的全面型角色。一技能赋予了先轸相当不错的进攻和防御能力，废锦囊转化杀的效果可以有效提高手牌利用率，所受伤害的变化虽然收益有限，但与二技能联动具有奇效。二技能为先轸带来了很强的回复能力和辅助能力，在一技能的配合下，很容易作到白嫖2体力与体力上限。二技能的特点使得先轸对晋文公具备极佳的辅助效果，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_jichonger',
'</br><span class="bluetext">关联角色</span>：嬴任好 先轸 姜小白<br><span class="bluetext">角色分析</span>：春秋五霸之晋文公，全面的成长型角色。一技能赋予了晋文公很强的成长性，苟到最后就是赢，除了自身的受土以外，求贤、图霸分别来自于秦穆公、齐桓公。二技能可以短暂地大幅提高三个技能的发动收益，1点体力上限换来的是至少2牌差的收益。晋文公早期流落的过程中与齐桓公、秦穆公都有过接触，与之通过一技能产生联动，同时受到大将先轸极佳的辅助效果，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★☆☆☆☆☆ </br>控制：★★★★★★ 辅助：★★☆☆☆☆</br>'],
['XS_jiangxi',
'</br><span class="bluetext">关联角色</span>：嬴任好<br><span class="bluetext">角色分析</span>：五羊皮大夫——百里奚，过牌量的但操作较难的过牌型角色。一技能收益上限为3张牌，纸面收益不低，但受到位置和回合开始手牌数影响较大。二技能可以较为稳定地带来回合2收益，虽然一定程度上会降低一技能的收益，但其对防御能力的增强比较有效，游戏后期也可以通过一次性爆发来改变战局。与秦穆公具有一定的联动，角色契合度较高。',
'进攻：★☆☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：★★★★☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_yingrenhao',
'</br><span class="bluetext">关联角色</span>：姜奚 姬重耳<br><span class="bluetext">角色分析</span>：春秋五霸之秦穆公，强力的控场型角色。一技能一般状态下收益有限，但面对屯牌、回合外大量得牌的角色具有极强的克制，同时也可以帮助二技能的触发。二技能为秦穆公带来了相当强大的控场能力，即使未成功跳过敌方阶段，消耗敌方的闪也极具战略价值，当然一定的辅助能力也是额外的福利。角色方面，与百里奚、晋文公有较强的联动，角色契合度很高。',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★★★ 辅助：★☆☆☆☆☆</br>'],
['XS_linxiangru',
'</br><span class="bluetext">关联角色</span>：廉颇<br><span class="bluetext">角色分析</span>：知名论客——蔺相如',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★★☆ 辅助：★★★☆☆☆</br>'],
['XS_lianpo',
'</br><span class="bluetext">关联角色</span>：蔺相如<br><span class="bluetext">角色分析</span>：战国四大名将之一——廉颇',
'进攻：☆☆☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★★★★☆ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_limu',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：战国四大名将之一——李牧',
'进攻：★☆☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★☆☆</br>'],
['XS_yueyi',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：出将入相的战国名将——乐毅',
'进攻：★★☆☆☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_jiangxiaobai',
'</br><span class="bluetext">关联角色</span>：管夷吾 姜尚 田单 薛文 田穰苴<br><span class="bluetext">角色分析</span>：春秋首霸—齐桓公姜小白，具备强大控场能力、可以为团队提供额外阶段的辅助型主公。一技能主要用于拆敌方关键装备、拆己方延时锦囊，也可以用于赌运气仍敌方手中的桃闪。二技能理想情况下相当于使队友多了一个无弃牌阶段的回合，极为强力，但会随着场中敌方的减少而降低效果，主公技正是为了一定程度弥补这一缺点而设计的。由于可以为队友提供额外的准备、判定、摸牌、出牌阶段，对管仲、姜尚、田单、薛文、田穰苴等齐国人物都有极好的辅助作用，人物契合度高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★★★★★☆</br>'],
['XS_suqin',
'</br><span class="bluetext">关联角色</span>：张仪 王诩 姜尚<br><span class="bluetext">角色分析</span>：相拜六国的间谍——苏秦',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★★★☆☆ </br>控制：★★★☆☆☆ 辅助：★☆☆☆☆☆</br>'],
['XS_tiandan',
'</br><span class="bluetext">关联角色</span>：姜小白 姜尚 田穰苴 苏秦<br><span class="bluetext">角色分析</span>：一战复齐的火攻大师——田单',
'进攻：★★★★★☆ 爆发：★★☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_sunbin',
'</br><span class="bluetext">关联角色</span>：姜小白<br><span class="bluetext">角色分析</span>：孙膑兵法的作者、一堆成语的来源——孙膑',
'进攻：★★★☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★★★☆☆ 生存：★★☆☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：★☆☆☆☆☆</br>'],
['XS_guanyiwu',
'</br><span class="bluetext">关联角色</span>：姜小白<br><span class="bluetext">角色分析</span>：华夏首相——管仲',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★★☆☆ 生存：★★☆☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：★★★★★☆</br>'],
['XS_fanli',
'</br><span class="bluetext">关联角色</span>：施夷光 勾践<br><span class="bluetext">角色分析</span>：功成身退的商圣——范蠡',
'进攻：★★☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_xishi',
'</br><span class="bluetext">关联角色</span>：范蠡 勾践<br><span class="bluetext">角色分析</span>：中国古代四大美女之一——西施',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★★★☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_xuewen',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：战国四公子之一——孟尝君',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★★☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★☆☆</br>'],
['XS_yangyouji',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：先秦时代的神射手——养由基',
'进攻：★★★★☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_dukang',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：传说中的酒圣——杜康',
'进攻：★★☆☆☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_goujian',
'</br><span class="bluetext">关联角色</span>：范蠡 施夷光<br><span class="bluetext">角色分析</span>：卧薪尝胆的春秋时期最后一位霸主——勾践',
'进攻：★★★☆☆☆ 爆发：★★★★☆☆ </br>防御：★★★☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_nanzi',
'</br><span class="bluetext">关联角色</span>：孔丘 吴起<br><span class="bluetext">角色分析</span>：野史传闻与孔子有暧昧的春秋时期著名淫乱女—南子，具有强大控制能力的卖血将，贯彻“坚决消灭不动白，卖血将也有春天“的方针，可以间接主动卖血的同时具有相当高的嘲讽度。按野史传说与孔子有较高的契合度，可以为孔子快速积累判定区牌的数量，而孔子可以为其回血以提高卖血能力。此外，引人遐想地与吴起也有着极高的契合度',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：★★★★★☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_weiwuji',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：战国四公子之一——信陵君',
'进攻：☆☆☆☆☆☆ 爆发：★☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★★★★★ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>']
];
			lib.game.createview(node,charalist);
		}
	},
},
qinview: {
	name: '秦扫六合',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
['XS_lisi',
'</br><span class="bluetext">关联角色</span>：嬴政 扶苏 赵高<br><span class="bluetext">角色分析</span>：大秦名相——李斯',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★★★★☆☆</br>'],
['XS_yingzheng',
'</br><span class="bluetext">关联角色</span>：大秦一众角色<br><span class="bluetext">角色分析</span>：始皇帝—嬴政，大秦核心。主要以吞伤害，乞讨为主。吞伤害方面与菜刀将尤其是白起有着完美的配合；乞讨方面，在李斯、尉缭、吕不韦等的配合下乞讨能力极大增强。由于乞讨的缘故，大量的手牌与王翦、王贲又形成良好互动，同时受到孟姜女的克制，人物契合度极高。主公技在保护魏国队友的同时进一步增强了乞讨能力，是一名具有较强单体能力的全面型主公。',
'进攻：☆☆☆☆☆☆ 爆发：★☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★★☆☆☆ </br>控制：★★★☆☆☆ 辅助：★☆☆☆☆☆</br>'],
['XS_fusu',
'</br><span class="bluetext">关联角色</span>：嬴政 赵高 李斯 蒙恬 王翦<br><span class="bluetext">角色分析</span>：真大秦核心—公子扶苏，可以为队友提供保护与补牌服务的强力辅助型主公。当队友血量充足时，可以一二技能配合输送源源不断的手牌，当队友血量较少时，又可以挺身而出挡刀来触发二技能，不单对大秦角色而言，对所有缺少生存、过牌能力的角色而言都是亲爹一般的存在。与其父嬴政完全相反，嬴政抢伤害、抢手牌，扶苏挡伤害、送手牌，与历史中嬴政残暴、扶苏宽仁的形象完美契合。由于一二技能强度较高，主公技相对地可有可无。',
'进攻：☆☆☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★★★☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★☆☆</br>'],
['XS_baiqi',
'</br><span class="bluetext">关联角色</span>：扶苏 嬴政 司马错 张仪 芈八子 范雎<br><span class="bluetext">角色分析</span>：战国四大名将之首——白起',
'进攻：★★★★☆☆ 爆发：★★★★★★ </br>防御：☆☆☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_mengtian',
'</br><span class="bluetext">关联角色</span>：白起 芈八子<br><span class="bluetext">角色分析</span>：北筑长城的大秦名将——蒙恬',
'进攻：★★★☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★★★☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_fanju',
'</br><span class="bluetext">关联角色</span>：姜小白 姜尚 田穰苴 苏秦<br><span class="bluetext">角色分析</span>：远交近攻的提出者——范雎',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★★★★☆☆</br>'],
['XS_wangjian',
'</br><span class="bluetext">关联角色</span>：嬴政 王贲 扶苏等<br><span class="bluetext">角色分析</span>：战国四大名将之一——王翦',
'进攻：★★★☆☆☆ 爆发：★★★★★☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_zhangyixs',
'</br><span class="bluetext">关联角色</span>：嬴政 扶苏 芈八子 白起 惠施<br><span class="bluetext">角色分析</span>：谈笑间破灭六国合纵的论客——张仪',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★★☆☆☆ </br>控制：★★★☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_shangyang',
'</br><span class="bluetext">关联角色</span>：吕不韦<br><span class="bluetext">角色分析</span>：秦国变法强国的源头——商鞅',
'进攻：★★★☆☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：★☆☆☆☆☆</br>'],
['XS_weiliao',
'</br><span class="bluetext">关联角色</span>：嬴政 吕不韦<br><span class="bluetext">角色分析</span>：武经七书《尉缭子》的作者——尉缭',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_mibazi',
'</br><span class="bluetext">关联角色</span>：白起 张仪 扶苏 嬴政 范雎<br><span class="bluetext">角色分析</span>：秦宣太后—芈月芈八子，拼点角色的好帮手，自身拥有一定的恢复能力，也可为队友提供免费的杀。与张仪、白起以及菜刀将配合可以打出成吨伤害，同时略微克制范雎，与历史人物关系基本相符。但身板较脆，需要扶苏、尉缭等保护。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★★☆☆☆ 辅助：★★★★☆☆</br>'],
['XS_chuliji',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：堪舆先师—樗里疾，在历史上是一个比较神棍的人物，所以技能也比较神棍。一技能通过主动废弃装备栏、或被动受伤来获得一名其他角色的技能一回合，如何把握时机选择不同类型的技能是此技能的关键，灵活度很高。二技能在保障了樗里疾进攻距离的同时，可以为己方带来回合至多4牌差的收益，颇具强度。樗里疾没有特定配合的人物，根据将面情况可以胜任各种职责，是灵活度与趣味性都很高的角色。',
'进攻：★★☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_lvbuwei',
'</br><span class="bluetext">关联角色</span>：嬴政 王翦 尉缭 白起等菜刀<br><span class="bluetext">角色分析</span>：一代巨商—吕不韦，兼具辅助和控制能力的持续收益型角色。一技能可为队友提供强大的辅助效果，也能使敌方受到强烈干扰，随着游戏的进行收益不断累积。技能二提供了在与一技能配合下共计4点血量的恢复能力，同时增加血量上限则一定程度上抵消了一技能的负面效果，增强了生存能力。由于可以提高队友的手牌上限，对嬴政有着良好的辅助效果，同时可以和大秦一众回合内收益高的角色形成良好配合，人物契合度高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：★★★☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_simacuo',
'</br><span class="bluetext">关联角色</span>：白起 张仪<br><span class="bluetext">角色分析</span>：平定蜀国的秦国名将—司马错，可以牺牲生存能力换取超强进攻的角色。一技能变相咆哮，自身进攻能力不足时，可假借他人之手进行不计入次数的进攻。二技能兼具进攻和控制能力，适当地分配转换技的效果并配合一技能，可以为自身带来极大的收益。角色方面，与白起形成完美的配合，一旦相遇很容易杀穿全场，而与张仪之间也存在极强的互助互克效果。同时，与其他大秦角色也有着相当不错的联动，角色契合度极高。',
'进攻：★☆☆☆☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_wangben',
'</br><span class="bluetext">关联角色</span>：嬴政 王翦<br><span class="bluetext">角色分析</span>：大秦名将，王翦之子—王贲，另类菜刀型角色。一技能提供了额外的武器效果，选择适当的武器将会有意想不到的作用，同时摸1牌也一定程度上补足了菜刀的弱点。二技能一定程度上解决了断杀的问题，并提供了额外的出杀机会，小完杀的效果也有助于收人头，和一技能声明方天也是不错的联动。额外出杀的效果与嬴政、王翦联动极佳，小完杀也有助于王翦触发破国，角色契合度较高。',
'进攻：★★★★☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>']
];
			lib.game.createview(node,charalist);
		}
	},
},
chuhanview: {
	name: '楚汉争霸',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
['XS_liubang',
'</br><span class="bluetext">关联角色</span>：楚汉一众角色<br><span class="bluetext">角色分析</span>：汉高祖—刘邦，另类卖血型角色，不太合格的初汉核心。单兵强度较高，一技能随着血量的降低收益越来越高，二技能与一技能产生配合，手牌多是可以弃手牌，体力高时可以压血量触发技能一。角色配合方面，可以帮助樊哙、韩信卖血，比较容易受到张良、萧何效果的辅助，角色契合度很高，但一二技能实际上能为初汉角色提供的帮助比较有限。主公技为了弥补这一不足而设计，帮助队友卖血、卖牌的同时提高队友主动技能的发动频率，效果良好。',
'进攻：★★☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_zhangliang',
'</br><span class="bluetext">关联角色</span>：刘邦 吕雉 范增 樊哙 陈平 曹参等<br><span class="bluetext">角色分析</span>：谋生——张良',
'进攻：★★★☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_xiaohe',
'</br><span class="bluetext">关联角色</span>：刘邦 韩信 樊哙 吕雉 曹参等<br><span class="bluetext">角色分析</span>：汉相——萧何',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_hanxin',
'</br><span class="bluetext">关联角色</span>：刘邦 萧何 龙且 郦食其 吕雉等<br><span class="bluetext">角色分析</span>：兵仙—韩信，拥有强大爆发力、过牌能力的半卖血型角色。一技能为韩信带来了较强的过牌能力，最重要的是，为二技能的做好铺垫。二技能给予了韩信灵活的爆发能力，既可以得牌以提升生存能力，又可以弃牌以获得极值的进攻能力。两个技能配合体现了韩信谋定后动，用兵出奇的特点。受到刘邦、萧何、张良的完美辅助，受到吕雉克制并克制龙且，此外由于用杀无法被闪避的特点，极大地克制郦食其，人物契合度突破天际。',
'进攻：★★★★☆☆ 爆发：★★★★★☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_chenping',
'</br><span class="bluetext">关联角色</span>：刘邦 吕雉 张良 范增 萧何<br><span class="bluetext">角色分析</span>：诛吕复汉的奇才——陈平',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★☆☆☆☆☆</br>'],
['XS_fankuai',
'</br><span class="bluetext">关联角色</span>：刘邦 张良 萧何 吕雉 项籍<br><span class="bluetext">角色分析</span>：刘邦手下猛将—樊哙，通过卖血获得强大进攻能力的角色。一技能通过卖血获得每回合一次的使用酒的机会，为二技能提供基础。二技能极大地强化了樊哙使用酒的收益，使得杀、决斗伤害增加的同时也几乎可以达到必定命中，进攻能力极为强大。作为刘邦手下大将，自然而然地可以极好地受到刘邦、萧何、张良的辅助效果，同时与韩信不同，由于与吕雉的关系并不受到吕雉的克制，反而可以收到吕雉的辅助效果，人物契合度极高。',
'进攻：★★★☆☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_xiangji',
'</br><span class="bluetext">关联角色</span>：虞姬 范增 龙且 英布 刘邦 张良 陈平等<br><span class="bluetext">角色分析</span>：西楚霸王—项籍，西楚核心，单兵能力远强于团队能力的另类主公。技能围绕决斗展开，使用决斗收益很高，但当没有队友配合时由于牌堆决斗较少很难发挥威力。觉醒技极大地弥补了这点不足，但却牺牲了生存能力，符合破釜沉舟的事迹。在团队配合方面，受到范增、虞姬的辅助收益极高，而与龙且、英布等角色的联动主要集中在主公技的一次性爆发上。张良、陈平等可以在一定程度克制项籍，同时和刘邦有着微妙的互相克制关系，人物契合度极高。',
'进攻：★★★★★☆ 爆发：★★☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_yumeiren',
'</br><span class="bluetext">关联角色</span>：项籍 龙且 英布<br><span class="bluetext">角色分析</span>：霸王别姬的女主——虞姬',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★☆</br>'],
['XS_fanzeng',
'</br><span class="bluetext">关联角色</span>：项籍 龙且 英布 张良 陈平 刘邦<br><span class="bluetext">角色分析</span>：西楚首席谋士——范增',
'进攻：★★★☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★★☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_yingbu',
'</br><span class="bluetext">关联角色</span>：项籍 虞姬 范增<br><span class="bluetext">角色分析</span>：勇将——英布',
'进攻：★★★☆☆☆ 爆发：★☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★★★☆☆ </br>控制：★☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_lvzhi',
'</br><span class="bluetext">关联角色</span>：刘邦 张良 樊哙 韩信等一众楚汉角色<br><span class="bluetext">角色分析</span>：吕后—吕雉，强力削血型角色，可将锦囊牌效果转化为造成1点伤害，反制方式只有无无懈可击。强力的无触发AOE伤害可以帮助西汉的高血将刘邦、樊哙、曹参、周勃卖血，同时克制韩信。此外，由于这种特性，吕雉是张良发动“独善”的首选对象之一，与历史上曾问计于张良相对应，人物契合度极高。与此同时，也具备一定的防御能力，强度较高。',
'进攻：★★★★☆☆ 爆发：★★★☆☆☆ </br>防御：★★★★☆☆ 生存：☆☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_liyiji',
'</br><span class="bluetext">关联角色</span>：刘邦 吕雉 韩信 曹参等<br><span class="bluetext">角色分析</span>：高阳酒徒—郦食其，凭借三寸不烂之舌说降齐国但被韩信坑死的悲催人士。西汉第一个辅助防御向角色，可以为西汉一干身板脆弱的角色提供强大保护，在变相卖血的同时也能给予敌方相当的伤害。作为刘邦的铁杆，与刘邦契合度极高，可以帮助刘邦保持1~2的血量线，最大化威加的收益；同时由于被韩信坑死，人物契合度高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：★★★★☆☆</br>'],
['XS_longju',
'</br><span class="bluetext">关联角色</span>：项籍 韩信<br><span class="bluetext">角色分析</span>：项羽帐下猛将—龙且，因被韩信用水攻打败而闻名……拥有最顶级进攻能力的菜刀将，进攻能力随着与目标距离的减少而增强，并且没有断杀的顾虑，可以说是多杀流菜刀将的顶峰。可以受到项羽短暂的辅助，反而是受到韩信克制，与历史相符。',
'进攻：★★★☆☆☆ 爆发：★★★★★★ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_caoshen',
'</br><span class="bluetext">关联角色</span>：刘邦 张良 萧何 吕雉 郦食其<br><span class="bluetext">角色分析</span>：初汉名将相—曹参，灵活度极高的多变型菜刀将。一技能无比灵活，且收益随血量降低而提高，因此适当的卖血是极为必要的。二技能为曹参带来了相当程度的拆牌、过牌以及控顶能力，同时也可帮助一技能提高收益，灵活度进一步提升。与其他初汉角色一样，需要适当的卖血，可以与刘邦、吕雉，乃至补牌的萧何形成良好的配合，同时对于郦食其具有克制效果，角色契合度极高。',
'进攻：★★★★★☆ 爆发：★★☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_zhoubo',
'</br><span class="bluetext">关联角色</span>：刘邦 吕雉 陈平 张良<br><span class="bluetext">角色分析</span>：安刘氏天下的初汉名将—周勃，具有较强过牌能力的强力拆迁型角色。一技能是优秀的补牌技，既可以用于团队大量摸牌，也可以用于自身压低血线，此技能可以带来至多2牌收益。二技能给了周勃极为强大的单点拆迁能力，虽然没有实质性的牌差收益，但在一技能的配合下可以瞬间将1名敌方扒光。自身生存能力较差，变相卖血的特性与刘邦、吕雉、张良、陈平契合优秀，而需要手牌的特性又一定程度受到陈平克制，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★☆☆☆☆☆</br>'],
['XS_jibu',
'</br><span class="bluetext">关联角色</span>：刘邦 吕雉 樊哙 项籍<br><span class="bluetext">角色分析</span>：楚汉时期著名侠客，一诺千金—季布，兼具优秀的攻防能力的角色。一技能以1牌的代价换来使用牌无距离限制或防止一次伤害，兼顾了攻防两端。二技能可以稳定提供每轮一个额外回合，收益很高，而弃置1中花色的手牌的负面效果在1技能的配合下，通过合理的排序调整极易抵消，同时由于一技能也为手牌不足的情况提供了生存能力，两技能联动完美。由于技能特点，对樊哙、项籍、韩信有一定的克制，而受到刘邦、吕雉的克制，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：★★★☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>']
];
			lib.game.createview(node,charalist);
		}
	},
},
lianghanview: {
	name: '两汉风云',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
// ['XS_liuqi',
// '</br><span class="bluetext">关联角色</span>：晁错 周亚夫 刘彻等<br><span class="bluetext">角色分析</span>：汉景帝',
// '进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★★☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★☆☆☆</br>'],
// ['XS_chaocuo',
// '</br><span class="bluetext">关联角色</span>：刘启<br><span class="bluetext">角色分析</span>：晁错',
// '进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★★☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_suwu',
'</br><span class="bluetext">关联角色</span>：刘彻 卫青 霍去病等<br><span class="bluetext">角色分析</span>：苏武',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★★☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_lifuren',
'</br><span class="bluetext">关联角色</span>：刘彻<br><span class="bluetext">角色分析</span>：李夫人',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★★☆ 辅助：★★★★☆☆</br>'],
['XS_zhouyafu',
'</br><span class="bluetext">关联角色</span>：周勃<br><span class="bluetext">角色分析</span>：周亚夫',
'进攻：★★★★★☆ 爆发：★★★★★★ </br>防御：☆☆☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_liuche',
'</br><span class="bluetext">关联角色</span>：西汉一众角色<br><span class="bluetext">角色分析</span>：汉武帝—刘彻，辅助进攻能力很强的主公。技能强度较高，但受到红色手牌数量的限制。因为大量失去红色手牌，不可避免地牺牲了防御能力，但作为回报，刘彻可以为自己和团队带来强大的进攻能力。对霍去病、卫青的帮助上尤为突出，对李广有着极强的克制，同时受到司马迁一定程度上的克制，而受到卫子夫、桑弘羊的辅助效果极佳，可以说角色契合度极高。主公技的存在提高了刘彻的生存能力，算是对缺点的一种补足。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★★★★★☆</br>'],
['XS_weiqing',
'</br><span class="bluetext">关联角色</span>：刘彻 卫子夫 霍去病 司马迁 桑弘羊 主父偃等<br><span class="bluetext">角色分析</span>：帝国双壁——卫青',
'进攻：★★★★☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_huoqubing',
'</br><span class="bluetext">关联角色</span>：刘彻 卫子夫 卫青 司马迁 桑弘羊 主父偃等<br><span class="bluetext">角色分析</span>：帝国双壁——霍去病',
'进攻：★★★☆☆☆ 爆发：★★★★★☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_simaqian',
'</br><span class="bluetext">关联角色</span>：刘彻 卫青 霍去病 李广 李陵等<br><span class="bluetext">角色分析</span>：太史公——司马迁',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：★★★★☆☆</br>'],
['XS_liguang',
'</br><span class="bluetext">关联角色</span>：刘彻 司马迁 张汤 李陵<br><span class="bluetext">角色分析</span>：飞将军——李广',
'进攻：★★★★★☆ 爆发：★★★☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_zhangjizhongjing',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：医圣——张仲景',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_weizifu',
'</br><span class="bluetext">关联角色</span>：刘彻 卫青 霍去病 张汤等<br><span class="bluetext">角色分析</span>：汉武帝刘彻的皇后——卫子夫',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★★★ 辅助：★★★★☆☆</br>'],
['XS_liuxiu',
'</br><span class="bluetext">关联角色</span>：东汉一众角色<br><span class="bluetext">角色分析</span>：汉光武帝—刘秀，东汉核心，辅助能力有限，但单兵能力顶尖的主公角色。一技能要求刘秀手牌中的花色数越少越好，而二技能在过牌的同时可以帮助减少手牌花色数，必要时也能用于结束阶段补牌，单挑强度远强于会玩的孙权。主公技可以在手牌极少时提高刘秀的生存能力，是一种补足。与东汉角色如耿弇、马援、阴丽华、虞诩等的配合主要体现在这些角色对刘秀的辅助，单兵强度与角色契合度虽高，但从团队收益来看并不是一个完美的主公。',
'进攻：★★☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★★★☆☆ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_yinlihua',
'</br><span class="bluetext">关联角色</span>：刘秀 马援 耿弇<br><span class="bluetext">角色分析</span>：汉光武帝刘秀的皇后——阴丽华',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：★☆☆☆☆☆ 辅助：★★★★★☆</br>'],
['XS_gengyan',
'</br><span class="bluetext">关联角色</span>：刘秀 阴丽华<br><span class="bluetext">角色分析</span>：有志者事竟成——耿弇',
'进攻：★★★☆☆☆ 爆发：★★☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_wangzhaojun',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：中国古代四大美女之一——王昭君',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★★☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_weizhe',
'</br><span class="bluetext">关联角色</span>：张良<br><span class="bluetext">角色分析</span>：黄石公——魏辙',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★★☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_banchao',
'</br><span class="bluetext">关联角色</span>：刘秀 耿弇<br><span class="bluetext">角色分析</span>：投笔从戎——班超',
'进攻：★★☆☆☆☆ 爆发：★☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★★☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_yuxu',
'</br><span class="bluetext">关联角色</span>：刘秀 邓绥<br><span class="bluetext">角色分析</span>：虞诩',
'进攻：☆☆☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★★★☆☆ 生存：★☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_sanghongyang',
'</br><span class="bluetext">关联角色</span>：刘彻 卫青 霍去病 张汤等<br><span class="bluetext">角色分析</span>：桑弘羊',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★★★ 辅助：★★☆☆☆☆</br>'],
['XS_mayuan',
'</br><span class="bluetext">关联角色</span>：刘秀 阴丽华<br><span class="bluetext">角色分析</span>：马革裹尸——马援',
'进攻：☆☆☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★★☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_zhangheng',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：天文学家、发明家—张衡，成长、多杀型角色。',
'进攻：★★★★☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_zhangtang',
'</br><span class="bluetext">关联角色</span>：刘彻 卫子夫 卫青 霍去病 主父偃 李广 司马迁<br><span class="bluetext">角色分析</span>：汉武帝时期著名酷吏—张汤，限制敌方手牌质量、增加己方过牌量的大师。一技能通常情况下用于控制弃置敌方那个手牌中的闪桃等高质量手牌。二技能过牌强力，很容易为团队带来回合3牌的收益。两个技能既可以分开使用，也可以打出连招瞬间获得极大牌差，操作性强。与刘彻、卫青、卫子夫等有着极为优秀的配合，也可配合李广或是克制司马迁，角色契合度暴表。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★★★★☆☆</br>'],
['XS_zhaofeiyan',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：与杨贵妃并称的东汉著名美女—赵飞燕，全面型角色。一技能是赵飞燕的核心，提供了每回合重铸的效果的同时，各限1次的基本、装备、锦囊牌使用机会在恰当的时候可以发挥巨大威力。二技能通过一技能逐步获得更高级的效果，回复体力、摸牌的效果进一步提高了赵飞燕的生存进攻能力，每回合带来的收益十分巨大。由于两个技能的存在，赵飞燕无疑具备极为全面的素质，无论是进攻、控制还是辅助都能胜任，操作性极高。',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_dengsui',
'</br><span class="bluetext">关联角色</span>：班昭 虞诩<br><span class="bluetext">角色分析</span>：东汉著名女政治家—邓绥，累积收益爆发型角色。一技能使得邓绥的杀和锦囊牌使用的次数越多，收益越高，但存在收益缓慢的问题。二技能为邓绥带来了极为强大的爆发力，无论是作用于南万、桃园、五谷，还是作用于一技能，都能有相当惊人的收益，单点爆破能力更是惊人。技能的特性使得邓绥需要在有包养的情况下才能发挥出最大的实力，这一点与班昭完美契合，同时强大的限定技受到虞诩的辅助极佳，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：★★★★★☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_banzhao',
'</br><span class="bluetext">关联角色</span>：邓绥 班超<br><span class="bluetext">角色分析</span>：续写汉书的东汉著名才女、班超的妹妹—班昭，生存能力强大的辅助型角色。一技能每轮白嫖2基本牌，通常情况下白嫖2桃并不困难，无论是自保还是用于救助队友都十分强力。二技能是极为强大的辅助技能，每回合一次的锦囊牌回收加上额外的触发目标，当队友使用无中、增兵时收益极高，同时在一技能的配合下即使弃置了大量的手牌也能保证生存能力。角色方面，与兄长班超联动优秀，而配合邓绥更是能形成极为强大的配合，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★☆☆</br>'],
['XS_zhufuyan',
'</br><span class="bluetext">关联角色</span>：刘彻 卫青 李广等<br><span class="bluetext">角色分析</span>：提出著名的《推恩令》的西汉时期名臣—主父偃，干扰、辅助、直伤型角色。一技能具有极强的手牌破坏能力，对于屯手牌型角色极为克制，一定情况下也可造成巨大的伤害，但收益受到座位、目标手牌数的制约。二技能除了基本一收益以外，更重要的是给了一技能更大的灵活性，无论是帮助队友顺牌，还是滚雪球式拉牌差都，只要发挥得当将瞬间打开局面。主父偃可以通过一技能给红牌为刘彻主公补充大量红牌，联动极佳，角色契合度极高。',
'进攻：★★★☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★★☆ 辅助：★★★☆☆☆</br>'],
['XS_dongfangshuo',
'</br><span class="bluetext">关联角色</span>：刘彻<br><span class="bluetext">角色分析</span>：西汉著名文学家—东方朔，具有强大伤害能力的过牌辅助型角色。一技能是东方朔辅助能力的来源，极限情况下可以为团队带来每轮6牌+的收益，即使无法达到最大收益，也没有负面作用。二技能初看收益不高，但除了给高体力队友补牌、多手牌敌方弃牌的作用外，给手牌与体力值差为1的队友无损回1血、敌方无损失去1点体力是极为稳定的收益来源。一技能的控血、牌也能为二技能的收益带来增益，联动完美。技能的特点无疑与身为主公的刘彻具有极佳的配合，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★☆</br>'],
['XS_xiangru',
'</br><span class="bluetext">关联角色</span>：刘彻 卓文君<br><span class="bluetext">角色分析</span>：西汉著名辞赋家—司马相如，具有一定辅助能力的爆发型角色。一技能很直接地令普通锦囊牌可以额外结算一次，对自身的效果巨大的同时也有帮助队友的机会。二技能通过与一技能配合，可以达成一张锦囊牌结算3次的巨大效果，如果队友恰好有声明的锦囊牌，更是能够实现锦囊牌的重复利用。锦囊牌重复结算与需要了解队友手牌的特性与卓文君形成了完美的配合，同时也能受到刘彻额外回合的巨大收益，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：★★★★★☆ </br>防御：☆☆☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★☆</br>'],
['XS_zhuowenjun',
'</br><span class="bluetext">关联角色</span>：司马相如<br><span class="bluetext">角色分析</span>：中国古代四大才女之一—卓文君，拥有强大过牌与爆发能力的角色。一技能是卓文君过牌能力与爆发能力的来源，合理的牌序与一定的手牌基数可以带来回合内极强的爆发力。二技能则为一技能的不足进行了补足，除了进一步提高过牌能力以外，也带来了回合外的过牌能力，很大程度上提高了卓文君的生存能力，随然会暴露手牌，但某些情况下展示手牌可以与队友形成更好的配合，尤其与司马相如的配合十分强大，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：★★★★★☆ </br>防御：★★★☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_liling',
'</br><span class="bluetext">关联角色</span>：刘彻 李广 司马迁<br><span class="bluetext">角色分析</span>：西汉名将，司马迁的好友、李广之孙—李陵，直接伤害控制型角色。一技能是有代价的拆迁技能，一般情况下可以带来1牌差的收益，也可以拆敌方关键装备，此外配合二技能是重点。二技能是极为强大的直接伤害技能，通过与一技能的配合每回合造成稳定1伤害轻轻松松，虽然造成2+伤害会有负面效果，但无疑是是值得的，对于屯牌型角色极为克制。喜好黑牌的特性继承了祖父李广，同时与刘彻犯冲，手牌颜色单一的特点与司马迁也有着千丝万缕的联系，角色契合度极高。',
'进攻：★★★★★☆ 爆发：★★☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_zhangqian',
'</br><span class="bluetext">关联角色</span>：刘彻<br><span class="bluetext">角色分析</span>：出使西域的西汉著名外交家—张骞，每轮多次获得额外回合的高收益型角色。一技能赋予了张骞极强的回合外能力，通过牺牲1点体力上限来获得额外的回合，爆发力极强，但容易因为初始没有4血角色而被卡死。二技能使张骞具备极强的恢复力，增强了其后续轮次的能力，也提供了一定程度的恢复能力。角色联动方面，获得额外回合的特点与刘彻一脉相承，角色契合度较高。',
'进攻：★★★☆☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_dongzhongshu',
'</br><span class="bluetext">关联角色</span>：刘彻 卫青等<br><span class="bluetext">角色分析</span>：提出“罢黜百家，独尊儒术”的大儒—董仲舒，慢热过牌辅助型角色。一技能初始状态为0收益技能，但随着游戏的不断进行收益会越来越高。二技能是较强的保核技能，通过交给队友手牌来获取2牌的额外收益，在一技能的配合下手中很多无法使用的牌，全部给出后很容易成为手牌最少，两技能联动十分优秀。由于一技能需要回合数，因此受到刘彻额外回合效果极佳，同时二技能给出多为红闪，对于刘彻的雄才触发效果拔群，两者甚至可以无损刷回合，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：★★★☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★☆☆☆</br>']
];
			lib.game.createview(node,charalist);
		}
	},
},
nanbeiview: {
	name: '南北并立',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
['XS_huchonghua',
'</br><span class="bluetext">关联角色</span>：拓跋焘<br><span class="bluetext">角色分析</span>：胡充华',
'进攻：☆☆☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★☆☆☆☆☆ 生存：★★★★★★ </br>控制：☆☆☆☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_fengxiaolian',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：冯小怜',
'进攻：☆☆☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_weishuyu',
'</br><span class="bluetext">关联角色</span>：宇文泰 高欢 斛律光<br><span class="bluetext">角色分析</span>：北周名将——韦孝宽，生存能力极强的手牌破坏型角色。与北周其他角色一样，一技能主打手牌破坏效果，造成伤害可以触发的特点避免了不动白的问题。二技能与一技能有效联动，极大强化了韦孝宽的防御能力，必要时的体力回复与移动场上牌的功能也可以对场上的局势带来巨大的影响。除受到宇文泰辅助以外，对高欢具有较强的克制，同时与斛律光互相掣肘，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★★★ 辅助：☆☆☆☆☆☆</br>'],
['XS_suchuo',
'</br><span class="bluetext">关联角色</span>：宇文泰<br><span class="bluetext">角色分析</span>：北周名臣——苏绰，集攻防、辅控于一身的功能型角色。一技能稳定收益的同时具备较高的上限，兼具了手牌破坏与定向摸牌的功能，6张牌的分配可根据需要来调整。二技能初看存在很强的负面效果，但实际上通过改变对象的方式可以有效转移风险，灵活地实现保核和破核的效果，与一技能搭配尤其强大。。角色联动方面，与宇文泰有良好的配合，角色契合度较高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★★★★★☆</br>'],
['XS_yuwenyong',
'</br><span class="bluetext">关联角色</span>：宇文泰 段韶<br><span class="bluetext">角色分析</span>：北周雄主——宇文邕，进攻能力提升的翻版神曹操。一技能收益有限，但一些场合具备控制和辅助的奇效，同时协助触发二技能。二技能为稳定版归心，触发难度较高但更具侵略性。虽然二技能在一技能的配合下极为强大，但在一定程度上一技能也对二技能产生了限制，神曹操的飞影相似，算是一种平衡。受到宇文泰辅助效果极佳，同时被段韶克制，角色契合度很高。',
'进攻：★★☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★★☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_yuwentai',
'</br><span class="bluetext">关联角色</span>：苏绰 宇文邕 韦叔裕 高欢 高敖曹<br><span class="bluetext">角色分析</span>：北朝周的奠基者——宇文泰，兼顾进攻、防御、辅助、控制的拉牌差能手。一技能是灵活版的英姿+闭月，带来近乎稳定2牌差的同时也带来了攻防两端的强化。二技能具有极强的拉牌差能力，可以有效破坏敌方的战斗部署，同时也具备一定的辅助能力，在于一技能的配合下可以发挥出最大的效果。作为北周核心，与苏绰、宇文邕、韦叔裕配合优秀，同时克制老对头高欢、高敖曹，角色契合度极高。',
'进攻：★☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_xianying',
'</br><span class="bluetext">关联角色</span>：陈霸先 吴明彻 萧摩诃<br><span class="bluetext">角色分析</span>：南北朝时期著名女性统领——冼英，强力辅助型角色。一技能为缩水版仁德，由于只能分配获得的牌，限制较大，但相应的触发回血、流失体力的次数也不受限制，具有更高的上限。二技能为冼英自身、团队带来了每回合稳定的杀/桃/酒，效果极为强大，同时，需要队友给牌的特点可以频繁地触发一技能，联动极佳。与使用杀、酒、桃具有极高收益的陈霸先、萧摩诃、吴明彻三人配合完美，契合度极高。',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_wumingche',
'</br><span class="bluetext">关联角色</span>：陈霸先 萧摩诃 冼英<br><span class="bluetext">角色分析</span>：南朝陈名将——吴明彻，过牌能力优秀的另类奶妈。一技能是吴明彻奶妈能力的来源，虽然本质上并无牌差收益，但为队友回血的效果配合二技能可以有效地保核。二技能为吴明彻带来了很强的摸牌能力，同时配合一技能也可以极为高效地卖血治疗队友。联动方面，自然与具有提高桃、酒回复能力的陈霸先配合极佳，同时与萧摩诃、冼英也有着很好的联动，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★☆☆</br>'],
['XS_xiaomohe',
'</br><span class="bluetext">关联角色</span>：陈霸先 吴明彻 冼英<br><span class="bluetext">角色分析</span>：南朝梁陈的著名勇将——萧摩诃，具有分配伤害的能力的强力菜刀。一技能带来了两项主要功能，其一是隔山打牛，其二是分散伤害抢人头。二技能是萧摩诃的核心技能，集不断杀、强命、增伤三种功能于一身，搭配一技能使其成为了一个极为全面的菜刀。同时，二技能在一定程度上也给萧摩诃带来一定的控制能力。与可以增强伤害的陈霸先、周围受到伤害获得收益的吴明彻、可以提供杀酒的冼英配合极佳，契合度极高。',
'进攻：★★★★☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_chenbaxian',
'</br><span class="bluetext">关联角色</span>：吴明彻 萧摩诃 冼英<br><span class="bluetext">角色分析</span>：南朝陈开国皇帝——陈霸先，把握全局的强力控场型角色。一技能是陈霸先的核心技能，无差别地改变全场杀酒桃的效果基数，虽然作用于全场，但可根据场上形势发动以获得强力完杀、强力生存等效果。二技能与一技能联动极佳，在观察其他角色基本牌的同时，也能为陈霸先带来一定的摸牌能力，极为灵活。由于调控基本牌基数的特点，与萧摩诃、吴明彻有着完美的配合，同时也能够受到可以无限提供杀酒桃的冼英的辅助，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_weirui',
'</br><span class="bluetext">关联角色</span>：杨大眼<br><span class="bluetext">角色分析</span>：人称“韦虎”的名将——韦睿',
'进攻：★★☆☆☆☆ 爆发：★★★★☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_chenqingzhi',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：千军万马避白袍——陈庆之',
'进攻：★★☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★★☆ </br>控制：★★☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_liuyu',
'</br><span class="bluetext">关联角色</span>：刘穆之 檀道济 谢晦 拓跋焘<br><span class="bluetext">角色分析</span>：气吞万里如虎—刘裕，又一名进攻特化型主公，刘宋核心。一技能为刘裕带来了简单粗暴的额外1杀收益，附带的额外摸牌能力可以为容易断杀的刘裕补充一下手牌。二技能是刘裕强大进攻能力的来源，配合一技能很容易造成群体拆2附加大量额外伤害，但由于不分敌我，发动时需要额外小心，强度很大程度上受初始位置的影响。主公技在一定程度上弥补了二技能的负面效果，但由于需要送出手牌，发动频率有限。作为刘宋主公，可以受到檀道济、谢晦、刘穆之的辅助，角色契合度极高。',
'进攻：★★★★★☆ 爆发：★★☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_tandaoji',
'</br><span class="bluetext">关联角色</span>：刘裕 谢晦 拓跋焘<br><span class="bluetext">角色分析</span>：三十六计作者，刘宋的万里长城—檀道济，具有强过牌能力的强控型角色。一技能集制衡与观星与一身，当血量足够时收益很高。二技能为檀道济带来了强控能力，在与一技能配合下可以很好地控制下家的出牌。作为刘宋名将，可以通过二技能使刘裕的锦囊牌转化为杀，解决其断杀问题；同时，二技能每回合一次的发动频率将谢晦克的死死的，角色契合度极高。总体而言，是一名操作难度和强度都很高的角色。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★★☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★☆☆</br>'],
['XS_xiehui',
'</br><span class="bluetext">关联角色</span>：刘裕 檀道济 刘穆之<br><span class="bluetext">角色分析</span>：南宋开国元勋，璧染微瑕—谢晦。一技能获得额外回合，收益极高，但触发困难。二技能带来了极强的控制能力，也可以为队友提供强命和增加距离的效果。同时，二技能为一技能的触发带来了极大的便利，无论是回合内1杀1弃强命，还是回合外调整手牌数，都能保证一技能的发动。角色配合方面，二技能为君主刘裕提供了距离和强命效果，同时受到檀道济的强烈克制，契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★★★★☆ 生存：☆☆☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：★☆☆☆☆☆</br>'],
['XS_liumuzhi',
'</br><span class="bluetext">关联角色</span>：刘裕 谢晦<br><span class="bluetext">角色分析</span>：刘宋名臣—刘穆之，刘宋的强力后勤，卖血辅助型角色。一技能为刘穆之提供了主动买血能力，并能够辅助队友回复体力。二技能为刘穆之带来极大的牌差，在一技能的配合下也解决了不动白的问题。通过一二技能的配合，可与刘裕的却月技能达成完美的联动而带来巨大的收益，也可以受到谢晦的效果进行主动卖血，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：★★★★★☆ 辅助：★★☆☆☆☆</br>'],
['XS_liudaogui',
'</br><span class="bluetext">关联角色</span>：刘裕 谢晦<br><span class="bluetext">角色分析</span>：东晋末年名将，宋武帝刘裕的弟弟—刘道规，增伤型辅助角色。一技能带来了强大的补牌能力，受限于伤害来源的手牌数，每回合发动次数有限且容易被针对，强度不会过分，在技能后半部分的帮助下，发动频率也能略为增加。二技能集强命、多杀、防卖血于一体，与一技能联动优秀，可以为团队带来大量增伤，但体力流失的限制也存在一定的负面。虽然是3血2技能，但强度完全不低，与兄长刘裕间有着完美的联动，同时谢晦的废立也可将伤害引导至刘道规身上保护队友，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★★★☆☆ </br>控制：★★☆☆☆☆ 辅助：★★★★☆☆</br>'],
['XS_yangdayan',
'</br><span class="bluetext">关联角色</span>：拓跋焘 拓跋珪<br><span class="bluetext">角色分析</span>：武勇关张弗加的北魏名将—杨大眼，北魏吉祥物型角色，团队血包。一技能可以给使用杀对自己造成伤害的角色带来收益，主要用途为挨队友的打。二技能给了杨大眼额外一条命，发动以后一技能变成对自身产生收益，失去了团队辅助效果。由于技能特性，自身在复活前没有任何收益能力，复活后则生存能力大幅提高，操作简单。作为北魏角色，与北魏君主拓跋焘具有完美的配合，拓跋珪也一定程度上可以发挥杨大眼的作用，角色契合度较高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★★★★☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_tuobatao',
'</br><span class="bluetext">关联角色</span>：拓跋珪 崔宏 崔浩 檀道济 刘裕<br><span class="bluetext">角色分析</span>：北魏太武帝，一代雄主—拓跋焘，北魏核心，构建起北魏通过弃牌获得收益的体系。一技能是多杀的极致，可以通过弃置自己和队友的牌来防止其成为目标，是北魏触发弃牌的核心。二技能约等于一牌换一拆，在一技能的配合下可以稳定拆迁。主公技可以很大程度上弥补拓跋焘过牌能力不足的缺点。作为北魏主公，与拓跋珪、崔浩、崔宏可以形成完美的配合，此外，一杀多目标的特点对于檀道济完美克制。由于和宋武帝刘裕时代相近，所以有着与其相似的无差别AOE，角色契合度突破天际。',
'进攻：★★★★★☆ 爆发：★☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_cuihao',
'</br><span class="bluetext">关联角色</span>：拓跋焘 崔宏<br><span class="bluetext">角色分析</span>：自比张良的北魏名臣—崔浩，强力的团队辅助过牌型角色。一技能可以防拆迁，并可帮助触发二技能。二技能作为埋伏型技能，触发条件并不高，且一旦触发可以为团队带来3牌差的收益，是极佳的辅助技能。与拓跋焘、崔宏等北魏弃牌体系的角色可以形成完美的配合，并能够为频繁弃牌的这些角色及时补充手牌，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_tuobagui',
'</br><span class="bluetext">关联角色</span>：拓跋焘 崔浩 崔宏 慕容垂<br><span class="bluetext">角色分析</span>：北魏开国皇帝，拓跋焘的爷爷—拓跋珪，卖血防御型角色。一技能具有两面性，既可以帮助队友爆发，又能控制敌方，但需要注意所带来的负面效果。二技能是典型的卖血技能，通过额外的弃牌以带来极大的收益，同时一二技能存在优秀的联动。作为北魏角色，同样地完美地融入了北魏体系中，与拓跋焘、崔浩、崔宏都有着优秀的联动，同时和慕容垂也存在相当程度的互助互克，相爱相杀，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★★☆☆☆ </br>控制：★★★☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_cuihong',
'</br><span class="bluetext">关联角色</span>：拓跋焘 拓跋珪 崔浩 慕容垂<br><span class="bluetext">角色分析</span>：北魏名臣，崔浩的父亲—崔宏，具有很强防御力的强过牌型角色。一技能根据情况既可以用于帮助队友卖血，也可以用于坑死敌方。二技能是崔宏的过牌来源，当进入残局全场角色体力不断变化时，可以带来大量牌差。作为北魏名臣，对于拓跋爷孙、尤其是拓跋珪辅助效果完美，此外层出仕于慕容垂，自然与其有着不错的配合，和崔浩也有着明显的联动，角色契合度暴表。',
'进攻：☆☆☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★★★★☆ 生存：★★★☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_gaohuan',
'</br><span class="bluetext">关联角色</span>：北齐一众角色<br><span class="bluetext">角色分析</span>：北齐奠基人——高欢',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★★☆☆ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_gaoyang',
'</br><span class="bluetext">关联角色</span>：高欢 杨愔<br><span class="bluetext">角色分析</span>：北齐开国君主——高洋',
'进攻：★☆☆☆☆☆ 爆发：★☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★★★★☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_gaosu',
'</br><span class="bluetext">关联角色</span>：高欢 娄昭君 段韶<br><span class="bluetext">角色分析</span>：兰陵王——高长恭',
'进攻：★★★★☆☆ 爆发：★★★★☆☆ </br>防御：★★★☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_gaoaocao',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：时人比之项羽的勇将——高敖曹',
'进攻：★★★★☆☆ 爆发：★★★★★★ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_louzhaojun',
'</br><span class="bluetext">关联角色</span>：高欢 高肃 斛律光 段韶<br><span class="bluetext">角色分析</span>：齐武明皇后——娄昭君，具有强大生存能力的辅助型角色。一技能主要作用为辅助菜刀队友破核，或是帮助残血队友快速回复，功能性很强，收益也比较高。二技能为娄昭君带来了很强的防御能力，比较容易达成净摸3张的效果，同时很大程度上提高了一技能的触发频率。作为北齐唯一一位女性角色，对北齐大多数角色都有很好的辅助效果，联动优秀，契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★★★☆ 生存：☆☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_hulvguang',
'</br><span class="bluetext">关联角色</span>：高欢 段韶 娄昭君<br><span class="bluetext">角色分析</span>：北齐明月——斛律光，攻防控辅兼备的全能型角色。一技能收益不低，但较难触发，需要与其他技能配合才能有效发挥。二技能为斛律光提供了不断杀、不断闪的能力，同时顺装备、给装备的效果为一技能的持续发动提供了条件，两个技能可以形成可循环的有效联动。角色联动方面，与高欢、娄昭君有着最好的搭配，受到段韶的帮助也可以进一步增加二技能的发动频率，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★☆☆☆☆☆</br>'],
['XS_duanshao',
'</br><span class="bluetext">关联角色</span>：高欢 高长恭 娄昭君<br><span class="bluetext">角色分析</span>：北齐三杰之首——段韶，具备一定辅助能力的菜刀型角色。一技能使段韶菜刀能力的主要来源，理想情况下可以消除其使用杀的次数、距离限制。二技能是段韶辅助能力以及不断杀能力的来源，通过与队友良好的配合可以带来2牌差的收益，提高队友生存能力、自身获得杀的同时，也能很好地触发一技能的效果，两技能联动极为优秀。作为北齐大将，与高欢、高长恭、娄昭君有着良好的配合，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：★★★★★☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_yangyin',
'</br><span class="bluetext">关联角色</span>：高洋 娄昭君<br><span class="bluetext">角色分析</span>：北齐名臣——杨愔，控制能力超前的全能型角色。一技能没有直接收益，但可用来帮助队友回收被弃置的关键牌，此外最主要的作用是触发二技能。二技能效果极强，收益很高，但区域无牌的触发条件使得杨愔的生存受到了一定的威胁，在弃牌、顺牌的过程中可以很好地感受到心跳的感觉。角色配合方面，自然与高洋有着最佳的联动，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★★☆ 辅助：★★★☆☆☆</br>']
];
			lib.game.createview(node,charalist);
		}
	},
},
jinview: {
	name: '魏晋风流',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
['XS_xiean',
'</br><span class="bluetext">关联角色</span>：谢玄 苻坚<br><span class="bluetext">角色分析</span>：苍生雅望——谢安',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★★★☆☆ 辅助：★★★★☆☆</br>'],
['XS_xiexuan',
'</br><span class="bluetext">关联角色</span>：谢安 苻坚<br><span class="bluetext">角色分析</span>：北府兵帅——谢玄',
'进攻：☆☆☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★★★ 辅助：☆☆☆☆☆☆</br>'],
['XS_wangxizhi',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：书圣——王羲之',
'进攻：★★★☆☆☆ 爆发：★★★★★☆ </br>防御：★★★☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_zuti',
'</br><span class="bluetext">关联角色</span>：刘琨 司马睿<br><span class="bluetext">角色分析</span>：一心北伐的东晋名将—祖逖，过牌、用牌能力极强的角色。一技能和二技能相辅相成，通过大量的用牌触发获得摸牌阶段的效果，通过摸牌获得额外出牌阶段的效果，有效地发动两个技能可以带了极强的爆发能力，并巧妙地跳过判定、弃牌阶段，不可谓不强大。与好基友刘琨不但配合完美，就连技能名称也极为对称，同时多个出牌阶段也受到东晋君主司马睿辅助效果极佳，重铸牌也是东晋角色共有的特点，角色契合度极高。',
'进攻：★★★☆☆☆ 爆发：★★★☆☆☆ </br>防御：★☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_simarui',
'</br><span class="bluetext">关联角色</span>：王导 祖逖 刘琨<br><span class="bluetext">角色分析</span>：东晋开国皇帝—司马睿，辅助型主公。一技能发动条件较为苛刻，但一旦发动收益极高，不但防止了弃牌，还获得了重铸的机会。二技能是司马睿辅助能力的来源，可以使己方的杀收益大幅提高，即使存在一定的负面也微不足道，同时给出2牌的效果更容易触发一技能。主公技进一步提高了辅助能力和生存能力，也提高了一技能的发动频率。作为辅助型主公，对晋朝的角色效果优秀，同时又受到王导兼具辅助和克制的效果，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★☆</br>'],
['XS_wangdao',
'</br><span class="bluetext">关联角色</span>：司马睿 谢安<br><span class="bluetext">角色分析</span>：东晋名相—王导，过牌辅助型角色。一技能是收益很高的过牌技，随着发动难度的提高，收益也越来越高。二技能给了王导强大的生存能力，同时改变一技能状态的效果可以帮助跳过收益较低的1状态和难以触发的2状态。作为很吃香的包养辅助，对司马睿在辅助的同时也制约了其技能的发挥，既辅助又克制，同时在同为东晋名相谢安的配合下，二技能的发动更为容易。此外，同样继承了东晋重铸的特点，角色契合度极高。',
'进攻：★☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_huanwen',
'</br><span class="bluetext">关联角色</span>：桓玄<br><span class="bluetext">角色分析</span>：东晋名将、权臣—桓温，过牌强命型角色。一技能出牌阶段使用装备、回复体力、造成伤害时都可以重铸一张牌，过牌能力优秀。二技能是一技能的延续，通过弃牌可以造成至多3点伤害，强命效果拔群，同时因为是在弃牌阶段开始时发动，也能有效地利用废牌。同样地，拥有东晋重铸牌的特点，同时二技能的强命对于触发儿子桓玄的技能及其方便，角色契合度很高。',
'进攻：★★★☆☆☆ 爆发：★★★★★☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_liukun',
'</br><span class="bluetext">关联角色</span>：祖逖 司马睿<br><span class="bluetext">角色分析</span>：东晋名将，闻鸡起舞的另一名主角—刘琨，过牌型角色。一技能单独来看是一个威慑力有限的控制+过牌技能，除了过牌以外在一定程度上可以限制敌方的出牌。二技能是极为强大的摸牌技能，可以极大提高一技能的威慑力，使敌方出牌时需要三思。角色配合方面，与好基友祖逖自然配合完美，同时大量摸牌的特性与主公司马睿配合也十分优秀，角色契合度很高。',
'进攻：★★☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★★★☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>']
];
			lib.game.createview(node,charalist);
		}
	},
},
tangview: {
	name: '万邦朝唐',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
// ['XS_taipinggongzhu',
// '</br><span class="bluetext">关联角色</span>：武曌 李隆基<br><span class="bluetext">角色分析</span>：太平公主',
// '进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：★★★★☆☆</br>'],
['XS_luoshixin',
'</br><span class="bluetext">关联角色</span>：李世民<br><span class="bluetext">角色分析</span>：罗士信',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：★★★★☆☆</br>'],
['XS_chengyaojin',
'</br><span class="bluetext">关联角色</span>：李世民<br><span class="bluetext">角色分析</span>：程咬金',
'进攻：★★☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_lishimin',
'</br><span class="bluetext">关联角色</span>：大唐一众角色<br><span class="bluetext">角色分析</span>：天可汗—李世民，大唐核心。大唐角色主要多根据判定结果获得收益，李世民在为他们更改判定结果的同时自身获得收益。同时二技能可以使李世民获得牌时收益增加，一次获得得越多，收益越高。在没有角色配合时单兵强度较低，一旦有相关角色配合则强度大幅提高。基本上与所有大唐角色都有良好的联动，角色契合度极高。需要注意是，虽然单兵强度有限，但一旦配合起来很容易成为大量刷牌的万恶之源。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_liji',
'</br><span class="bluetext">关联角色</span>：李世民 李靖<br><span class="bluetext">角色分析</span>：唐初名将，英公——李勣',
'进攻：☆☆☆☆☆☆ 爆发：★★★★★☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★☆☆</br>'],
['XS_lijing',
'</br><span class="bluetext">关联角色</span>：李世民 红拂女 李勣 李孝恭 裴行俭等<br><span class="bluetext">角色分析</span>：初唐军神，卫公——李靖',
'进攻：★☆☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★★☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_fangqiao',
'</br><span class="bluetext">关联角色</span>：李世民 杜如晦<br><span class="bluetext">角色分析</span>：房谋杜断的主角之一——房玄龄',
'进攻：☆☆☆☆☆☆ 爆发：★★★★★☆ </br>防御：★☆☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★★☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_licunxiao',
'</br><span class="bluetext">关联角色</span>：李存勖<br><span class="bluetext">角色分析</span>：将不过李的勇将——李存孝',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★★☆ </br>控制：★★☆☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_xueli',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：三箭定天山——薛仁贵',
'进攻：★★★★★☆ 爆发：★★☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_yuchigong',
'</br><span class="bluetext">关联角色</span>：李世民 杜如晦<br><span class="bluetext">角色分析</span>：徒手夺槊的勇将——尉迟恭',
'进攻：★★★☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★☆☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_lixiaogong',
'</br><span class="bluetext">关联角色</span>：李世民 李靖<br><span class="bluetext">角色分析</span>：李唐宗室第二名将——李孝恭',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★★☆ 辅助：★★★★☆☆</br>'],
['XS_limi',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：超然于世的智者——李泌',
'进攻：☆☆☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_sulie',
'</br><span class="bluetext">关联角色</span>：裴行俭<br><span class="bluetext">角色分析</span>：灭国众多而名声不显的初唐名将——苏定方',
'进攻：★★★★☆☆ 爆发：★★★★★☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_qinqiong',
'</br><span class="bluetext">关联角色</span>：李世民 杜如晦<br><span class="bluetext">角色分析</span>：民间传说的门神，初唐勇将——秦琼',
'进攻：★★★☆☆☆ 爆发：★★★★☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_duruhui',
'</br><span class="bluetext">关联角色</span>：李世民 房玄龄 李靖 刘仁轨等<br><span class="bluetext">角色分析</span>：房谋杜断的主角之一——杜如晦',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：★★★★★☆</br>'],
['XS_licunxu',
'</br><span class="bluetext">关联角色</span>：李存孝<br><span class="bluetext">角色分析</span>：善始无终——李存勖',
'进攻：★★★☆☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_liurengui',
'</br><span class="bluetext">关联角色</span>：李世民 杜如晦<br><span class="bluetext">角色分析</span>：大唐名将—刘仁轨，擅用火攻，曾于白江口之战打败倭国、百济联军，焚毁倭国战船四百余艘。可以将手牌当作火攻使用，有着强大的进攻力，当时用火攻造成伤害可以获得极大的收益；同时延续大唐通过判定获得收益的风格，在李世民、杜如晦等人的帮助下可以发挥出巨大的力量，人物契合度高。同时火攻造成伤害后结束阶段补充手牌的效果保证了防御能力，是强度较高的角色。',
'进攻：★★★★☆☆ 爆发：★★★★☆☆ </br>防御：★☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_peixingjian',
'</br><span class="bluetext">关联角色</span>：李世民 苏烈 杨坚 史万岁 高颎 李靖<br><span class="bluetext">角色分析</span>：初唐名将—裴行俭，主动延迟收益型角色。一技能可以通过牺牲当前回合的利益来获取下一回合的巨大收益，合理的安排发动效果可以带来意想不到的效果。二技能同样通过延迟收益的方式获得额外的摸牌，此外也为关键的队友提供了最大程度的保护，通过这样的额外摸牌又可以配合一技能以获得最大的收益。作为一名成长于隋朝、活跃于唐朝的名将，与其师傅苏烈有着极好的互动，又与杨坚、史万岁、高颎等形成了完美的配合，又与李世民也存在极佳的联动，可以说人物契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★☆☆</br>'],
['XS_zhangsunwuji',
'</br><span class="bluetext">关联角色</span>：李世民 长孙晟 长孙皇后<br><span class="bluetext">角色分析</span>：凌烟阁首功，李世民的大舅子—长孙无忌，灵活性、操作性很强的全能型角色。一技能操作灵活，增强自身攻防能力额同时可以辅助队友。二技能既可用于己方增伤，也可用于保核，同时也可以牺牲一定的伤害带来极大的牌差。给牌的特点与妹妹长孙皇后相似，并可与李世民、长孙晟形成良好的配合，尤其是与李世民搭配时，可最大化发挥一技能的效果，角色契合度极高。',
'进攻：★☆☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★★★☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_zhangsun',
'</br><span class="bluetext">关联角色</span>：李世民 长孙无忌 长孙晟<br><span class="bluetext">角色分析</span>：母仪天下—长孙皇后，牌差型辅助角色。一技能独立强度较低，可以用于交给队友关键牌或交给敌方毒，主要用于提高二技能收益。二技能作为主要技能，仅在一技能的派和下最多可以带来4牌的牌差，如果装有玉玺或其他提高手牌上限的手段，收益将进一步提高。作为长孙晟的女儿，继承了父亲技能的一部分，给牌的特性和李世民完美配合，对于帮助生存能力低的兄长也极为有效，操作简单且角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★★☆☆ 生存：☆☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_wuzhao',
'</br><span class="bluetext">关联角色</span>：狄仁杰 李世民 杜如晦 上官婉儿 来俊臣<br><span class="bluetext">角色分析</span>：中国历史上唯一一位正统女皇—武曌，武则天，第二位大唐进攻型核心。一技能使得武曌几乎无需面对伤害卡牌不足的问题。二技能将未来的收益移至当前，通过给自身添加兵/乐的方式来获得额外的摸牌和出牌机会，两次出牌阶段可以有效地使用一技能获得的杀，附加的防御能力也十分有效。主公技弥补了武曌生存能力不足的问题。变相通过判定结果获得收益，完美融入大唐体系；可以受到具有拆迁能力的狄仁杰、上官婉儿的完美辅助，而自身的大量过牌存牌又给狄仁杰的生存带来保障，角色契合度极高。',
'进攻：★★★☆☆☆ 爆发：★★★★★☆ </br>防御：★★★☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_direnjie',
'</br><span class="bluetext">关联角色</span>：武曌 来俊臣<br><span class="bluetext">角色分析</span>：大唐杰出政治家，传说中的神探—狄仁杰。一技能收益极高，最佳情况下会带来4牌+使用牌无限制的收益，但对排序要求很高。二技能发动时机灵活，可用于补充队友手牌、控制敌方手牌，当然，最常见的使用方式还是增强自身的生存能力。无损过拆的效果对于武曌有着完美的辅助，角色契合度很高。',
'进攻：★★☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★★★☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★☆☆☆☆☆</br>'],
['XS_lilongji',
'</br><span class="bluetext">关联角色</span>：杨玉环 安禄山 史思明 郭子仪 李光弼<br><span class="bluetext">角色分析</span>：唐玄宗—李隆基',
'进攻：★★★☆☆☆ 爆发：★★★★★★ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_yangyuhuan',
'</br><span class="bluetext">关联角色</span>：李隆基 安禄山 李白<br><span class="bluetext">角色分析</span>：古代四大美女之一，杨贵妃—杨玉环',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★★★☆☆ 辅助：★★★★☆☆</br>'],
['XS_guoziyi',
'</br><span class="bluetext">关联角色</span>：李光弼 安禄山 史思明 李隆基<br><span class="bluetext">角色分析</span>：平定安史之乱，再造李唐王室的中兴名将—郭子仪',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：★★★★☆☆ 辅助：★★★☆☆☆</br>'],
['XS_liguangbi',
'</br><span class="bluetext">关联角色</span>：郭子仪 安禄山 史思明 李隆基<br><span class="bluetext">角色分析</span>：大唐中兴战功第一的名将—李光弼',
'进攻：★★★☆☆☆ 爆发：★★★★★☆ </br>防御：★☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_shangguanwaner',
'</br><span class="bluetext">关联角色</span>：武曌 李隆基<br><span class="bluetext">角色分析</span>：唐代著名女政治家、才女—上官婉儿，多种定位间转化的全面型角色。一技能每次发动效果可以带来1收益，当有足够手牌时，可以带来巨大的牌差。二技能在一技能的配合下可以有效调整想获得的技能，包括来自武则天的进攻技能，来自同为才女的班昭的辅助生存技能，以及自身独有的集攻、防、控于一体的技能，无论是二技能还是这些获得的技能都与一技能配合十分优秀，联动完美。角色方面，与武曌有着密切的联系对其有着极佳的辅助效果，同时一定程度上受到李隆基的克制，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：★★★☆☆☆</br>']
];
			lib.game.createview(node,charalist);
		}
	},
},
songview: {
	name: '铁血强宋',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
['XS_zhaokuangyin',
'</br><span class="bluetext">关联角色</span>：大宋一众角色<br><span class="bluetext">角色分析</span>：宋太祖—赵匡胤，大宋核心。大宋角色多为折腾装备的菜刀将，过牌能力较弱，赵匡胤的一技能在很大程度上缓解了队友断杀的风险。二技能作为一个稳定2收益技能，既可以用来拆敌方关键装备，也可以获得队友装备或主动卖血。主公技则与一技能形成完美配合，当受到伤害时为队友补杀并令其立刻使用。基本上与所有大宋角色都拥有很好的配合，是一名强力主公，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★★☆ </br>控制：★★☆☆☆☆ 辅助：★★★★☆☆</br>'],
['XS_yuefei',
'</br><span class="bluetext">关联角色</span>：岳云 赵匡胤 宗泽 韩世忠 杨再兴 梁红玉等<br><span class="bluetext">角色分析</span>：民族英雄、中兴四将之首——岳飞',
'进攻：★★★★★☆ 爆发：★★☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_yueyun',
'</br><span class="bluetext">关联角色</span>：岳飞 赵匡胤 宗泽<br><span class="bluetext">角色分析</span>：岳飞长子、少年将军——岳云',
'进攻：★★★★☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：★☆☆☆☆☆</br>'],
['XS_yangzaixing',
'</br><span class="bluetext">关联角色</span>：岳飞 宗泽 赵匡胤<br><span class="bluetext">角色分析</span>：勇冠一时的抗金名将——杨再兴',
'进攻：★★★☆☆☆ 爆发：★★★☆☆☆ </br>防御：★☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_lianghongyu',
'</br><span class="bluetext">关联角色</span>：岳飞 韩世忠 岳云 杨再兴等<br><span class="bluetext">角色分析</span>：抗金女英雄——梁红玉',
'进攻：☆☆☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_menggong',
'</br><span class="bluetext">关联角色</span>：赵匡胤 岳飞 韩世忠<br><span class="bluetext">角色分析</span>：机动防御大师——孟珙',
'进攻：★★☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_simaguang',
'</br><span class="bluetext">关联角色</span>：赵匡胤 岳飞 岳云 韩世忠 王安石等<br><span class="bluetext">角色分析</span>：资治通鉴的作者——司马光',
'进攻：★★☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_hanshizhong',
'</br><span class="bluetext">关联角色</span>：赵匡胤 岳飞 岳云 梁红玉 孟珙<br><span class="bluetext">角色分析</span>：中兴四将之一、抗金名将——韩世忠',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★★☆ 辅助：★★★★☆☆</br>'],
['XS_wentianxiang',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：留取丹心照汗青——文天祥',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★★★★☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_bizaiyu',
'</br><span class="bluetext">关联角色</span>：赵匡胤<br><span class="bluetext">角色分析</span>：南宋名将—毕再遇，具备强大防御能力的菜刀型角色。一技能为其提供了强大的爆发能力，但当手牌有限时，至多与界咆哮效果相当。二技能是一个不稳定的单次防御技能，也能将一次伤害转化为摸2张牌，强度也不是很理想。但两个技能的配合瞬间使彼此脱胎换骨，二技能取消自己伤害的效果为一技能在回合内的爆发提供了进一步的支持，而一技能的弃置手牌则为回合外二技能的触发创造了条件。与大宋君主赵匡胤有着不错的配合，角色契合度较高。',
'进攻：★★★★☆☆ 爆发：★★★★★☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_zhaopu',
'</br><span class="bluetext">关联角色</span>：大宋一众角色<br><span class="bluetext">角色分析</span>：半部论语治天下——赵普',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★★☆ 辅助：★★☆☆☆☆</br>'],
['XS_zongze',
'</br><span class="bluetext">关联角色</span>：岳飞 岳云 杨再兴<br><span class="bluetext">角色分析</span>：北宋名将，岳飞某种程度上的师傅—宗泽，菜刀将的宗爷爷。一技能的存在使得全场大量的杀都可以循环利用并在队友之间相互传递，队友被闪避的杀交给宗泽后，宗泽命中后又可以返还队友，大幅提高杀的利用率。二技能在一技能的配合下觉醒极为容易，队友可以通过大量送杀使此技能获得极大的收益。作为一名辅助向角色，对于大宋一干断杀菜刀将具有极佳的辅助作用，而分别来自岳飞、杨再兴、岳云的三个技能对于岳飞等人的增强更是巨大，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_wanganshi',
'</br><span class="bluetext">关联角色</span>：司马光<br><span class="bluetext">角色分析</span>：司马光的死对头，无畏相公—王安石，具备团体过牌能力的辅助型角色。一技能可以为队友提供1次重铸的机会，当敌方造成伤害后也可以通过此技能观看其手牌并弃置关键牌，当然也可以通过弃置牌来发动此效果，可以为二技能提高收益。二技能极为强大，通常情况都可以带来至少2牌的收益，当残血时，对队友发动极有可能直接满血。作为司马光的对头，二技能可以在回合内外发动，与司马光形成了相互克制，而司马光的额外牌能力使王安石的二技能收益更高，对司马光产生了进一步的克制，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★★★☆☆ 辅助：★★★★☆☆</br>'],
['XS_panmei',
'</br><span class="bluetext">关联角色</span>：赵匡胤 曹彬<br><span class="bluetext">角色分析</span>：蒙冤千年的北宋开国名将—潘美，强命控制型角色。一技能带来了几乎每回合稳定造成1伤害的能力，同时由于火攻不弃牌的特性，在虎符或是队友的配合下可以获得极大爆发。二技能极为强力，每回合只能使用或打出1张牌的限制既对目标的生存和进攻都有极大削弱，且能带来额外的2牌差收益。虽然触发条件苛刻，但有一技能配合也显得比较容易。需要杀和火攻的特性与赵匡胤、曹彬配合极为优秀，角色契合度高。',
'进攻：★★★☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★★★ 辅助：☆☆☆☆☆☆</br>'],
['XS_caobin',
'</br><span class="bluetext">关联角色</span>：赵匡胤 潘美 大宋一众菜刀<br><span class="bluetext">角色分析</span>：北宋开国名将—曹彬，另类辅助型角色。一技能为曹彬技能的核心，通常情况可以用来交给队友关键牌使之可以额外指定目标，尤其是桃、无中、添兵这类锦囊，或是给菜刀队友提供杀来获得巨大收益，当然，也可以交给敌方毒或其他无法使用的牌，以便在其回合结束后获得其1张牌，顺便触发技能二。技能二为需要不停给牌的曹彬以额外的摸牌数，搭配一技能甚至可以做到生生不息。由于技能特性，与赵匡胤、潘美极为契合，同时对于大宋众多菜刀有着优秀的辅助作用，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：★★★★★☆</br>']
];
			lib.game.createview(node,charalist);
		}
	},
},
mingview: {
	name: '大明风华',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
['XS_yuanchonghuan',
'</br><span class="bluetext">关联角色</span>：魏忠贤<br><span class="bluetext">角色分析</span>：袁崇焕',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_zhengchenggong',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：郑成功',
'进攻：★★☆☆☆☆ 爆发：★★★★★☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_zhuyuanzhang',
'</br><span class="bluetext">关联角色</span>：大明一众角色<br><span class="bluetext">角色分析</span>：明太祖—朱元璋',
'进攻：★★☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★★☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_liuji',
'</br><span class="bluetext">关联角色</span>：朱元璋 蓝玉<br><span class="bluetext">角色分析</span>：刘基',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★★★☆☆ 辅助：★★★★☆☆</br>'],
['XS_xuda',
'</br><span class="bluetext">关联角色</span>：朱元璋 蓝玉 朱棣 常遇春等<br><span class="bluetext">角色分析</span>：徐达',
'进攻：★★★★☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_changyuchun',
'</br><span class="bluetext">关联角色</span>：朱元璋 朱棣 徐达 蓝玉等<br><span class="bluetext">角色分析</span>：常遇春',
'进攻：☆☆☆☆☆☆ 爆发：★★★★★☆ </br>防御：★★☆☆☆☆ 生存：★★★★☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_lishizhen',
'</br><span class="bluetext">关联角色</span>：朱元璋 朱棣 徐达 常遇春 蓝玉等<br><span class="bluetext">角色分析</span>：李时珍',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_qijiguang',
'</br><span class="bluetext">关联角色</span>：朱元璋 俞大猷 朱棣 蓝玉等<br><span class="bluetext">角色分析</span>：戚继光',
'进攻：★★★☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★★★☆ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_wangshouren',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：王阳明',
'进攻：★★★☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★★☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_yuqian',
'</br><span class="bluetext">关联角色</span>：朱元璋 朱棣 徐达 常遇春 蓝玉等<br><span class="bluetext">角色分析</span>：于谦',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★☆</br>'],
['XS_zhangjuzheng',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：张居正',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_yudayou',
'</br><span class="bluetext">关联角色</span>：戚继光<br><span class="bluetext">角色分析</span>：俞大猷',
'进攻：★★★★☆☆ 爆发：★★☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_qinliangyu',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：中华唯一一位被记入正史将相列传的巾帼英雄—秦良玉，具备一定防御能力的多杀流菜刀将，同时拥有封杀敌方出牌的能力。由于是明代末年人物，在本扩展中并无特定契合角色，可以视为强命多杀菜刀将与其他角色配合。',
'进攻：★★★☆☆☆ 爆发：★★★☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_lanyu',
'</br><span class="bluetext">关联角色</span>：朱元璋 朱棣 徐达 常遇春等<br><span class="bluetext">角色分析</span>：明初大将—蓝玉，爆发玩命型角色。一技能几乎可以稳定一张牌决斗全场，AOE能力极强，但与之相对的，杀全场的同时也在搏命。二技能作为限定技强度不错，同时在很大程度上弥补一下蓝玉血线飞速下降的不足，联动极佳。与明初一众角色有着一定的联动，角色契合度很高。',
'进攻：★★☆☆☆☆ 爆发：★★★★★☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_zhudi',
'</br><span class="bluetext">关联角色</span>：大明一众角色<br><span class="bluetext">角色分析</span>：永乐大帝—朱棣，大明君主2号，新一代大明核心，集攻防控于一体。一技能具有强大的防御能力，但受限于摸牌白的本质，发动频率有限。二技能作为升级版攻心，即可无条件观看手牌并弃牌，也能用于反攻对方。一二技能配合则可以更大地发挥威力。作为大明君主，一二技能与主公技都可以为大明角色调整手牌花色和控制敌方花色提供帮助，对队友的辅助效果更强于其父。与明初角色都有着良好的互动，而与姚广孝更能形成极佳的配合，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：★☆☆☆☆☆</br>'],
['XS_yaoguangxiao',
'</br><span class="bluetext">关联角色</span>：朱棣<br><span class="bluetext">角色分析</span>：黑衣宰相—姚广孝，具备极强控制及辅助能力的角色。一技能相当于带来2牌差的收益，同时也可以无视距离选定角色和目标，无论是保核还是用于自保都极为强力。二技能为姚广孝带来了极为强大的团队恢复能力，合适的情况下，也可对敌方发动。角色配合方面，自然是与朱棣有着极为优秀的联动，角色契合度较高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★★★★☆☆</br>'],
['XS_zhenghe',
'</br><span class="bluetext">关联角色</span>：朱棣<br><span class="bluetext">角色分析</span>：著名航海家，三宝太监—郑和，集进攻、摸牌、控制于一身的全面型角色。一技能共计4种效果，除了摸牌以外，都可用于触发二技能，尤其以1点伤害和令敌方翻面收益最高。二技能使郑和造成伤害时会获得不同的效果，在和一技能的联动下，无论是触发条件还是触发效果都变得可控。与朱棣联动十分完美，朱棣将郑和所有手牌改为1个花色，用于本回合囤积手牌，以便下回合触发翻面效果，角色契合度极高。',
'进攻：★★★☆☆☆ 爆发：★☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：★★★☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_zhusheng',
'</br><span class="bluetext">关联角色</span>：朱元璋<br><span class="bluetext">角色分析</span>：朱升',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：★★★☆☆☆ 辅助：★★★★☆☆ </br>']
];
			lib.game.createview(node,charalist);
		}
	},
},
zhuziview: {
	name: '诸子百家',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
['XS_zouyan',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：邹衍',
'进攻：☆☆☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_xunkuang',
'</br><span class="bluetext">关联角色</span>：孔丘 孟轲<br><span class="bluetext">角色分析</span>：荀子',
'进攻：☆☆☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：★★★★☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_zhuangzhou',
'</br><span class="bluetext">关联角色</span>：老聃 惠施<br><span class="bluetext">角色分析</span>：庄子',
'进攻：★★★☆☆☆ 爆发：★★★☆☆☆ </br>防御：★★★☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_sunwu',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：孙武',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★★☆☆ 生存：★★★☆☆☆ </br>控制：★★☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_wuqi',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：吴起',
'进攻：☆☆☆☆☆☆ 爆发：★★★★☆☆ </br>防御：★★★★☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_kongqiu',
'</br><span class="bluetext">关联角色</span>：孟轲 南子 老聃<br><span class="bluetext">角色分析</span>：孔子',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：★★★☆☆☆ 辅助：★★★★☆☆</br>'],
['XS_lier',
'</br><span class="bluetext">关联角色</span>：孔丘 孟轲<br><span class="bluetext">角色分析</span>：老子',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★★★★ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_modi',
'</br><span class="bluetext">关联角色</span>：公输般<br><span class="bluetext">角色分析</span>：墨子',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★★★☆☆☆</br>'],
['XS_wangxu',
'</br><span class="bluetext">关联角色</span>：苏秦 张仪<br><span class="bluetext">角色分析</span>：鬼谷子',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★★★★★★</br>'],
['XS_ouyezi',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：欧冶子',
'进攻：★★☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_gongshuban',
'</br><span class="bluetext">关联角色</span>：墨翟<br><span class="bluetext">角色分析</span>：鲁班',
'进攻：★★★★☆☆ 爆发：★★★☆☆☆ </br>防御：★★★★☆☆ 生存：☆☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★☆</br>'],
['XS_quping',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：屈原',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_hanfei',
'</br><span class="bluetext">关联角色</span>：李斯<br><span class="bluetext">角色分析</span>：韩非子',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：★★★★★☆</br>'],
['XS_huishi',
'</br><span class="bluetext">关联角色</span>：张仪<br><span class="bluetext">角色分析</span>：惠子',
'进攻：☆☆☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★★★☆☆ 生存：★★★★★☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_mengke',
'</br><span class="bluetext">关联角色</span>：孔丘 老聃<br><span class="bluetext">角色分析</span>：孟子',
'进攻：★☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_tianrangju',
'</br><span class="bluetext">关联角色</span>：姜小白 姜尚<br><span class="bluetext">角色分析</span>：司马穰苴',
'进攻：☆☆☆☆☆☆ 爆发：★★★★★★ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：☆☆☆☆☆☆</br>']
];
			lib.game.createview(node,charalist);
		}
	},
},
huaxiaview: {
	name: '华夏人杰',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
['XS_chairong',
'</br><span class="bluetext">关联角色</span>：赵匡胤<br><span class="bluetext">角色分析</span>：周世宗——柴荣',
'进攻：★★☆☆☆☆ 爆发：★★★★★☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_dugujialuo',
'</br><span class="bluetext">关联角色</span>：杨坚 高颎 杨广<br><span class="bluetext">角色分析</span>：独孤伽罗',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★★★☆☆ </br>控制：★★★★★☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_ranmin',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：冉闵',
'进攻：★★☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★★★ </br>控制：★☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_yangjian',
'</br><span class="bluetext">关联角色</span>：大隋一众角色 裴行俭<br><span class="bluetext">角色分析</span>：隋文帝—杨坚，大隋核心。一技能可以用于削减目标手牌，也能用于处理自身的毒，同时也有助于触发二技能。二技能为杨坚提供了很强的防御能力，对杀的来源有极强的威慑。在一二技能的效果下，主公技的触发相对容易，同时收益也较为可观。作为大隋核心，与大隋角色极易打空手牌的特性形成了极好的联动，一技能既可以在队友的配合下弃置敌方手牌，也可以为空手牌队友补牌。而主公技的存在也可以为没有手牌的队友进行补牌，总体上是一名辅助防御向主公，角色契合度很高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★★☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★☆☆☆☆☆</br>'],
['XS_yangsu',
'</br><span class="bluetext">关联角色</span>：杨坚 红拂女<br><span class="bluetext">角色分析</span>：隋朝名将—杨素，多杀强攻型角色。一技能为杨素提供了多杀与转化杀的能力，同时解决了使用杀的次数不足和断杀的问题，又可以在发动五谷、桃园等锦囊时针对性防碍敌方，灵活度很高。二技能进一步增强了杨素的进攻能力，在良好的牌序下可以造成巨大的伤害。杨素一二技能的效果和特性使得他需要也容易将手牌迅速消耗，较低的手牌量与杨坚形成了良好的联动，并可受到红拂女的良好辅助，契合度较高。',
'进攻：★★★☆☆☆ 爆发：★★★★★★ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_gaojiong',
'</br><span class="bluetext">关联角色</span>：杨坚 高颎 韩擒虎 裴行俭<br><span class="bluetext">角色分析</span>：隋朝名相—高颎，有着强大过牌与拆牌能力的角色。一技能可以带来巨大的摸牌量，在队友的配合下，很容易获得回合3、4的牌差，需要注意的是尽量在队友的回合发动，可以减少负面效果。二技能使高颎有着强大的拆迁和控顶能力，必要时也能帮助队友处理毒。作为大隋人物，与杨坚形成了良好的联动，同时又可以受到史万岁的有效辅助，角色契合度较高。',
'进攻：☆☆☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★★★ 辅助：☆☆☆☆☆☆</br>'],
['XS_shiwansui',
'</br><span class="bluetext">关联角色</span>：杨坚 杨素 高颎 裴行俭<br><span class="bluetext">角色分析</span>：隋朝名将—史万岁，舍命对敌方造成巨大伤害的搏命进攻型角色。一技能收益很高，一般情况下可以对敌人造成巨大的伤害，但一旦发动则势必牺牲了防御。二技能既可以辅助卖血型、进攻型队友，也可以对自身发动，进一步增强一技能的威力。作为大隋角色，尽量的压低手牌数可以和杨坚形成良好互动，对高颎、杨素等又有着不错的辅助效果，角色契合度较高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★★★☆☆☆</br>'],
['XS_zhangsunsheng',
'</br><span class="bluetext">关联角色</span>：杨坚 长孙无忌 长孙皇后<br><span class="bluetext">角色分析</span>：一箭双雕，李世民的岳父—长孙晟，手牌管理收益型角色。一技能可以带来至多4牌差的收益，但基本无法触发二技能，或者通过提高手牌上限来最大化二技能收益。二技能具有强大的控制手段，若想获得最大的收益则往往需要一技能第2项效果的帮助。作为大隋角色，同样具有手牌越少收益越高的特点，与杨坚等大隋角色配合密切。作为长孙兄妹的父亲，也将一技能的两种效果分别传给了兄妹俩并发扬光大，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：☆☆☆☆☆☆ </br>'],
['XS_hanqinhu',
'</br><span class="bluetext">关联角色</span>：李靖 杨坚 高颎<br><span class="bluetext">角色分析</span>：韩擒虎',
'进攻：☆☆☆☆☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★★☆☆☆</br>']
];
			lib.game.createview(node,charalist);
		}
	},
},
saiwaiview: {
	name: '塞外金戈',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
['XS_murongke',
'</br><span class="bluetext">关联角色</span>：冉闵 慕容垂<br><span class="bluetext">角色分析</span>：慕容恪',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★★☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_boertie',
'</br><span class="bluetext">关联角色</span>：铁木真 速不台 博尔术 木华黎<br><span class="bluetext">角色分析</span>：孛尔帖',
'进攻：☆☆☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：★★★☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★☆</br>'],
['XS_fujian',
'</br><span class="bluetext">关联角色</span>：王猛 慕容垂 张蚝 邓羌 谢安 谢玄<br><span class="bluetext">角色分析</span>：前秦天王—苻坚，前秦核心，通过辅助队友来获得收益的辅助型主公。一技能为队友补充手牌，补得越多，团队收益越高。二技能与一技能联动，每2回合可以使队友获得一个额外的出牌阶段，极大增强了团队攻防两端的能力。三技能提高了自身的生存能力，身为主公时甚至可以做到装备重复利用。在配合方面，与慕容垂、王猛有着完美的互助关系，张蚝、邓羌对苻坚的辅助效果也强于对其他角色的辅助效果，此外，受到谢安、谢玄叔侄的极度克制，人物契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_murongchui',
'</br><span class="bluetext">关联角色</span>：王猛 苻坚 张蚝<br><span class="bluetext">角色分析</span>：慕容垂',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★★★☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_wangmeng',
'</br><span class="bluetext">关联角色</span>：苻坚 慕容垂 邓羌<br><span class="bluetext">角色分析</span>：王猛',
'进攻：★★★☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★★★★☆☆</br>'],
['XS_tiemuzhen',
'</br><span class="bluetext">关联角色</span>：耶律楚材 速不台 博尔术 木华黎<br><span class="bluetext">角色分析</span>：一代天骄—成吉思汗铁木真，又一名重点在于单兵能力的另类主公。对杀的利用率极高，但通常需要摸到武器牌才能启动。一旦摸到武器牌将同时解决进攻距离、断杀等问题，并且武器不怕被顺拆。作为1名多杀型角色，与耶律楚材有着完美的配合，而对装备的依赖以及主动技的存在，与同样善于折腾装备牌的速不台、木华黎、博尔术形成了良好的配合，人物契合度很高。',
'进攻：★★★★☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_subutai',
'</br><span class="bluetext">关联角色</span>：铁木真 耶律楚材 木华黎 博尔术<br><span class="bluetext">角色分析</span>：速不台',
'进攻：★★★★★☆ 爆发：★★☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_yelvchucai',
'</br><span class="bluetext">关联角色</span>：铁木真 速不台 博尔术<br><span class="bluetext">角色分析</span>：耶律楚材',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★★ </br>'],
['XS_zhanghao',
'</br><span class="bluetext">关联角色</span>：苻坚 王猛 慕容垂 邓羌<br><span class="bluetext">角色分析</span>：张蚝',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_muhuali',
'</br><span class="bluetext">关联角色</span>：铁木真 速不台 博尔术<br><span class="bluetext">角色分析</span>：蒙古国四杰之一，成吉思汗大将—木华黎，拥有强大拉牌差与较强控制能力的角色。一技能相对难以控制，往往仅在第一回合生效，不做详述。二技能是木华黎的主要技能，全场装备拆装都可以带来弃、摸牌的机会，存活角色越多制造牌差的能力越强，并对通过拆装装备获得收益的角色有较强的克制作用。作为成吉思汗手下大将，与铁木真、速不台、博尔术都有较好的配合，但前提是配合得当，否则会产生相反的效果。角色契合度较高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★☆☆ 辅助：★★★★★☆</br>'],
['XS_boershu',
'</br><span class="bluetext">关联角色</span>：铁木真 速不台 博尔术 耶律楚材br><span class="bluetext">角色分析</span>：成吉思汗大将，四杰之一—博尔术，团队增益型角色。一技能可以为团队提供稳定的武器支持，作用无需多讲。二技能延迟收益，可以提高团队的进攻能力，必要时也可以用于关键牌的传递，同时对自身也有一定的过牌效果。一二技能的配合为团队带来了强大的进攻能力。作为蒙古角色，与蒙古诸将通过武器获得收益的体系完美融合，与铁木真、速不台、木华黎、耶律楚材等都有着十分优秀的联动，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★☆</br>'],
['XS_dengqiang',
'</br><span class="bluetext">关联角色</span>：苻坚 慕容垂 王猛 张蚝<br><span class="bluetext">角色分析</span>：有万人敌之称的符秦猛将—邓羌，具有较强进攻能力的辅助型角色。一技能触发较为容易，除提供额外的杀，也可用于控顶或传递装备，通过给特定角色武器牌则可以帮助二技能触发。二技能收益和灵活性都较高，既可以保护队友，也可以置换敌方手牌，在一技能的配合下发动比较容易。作为符秦角色，可以为苻坚、慕容垂提供较为稳定的装备来源，需要其他角色距离的特性与王猛、张蚝形成了优秀的配合，角色契合度极高。',
'进攻：★★★★☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：★★☆☆☆☆ </br>']
];
			lib.game.createview(node,charalist);
		}
	},
},
mamingview: {
	name: '遗臭万年',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
['XS_weizhongxian',
'</br><span class="bluetext">关联角色</span>：袁崇焕<br><span class="bluetext">角色分析</span>：魏忠贤',
'进攻：★☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★★★ 辅助：★★☆☆☆☆</br>'],
['XS_yansong',
'</br><span class="bluetext">关联角色</span>：张居正 戚继光<br><span class="bluetext">角色分析</span>：严嵩',
'进攻：★★☆☆☆☆ 爆发：★★★★★☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_qinhui',
'</br><span class="bluetext">关联角色</span>：岳飞 岳云 韩世忠<br><span class="bluetext">角色分析</span>：大宋著名奸臣—秦桧，拆迁控制型角色，血色包二号负面人物。一技能控制敌方装备，最多可带来2牌差的收益，同时能防止对方使用关键装备，有人濒死时重置使用次数可以进一步提高此技能收益，同时也带来了生存能力上的补足。二技能是强力的拆迁技能，只要能保证手牌中类型较少，基本上只要有人弃牌自己就可以进行拆迁，与一技能联动直接强拆也是极佳的手段。控制装备、强力拆迁的特性对岳飞、岳云乃至韩世忠都十分克制，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★★★★★ 辅助：☆☆☆☆☆☆</br>'],
['XS_laijunchen',
'</br><span class="bluetext">关联角色</span>：武曌 狄仁杰<br><span class="bluetext">角色分析</span>：善于罗织罪名的武周朝著名酷吏—来俊臣，强攻型角色，血色包三号负面人物。一技能进攻能力极强，虽然带有负面效果，但通过将敌我横置能够对敌方带来较大威慑，最差不过同归于尽。二技能提供了多杀或无视距离的效果，与一技能搭配既可以连续造成巨大伤害，也可以远程定点爆破。作为负面角色，技能充满了负面意味，杀失败被杀的效果可以有限地给武曌送牌，角色契合很高。',
'进攻：★★★★★☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_zhaogao',
'</br><span class="bluetext">关联角色</span>：李斯 蒙恬 扶苏<br><span class="bluetext">角色分析</span>：秦朝著名权臣、宦官，指鹿为马的由来—赵高，强控强攻型角色，血色包四号负面人物。一技能作为转化技，三个效果都极为强力，一二技能具备强大的控制能力，当此技能累计发动多次后，第三个效果将带来极大的收益，需要弃置手牌来发动是此技能的限制。二技能用于强化一技能，既可以使转换技快速转到需要的效果，也可以直接对一技能进行强化，合理选择效果将带来意想不到的收获。转换技的三种效果对于李斯、蒙恬以及扶苏都产生了一定成都的克制，角色契合度极高。',
'进攻：★☆☆☆☆☆ 爆发：★★★★☆☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★★★☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_huanxuan',
'</br><span class="bluetext">关联角色</span>：刘裕 桓温<br><span class="bluetext">角色分析</span>：东晋将领、权臣—桓玄，集防御、辅助、控制、近攻于一体的全面型角色，又一位负面人物。一技能兼具防御与辅助功能，可以拉敌人下水，也可以使增益型锦囊对两人生效，效果极强。二技能可以对敌方落井下石，与一技能配合尤佳，除了展示手牌以外，很大概率可以获得目标1张手牌并使用。由于一技能的特性，在面对刘裕时会导致刘裕的杀重复结算多次，进而极大程度地使其触发二技能的效果，因此会受到刘裕的严重克制，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★★★☆☆ </br>控制：★★★☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_yangguang',
'</br><span class="bluetext">关联角色</span>：大隋一众角色<br><span class="bluetext">角色分析</span>：隋朝亡国之君，隋炀帝—杨广，废品回收利用大师，桓玄之后第二位负面帝王。一技能的存在使得许多牌可以循环利用，合理的排序将极大抵消此技能的限制。二技能可以突破回合使用杀的次数限制以及使用aoe的误伤限制，于弃牌结束进行单点爆破，由于一技能的缘故此技能的性能进一步增强，两技能联动优秀。回收手牌与尽量多地保证高手牌量与手牌应尽可能少的大隋体系格格不入，体现出其作为隋朝亡国之君的身份，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：★★★★☆☆ </br>防御：★★★☆☆☆ 生存：★★★★☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆ </br>'],
['XS_anlushan',
'</br><span class="bluetext">关联角色</span>：李隆基 杨玉环 史思明 郭子仪 李光弼<br><span class="bluetext">角色分析</span>：安史之乱罪魁祸首—安禄山，强命高伤型角色。一技能是另类强命技能，单独来看强命效果有限，但重点在于于二技能的联动。二技能给安禄山带来回合稳定一酒的效果，在一技能的强命配合下可以造成大量伤害的同时附带顺手效果。三技能则是纯粹的负面技，作为二技能带来的恶果，如果控制不当，8血也会暴毙。强命+拆迁的特性对于李隆基、尤其是觉醒后的李隆基极为克制，而需要多造成伤害的特性又能受到杨玉环的完美辅助，同时杨玉环的存在甚至可以使三技能成为正面技，与史思明、郭子仪、李光弼同样存在联动，角色契合度暴表。',
'进攻：★★★★☆☆ 爆发：★★☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_shisiming',
'</br><span class="bluetext">关联角色</span>：李隆基 安禄山 李光弼 郭子仪<br><span class="bluetext">角色分析</span>：安史之乱令一名罪魁祸首—史思明，强攻爆发型角色，兼具有代价的辅助控制能力。一技能每轮使用杀的次数越多，收益越高。二技能解决了断杀和多杀的问题，同时带来了有代价的控制辅助能力，若想拆牌，需要给对方送牌；若想送牌，就需要杀目标1刀，对操作性、大局观要求极强，相应地生存能力较弱是其主要缺点。需要多杀的特性和安禄山配合极为优秀，拆牌特性很克制李隆基并受到李光弼和郭子仪的克制，角色契合度极高。',
'进攻：★★★☆☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★☆☆☆☆☆ 辅助：★☆☆☆☆☆ </br>']
];
			lib.game.createview(node,charalist);
		}
	},
},
cikeview: {
	name: '刺客列传',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
['XS_yaoli',
'</br><span class="bluetext">关联角色</span>：阖闾<br><span class="bluetext">角色分析</span>：要离',
'进攻：★★☆☆☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_gaojianli',
'</br><span class="bluetext">关联角色</span>：荆轲 嬴政<br><span class="bluetext">角色分析</span>：战国时期著名乐师，荆轲的好友—高渐离，辅助控制型角色。一技能可以跳过三个阶段，除了跳弃牌以外主要用于和二技能进行combom。二技能是高渐离的收益来源，将自身跳过的阶段转给其他角色，防止兵乐的同时，可以辅助队友以及给敌方弃牌阶段，同时根据跳过的阶段数将获得最多4收益+解除异常的效果，收益极高。由于荆轲经常打空和需要打空手牌的特性，对于荆轲具有完美的辅助效果，而给弃牌阶段却无法对嬴政产生任何的控制效果，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★★★☆☆</br>'],
['XS_jingke',
'</br><span class="bluetext">关联角色</span>：嬴政 高渐离<br><span class="bluetext">角色分析</span>：荆轲',
'进攻：☆☆☆☆☆☆ 爆发：★★★★★☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_zhuanzhu',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：专诸',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★★★ 辅助：☆☆☆☆☆☆</br>'],
['XS_niezheng',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：初秋时期著名刺客，白虹贯日—聂政，多杀流的极致。一技能共分为4个效果，四个效果的收益从正逐渐到负，仅发动前两项时收益尚可。二技能给了聂政可怕的进攻能力，当一技能发动全部效果时，将具有单回合9刀的能力。通常来讲，一技能仅选择前2项效果就已经具备极强的进攻能力，当团队处于弱势时，再考虑发动四项效果搏命一击，局势将瞬间逆转。作为初秋时期的刺客，在本扩展中目前暂无特定关联角色。',
'进攻：★★★☆☆☆ 爆发：★★★★★★ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_yurang',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：豫让',
'进攻：☆☆☆☆☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★☆☆☆☆☆ </br>控制：★★★★★★ 辅助：☆☆☆☆☆☆</br>']
];
			lib.game.createview(node,charalist);
		}
	},
},
jiangxiangview: {
	name: '将相无种',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
['XS_chensheng',
'</br><span class="bluetext">关联角色</span>：吴广 刘邦<br><span class="bluetext">角色分析</span>：喊出王侯将相，宁有种乎的秦末著名农民起义领袖—陈胜，操作性极强的过牌、控制型角色。一技能三个效果，收益逐渐减少，象征着农民起义从兴起到衰落的过程。二技能可以帮助一技能跳过负面状态，亦或是给队友正面状态、给敌方负面状态，代表着在农民起义的浪潮中不断有新的力量加入。一二技能的联动增强了陈胜的过牌能力，也使得其具备了一定的辅助和控制能力。与吴广具有优秀的联动，同时与秦末起义军首领之一的刘邦也有着优秀的配合，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_wuguang',
'</br><span class="bluetext">关联角色</span>：陈胜 刘邦<br><span class="bluetext">角色分析</span>：秦末著名农民起义领袖—吴广，辅助与屯牌爆发型角色。一技能是简单粗暴的辅助摸牌技能，配合二技能或是部分卡牌可以带来极大的牌差。二技能是强化版的界吕蒙技能，相对而言触发条件更低，且不会受到不能出杀的制约，额外的回合也给一技能的触发带来了条件，联动优秀。摸牌给牌的特性与陈胜形成极为优秀的联动，二者互惠互利。同时与刘邦也能形成优秀的配合，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_huangchao',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：黄巢',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_lizicheng',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：明末著名农民起义领袖，闯王—李自成。一技能提高了自身使用杀的收益，也减少了被杀的损失，遇到桃、杀时收益很高。二技能大大提高了李自成的生存能力，绝大多数情况下使得李自成的嘲讽度极低，不止如此，二技能还可用于主动控制敌方或是给队友补牌，是一个功能丰富且灵活度很高的技能。',
'进攻：☆☆☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★★★☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_songjiang',
'</br><span class="bluetext">关联角色</span>：方腊<br><span class="bluetext">角色分析</span>：宋朝著名农民起义军领袖，《水浒传》宋江的原型—宋江，奶妈型辅助角色。一技能每成功发动一次可以为团队带来无损2收益，与二技能配合极容易达成团队桃园。二技能收益极高，同时既可以帮助队友解除负面状态，也能对敌方的连环和翻面产生极大的威慑，大量的摸牌更是与一技能形成了优秀的联动。与同为南宋著名农民起义军领袖的方腊具有良好的配合，角色契合度较高。',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★☆☆☆☆☆ 生存：★★★☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★★★★☆</br>'],
['XS_fangla',
'</br><span class="bluetext">关联角色</span>：宋江 韩世忠<br><span class="bluetext">角色分析</span>：南宋著名农民起义军领袖—方腊，杂技型角色。一技能对于控制敌方手牌有着极大的效果，而对自己，当手牌上限足够或是装备了麒麟弓时，可以瞬间补充大量手牌。二技能通过废除一技能的一个效果来换取更稳定的收益，一技能中，进攻范围可用于过牌，手牌上限可用于存牌，用杀次数是控制敌方手牌的好方法，如何取舍是发挥此技能效果的关键。自身较为脆弱且可以增加体力上限的特点与宋江配合优秀，同时需求进攻范围也受到韩世忠的克制，角色契合度很高。',
'进攻：★★☆☆☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★☆☆☆☆</br>']
];
			lib.game.createview(node,charalist);
		}
	},
},
wenyaoqiangu: {
	name: '文耀千古',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
['XS_liqingzhao',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：李清照',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：☆☆☆☆☆☆ </br>控制：★★☆☆☆☆ 辅助：★★★★★☆</br>'],
['XS_libai',
'</br><span class="bluetext">关联角色</span>：杨玉环 杜甫<br><span class="bluetext">角色分析</span>：李白',
'进攻：★★★★☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_sushi',
'</br><span class="bluetext">关联角色</span>：王安石<br><span class="bluetext">角色分析</span>：被誉为三百年间仅一人的全才式艺术巨匠——苏轼，攻守兼备的“文人”。一技能是苏轼的核心，三个效果分别提供了防御能力、攻防兼备、进攻能力，任何情况下都可以生效两种，是极致化进攻、防御，还是攻守兼备，可以视环境而定。二技能赋予了苏轼更多的灵活性，不再需要被动地接受生命差，而可以主动地进行调整。由于缺少过牌能力，同时攻防受体力影响，因此受到老冤家王安石的较强克制，角色契合度很高。',
'进攻：★★★★★☆ 爆发：★★☆☆☆☆ </br>防御：★★★★☆☆ 生存：☆☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_taoyuanming',
'</br><span class="bluetext">关联角色</span>：李白<br><span class="bluetext">角色分析</span>：田园诗派的鼻祖——陶渊明，集辅助与控制能力与一身的角色，同时具备较强的过牌能力。一技能同时赋予陶渊明强大的控制和辅助能力，虽然自身需要付出一定的代价，但是显然拆掉敌方关键牌、友方判定牌收益更高。二技能赋予了他强大的生存和辅助能力，同时后半段的效果也带来了极佳的过牌，与一技能配合更是效果拔群。作为对李白影响极为深远的大诗人，二者技能仿佛一脉相承，都具有转化特殊牌的能力，也都可以通过弃牌获得收益，角色契合度极高。',
'进攻：★☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：★★★☆☆☆ 辅助：★★★☆☆☆</br>'],
['XS_yangxiong',
'</br><span class="bluetext">关联角色</span>：杨雄<br><span class="bluetext">角色分析</span>：《太玄经》真正的作者——杨雄，生存能力强大的爆发型角色。一技能是杨雄爆发力的源泉，不难获得的额外回合很容易左右战局。二技能赋予了杨雄很强的防御和生存能力，若对方应对不当，势必将面对一个不死的小强。作为被李白很很嘲讽了一番的古人，在面对李白时难免有些底气不足，二技能带来的非满血状态在李白酒杀面前不堪一击，角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：★★☆☆☆☆ </br>防御：★★★☆☆☆ 生存：★★★★☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★☆☆☆☆</br>'],
['XS_dufu',
'</br><span class="bluetext">关联角色</span>：李白<br><span class="bluetext">角色分析</span>：名垂千古的诗圣——杜甫，强力辅助型角色。一技能触发条件略高，但收益同样惊人，每回合一次的频率可以保证带来持续的收益。二技能可以触发一技能，也能为团队主力带来额外的爆发机会，辅助效果明显。诗圣的技能操作需求相对较低，同时，与诗仙李白有着极佳的配合，可以完美的辅助李白（仅仅是单方面的），角色契合度极高。',
'进攻：☆☆☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★★</br>'],
['XS_xinqiji',
'</br><span class="bluetext">关联角色</span>：苏轼<br><span class="bluetext">角色分析</span>：豪放词的代表人物，稼轩居士——辛弃疾，不稳定的高收益角色。一二技能作为组合技起到了相辅相成又相互限制的作用。一技能发挥良好时收益极高，而发挥不好时等于完全的负面技。二技能作为一技能的补充，拉高了下限的同时也限制了上限。作为与苏轼并称的豪放派词人，同样是文人中的菜刀角色，并且技能有着相似的结构，角色契合度很高。',
'进攻：★★☆☆☆☆ 爆发：★★★☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★★★☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_jiayi',
'</br><span class="bluetext">关联角色</span>：无<br><span class="bluetext">角色分析</span>：贾谊',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★★★☆☆ 生存：★★☆☆☆☆ </br>控制：★★★★★☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_xielingyun',
'</br><span class="bluetext">关联角色</span>：陶渊明<br><span class="bluetext">角色分析</span>：谢灵运',
'进攻：☆☆☆☆☆☆ 爆发：★★★★☆☆ </br>防御：★★★★☆☆ 生存：☆☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★☆☆☆</br>']
];
			lib.game.createview(node,charalist);
		}
	},
},
minyanshuying: {
	name: '民言书影',
	mode: '',
	intro: [],
	showcase: function (init) {
		var node = this;
		if (init) {	
			var charalist=[
// ['XS_baozheng',
// '</br><span class="bluetext">关联角色</span>：狄青 潘美<br><span class="bluetext">角色分析</span>：包拯',
// '进攻：★★☆☆☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★★☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_liyuanba',
'</br><span class="bluetext">关联角色</span>：李世民<br><span class="bluetext">角色分析</span>：李元霸',
'进攻：★★☆☆☆☆ 爆发：★★★★☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★★☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_liangshanbo',
'</br><span class="bluetext">关联角色</span>：祝英台<br><span class="bluetext">角色分析</span>：梁山伯',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：☆☆☆☆☆☆ 辅助：★★★★★☆</br>'],
['XS_zhuyingtai',
'</br><span class="bluetext">关联角色</span>：梁山伯<br><span class="bluetext">角色分析</span>：祝英台',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★☆☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：★★★★★☆</br>'],
['XS_muguiying',
'</br><span class="bluetext">关联角色</span>：无br><span class="bluetext">角色分析</span>：穆桂英',
'进攻：★★★★☆☆ 爆发：★★★★★★ </br>防御：☆☆☆☆☆☆ 生存：★☆☆☆☆☆ </br>控制：☆☆☆☆☆☆ 辅助：☆☆☆☆☆☆</br>'],
['XS_huamulan',
'</br><span class="bluetext">关联角色</span>：拓跋焘 高长恭等菜刀角色<br><span class="bluetext">角色分析</span>：巾帼英雄——花木兰，一杀两用、稳定触发雌雄的辅助型角色。一技能使得花木兰可以无损为队友提供杀，在增强自身的同时提升了团队的进攻能力。二技能赋予其一杀两用的能力，手中的杀除了辅助队友以外，通过弃牌可以使自身再次回收利用，改变性别的特点也能与一技能配合稳定触发雌雄。对于需要使用杀来获得收益的菜刀型角色辅助效果极佳，且可融入到北魏弃牌体系中，角色契合度极高。',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★☆☆☆☆ </br>控制：★★★☆☆☆ 辅助：★★★★★☆</br>'],
['XS_hongfunv',
'</br><span class="bluetext">关联角色</span>：李靖 杨素<br><span class="bluetext">角色分析</span>：风尘三侠之一，唐初奇女子—红拂女',
'进攻：☆☆☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：☆☆☆☆☆☆ 生存：★★★★☆☆ </br>控制：★★☆☆☆☆ 辅助：★★★★★☆</br>'],
['XS_mengjiangnv',
'</br><span class="bluetext">关联角色</span>：嬴政 白起等菜刀<br><span class="bluetext">角色分析</span>：传说中哭倒长城的奇女子——孟姜女',
'进攻：★★☆☆☆☆ 爆发：☆☆☆☆☆☆ </br>防御：★★☆☆☆☆ 生存：★★★★★☆ </br>控制：☆☆☆☆☆☆ 辅助：★★☆☆☆☆</br>']
];
			lib.game.createview(node,charalist);
		}
	},
},
            }
        }, {
            translate: '群像',
            config: {
				libhelp:{
					name:"血色群像",
					init:"1",
					frequent:true,
					item:{"1":"查看介绍","2":"<li>本模式用于展示《血色衣冠》扩展中的角色信息，包括角色介绍、角色技能、关联角色、角色分析等内容。","3":"<li>左键点击下方小头像查看角色介绍、分析等内容，右键点击头像查看角色技能、称号等信息。"},
				},
            },
            onremove: function () {
                game.clearModeConfig('XS_lib');
            }
        })
        image: ['extension/血色衣冠/XS_lib.jpg']
		 
		game.import('character',function(){
			var XSYG={
				name:'XSYG',
				connect:true,
				character:{
					// "XS_guanyiwusp":["male","qun",3,["XS_shiba","XS_zunwang"],[]],
					// "XS_chaocuo":["male","shu","3/4",["XS_shuyan","XS_zhixian"],[]],
					// "XS_liuqi":["male","shu",3,["XS_zunye","XS_dingfan"],[]],
					// "XS_taipinggongzhu":["female","wei",3,["XS_chongsheng","XS_quanqing"],[]],
					// "XS_baozheng":["male","wu",4,["XS_dongming","XS_tiemian"],[]],
					"XS_wangmengsp":["male","shen",3,["XS_lingxing","XS_jiezhi"],[]],
					"XS_jixuanyuan":["male","qun",4,["XS_zhenbing","XS_fumin","XS_xianshi"],['zhu']],
					"XS_leizu":["female","qun",3,["XS_shican","XS_saosi"],[]],
					"XS_jigaoyang":["male","qun",3,["XS_dinggang","XS_chengsi"],[]],
					"XS_jijun":["male","qun",4,["XS_guishi","XS_shanren"],[]],
					"XS_lijingsp":["male","shen",4,["XS_jidian","XS_jihou"],[]],
					"XS_guichonghua":["male","qun",3,["XS_mingde","XS_jiaohua"],[]],
					"XS_suwu":["male","shu","3/4",["XS_canbing","XS_zhongjie"],[]],
					"XS_huchonghua":["female","wei",1,["XS_chongshe","XS_yanxing"],[]],
					"XS_qifangxun":["male","qun",3,["XS_enze","XS_xiebang"],[]],
					"XS_yuefeisp":["male","shen",4,["XS_beiwei","XS_zhonghun"],[]],
					"XS_luoshixin":["male","wei",5,["XS_shaoying","XS_haoqiang"],[]],
					"XS_yaoli":["male","wu",4,["XS_kuji","XS_ziqiang"],[]],
					"XS_lifuren":["female","shu",3,["XS_qingzi","XS_jieli"],[]],
					"XS_fengxiaolian":["female","qun",3,["XS_yuchen","XS_xiahui"],[]],
					"XS_hanxinsp":["male","shen",4,["XS_yangtui","XS_jufu"],[]],
					"XS_liqingzhao":["female","wu",3,["XS_jinglu","XS_piaoling"],[]],
					"XS_zouyan":["male","qun",3,["XS_yinyang","XS_zhongshi"],[]],
					"XS_baoshuya":["male","qun",3,["XS_zhixian","XS_gangzhi"],[]],
					"XS_zhouyafu":["male","shu",4,["XS_yanzhen","XS_jieao"],[]],
					"XS_baiqisp":["male","shen",5,["XS_youmie","XS_jintu"],[]],
					"XS_nvjiao":["female","qun",3,["XS_sijun","XS_wangxiang"],[]],
					"XS_zhuangzhou":["male","qun",3,["XS_qiwuzhuang","XS_xiaoyao"],[]],
					"XS_xunkuang":["male","shu",3,["XS_tianlun","XS_xinge"],[]],
					"XS_siyu":["male","qun",4,["XS_shujun","XS_dingzhou"],[]],
					"XS_jiangxiaobaisp":["male","shen",3,["XS_huimeng","XS_rangyi"],[]],
					"XS_weizhongxian":["male","wu",3,["XS_shanquan","XS_lianhuo"],[]],
					"XS_yuanchonghuan":["male","wu",4,["XS_polu","XS_xianzhuo"],[]],
					"XS_zhengchenggong":["male","wu","4/5",["XS_qiangxi","XS_guzhong"],[]],
					"XS_chengyaojin":["male","wei",5,["XS_liefu","XS_fuyuan"],[]],
					"XS_boertie":["female","qun",3,["XS_zhuanglian","XS_xinyue"],[]],
					"XS_dugujialuo":["female","qun",3,["XS_dashi","XS_shanchong"],[]],
					"XS_chairong":["male","qun",4,["XS_tuojiang","XS_tuojiang1","XS_dingtu"],[]],
					"XS_murongke":["male","qun",3,["XS_enxin","XS_xujin"],[]],
					"XS_liuchesp":["male","shen",4,["XS_yangbian","XS_guquan"],[]],
					"XS_muguiying":["female","wu",4,["XS_pozhen","XS_lingshuai"],[]],
					"XS_zhuyingtai":["female","shu",3,["XS_siyou","XS_huadie"],[]],
					"XS_liangshanbo":["male","shu",4,["XS_youbu","XS_huadie"],[]],
					"XS_liyuanba":["male","wei",8,["XS_lieyong","XS_tiandou"],[]],
					"XS_zhuyuanzhangsp":["male","shen",4,["XS_zhangju","XS_tianhuo"],[]],
					"XS_wuyuan":["male","wu","3/4",["XS_nishi","XS_nufa"],[]],
					"XS_helv":["male","wu",4,["XS_shoulue","XS_zhiyuan"],[]],
					"XS_miao":["male","wu",3,["XS_xunli","XS_mingjie"],[]],
					"XS_milv":["male","wu",4,["XS_xiongming","XS_hengding"],[]],
					"XS_yingzhengsp":["male","shen",4,["XS_xiaofeng","XS_tongwen"],[]],
					"XS_xianzhen1":["male","shu",4,["XS_guizhan","XS_xunyi"],[]],
					"XS_jichonger":["male","shu","3/5",["XS_liuli","XS_tuibi"],[]],
					"XS_jiangxi":["male","wei",3,["XS_wugu","XS_qimin"],[]],
					"XS_yingrenhao":["male","wei",4,["XS_qiuxian","XS_weifu"],[]],
					"XS_tiemuzhensp":["male","shen",4,["XS_jianlu","XS_chenlue"],[]],
					"XS_weishuyu":["male","qun",3,["XS_yongjian","XS_gusai"],[]],
					"XS_suchuo":["male","qun",3,["XS_liuzheng","XS_nigao"],[]],
					"XS_yuwenyong":["male","qun",4,["XS_xuanshi","XS_guiquan"],[]],
					"XS_yuwentai":["male","qun",4,["XS_weilue","XS_jucai"],[]],
					"XS_xiangjisp":["male","shen","4/6",["XS_shenwei","XS_sidi"],[]],
					"XS_liubangsp":["male","shen","3/4",["XS_duoqi","XS_tuotu"],[]],
					"XS_lishiminsp":["male","shen",4,["XS_xuanqi","XS_tongding"],[]],
					"XS_xianying":["female","wu",3,["XS_fuman","XS_shiwu"],[]],
					"XS_wumingche":["male","wu",4,["XS_changlue","XS_congliu"],[]],
					"XS_xiaomohe":["male","wu",5,["XS_guyong","XS_qianzhen"],[]],
					"XS_chenbaxian":["male","wu",4,["XS_jueji","XS_mixia"],[]],
					"XS_yangyin":["male","qun",3,["XS_weibang","XS_renyong"],[]],
					"XS_duanshao":["male","qun",4,["XS_jiangjie","XS_shenlue"],[]],
					"XS_hulvguang":["male","qun",4,["XS_lingrui","XS_binglie"],[]],
					"XS_louzhaojun":["female","qun",3,["XS_cihui","XS_bishi1"],[]],
					"XS_gaoaocao":["male","qun",5,["XS_danli","XS_shenwu"],[]],
					"XS_gaosu":["male","qun",4,["XS_xiuluo","XS_chuangzhen"],[]],
					"XS_gaoyang":["male","qun",4,["XS_zhengguo","XS_lingnue"],[]],
					"XS_gaohuan":["male","qun",4,["XS_yushi","XS_moubian","XS_lancai"],['zhu']],
					"XS_xielingyun":["male","qun",3,["XS_wangqing","XS_doucai"],[]],
					"XS_jiayi":["male","shu",3,["XS_guolun","XS_zhiyong"],[]],
					"XS_xinqiji":["male","wu",4,["XS_xionghao","XS_zhuanghuai"],[]],
					"XS_dufu":["male","wei",3,["XS_chendun","XS_moshi"],[]],
					"XS_yangxiong":["male","shu",3,["XS_baishou","XS_xuanjing"],[]],
					"XS_taoyuanming":["male","qun",3,["XS_guiyin","XS_youran"],[]],
					"XS_sushi":["male","wu",3,["XS_bocai","XS_tongda"],[]],
					"XS_libai":["male","wei",4,["XS_zhexian","XS_jiushi"],[]],
					"XS_yiyin":["male","qun","3/5",["XS_dingzhi","XS_tiaohe"],[]],
					"XS_chengtang":["male","qun",4,["XS_shiren","XS_jianyu"],[]],
					"XS_jidan":["male","qun",3,["XS_zhili","XS_buding"],[]],
					"XS_jifa":["male","qun",4,["XS_guanbing","XS_zhengtao"],[]],
					"XS_jichang":["male","qun",3,["XS_erxian","XS_yanyi"],[]],
					"XS_dixin":["male","wei",4,["XS_duwu","XS_feide"],[]],
					"XS_liukun":["male","wu",4,["XS_zhixiao1","XS_daidan"],[]],
					"XS_huanwen":["male","wu",4,["XS_lianzheng","XS_kuiding"],[]],
					"XS_wangdao":["male","wu",3,["XS_tiche","XS_chouwang"],[]],
					"XS_simarui":["male","wu","3/4",["XS_nandu","XS_bingsheng","XS_pianyu"],['zhu']],
					"XS_zuti":["male","wu",4,["XS_huaizhi","XS_qiwu"],[]],
					"XS_dongzhongshu":["male","shu",3,["XS_bachu","XS_duzun"],[]],
					"XS_zhangqian":["male","shu","3/4",["XS_zaokong","XS_chijie"],[]],
					"XS_liling":["male","shu",4,["XS_juemo","XS_zhaxiang"],[]],
					"XS_zhuowenjun":["female","shu",3,["XS_qinyin","XS_zhongchang"],[]],
					"XS_xiangru":["male","shu",3,["XS_xianfu","XS_qiuhuang"],[]],
					"XS_dongfangshuo":["male","shu",3,["XS_cifu","XS_huixie"],[]],
					"XS_zhufuyan":["male","shu",3,["XS_tuien","XS_lianshu"],[]],
					"XS_shangguanwaner":["female","wei",3,["XS_mifeng","XS_chengliang"],[]],
					"XS_huamulan":["female","wei",4,["XS_congzheng","XS_pushuo"],[]],
					"XS_banzhao":["female","shu",3,["XS_caisi","XS_xushu"],[]],
					"XS_dengsui":["female","shu",4,["XS_enshi","XS_xingmie"],[]],
					"XS_zhaofeiyan":["female","shu",3,["XS_qingwu","XS_jubu"],[]],
					"XS_hongfunv":["female","wei",3,['XS_huiyan','XS_chuchen','XS_hongfu','XS_choosegroup'],[]],
					"XS_daji":["female","wei",3,["XS_luanxing","XS_humei"],[]],
					"XS_jiangshang":["male","qun",3,["XS_tiandao","XS_yingxu"],[]],
					"XS_fangla":["male","wu",3,["XS_jilun","XS_tiandie"],[]],
					"XS_songjiang":["male","wu",4,["XS_shucai","XS_juyi"],[]],
					"XS_lizicheng":["male","qun",4,["XS_mengchuang","XS_juntian"],[]],
					"XS_huangchao":["male","qun",3,["XS_baihua","XS_dufang"],[]],
					"XS_wuguang":["male","qun",3,["XS_yongwang","XS_juji"],[]],
					"XS_chensheng":["male","qun",4,["XS_shouyi","XS_liaoyuan"],[]],
					"XS_liguangbi":["male","wei",4,["XS_zhenghe1","XS_qisheng"],[]],
					"XS_guoziyi":["male","wei",4,["XS_zhechong","XS_zaizao"],[]],
					"XS_shisiming":["male","wei",4,["XS_hanhu","XS_niluan"],[]],
					"XS_anlushan":["male","wei",8,["XS_chixiao","XS_hanni","XS_yuhe"],[]],
					"XS_yangyuhuan":["female","wei",3,["XS_zuijiu","XS_boxing"],[]],
					"XS_lilongji":["male","wei",4,["XS_tianwei","XS_shengshuai"],[]],
					"XS_yurang":["male","wu",3,["XS_xiachang","XS_sijie"],[]],
					"XS_niezheng":["male","wu",4,["XS_tongyi1","XS_guanri"],[]],
					"XS_gaojianli":["male","shu",3,["XS_sizhi","XS_zhuge"],[]],
					"XS_jingke":["male","shu",4,["XS_xiantu","XS_juebi"],[]],
					"XS_yangguang":["male","qun",4,["XS_baolian","XS_qiongyu"],[]],
					"XS_huanxuan":["male","qun",3,["XS_zisui","XS_haogong"],[]],
					"XS_zhaogao":["male","wei",3,["XS_zhilu","XS_gaizhao"],[]],
					"XS_laijunchen":["male","wei",4,["XS_luozhi","XS_xingyu"],[]],
					"XS_qinhui":["male","wu",3,["XS_xuyou","XS_xianyi"],[]],
					"XS_yansong":["male","wu",4,["XS_fujin","XS_zhuanshan"],[]],
					"XS_tianrangju":["male","qun",4,["XS_weiditrj","XS_yanfa"],[]],
					"XS_zhusheng":["male","wu","3/4",["XS_guangji","XS_huanwang"],[]],
					"XS_caobin":["male","wu",4,["XS_diding","XS_qingshen"],[]],
					"XS_jibu":["male","wu",4,["XS_buqu","XS_shounuo"],[]],
					"XS_zhangtang":["male","shu",3,["XS_xingxun","XS_chenqu","XS_kuli"],[]],
					"XS_zhoubo":["male","shu",4,["XS_kuangan","XS_xiancheng"],[]],
					"XS_dengqiang":["male","qun",4,["XS_huimao","XS_zongqin"],[]],
					"XS_liudaogui":["male","shu",3,["XS_quanzhen","XS_yuping"],[]],
					"XS_yangdayan":["male","wei",5,["XS_yaowei","XS_furen"],[]],
					"XS_direnjie":["male","wei",3,["XS_shenduan","XS_fupi"],[]],
					"XS_wuzhao":["female","wei","3/4",["XS_mingcha","XS_qushen","XS_bacai"],['zhu']],
					"XS_boershu":["male","qun",4,["XS_yuanxing","XS_qiexue"],[]],
					"XS_cuihong":["male","wei",3,["XS_zongji","XS_lishi"],[]],
					"XS_tuobagui":["male","wei",4,["XS_jifen","XS_fangnan"],[]],
					"XS_cuihao":["male","wei",3,["XS_mingjian","XS_yuanmou"],[]],
					"XS_tuobatao":["male","wei",4,["XS_jiandang","XS_zhufo","XS_kexing"],['zhu']],
					"XS_zhenghe":["male","wu",4,["XS_polang","XS_xuanwei"],[]],
					"XS_panmei":["male","wu",4,["XS_zhuoyan","XS_fenzi"],[]],
					"XS_hanqinhu":["male","qun",4,["XS_lunbing","XS_zhenggong"],[]],
					"XS_wangben":["male","wei",4,["XS_qiangbing","XS_qigong"],[]],
					"XS_simacuo":["male","wei",4,["XS_zuozhan","XS_gongfa"],[]],
					"XS_zhangsunsheng":["male","qun",4,["XS_yushe","XS_zhiyi"],[]],
					"XS_zhangsun":["female","wei",3,["XS_yujin","XS_muyi"],[]],
					"XS_zhangsunwuji":["male","wei",3,["XS_tonggu","XS_jianfa"],[]],
					"XS_liumuzhi":["male","shu",3,["XS_zhiyu","XS_duanxing"],[]],
					"XS_xiehui":["male","shu",3,["XS_mouji","XS_feili"],[]],
					"XS_tandaoji":["male","shu",4,["XS_jice","XS_chousha"],[]],
					"XS_liuyu":["male","shu",4,["XS_queyue","XS_qitun","XS_daixing"],['zhu']],
					"XS_wanganshi":["male","wu",3,["XS_tubian","XS_suwen"],[]],
					"XS_zongze":["male","wu",4,["XS_yilv","XS_yizhize"],[]],
					"XS_yaoguangxiao":["male","wu",3,["XS_quluan","XS_xueci"],[]],
					"XS_zhudi":["male","wu",4,["XS_zhulie","XS_jingnan","XS_shengwei"],['zhu']],
					"XS_peixingjian":["male","wei",4,["XS_yangxing","XS_chuanlie"],[]],
					"XS_shiwansui":["male","qun","4/6",["XS_fenwei","XS_chijing"],[]],
					"XS_gaojiong":["male","qun",3,["XS_quchi","XS_fenjian"],[]],
					"XS_yangjian":["male","qun",4,["XS_kejian","XS_qingya","XS_xianzheng"],['zhu']],
					"XS_wangxizhi":["male","wu",3,["XS_shusheng","XS_huihao"],[]],
					"XS_zhaopu":["male","wu",3,["XS_jinglue","XS_simou"],[]],
					"XS_caoshen":["male","shu",4,["XS_zhanye","XS_hedao"],[]],
					"XS_lvbuwei":["male","wei","3/5",["XS_juqi","XS_chenfu"],[]],
					"XS_muhuali":["male","qun","4/5",["XS_bishi","XS_hengge"],[]],
					"XS_bizaiyu":["male","wu",4,["XS_xiandeng","XS_yongjiang"],[]],
					"XS_weiwuji":["male","shu",4,["XS_wanwei"],[]],
					"XS_chuliji":["male","wei",3,["XS_kanyu","XS_zhinang"],[]],
					"XS_mengke":["male","qun",3,["XS_xingshan","XS_quyi"],[]],
					"XS_lanyu":["male","wu",4,["XS_jichi","XS_jugong"],[]],
					"XS_zhangheng":["male","shu",3,["XS_jingtian","XS_weidi"],[]],
					"XS_yangsu":["male","qun",4,["XS_qiaobianys","XS_bingji"],[]],
					"XS_huishi":["male","qun",3,["XS_tongyi","XS_fanlun"],[]],
					"XS_longju":["male","wu",4,["XS_mengjin","XS_zhuiji"],[]],
					"XS_liyiji":["male","shu",3,["XS_youshui","XS_kuangke"],[]],
					"XS_liurengui":["male","wei",4,["XS_huoji","XS_jieyong"],[]],
					"XS_lijing":["male","wei",4,["XS_benxi","XS_baijiang"],[]],
					"XS_nanzi":["female","qun",4,["XS_huoluan","XS_beiqi"],[]],
					"XS_qinliangyu":["female","wu",4,["XS_pingluan","XS_nizhan"],[]],
					"XS_lvzhi":["female","shu",3,["XS_duji","XS_xumou"],[]],
					"XS_mibazi":["female","wei",3,["XS_daizheng","XS_tuiyin"],[]],
					"XS_weiliao":["male","wei",3,["XS_xiangmian","XS_wujing"],[]],
					"XS_mayuan":["male","shu",4,["XS_duanshui","XS_guoshi"],[]],
					"XS_yudayou":["male","wu",4,["XS_baizhan","XS_gangrou"],[]],
					"XS_goujian":["male","qun",4,["XS_yinren","XS_qiying"],[]],
					"XS_licunxu":["male","wei",4,["XS_jianshi","XS_jingong1"],[]],
					"XS_sanghongyang":["male","shu",3,["XS_zhengshui","XS_xinsuan"],[]],
					"XS_wentianxiang":["male","wu","2/3",["XS_zhengqi","XS_danxin"],[]],
					"XS_dukang":["male","wei",3,["XS_jiusheng","XS_chunniang","XS_wangyou"],[]],
					"XS_hanshizhong":["male","wu",4,["XS_jiejiang","XS_liqi"],[]],
					"XS_zhangjuzheng":["male","wu",3,["XS_chuangge","XS_fuqing"],[]],
					"XS_yuqian":["male","wu","3/4",["XS_shuwei","XS_lianjian"],[]],
					"XS_simaguang":["male","wu",3,["XS_tongjian","XS_gufa"],[]],
					"XS_yuxu":["male","shu",3,["XS_zengzao","XS_liaodi"],[]],
					"XS_yangyouji":["male","qun",4,["XS_chuanyang","XS_tujin"],[]],
					"XS_yingbu":["male","wu",5,["XS_xingkun","XS_liyongyb"],[]],
					"XS_duruhui":["male","wei",3,["XS_mouduan","XS_hongliang"],[]],
					"XS_wangshouren":["male","wu","3/6",["XS_zhixing"],[]],
					"XS_xuewen":["male","qun",3,["XS_pincai","XS_sanku"],[]],
					"XS_banchao":["male","shu",4,["XS_dingyuan","XS_pingrong"],[]],
					"XS_sulie":["male","wei",4,["XS_zhenyi","XS_qinwang"],[]],
					"XS_yinlihua":["female","shu",3,["XS_tanli","XS_qianjie"],[]],
					"XS_xiexuan":["male","wu",4,["XS_poshi","XS_fubing"],[]],
					"XS_fanju":["male","wei",3,["XS_yuanjiao","XS_jingong"],[]],
					"XS_chenqingzhi":["male","qun",2,["XS_lizhan","XS_baipao"],[]],
					"XS_menggong":["male","wu",4,["XS_gongshu","XS_qingtian"],[]],
					"XS_fankuai":["male","shu",4,["XS_yinzhi","XS_jiuyi"],[]],
					"XS_liji":["male","wei",4,["XS_tuishang","XS_pingliao"],[]],
					"XS_zhanghao":["male","qun",4,["XS_yejian","XS_pingbu"],[]],
					"XS_gengyan":["male","shu",4,["XS_shijing","XS_qiaozhan"],[]],
					"XS_fusu":["male","wei",4,["XS_renhou","XS_sisheng","XS_xinshi"],['zhu']],
					"XS_jiangxiaobai":["male","qun",4,["XS_shouba","XS_chuizhi","XS_shixian"],['zhu']],
					"XS_fanzeng":["male","wu",3,["XS_qudou","XS_laomou"],[]],
					"XS_weizhe":["male","shu",3,["XS_shicheng","XS_shouye","XS_huashi"],[]],
					"XS_murongchui":["male","qun",4,["XS_yonglue","XS_xiongao"],[]],
					"XS_yelvchucai":["male","qun",3,["XS_fubi","XS_kuangzuo"],[]],
					"XS_changyuchun":["male","wu",4,["XS_aozhan","XS_hengxing"],[]],
					"XS_mengtian":["male","wei",4,["XS_jihu","XS_zhucheng"],[]],
					"XS_weizifu":["female","shu",3,["XS_yinxian","XS_jiezhong"],[]],
					"XS_lixiaogong":["male","wei",4,["XS_xidi","XS_zuoyou"],[]],
					"XS_lianghongyu":["female","wu",4,["XS_feizhao","XS_zhigu"],[]],
					"XS_yumeiren":["female","wu",3,["XS_wujian","XS_juebie"],[]],
					"XS_wangzhaojun":["female","shu",3,["XS_chusai","XS_jingbing"],[]],
					"XS_baiqi":["male","wei",4,["XS_zhanshen","XS_gonggao"],[]],
					"XS_wuqi":["male","wei",3,["XS_xianji","XS_yingbian"],[]],
					"XS_lianpo":["male","shu",4,["XS_jianbi","XS_laoyi"],[]],
					"XS_hanxin":["male","shu",4,["XS_dianbing","XS_andu"],[]],
					"XS_xiangji":["male","wu",5,["XS_bawang","XS_pofu","XS_baowei"],['zhu']],
					"XS_yuefei":["male","wu",4,["XS_shenjiang","XS_lianbing"],[]],
					"XS_qinqiong":["male","wei",4,["XS_ciqiu","XS_fenyong"],[]],
					"XS_yingzheng":["male","wei",4,["XS_bingtun","XS_hengzheng","XS_fadu"],['zhu']],
					"XS_lishimin":["male","wei",4,["XS_tianming","XS_xuhuai","XS_yingduan"],['zhu']],
					"XS_sunbin":["male","qun",3,["XS_xushi","XS_jianzao"],[]],
					"XS_tiandan":["male","qun",4,["XS_huoniu","XS_jijue"],[]],
					"XS_yueyi":["male","shu",4,["XS_pozhu","XS_gongxin"],[]],
					"XS_huoqubing":["male","shu",4,["XS_guanjun","XS_changqu"],[]],
					"XS_gongshuban":["male","qun",3,["XS_faming","XS_jiqiao"],[]],
					"XS_yangzaixing":["male","wu",4,["XS_xuezhan","XS_xiaoyong"],[]],
					"XS_modi":["male","qun",3,[,"XS_moxin","XS_moshou"],[]],
					"XS_zhuanzhu":["male","wu",4,["XS_yuchang","XS_cuidu"],[]],
					"XS_fanli":["male","qun",3,["XS_shangcai","XS_zhouyin"],[]],
					"XS_zhuyuanzhang":["male","wu",4,["XS_weiya","XS_yanshi","XS_sutan"],['zhu']],
					"XS_shangyang":["male","wei",4,["XS_bianfa","XS_yizhi"],[]],
					"XS_liubang":["male","shu",4,["XS_weijia","XS_jianyi","XS_enwei"],['zhu']],
					"XS_chenping":["male","shu",3,["XS_qice","XS_diaohu"],[]],
					"XS_kongqiu":["male","qun",3,["XS_zhisheng","XS_renli"],[]],
					"XS_lier":["male","qun",3,["XS_huahu","XS_shangshan"],[]],
					"XS_quping":["male","shu",3,["XS_fusao","XS_youfen"],[]],
					"XS_sunwu":["male","wu",3,["XS_modang","XS_zhijun"],[]],
					"XS_liguang":["male","shu",4,["XS_feijiang","XS_mocu"],[]],
					"XS_limu":["male","shu",4,["XS_youdi","XS_lianque"],[]],
					"XS_zhangliang":["male","shu",3,["XS_mousheng","XS_dushan"],[]],
					"XS_limi":["male","wei",3,["XS_guicai","XS_fangyuan"],[]],
					"XS_suqin":["male","qun",3,["XS_hezong","XS_sijian"],[]],
					"XS_zhangyixs":["male","wei",3,["XS_lianheng","XS_kuolun"],[]],
					"XS_licunxiao":["male","wei",5,["XS_mengzhe","XS_henglian"],[]],
					"XS_liuji":["male","wu",3,["XS_bugua","XS_xiuli"],[]],
					"XS_xiaohe":["male","shu",3,["XS_houqin","XS_shicai"],[]],
					"XS_wangjian":["male","wei",4,["XS_poguo","XS_suoci"],[]],
					"XS_tiemuzhen":["male","qun",4,["XS_tianjiao","XS_yingong","XS_lungong"],['zhu']],
					"XS_zhaokuangyin":["male","wu",4,["XS_renzheng","XS_shiquan","XS_bingbian"],['zhu']],
					"XS_fujian":["male","qun",3,["XS_shengxi","XS_renxian","XS_chuijiang"],['zhu']],
					"XS_xueli":["male","wei",4,["XS_shenjian","XS_weizhen"],[]],
					"XS_ouyezi":["male","wu",3,["XS_zhujian","XS_jujiang","XS_jinggong"],[]],
					"XS_ranmin":["male","wei","4/5",["XS_doushen","XS_yongjue"],[]],
					"XS_qijiguang":["male","wu",4,["XS_kedi","XS_yuanyang"],[]],
					"XS_liuxiu":["male","shu",4,["XS_tianzhao","XS_xinglue","XS_yuxia"],['zhu']],
					"XS_guanyiwu":["male","qun",3,["XS_kuangshi","XS_zhijiao"],[]],
					"XS_wangxu":["male","qun",3,["XS_zongheng","XS_baihe","XS_xiushen"],[]],
					"XS_hanfei":["male","wei",3,["XS_falun","XS_gufen"],[]],
					"XS_lishizhen":["male","wu",3,["XS_bencao","XS_quji"],[]],
					"XS_linxiangru":["male","shu",3,["XS_lunke","XS_xianghe"],[]],
					"XS_xuda":["male","wu",4,["XS_zhulu","XS_lingzhi"],[]],
					"XS_weirui":["male","qun",3,["XS_shenhuo","XS_wohu"],[]],
					"XS_xiean":["male","wu",3,["XS_wangmen","XS_jiebing"],[]],
					"XS_wangmeng":["male","qun",3,["XS_wangzuo","XS_jindao"],[]],
					"XS_fangqiao":["male","wei",3,["XS_shanmou","XS_yunchou"],[]],
					"XS_weiqing":["male","shu",4,["XS_quzhu","XS_yangzhan"],[]],
					"XS_yuchigong":["male","wei",4,["XS_yongguan","XS_duoshuo"],[]],
					"XS_simaqian":["male","shu",3,["XS_zhushi","XS_zhishu"],[]],
					"XS_xishi":["female","qun",3,["XS_huoxin","XS_luanmou"],[]],
					"XS_mengjiangnv":["female","wei",4,["XS_tongku","XS_bengcheng"],[]],
					"XS_subutai":["male","qun",4,["XS_gongao","XS_bingfeng"],[]],
					"XS_yueyun":["male","wu",4,["XS_xiaoqi","XS_canggong"],[]],
					"XS_liuche":["male","shu",4,["XS_xiongcai","XS_guhuo","XS_zuiji"],['zhu']],
					"XS_zhangjizhongjing":["male","shu",3,["XS_yisheng","XS_binglun"],[]],
					"XS_lisi":["male","wei",3,["XS_jianzhu","XS_fenshu"],[]],
				},
characterSort:{
	XSYG:{
		XS_sdmw:["XS_jiangxiaobaisp","XS_yingzhengsp","XS_liubangsp","XS_xiangjisp","XS_liuchesp","XS_lishiminsp","XS_zhuyuanzhangsp","XS_tiemuzhensp"],
		XS_gsws:["XS_baiqisp","XS_hanxinsp","XS_yuefeisp","XS_lijingsp","XS_wangmengsp","XS_guanyiwusp"],
		XS_shsd:["XS_jiangshang","XS_daji","XS_dixin","XS_jichang","XS_jifa","XS_jidan","XS_chengtang","XS_yiyin","XS_siyu","XS_nvjiao","XS_qifangxun","XS_guichonghua","XS_jixuanyuan","XS_leizu","XS_jigaoyang","XS_jijun"],
		XS_xqwl:["XS_linxiangru","XS_lianpo","XS_limu","XS_yueyi","XS_jiangxiaobai","XS_suqin","XS_tiandan","XS_sunbin","XS_guanyiwu","XS_fanli","XS_xishi","XS_xuewen","XS_yangyouji","XS_dukang","XS_goujian","XS_nanzi","XS_weiwuji","XS_yingrenhao","XS_jiangxi","XS_jichonger","XS_xianzhen1","XS_milv","XS_miao","XS_helv","XS_wuyuan","XS_baoshuya"],
		XS_qslh:["XS_lisi","XS_yingzheng","XS_fusu","XS_baiqi","XS_mengtian","XS_fanju","XS_wangjian","XS_zhangyixs","XS_shangyang","XS_weiliao","XS_mibazi","XS_chuliji","XS_lvbuwei","XS_simacuo","XS_wangben"],
		XS_chzb:["XS_liubang","XS_zhangliang","XS_xiaohe","XS_hanxin","XS_chenping","XS_fankuai","XS_xiangji","XS_yumeiren","XS_fanzeng","XS_yingbu","XS_lvzhi","XS_liyiji","XS_longju","XS_caoshen","XS_zhoubo","XS_jibu"],
		XS_lhfy:["XS_liuche","XS_weiqing","XS_huoqubing","XS_simaqian","XS_liguang","XS_zhangjizhongjing","XS_weizifu","XS_liuxiu","XS_yinlihua","XS_gengyan","XS_wangzhaojun","XS_weizhe","XS_banchao","XS_yuxu","XS_sanghongyang","XS_mayuan","XS_zhangheng","XS_zhangtang","XS_zhaofeiyan","XS_dengsui","XS_banzhao","XS_zhufuyan","XS_dongfangshuo","XS_xiangru","XS_zhuowenjun","XS_liling","XS_zhangqian","XS_dongzhongshu","XS_zhouyafu","XS_lifuren","XS_suwu","XS_liuqi","XS_chaocuo"],
		XS_nbbl:["XS_weirui","XS_chenqingzhi","XS_liuyu","XS_tandaoji","XS_xiehui","XS_liumuzhi","XS_liudaogui","XS_yangdayan","XS_tuobatao","XS_cuihao","XS_tuobagui","XS_cuihong","XS_gaohuan","XS_gaoyang","XS_gaosu","XS_gaoaocao","XS_louzhaojun","XS_hulvguang","XS_duanshao","XS_yangyin","XS_chenbaxian","XS_xiaomohe","XS_wumingche","XS_xianying","XS_yuwentai","XS_yuwenyong","XS_suchuo","XS_weishuyu","XS_fengxiaolian","XS_huchonghua"],
		XS_ljfl:["XS_xiean","XS_xiexuan","XS_wangxizhi","XS_zuti","XS_simarui","XS_wangdao","XS_huanwen","XS_liukun"],
		XS_wbct:["XS_lishimin","XS_liji","XS_lijing","XS_fangqiao","XS_licunxiao","XS_xueli","XS_yuchigong","XS_lixiaogong","XS_limi","XS_sulie","XS_qinqiong","XS_duruhui","XS_licunxu","XS_liurengui","XS_peixingjian","XS_zhangsunwuji","XS_zhangsun","XS_wuzhao","XS_direnjie","XS_lilongji","XS_yangyuhuan","XS_guoziyi","XS_liguangbi","XS_shangguanwaner","XS_chengyaojin","XS_luoshixin","XS_taipinggongzhu"],
		XS_txqs:["XS_zhaokuangyin","XS_yuefei","XS_yueyun","XS_yangzaixing","XS_lianghongyu","XS_menggong","XS_simaguang","XS_hanshizhong","XS_wentianxiang","XS_bizaiyu","XS_zhaopu","XS_zongze","XS_wanganshi","XS_panmei","XS_caobin"],
		XS_dmfh:["XS_zhuyuanzhang","XS_liuji","XS_xuda","XS_changyuchun","XS_lishizhen","XS_qijiguang","XS_wangshouren","XS_yuqian","XS_zhangjuzheng","XS_yudayou","XS_qinliangyu","XS_lanyu","XS_zhudi","XS_yaoguangxiao","XS_zhenghe","XS_zhusheng","XS_yuanchonghuan","XS_zhengchenggong"],
		XS_zzbj:["XS_sunwu","XS_wuqi","XS_kongqiu","XS_lier","XS_modi","XS_wangxu","XS_ouyezi","XS_gongshuban","XS_quping","XS_hanfei","XS_huishi","XS_mengke","XS_tianrangju","XS_zhuangzhou","XS_xunkuang","XS_zouyan"],
		XS_hxrj:["XS_ranmin","XS_yangjian","XS_yangsu","XS_gaojiong","XS_shiwansui","XS_zhangsunsheng","XS_hanqinhu","XS_dugujialuo","XS_chairong"],
		XS_swjg:["XS_fujian","XS_murongchui","XS_wangmeng","XS_tiemuzhen","XS_subutai","XS_yelvchucai","XS_zhanghao","XS_muhuali","XS_boershu","XS_dengqiang","XS_boertie","XS_murongke"],
		XS_mmqg:["XS_yansong","XS_qinhui","XS_laijunchen","XS_zhaogao","XS_huanxuan","XS_yangguang","XS_anlushan","XS_shisiming","XS_weizhongxian"],
		XS_cklz:["XS_gaojianli","XS_jingke","XS_zhuanzhu","XS_niezheng","XS_yurang","XS_yaoli"],
		XS_jxwz:["XS_chensheng","XS_wuguang","XS_huangchao","XS_lizicheng","XS_songjiang","XS_fangla"],
		XS_wyqg:["XS_libai","XS_sushi","XS_taoyuanming","XS_yangxiong","XS_dufu","XS_xinqiji","XS_jiayi","XS_xielingyun","XS_liqingzhao"],
		XS_mysy:["XS_liyuanba","XS_muguiying","XS_liangshanbo","XS_zhuyingtai","XS_mengjiangnv","XS_hongfunv","XS_huamulan","XS_baozheng"],
	},
},

characterIntro:{
"XS_guanyiwusp":
"中国古代著名经济学家、哲学家、政治家、军事家。春秋时期法家代表人物，周穆王的后代。齐僖公三十三年，开始辅佐公子纠。齐桓公元年，得到鲍叔牙推荐，担任国相，辅佐齐桓公成为春秋五霸之首。对内大兴改革、富国强兵；对外尊王攘夷，九合诸侯，一匡天下，被尊称为“仲父”。齐桓公四十一年病逝。后人尊称为“管子”，誉为“法家先驱”“圣人之师”“华夏文明保护者”“华夏第一相”。",
"XS_chaocuo":
"西汉政治家、文学家。汉文帝时，任太常掌故，后历任太子舍人、博士、太子家令；景帝即位后，任为内史，后迁至御史大夫。晁错发展了“重农抑商”政策，主张纳粟受爵，增加农业生产，振兴经济；在抵御匈奴侵边问题上，提出“移民实边”的战略思想，建议募民充实边塞，积极备御匈奴攻掠；政治上，进言削藩，剥夺诸侯王的政治特权以巩固中央集权，损害了诸侯利益，以吴王刘濞为首的七国诸侯以“请诛晁错，以清君侧”为名，举兵反叛。景帝听从袁盎之计，腰斩晁错于东市。",
"XS_liuqi":
"西汉第六位皇帝，汉文帝刘恒嫡长子，母为孝文窦皇后窦氏。文帝后七年六月继位。在位期间继续推行与民休息、轻徭薄赋政策，社会经济得到进一步恢复和发展。田租由十五税一改为三十税一，此后成为汉朝定制。为加强中央集权，采纳晁错建议实行削藩。景帝前三年平定吴楚七国之乱。其后又令诸侯王不得治民，损黜其官制，王国官吏由皇帝任免。后世史家将其和文帝统治时期合称文景之治。",
"XS_taipinggongzhu":
"唐高宗李治与女皇帝武则天的小女儿，唐中宗李显和唐睿宗李旦的妹妹。麟德二年，出生于东都洛阳皇宫紫微城。体丰硕，方额广颐，极受父母兄长尤其是其母武则天的宠爱。颇多权略，权倾一时。仪凤年间，吐蕃要求与之和亲，因其母武则天拒绝而避免了和亲之事。先后出嫁薛绍和武攸暨，恩宠逾制，贵盛无比。神龙元年，因诛杀张易之、张昌宗兄弟有功，加号镇国太平公主，实封五千户。唐中宗去世后，联合李隆基发动唐隆政变，拥立唐睿宗复位。广树党羽，权倾朝野，财富如山。先天二年，涉嫌发动谋反，被唐玄宗李隆基发兵擒获，赐死于家中。",
"XS_baozheng":
"北宋名臣。天圣五年，包拯登进士第。累迁监察御史，曾建议练兵选将、充实边备。历任三司户部判官及京东、陕西、河北路转运使，后入朝担任三司户部副使，请求朝廷准许解盐通商买卖。因曾任天章阁待制、龙图阁直学士，故世称“包待制”、“包龙图”。嘉祐七年，包拯逝世，年六十四。包拯廉洁公正、立朝刚毅、不附权贵、铁面无私、英明决断、敢于替百姓申不平，故有“包青天”及“包公”之名，京师有“关节不到，有阎罗包老”之语。后世将他奉为神明崇拜，认为他是奎星转世，由于民间传其黑面形象，亦被称为“包青天”。",
"XS_jixuanyuan":
"CV：牛杂师傅黄帝，古部落联盟首领，五帝之首。黄帝被尊祀为“人文初祖”，黄帝的传说反映了春秋战国年间民族融合的现实诉求，为凝聚诸氏族部落为一个整合民族就需要追溯一个各民族所共同的始祖——“种族的偶像”，“黄帝”及其传说由此而来。在《山海经》里“黄帝”只是诸帝之一，直到春秋战国时期才被定于一尊。据说他是少典与附宝之子，本姓公孙，后改姬姓，也有说巳姓。名轩辕，一说名轩。建都于有熊，亦称有熊氏。也有人称之为“帝鸿氏”。史载黄帝因有土德之瑞，故号黄帝。黄帝在位期间，播百谷草木，大力发展生产，始制衣冠、建舟车、制音律、作《黄帝内经》等。",
"XS_wangmengsp":
"CV：牛杂师傅。前秦时期大臣、政治家、军事家。王猛出身贫寒，瑰姿俊伟。与东海王苻坚一见如故，出任丞相等职，册封清河郡侯，成为苻坚的股肱大臣。任职十八年，鞠躬尽瘁，综合儒法，选拔廉明，励精图治。政治上，抵制权贵，整肃吏治，强化中央集权。军事上，军纪严明，平定五公之乱，统兵攻占前燕都城，都督关东六州军事。经济上，劝课农桑，开放山泽，兴修水利，实现田畴开辟，仓库充实。执政期间，北方呈现小康景象。王猛于建元十一年六月病逝，享年五十一岁，追赠大将军、冀州牧，谥号为武，葬礼如西汉霍光故事。名列“唐朝武庙六十四将”、“宋朝武庙七十二将”。",
"XS_leizu":
"CV：唐倾歌。嫘祖，又名累祖，《山海经》中写作“雷祖”。中国远古时期人物。为西陵氏之女，轩辕黄帝的元妃。她发明了养蚕，史称嫘祖始蚕。出生于西陵。嫘祖生玄嚣、昌意二子(一说玄嚣生母为方雷氏女节)。玄嚣之子蟜极，蟜极之子为五帝之一的帝喾；昌意娶蜀山氏女为妻，生高阳，继承天下，这就是五帝之一的“颛顼帝”。",
"XS_jigaoyang":
"CV：白袖。黄帝之孙，昌意之子。上古部落联盟首领，“五帝”之一，人文始祖之一。颛顼不是远古时代具体的人物名称，而是部落首领名称。颛顼辅佐少昊有功，封地在高阳，故号高阳氏。少昊死后，打败争夺帝位的共工氏，成为部落联盟首领，号“高阳氏”。始都穷桑，后迁都商丘。颛顼去世后，由黄帝曾孙帝喾继位。在流传下来的神话传说中，颛顼是主管北方的天帝。《史记·五帝本纪》记载颛顼：“静渊以有谋，疏通而知事”。",
"XS_jijun":
"CV：剑寒。五帝之一。生于高辛，故号高辛氏。司马迁说他是黄帝的曾孙。姬俊5岁时受封为辛侯，15岁辅佐叔父颛顼，前2245年颛顼死后，时年30岁的姬俊继承帝位，成为天下共主，以亳为都城，以木德为帝，号高辛氏，当年改元为帝喾元年，深受百姓爱戴。享寿100岁；死后葬于故地高辛，建有帝喾陵。",
"XS_lijingsp":
"CV：九醉书生。隋末至初唐时期杰出的军事家。初仕隋朝，拜马邑郡丞。后转仕唐朝，随秦王李世民进击王世充。武德三年辅佐赵郡王李孝恭南平萧铣和辅公祏，并招抚岭南诸部。贞观三年以精骑三千夜袭定襄，使颉利可汗部惊溃，又奔袭阴山，一举灭亡东突厥。因功拜尚书右仆射，成为宰相，获封代国公。贞观十七年，列名“凌烟阁二十四功臣”。贞观二十三年，李靖病逝，终年七十九岁。册赠司徒、并州都督，谥号“景武”，陪葬昭陵。唐肃宗时配享武成王庙，位列十哲。晚唐以后逐渐被神化。后晋时追封“灵显王”，到南宋时累封为“辅世灵佑忠烈王”。",
"XS_suwu":
"CV：容返。西汉时期杰出的外交家，民族英雄。苏武在汉武帝时担任郎官。天汉元年，奉命以中郎将持节出使匈奴，被扣留。匈奴贵族多次威胁利诱，欲使其投降；后将他迁到北海边牧羊，扬言要公羊生子方可释放他回国。苏武历尽艰辛，留居匈奴十九年，持节不屈，至汉昭帝始元六年方获释归汉，拜典属国，禄中二千石。次年因卷入上官桀谋反案而被免官。元平元年参与拥立汉宣帝，受封关内侯，重新拜右曹典属国。神爵二年，苏武去世，享年八十余岁甘露三年，位列麒麟阁十一功臣之末。",
"XS_guichonghua":
"CV：白袖。舜，传说中父系氏族社会后期部落联盟领袖。轩辕黄帝八世孙，“三皇五帝”之一。舜为东夷族群的代表。生而重瞳，孝顺友爱，善于制陶。得到四岳推荐，经过重重考验，得到唐尧的认可与禅位，都于蒲阪，建立有虞国。即位之后，虚怀纳谏，惩罚奸佞，流放四凶；任贤使能，百业兴旺，开创了政通人和的局面，成为中原地区最强大的部落联盟首领。晚年听从四岳的安排和建议，禅位于大禹，乘车巡行天下，卒于苍梧郡，葬于九嶷山，谥号为舜，又称帝舜、虞舜、舜帝。舜帝文化精神之魂，可称为“德为先，重教化”，成为推动由野蛮走向文明的历史转捩时期的重要推手，成为中华文化三座里程碑之一。",
"XS_huchonghua":
"CV：唐倾歌。宣武灵皇后胡充华，本名胡仙真，安定临泾人。出身关西大族安定胡氏。临朝听政十三年，武艺高强，好射箭，爱登山。临朝听政初期，颇有政绩。后大肆崇佛、荒淫无节等，导致河阴之变，被沉入黄河溺死。《中国文艺词典》将其列为中国女词人，代表作《杨白花歌》。",
"XS_qifangxun":
"尧，又称唐尧。传说中父系氏族社会后期部落联盟领袖，帝喾之子。尧代帝挚为天子，都平阳。在万国争雄的乱世，他团结亲族，联合友邦，征讨四夷，统一了华夏诸族，被推举为部落万国联盟首领。帝尧在主政期间，派神箭手大羿射日，派鲧治水，并且制定历法，推广农耕，整饬百官。晚年，尧辟位，由舜继天子位。辟位二十八年后，尧病逝于雷泽，安葬于谷林，谥号为尧，被司马迁视为“最理想的君主”。",
"XS_yuefeisp":
"CV：白袖。南宋时期抗金名将、军事家、战略家、民族英雄、书法家、诗人，位列南宋“中兴四将”之首。岳飞是南宋杰出的统帅，他重视人民抗金力量，缔造了“连结河朔”之谋，主张黄河以北的民间抗金义军和宋军互相配合，以收复失地；治军赏罚分明，纪律严整，又能体恤部属，以身作则，率领的“岳家军”号称“冻死不拆屋，饿死不打掳”。金军有“撼山易，撼岳家军难”的评语，以示对岳家军的由衷敬佩。",
"XS_luoshixin":
"隋末唐初时期猛将。罗士信原为隋朝齐郡通守张须陀部将，随其征讨农民起义军，后归降瓦岗军，被授以总管之职，在与王世充交战时重伤被俘。后因不耻王世充，率部降唐，被拜为陕州道行军总管，枪刺王玄应，智取千金堡，随李世民平定洛阳，进封绛州总管、剡国公。武德五年，罗士信在洺水之战中城破被俘，被刘黑闼杀害，谥号勇，葬于北邙山。",
"XS_yaoli":
"春秋时期吴国人，生活在吴王阖闾时期。其父为职业刺客，要离为屠夫，后由于成功刺杀庆忌，为春秋时期著名刺客。生得身材瘦小，仅五尺余，腰围一束，形容丑陋，有万人之勇，是当时有名的击剑能手。足智多谋，以捕鱼为业，家住无锡鸿山山北。今无锡鸿山东有要潭河，西南角有要家墩，是要离捕鱼、晒网的地方。要离生平事迹主要记载于《吴越春秋》卷四《阖闾内传》。据《吴越春秋》所载，吴王阖闾在即位后第二年派遣要离刺杀庆忌。",
"XS_lifuren":
"CV：唐倾歌。汉武帝刘彻的宠妃。西汉著名音乐家李延年、贰师将军李广利之妹，李季之姐。李氏平民出身，父母兄弟均通音乐，都是以乐舞为职业的艺人。前112年前，由平阳公主推荐给汉武帝，获封夫人，深得汉武帝的宠幸，并为汉武帝生下儿子昌邑哀王刘髆。产后不久李夫人病死，因其有儿子，以王太后之礼安葬。前87年，卫子夫自杀四年后，汉武帝驾崩，李夫人配祭汉武帝宗庙，追加尊号为孝武皇后。",
"XS_fengxiaolian":
"CV：唐倾歌。北齐后主高纬的嫔妃，原是高纬的皇后穆邪利身边的侍女，穆邪利失宠后，将冯小怜进献给高纬，高纬封冯小怜为淑妃。冯小怜聪明灵巧，善弹琵琶，精于歌舞，深得高纬宠幸，与高纬坐时同席，出则同乘。高纬为冯小怜不顾晋州危急，陪她继续打猎；又为冯小怜造桥观战，对其宠爱至甚。后立冯小怜为左皇后。577年，北齐灭亡，冯小怜与高纬被周军押解到长安。同年，高纬被杀，冯小怜被北周武帝宇文邕赐给代王宇文达，很受宇文达宠爱。宇文达妃李氏，与冯小怜争宠，冯小怜中伤李氏，几乎将李氏害死。北周外戚杨坚杀害宇文达后，又把她赐给李氏的哥哥李询，李询的母亲知道冯小怜曾迫害过自己的女儿，就令她自杀而死。",
"XS_hanxinsp":
"CV：不问是非。汉朝西汉开国功臣、军事家，“汉初三杰”，“兵家四圣”，古代“军事思想“兵权谋家”的代表人物，后人奉为“兵仙”、“神帅”。刘邦兵败于彭城后，韩信先破楚军于京、索之间，后平定魏国，请命北伐拿下代国。刘邦收其精兵后，背水一战，击败赵国，派人降服燕国。支援刘邦以及清除项羽派往赵国的奇兵的同时平定剩下的赵国城邑。刘邦成皋兵败夺其精兵后，奉命攻打齐国，全歼龙且二十万楚军。韩信攻打楚国，项羽与刘邦签订鸿沟协议。刘邦听从张良、陈平计策，撕毁鸿沟协议，追击项羽失败。汉五年，带兵会师垓下，围歼楚军。",
"XS_liqingzhao":
"CV：唐倾歌。宋代女词人，婉约派代表，有“千古第一才女”之称。李清照出生于书香门第，早期生活优裕，其父李格非藏书甚富，她小时候就在良好的家庭环境中打下文学基础。出嫁后与丈夫赵明诚共同致力于书画金石的搜集整理。金兵入据中原时，流寓南方，境遇孤苦。所作词，前期多写其悠闲生活，后期多悲叹身世，情调感伤。形式上善用白描手法，自辟途径，语言清丽。论词强调协律，崇尚典雅，提出词“别是一家”之说，反对以作诗文之法作词。",
"XS_baoshuya":
"春秋时期齐国大臣，大夫鲍敬叔之子。早年交好管仲的交情，人称“管鲍之交”，支持公子小白师傅回国即位，是为齐桓公。知人善任，推荐挚友管仲为相。在鲍叔牙的协助下，管仲实行了治国之道，促进齐国迅速由乱转治，由弱变强。齐桓公三十年，参与“召陵之盟”，使得齐桓公成为“春秋五霸”之一。齐桓公四十一年，担任国相，病逝于任上。",
"XS_zhouyafu":
"西汉时期名将、丞相，太尉周勃的次子。汉文帝时，任河内守，封条侯。文帝后元六年任将军，驻军细柳营，防备匈奴。治军严谨，迁中尉。文帝临死时嘱咐太子，如即有缓急，周亚夫可任将兵。及汉景帝即位，为车骑将军。景帝前元三年，以太尉身份率军平定吴楚七国之乱。五年后，迁丞相。后因谏废栗太子刘荣等诸事触犯景帝，梁孝王又数言其短，致遭猜忌。后元元年，其子被人告发盗买官器。因受牵连，召诣廷尉，绝食五日，呕血而死。",
"XS_zouyan":
"CV：不问是非。阴阳家代表人物、五行创始人。著有《邹子》一书。提倡的主要学说是五行说、“五德终始说”和“大九州说”，又是稷下学宫著名学者，因他“尽言天事”，当时人们称他“谈天衍”，又称邹子。他活动的时代后于孟子，与公孙龙、鲁仲连是同时代人。",
"XS_baiqisp":
"CV：九醉书生。战国时期名将，杰出的军事家，“兵家”代表人物。熟知兵法，善于用兵，和穰侯魏冉的关系很好。辅佐秦昭王，屡立战功。伊阙之战，大破魏韩24万联军，彻底扫平秦军东进之路。伐楚之战，攻陷楚都郢城。长平之战，重创赵国主力。担任秦军主将30多年，攻城70余座，为秦国统一六国做出了巨大的贡献，受封为武安君。功高震主，得罪应侯，接连贬官。秦昭襄王五十年，赐死于杜邮。",
"XS_xunkuang":
"CV：蚩羽。战国末期著名的思想家、哲学家、教育家，儒家学派的代表人物，先秦时代百家争鸣的集大成者。荀子曾三次担任齐国稷下学宫的祭酒，两度出任楚兰陵令。晚年蛰居兰陵县著书立说，收徒授业，终老于斯，被称为“后圣”。荀子批判地接受并创造性地发展了儒家正统的思想和理论，主张“礼法并施”；提出“制天命而用之”的人定胜天的思想；反对鬼神迷信；提出性恶论，重视习俗和教育对人的影响，并强调学以致用；其思想集中反映在《荀子》一书中。",
"XS_nvjiao":
"CV：唐倾歌。女娇是上古时代传说中涂山氏族的一位女子，夏禹姒文帝的妃子，仪容秀美，生性娴雅，是当地有名的美女，生卒不详。禹即帝位后，曾两次会盟诸侯，所选的盟址一次是涂山，另一次则是在会稽山。禹之所以把第一次诸侯会盟大会的地址选在蚌埠怀远涂山，就有报答妻子部族的意思。",
"XS_zhuangzhou":
"CV：蚩羽。战国中期思想家、哲学家、文学家，庄学的创立者，道家学派代表人物，与老子并称“老庄”。庄子因崇尚自由而不应楚威王之聘，仅担任过宋国地方的漆园吏，史称“漆园傲吏”，被誉为地方官吏之楷模。他最早提出的“内圣外王”思想对儒家影响深远。他洞悉易理，指出“《易》以道阴阳”，其“三籁”思想与《易经》三才之道相合。其文想象丰富奇特，语言运用自如，灵活多变，能把微妙难言的哲理写得引人入胜，被称为“文学的哲学，哲学的文学”。其作品收录于《庄子》一书，代表作有《逍遥游》《齐物论》《养生主》等。",
"XS_siyu":
"CV：蚩羽。上古时期夏后氏首领、夏朝开国君王，历史治水名人，史称大禹、帝禹、神禹。黄帝的玄孙、颛顼的后代，鲧的儿子，母为有莘氏之女修己。相传，禹治理洪水有功，接受帝舜禅让，继承部落首领。在诸侯的拥戴下，正式即位，以阳城为都城，一说以平阳为都城，国号为夏，分封丹朱于唐国，分封商均于虞国。作为夏朝的第一位天子，后人称为夏禹，成为上古时代传说时代与伏羲、黄帝比肩的贤圣帝王。最卓著的功绩，就是历来被传颂的治理滔天洪水，又划定九州、奠定夏朝，后人尊称为大禹。",
"XS_jiangxiaobaisp":
"CV：蚩羽。春秋五霸之首，姜太公吕尚的第十二代孙，齐僖公第三子，母为卫姬。早年在鲍叔牙保护下，逃到莒国避难。在齐襄公和公孙无知相继死去后，抢先回国，夺取君位。任内励精图治，起用管仲为相，推行改革，实行军政合一、兵民合一的制度，促使齐国逐渐强盛。打出“尊王攘夷”的旗号，九合诸侯，平定宋国内乱，北击山戎，南伐楚国，灭掉谭、遂、鄣等小国，成为第一个中原霸主，受到周天子赏赐。",
"XS_weizhongxian":
"CV：九醉书生。明朝末期宦官。自宫后改姓名叫李进忠，由才人王氏复姓，出任秉笔太监后，改回原姓，皇帝赐名为魏忠贤。明熹宗时期，出任司礼秉笔太监，极受宠信，称为“九千九百岁”，排除异己，专断国政，以致人们“只知有忠贤，而不知有皇上”。朱由检继位后，打击惩治阉党，治魏忠贤十大罪，命逮捕法办，自缢而亡，其余党亦被肃清。",
"XS_yuanchonghuan":
"CV：不问是非。明末抗清名将，爱国将领。袁崇焕万历四十七年中进士，后督师蓟、辽，兼督登、莱、天津军务，多次击败后金军的进犯。在抗击清军的战争中先后取得宁远大捷、宁锦大捷，但因为不得魏忠贤欢心辞官回乡。明思宗朱由检即位后袁崇焕得以重新启用，于崇祯二年击退皇太极，解京师之围后，魏忠贤余党以“擅杀岛帅”、“与清廷议和”、“市米资敌”等罪名弹劾袁崇焕，皇太极又趁机实施反间计。崇祯三年八月，袁崇焕被朱由检认为与后金有密约而遭凌迟处死。",
"XS_zhengchenggong":
"CV：不问是非。明末清初军事家，抗清名将，民族英雄。1645年清军攻入江南，不久郑芝龙降清、田川氏在乱军中自尽；郑成功率领父亲旧部在中国东南沿海抗清，成为南明后期主要军事力量之一，一度由海路突袭、包围清江宁府，但终遭清军击退，只能凭借海战优势固守泉州府的海岛厦门、金门。1661年率军横渡台湾海峡，翌年击败荷兰东印度公司在台湾大员的驻军，收复台湾，开启郑氏在台湾的统治。",
"XS_chengyaojin":
"唐朝开国名将，凌烟阁二十四功臣之一。骁勇善战，善用马槊。武德初年，归降大唐，跟随秦王李世民，破宋金刚、擒窦建德、降王世充，屡立战功，册封宿国公，参与玄武门之变。唐太宗继位，历任泸州都督、左领军大将军、原州都督、蒋王府长史、幽州都督、左屯卫大将军，检加号镇军大将军，世袭普州刺史，改封卢国公，图形于凌烟阁。唐太宗驾崩，护卫皇太子李治回朝继位，迁辅国大将军、左卫大将军。出任葱山道行军大总管，讨伐阿史那贺鲁，兵败免官。",
"XS_boertie":
"元太祖成吉思汗的嫡皇后也是正宫皇后，年长一岁。居于第一汗尔敦，地位最高、最得敬重、最得宠、年迈后亦如此。铁木真19岁时，为救20岁的妻子孛儿帖打响人生第一场战争！宅心渊静，禀德柔嘉，聪慧贤明，辅佐成吉思汗奠定蒙古帝国基业。元世祖至元二年十二月，追谥光献翼圣皇后。",
"XS_dugujialuo":
"隋朝第一任皇后。十四岁，嫁给大将军杨忠嫡长子杨坚。父亲政争失败被杀，家道中落。对外低调谦恭，对内夫妻恩爱，育有十个儿女，辅助杨坚建功立业。隋朝开国后，册封皇后。通晓经史，信仰佛学，参预朝政，对于“开皇之治”功不可没，并称“二圣”。晚年主导罢黜宰相高颎、废黜太子杨勇，支持晋王杨广，引发史学界争议。仁寿二年，去世，时年五十九岁，追号“妙善菩萨”，安葬于泰陵，谥号为献，史称“文献皇后”。",
"XS_chairong":
"五代时期政治家，后周第二位皇帝。自少“器貌英奇”，擅长骑射，略通书史及黄老之术，且为人谨慎笃厚，因而被姑父郭威收为养子。显德元年，郭威驾崩，柴荣登基为帝，致力于统一大业，立下了“以十年开拓天下，十年养百姓，十年致太平”的壮志。在位期间后周政治清明、百姓富庶，中原地区经济开始复苏。对外南征北战，西败后蜀，收取秦、凤、成、阶四州；南摧南唐，尽得江北淮南十四州；北破辽国，连克三关三州。史家称赞其“神武雄略，乃一代之英主也”。显德六年，柴荣在商议攻取幽州时突发疾病，不久去世，年仅三十九岁。谥号睿武孝文皇帝，庙号世宗。 ",
"XS_murongke":
"十六国时期前燕宗室大臣、政治家、战略家。谨慎大度，谦恭仁和。十五岁开始掌握军队，多次以弱胜强，打败后赵和高句丽，稳固了慕容氏的辽东霸主的地位。面对石虎去世、中原大乱的时局，统兵入关，擒杀冉闵，攻城略地，将前燕辖境延伸到黄河以南地区。景昭帝慕容儁去世后，忠心辅佐幼主慕容暐，拜太宰，封太原王，行周公事。摄政期间，治国有方，威震邻邦。建熙八年去世，谥号为桓。一生光明磊落、大义凛然，备受历朝历代推崇，尊为十六国第一名将。",
"XS_liuchesp":
"CV：容返。西汉第七位皇帝，十六岁继承皇位。任内为加强中央集权，颁行推恩令，又制订左官律和附益法，严格禁止诸侯王参与政事。不拘一格录用人才，提拔有才能的士人为侍从，以备顾问。为解决财政困难，改革币制，禁止郡国铸钱，又实行盐铁官营、均输平准等制度。颁布算缗、告缗令，向商人征收重税。实行尊崇儒术的文化政策，设五经博士，在京师长安兴建太学，又令郡国皆立学官。自元朔二年起，派卫青、霍去病多次出击匈奴，迫其远徙漠北。命张骞岀使西域，沟通汉与西域各族联系。又征服闽越、东瓯、南越、卫氏朝鲜，经营西南夷，在其地设置郡县。",
"XS_muguiying":
"CV：唐倾歌。穆桂英是明代小说《北宋志传》、《杨家府演义》中虚构的人物。穆桂英原为穆柯寨穆羽之女，传说有黎山老母传授神箭飞刀之术。因阵前与杨宗保交战并将之生擒，与他成亲归于杨家将之列，为杨门女将中的杰出人物。穆桂英与杨家将一起征战沙场，屡建战功。佘太君百岁挂帅，率十二寡妇出征西夏，穆桂英中年犹挂先锋印，深入险境，力战番将，大获全胜，后又挂帅平南，是中国通俗文学中典型的巾帼英雄形象。",
"XS_zhuyingtai":
"CV：唐倾歌。东晋时期女性历史人物。自幼随习诗文，一心想往杭州访师求学，遭到祝员外拒绝。祝英台求学心切，便女扮男装，远去杭州求学。途中邂逅了赴杭求学的书生梁山伯，一见如故，相谈甚欢，在草桥亭上撮土为香，义结金兰。次日，二人来到杭州城的万松书院，拜师入学。从此，同窗共读，形影不离。祝父思女，催归甚急，祝英台只得仓促回乡，被迫许配给太守之子马文才。后来，梁山伯成为鄞县令，忧郁成疾，不治身亡，遗命葬于鄮城九龙墟。祝英台闻听噩耗，誓以身殉。出嫁之时，绕道前去梁山伯墓前祭奠。在祝英台哀恸感应下，风雨雷电大作，炸开坟墓，祝英台翩然跃入坟中。墓壤合拢，风停雨霁，彩虹高悬。梁祝化为蝴蝶，在人间蹁跹飞舞。",
"XS_liangshanbo":
"CV：牛杂师傅《梁祝》传说中的男主角，历史上考证确有其人，梁山伯曾出任过地方官，历代史书可以寻找到相关记载和资料。传说梁知祝为女人后，提娶不成而终，祝感其挚情，过墓而入，合而为一。是为传说大概，今人多有考证。梁山伯是浙江宁波府鄞县的县官，一辈子两袖清风，清正廉洁，没有孩子，到了中年的时候，他的结发妻子去世，后来他也因为疾病而死去。",
"XS_liyuanba":
"CV：不问是非。李元霸，历史原型是李玄霸，唐高祖李渊与窦皇后第三子。是古典小说《说唐》与评书《兴唐传》《瓦岗英雄》《隋唐演义传》中登场的虚拟人物。隋唐第一猛将，隋唐十八好汉之首，传说为金翅大鹏雕转世。面如病鬼，骨瘦如柴，两臂有四象不过之力，无人能敌。使一对铁锤，四百斤一个，共重八百斤。坐骑为“万里云”，日行一万，夜走八千。",
"XS_zhuyuanzhangsp":
"CV：蚩羽。明朝开国皇帝，年号“洪武”。朱元璋幼时贫穷，曾为地主放牛。至正四年入皇觉寺，云游四方，增长见闻。二十五岁参加郭子兴领导的红巾军，反抗元朝。至正十六年攻占集庆路，改名应天，其后陆续消灭陈友谅、张士诚等割据势力，并自称吴王。吴元年以“驱逐胡虏，恢复中华”为号召，派遣徐达、常遇春举兵北伐，以推翻元朝统治。洪武元年正月，即皇帝位于应天府，国号大明，年号洪武。同年秋攻占大都，结束了元朝在全国的统治。其后平定西南、西北、辽东等地，最终统一全国。",
"XS_wuyuan":
"CV：白袖。春秋末期吴国大夫、军事家。以封于申，也称申胥。伍子胥之父伍奢为楚平王子建太傅，因受费无极谗害，和其长子伍尚一同被楚平王杀害。伍子胥从楚国逃到吴国，成为吴王阖闾重臣，是姑苏城的营造者，至今苏州有胥门。公元前506年，伍子胥协同孙武带兵攻入楚都，伍子胥掘楚平王墓，鞭尸三百，以报父兄之仇。吴国倚重伍子胥等人之谋，西破强楚、北败徐、鲁、齐，成为诸侯一霸。",
"XS_helv":
"CV：白袖。春秋末期吴国君主，军事统帅。吴王僚二年，阖闾以夜袭之计败楚军，夺回所丧王舟“余皇”。吴王僚八年，佐吴王僚率军攻楚战略要地州来，大败楚军于鸡父，夺取州来。吴王僚十二年，吴王阖闾派专诸刺杀吴王僚，夺取吴国王位。吴王阖闾执政时期，以楚国旧臣伍子胥为相，以齐人孙武为将军，确定先破强楚，再服越国的争霸方略，采取分兵轮番击楚之策，频频攻楚于江淮之间大别山以东地区，使楚疲于奔命。吴王阖闾九年，吴军在孙武、伍子胥率领下，从淮水流域西攻到汉水，五战五胜，攻克楚国都城郢都，迫使楚昭王出逃。",
"XS_miao":
"春秋时期楚国令尹。距今2600多年前，淮河洪灾频发，孙叔敖主持治水，倾尽家资。历时三载，终于修筑了中国历史上第一座水利工程——芍陂，借淮河古道泄洪，筑陂塘灌溉农桑，造福淮河黎民。孙叔敖受楚庄王赏识，开始辅佐庄王治理国家。孙叔敖辅佐楚庄王施教导民，宽刑缓政，发展经济，政绩赫然，主张以民为本，止戈休武，休养生息，使农商并举，文化繁荣，翘楚中华。因出色的治水、治国、军事才能，孙叔敖后官拜令尹，辅佐庄王独霸南方，楚庄王成为春秋五霸之一。因积劳成疾，孙叔敖病逝他乡，年仅38岁。",
"XS_milv":
"春秋时期楚国国君，春秋五霸之一。楚穆王十二年，庄王熊旅即位，在复杂的形势下，他采取了以静观动、以感辨奸的对策，表现出沉湎于声色犬马、不问政事的状况。三年后，他对楚国的政局和各类人物有了一个基本的了解，攻灭了前来进犯的庸国，任用孙叔敖为令尹，重视社会生产，发展经济，充实国力。为了争当霸主，楚晋之间进行了长时间的战争，双方互有胜负，楚国在楚庄王十七年的邲之战中大获全胜。使楚国的声威大振，国势日强，而晋国在中小国中威信下降，失去了支配他们的能力。不久，楚庄王灭掉了萧国，又连续三年攻伐宋国，迫使宋国向楚求和。楚庄王饮马黄河，问鼎中原，实现了自己称霸的愿望。",
"XS_yingzhengsp":
"CV：九醉书生。中国古代杰出的政治家、战略家、改革家，首次完成中国大一统的政治人物，也是中国第一个称皇帝的君主。自前230年至前221年，先后灭韩、赵、魏、楚、燕、齐六国，完成了统一中国大业，建立起一个中央集权的统一的多民族国家——秦朝。公元前221年，秦统一六国之后，秦王嬴政认为自己“德兼三皇，功过五帝”，遂采用三皇之“皇”、五帝之“帝”构成“皇帝”的称号，是中国历史上第一个使用“皇帝”称号的君主，所以自称“始皇帝”。同时在中央实行三公九卿，管理国家大事；地方上废除分封制，代以郡县制；同时书同文，车同轨，统一货币、度量衡。对外北击匈奴，南征百越，修筑万里长城；修筑灵渠，沟通长江和珠江水系。",
"XS_xianzhen1":
"春秋时期晋国名将、军事家，因采邑在原邑，故又称原轸。先轸曾辅佐晋文公、晋襄公两位霸主，屡出奇策，并以中军主将的身份指挥城濮之战、崤之战，打败强大的楚国和秦国，成为中国历史上第一位同时拥有元帅头衔和元帅战绩的军事统帅。",
"XS_jichonger":
"春秋五霸中第二位霸主，与齐桓公并称“齐桓晋文”。晋文公初为公子，谦虚而好学，善于结交有才能的人。骊姬之乱时被迫流亡在外十九年，前636年春在秦穆公的支持下回晋杀晋怀公而立。晋文公在位期间任用狐偃、先轸、赵衰、贾佗、魏犨等人实行通商宽农、明贤良、赏功劳等政策，作三军六卿，使晋国国力大增。对外联合秦国和齐国伐曹攻卫、救宋服郑，平定周室子带之乱，受到周天子赏赐。公元前632年，在城濮之战以少胜多，大败楚军，并召集齐、宋等国于践土会盟，成为春秋五霸中第二位霸主，开创了晋国长达百年的霸业。公元前628年，重耳逝世。",
"XS_jiangxi":
"春秋时期著名政治家、思想家。百里奚本是虞国大夫。晋献公假途伐虢后，灭亡了虞国，俘获百里奚。作为秦穆公夫人的陪嫁奴隶送到秦国。百里奚逃离秦国，跑到楚国宛邑。秦穆公用五张黑羊皮从市井之中换回后，进入秦国成为大夫，人称“五羖大夫”。主持秦国国政期间，百里奚“谋无不当，举必有功”，辅佐秦穆公倡导文明教化，实行“重施于民”的政策，内修国政，外图霸业，开地千里，称霸西戎，统一西北地区，促进了秦国的崛起。",
"XS_yingrenhao":
"CV：牛杂师傅春秋时期政治家，“春秋五霸”之一。秦穆公元年，秦穆公正式继位，继位后任用百里奚、蹇叔为谋臣，励精图治，击败晋国，俘获晋惠公，灭亡梁国、芮国、滑国等。秦穆公二十三年，帮助晋怀公回国即位，秦穆公二十四年，帮助晋文公回国即位，实现秦晋之好。秦穆公三十三年，秦穆公派兵攻打中原，经历“崤之战”和“彭衙之战”的惨败，东进之路行不通。秦穆公三十七年，秦穆公向西发展，任用由余为谋士，逐渐灭掉戎人国家，受到周天子赏赐金鼓，继续攻打蜀国和关西的国家，开辟国土千里，被周襄王任命为“西方诸侯之伯”，称霸西戎，对秦国的发展和古代西部的民族融合都做出了一定的贡献。",
"XS_tiemuzhensp":
"CV：九醉书生。世界史上杰出的军事家、政治家。铁木真早年丧父，投奔克烈部首领脱里，积蓄实力，于1189年被推举为蒙古乞颜部可汗，随后经过一系列战争，统一蒙古高原诸部。1206年在斡难河源即皇帝位，建立大蒙古国。建国后，实行千户制，建立护卫军，颁布《大扎撒》。在此期间，多次发动对外战争，占领东亚金朝的大片领土，并灭亡西夏、西辽及中亚的花剌子模，其征服足迹远抵东欧的黑海海滨。",
"XS_weishuyu":
"CV：白袖。南北朝时期北魏、西魏、北周杰出的军事家、战略家。早年在北魏多次参与战事有功而昇迁，后为西魏宇文泰所重用，派他镇守东西外交界的军事要地玉璧，大统十二年东魏高欢率大军进攻包围玉璧，韦孝宽军力为劣势，但运用地形和战术守城，高欢运用各种战术攻城皆不克，东魏军围城五十馀天，兵力损失惨重，最后退兵，高欢回师后病死。玉璧之战为东、西魏实力消长的关键战之一，原本较弱小的西魏，经此战后粉碎东魏想要灭亡西魏的企图。北周建德六年北周武帝接受韦孝宽的建议，成功打败北齐，统一北方。北周大象二年，破尉迟迥于邺城。大象二年十一月二十七日（580年12月19日），韦孝宽在长安去世，享年七十二岁。",
"XS_suchuo":
"CV：白袖。南北朝时期西魏名臣，三国时曹魏侍中苏则九世孙，与从兄苏亮并称为“二苏”。苏绰年少即好学，博览群书，尤善算术，深得西魏权臣宇文泰信任。被宇文泰拜为大行台左丞，参与机密，助其改革制度。曾创制计账、户籍等法，精简冗员，设置屯田、乡官，增加国家赋税收入。累升大行台度支尚书兼司农卿，封美阳伯。大统十二年，苏绰因积劳成疾而病逝，时年四十九岁。周明帝二年，配享周太祖（宇文泰）庙庭。隋文帝开皇元年，追赠邳国公。",
"XS_yuwenyong":
"CV：白袖。南北朝时期北周第三位皇帝。宇文邕聪明有远识，性果决，有智谋，能断大事。武成二年四月，在宇文护的拥立下，即帝位。建德元年终于诛杀权相宇文护，独掌朝政。后继续推行均田制，改进和发展府兵制度，将府兵指挥权从中外都督诸军事府收回由皇帝掌握。建德五年十月，复领兵七路攻齐。建德六年正月，率军乘胜围邺，一举攻陷，俘北齐后主父子，灭亡北齐。宇文邕在位期间，摆脱鲜卑旧俗。整顿吏治，使北周政治清明，百姓生活安定，国势强盛。宇文邕生活俭朴，能够及时关心民间疾苦。宣政元年五月，周武帝率诸军伐突厥，五道俱进，因病诏停进军。六月，疾甚，还军长安，当月病逝，年仅三十六岁。谥号武帝，庙号高祖。",
"XS_yuwentai":
"南北朝时期杰出的军事家、改革家、政治家，西魏的实际掌权者，北周政权的奠基者。北魏末年，随父宇文肱加入鲜于修礼起义。起义被尔朱荣镇压后，成为贺拔岳麾下，出任夏州刺史。贺拔岳遇害后，宇文泰被推举为首领，率众攻灭侯莫陈悦、曹泥，统一关陇地区。永熙三年十二月，弑杀孝武帝元修。次年正月，拥立南阳王元宝炬为帝，建立西魏，定都长安。从此，宇文泰专制西魏朝局22年，期间，对内团结各方，澄清政治，建立府兵制，扩大兵源。形式上采取鲜卑八部制，设立八柱国。对外立足关陇，争战东魏，蚕食南梁。其亲自指挥的小关之战、沙苑之战，皆是以寡胜众的军史典范，奠定了北周一统北方及隋唐王朝强盛的基础。",
"XS_xiangjisp":
"CV：九醉书生。秦朝末年政治家、军事家。勇猛好武，跟随叔父项梁发动吴中起义，反抗秦朝。与汉王刘邦争夺天下，史称“楚汉之争“。自恃武力，刚愎自用，弑杀楚义帝，猜疑亚父范增，终为刘邦所败。汉五年，兵败于垓下，发生“霸王别姬“，自刎于乌江。作为中国军事思想“兵形势”的代表人物，项羽是一位以武力出众而闻名的武将。李晚芳评价项羽“羽之神勇，千古无二”。",
"XS_liubangsp":
"CV：蚩羽。中国历史上杰出的政治家、战略家和军事指挥家，汉朝开国皇帝，汉民族和汉文化的奠基者和开拓者。《汉书·高帝纪》记载刘邦祖先源流深远，起自陶唐，亦是晋国大夫士会的后代。刘邦这一代已成为平民，出身农家，豁达大度，不事生产。初仕秦朝，授沛县泗水亭长，后来释放刑徒，亡匿于芒砀山中。陈胜起义之后，集合三千子弟响应，攻占沛县，自称沛公，投奔名将项梁，任砀郡长，受封为武安侯，统领砀郡兵马。",
"XS_lishiminsp":
"CV：旅鸽。唐朝第二位皇帝，政治家、战略家、军事家、诗人。李世民少年从军，曾往雁门关解救隋炀帝。首倡晋阳起兵，拜右领军大都督，受封敦煌郡公，领兵攻破长安，拜尚书令、光禄大夫，受封秦国公、赵国公。唐朝建立后，领兵平定薛仁杲、刘武周、窦建德、王世充、刘黑闼等割据势力，为唐朝的建立与统一立下赫赫战功，拜天策上将，封秦王。",
"XS_xianying":
"南北朝时期高凉郡人，俚人首领，善于结识英雄豪杰，是中国南北朝时期的政治家、军事家、社会活动家。她率领族人归附隋朝被加封谯国夫人，去世后追谥“诚敬夫人”。她一生审时度势，顺应潮流，对朝廷的忠并非愚忠，她识时务，爱国爱民，因而深得后人敬重。也因此，她生前身后有多个封号。她历经梁、陈、隋三朝，顺应历史潮流，致力维护国家统一、促进民族团结，功勋卓著，先后被七朝君王敕封，被尊称为岭南“圣母”。《隋书》、《北史》、《资治通鉴》均为她立传。",
"XS_wumingche":
"南北朝时期陈朝名将。幼年丧父，本性至孝。侯景之乱时，分粮于邻居。承圣三年，结交陈霸先于京口，拜戎昭将军、安州刺史。绍泰元年，随从周文育征讨杜龛、张彪。永定元年，陈霸先称帝后，拜安南将军，随从侯安都征讨王琳，平定华皎叛乱，大败周梁联军，夺取西梁三郡，拜开府仪同三司，加侍中。太建五年，兴兵北伐，大败北齐军队，收复淮南之地，升任司空、车骑大将军、南兖州刺史，封南平郡公。太建九年，再度北伐，屡败北周将领梁士彦。因背疾发作，作战失利，为北周名将王轨所俘，北周宣帝礼遇有加，拜大将军，封怀德郡公。太建十年，忧愤成疾，卒于长安，享年六十七岁。",
"XS_xiaomohe":
"南期梁陈时期名将。侯景之乱后，追随侯安都征战，屡立战功，出任巴山太守。跟随名将吴明彻，屡破北齐，升任武毅将军、谯州刺史。后来，吴明彻在与北周争夺吕梁的战役，兵败被俘。萧摩诃率兵突围，回朝任右卫将军。陈宣帝死后，萧摩诃辅佐陈后主登基，追斩始兴王陈叔陵，授骠骑大将军、绥建郡公。隋军南征时，多次建议陈后主出兵，没有得到采纳。陈朝灭亡后，随陈后主降顺隋朝，授开府仪同三司。仁寿四年，联合汉王杨谅起兵，反对隋炀帝杨广称帝，被司徒杨素俘虏和杀死，终年七十三岁。",
"XS_chenbaxian":
"南北朝时期陈朝开国皇帝。早年担任新喻侯萧映的传令吏，颇受器重。侯景之乱，陈霸先得知都城被围，立即准备赴援。大宝三年三月，在建康摧毁侯景势力。梁承圣三九月，梁元帝被西魏所杀。陈霸先与王僧辩迎梁元帝第九子萧方智至建康，准备称帝。承圣四年，北齐派兵南向，护送贞阳侯萧渊明即位。九月，陈霸先在京口举兵，除去王僧辩，把萧渊明赶下台，萧方智登基称帝。陈霸先总摄梁朝军国大事，分别于绍泰元年底和太平元年六月，先后击溃北齐两支武装力量的大规模进犯。后进爵为公，拜丞相、录尚书事、镇卫大将军，进封义兴郡公，拜大傅；又进位相国，总百揆，加九锡，封陈公，寻进爵为王。南梁太平二年，受梁禅称帝。",
"XS_yangyin":
"南北朝时期北齐宰相。出身弘农杨氏，风度深敏，言论高雅。建明二年，宗族为尔朱氏所灭后，辗转投奔高欢，深受重用。起家行台郎中，累迁吏部尚书，迎娶太原公主，封华阴县侯。作为太原公属官，辅佐高洋建立北齐，历任侍中、尚书仆射，迁尚书令、骠骑大将军，封开封郡王。高洋临死时，选为少帝高殷的顾命大臣。乾明元年，图谋诛除常山王高演和长广王高湛。高演发动政变，杀死杨愔，时年五十岁。天统年间，追赠司空。",
"XS_duanshao":
"北齐王朝开国功臣，“北齐三杰”之首。擅长骑射，有将帅之才，得到姨夫高欢器重，成为心腹大臣，授亲信都督。参与广阿之战、邺城之战、韩陵之战，随军消灭尔朱兆。抵御宇文泰、征讨玉璧。高欢临终时，选为托孤大臣。文襄帝高澄嗣位，奉命镇守晋阳，讨伐侯景，攻打南梁，平定内乱，大败北周。戎马一生，立下汗马功劳。外统军旅，内参朝政，出将入相，功勋卓著。武平二年，册封乐陵郡公，病逝于家中，追赠假黄钺、大将军、相国、太尉公、录尚书事、朔州刺史、平原王，谥号忠武。",
"XS_hulvguang":
"北魏到北齐时期名将、军事家。善于骑射，武艺出众，得到大行台高欢欣赏。跟随世子高澄，担任亲信都督，号称“落雕都督”。天保三年，从征出塞，先驱破敌，多有斩获，拜晋州刺史。大宁三年，抵抗北周大将达奚成兴进攻，迁司徒。参加洛阳之战，大破北周齐王宇文宪，拜太尉，别封冠军县公。武平二年，参加汾水之战，大破北周柱国辛威和韦孝宽，别封中山郡公。率军攻打平阳道，攻克姚襄和白亭城戍，别封长乐郡公。治军严明，身先士卒，不营私利，多次击败北周进犯。拜左丞相、咸阳王，与尚书右仆射祖珽、领军将军穆提婆不和。北齐武平三年，遇害于凉风堂，时年五十八岁。北周武帝灭亡北齐后，追封上柱国、崇国公。",
"XS_louzhaojun":
"北齐时期皇后，神武帝高欢正妻。高亢明爽，处事果断。早年嫁给高欢，辅佐丈夫建功立业，成为渤海王妃。文襄帝高澄嗣位，进为渤海国太妃。文宣帝高洋称帝后，尊为宣训太后。废帝高殷即位后，尊为太皇太后。联合常山王高演发动政变，诛杀尚书令杨愔（女婿），废黜高殷为济南王。高演即位，复为皇太后。孝昭帝高演去世后，拥立武成帝高湛。太宁二年，病逝于邺城，时年六十二岁，谥号为明，史称武明皇后，安葬于义平陵。",
"XS_gaoaocao":
"南北朝时期东魏名将。马槊绝世，勇猛无敌，时人比于楚霸王项羽。随兄高乾起兵，响应葛荣起义。后来投降朝廷，封武城县伯。孝庄帝元子攸遇害后，联合高欢起兵于信都，公开反对尔朱氏。曾以十余骑大破尔朱羽生的五千人。永熙二年，高乾兵败被杀后，投奔大将军高欢，征战四方，官至司徒、骠骑大将军，进爵武城县侯。元象元年，轻敌大意，为西魏丞相宇文泰所败，全军覆没，遇害于河阳，时年三十七岁。",
"XS_gaosu":
"CV：蚩羽。北齐宗室名将，中国古代四大美男之一。温良敦厚，貌柔心壮，音容兼美。废帝高殷即位，册封兰陵王，历任尚书令、大司马、太保、太尉等。联合段韶征讨柏谷，攻打定阳。平原王段韶患病后，总领部众。河清二年，突厥攻入晋阳时，奋力将兵退敌。邙山之战时，担任中军将军，头戴面具，率领五百骑兵突破北周包围，成功解围金墉城，威名大振，受到士兵讴歌赞颂，即《兰陵王入阵曲》。随着权位扩大和威望上升，受到北齐后主嫉妒和猜忌。武平四年，因言“国事即家事”，坐罪鸩死，年仅三十三岁，追赠假黄钺、太师、太尉公、冀州刺史，谥号忠武。",
"XS_gaoyang":
"北齐开国皇帝。武定七年，长兄高澄遇刺身亡，高洋遂趁机继续执掌朝政，被魏帝封为丞相、齐王。武定八年，高洋迫东魏孝静帝禅位，遂登基称帝，改国号为齐，史称北齐。在位初期，励精图治，厉行改革，劝农兴学，编制齐律。其时，重用杨愔等相才，删削律令，并省州郡县，减少冗官，严禁贪污，注意肃清吏治；前后筑北齐长城四千里，置边镇二十五所，屡次击败柔然、突厥、契丹，出击萧梁，拓地至淮南。征伐四克，威振戎夏。投杯而西人震恐，负甲而北胡惊慌，怀有圣主气范，被突厥可汗称为“英雄天子” ，为北齐一代英主。但高洋执政后期以功业自矜，纵欲酗酒，残暴滥杀，大兴土木，赏罚无度，最终饮酒过度而暴毙，年仅三十四岁。",
"XS_gaohuan":
"东魏权臣，北齐王朝奠基人。因祖父高谧犯法，移居怀朔镇，成为鲜卑化汉人。高欢早年参加杜洛周起义军，又投奔葛荣，后叛降尔朱荣。尔朱荣死后，高欢收编六镇余部，镇压青州流民起义，任第三镇酋长、晋州刺史。普泰元年六月起兵于信都，翌年攻入洛阳，推翻尔朱氏集团，拥立孝武帝元修。永熙三年十月，高欢逼走孝武帝，立元善见为帝，是为孝静帝，迁都邺城，史称东魏。高欢自居晋阳，遥控朝政。专擅东魏朝政16年。在与西魏连年兼并作战中，因恃众轻敌，在东西魏潼关之战、沙苑之战中败北。武定四年十月，率军围攻西魏玉壁，苦攻50天，在西魏大将韦孝宽固守下，终未克，遂忧愤成疾。东魏武定五年正月，病逝于晋阳家中。",
"XS_dongfangshuo":
"西汉时期著名文学家。汉武帝即位，征辟四方士人。东方朔上书自荐，拜为郎。后任常侍郎中、太中大夫等职。性格诙谐，言词敏捷，滑稽多智，常在汉武帝前谈笑取乐，曾言政治得失，上陈“农战强国”之计。汉武帝始终视为俳优之言，不以采用。东方朔一生著述甚丰，有《答客难》、《非有先生论》等名篇。亦有后人假托其名作文。明朝张溥汇为《东方太中集》。",
"XS_xiangru":
"CV：白袖。西汉辞赋家，中国文化史文学史上杰出的代表。有明显的道家思想与神仙色彩。景帝时为武骑常侍，因病免。工辞赋，其代表作品为《子虚赋》。作品词藻富丽，结构宏大，使他成为汉赋的代表作家，后人称之为赋圣和“辞宗”。他与卓文君的爱情故事也广为流传。鲁迅的《汉文学史纲要》中还把二人放在一个专节里加以评述，指出：“武帝时文人，赋莫若司马相如，文莫若司马迁。”",
"XS_zhuowenjun":
"CV：唐倾歌。原名文后，西汉时期蜀郡临邛人，汉代才女。中国古代四大才女之一、蜀中四大才女之一。卓文君为蜀郡临邛的冶铁巨商卓王孙之女，姿色娇美，精通音律，善弹琴，有文名。卓文君与汉代著名文人司马相如的一段爱情佳话至今被人津津乐道。她也有不少佳作，如《白头吟》，诗中“愿得一心人，白头不相离”堪称经典佳句。",
"XS_liling":
"西汉名将、文学家，飞将军李广长孙。擅长骑射，爱护士卒。初以祖勋，授予侍中、建章宫监，迁骑都尉。天汉二年（前99年），跟随贰师将军李广利出征匈奴，率五千步兵与八万匈奴兵战于浚稽山，终因寡不敌众兵败投降。得知汉武帝夷灭三族，将太史令司马迁处以腐刑的消息，心灰意冷，投降匈奴鞮侯单于，迎娶公主为妻，封为右校王，管理坚昆地区。汉昭帝即位后，拒绝大司马霍光迎接回国计划。元平元年，老死于匈奴。",
"XS_dongzhongshu":
"CV：容返。西汉哲学家。汉景帝时任博士，讲授《公羊春秋》。汉武帝元光元年，汉武帝下诏征求治国方略，董仲舒在著名的《举贤良对策》中把儒家思想与当时的社会需要相结合，并吸收了其他学派的理论，创建了一个以儒学为核心的新的思想体系，深得汉武帝的赞赏，系统地提出了“天人感应”、“大一统”学说和“诸不在六艺之科、孔子之术者，皆绝其道，勿使并进”、“罢黜百家，独尊儒术”的主张被汉武帝所采纳，使儒学成为中国社会正统思想，影响长达二千多年。其学以儒家宗法思想为中心，杂以阴阳五行说，把神权、君权、父权、夫权贯穿在一起，形成帝制神学体系。",
"XS_zhangqian":
"中国汉代杰出的外交家、旅行家、探险家，丝绸之路的开拓者，故里在陕西省汉中市城固县城南2千米处汉江之滨的博望村。张骞富有开拓和冒险精神，西汉建元二年，奉汉武帝之命，由大汉帝都长安出发，甘父做向导，率领一百多人出使西域，打通了汉朝通往西域的南北道路，即赫赫有名的“丝绸之路”，汉武帝以军功封其为博望侯。史学家司马迁称赞张骞出使西域为“凿空”，意思是“开通大道”。张骞先后两次出使西域，打开了中国与中亚、西亚、南亚以至通往欧洲的陆路交通，从此中国人通过这条通道向西域和中亚等国出售丝绸、漆器和其他产品，同时从欧洲、西亚和中亚引进宝石、玻璃器等产品。汉武帝元鼎三年，张骞病逝于长安，归葬汉中故里。",
"XS_xielingyun":
"东晋至刘宋时期大臣、佛学家、旅行家，山水诗派鼻祖。出身陈郡谢氏，生于会稽郡。元兴二年，袭封康乐县公。起家大司马参军，历任抚军、记室参军、太尉参军、中书黄门侍郎等职。刘宋建立后，降封康乐县侯，历任散骑常侍，太子左卫率、永嘉太守、秘书监、临川太守。元嘉十年，以“叛逆”罪处死，时年四十九岁。谢灵运年少好学，博览群书，工诗善文。其诗与颜延之齐名，并称“颜谢”，是第一位全力创作山水诗的诗人。",
"XS_jiayi":
"CV：剑寒。西汉初年著名政论家、文学家，世称贾生。贾谊少有才名，十八岁时，以善文为郡人所称。文帝时任博士，迁太中大夫，受大臣周勃、灌婴排挤，谪为长沙王太傅，故后世亦称贾长沙、贾太傅。三年后被召回长安，为梁怀王太傅。梁怀王坠马而死，贾谊深自歉疚，抑郁而亡，时仅33岁。司马迁对屈原、贾谊都寄予同情，为二人写了一篇合传，后世因而往往把贾谊与屈原并称为“屈贾”。贾谊著作主要有散文和辞赋两类，代表作有《过秦论》、《论积贮疏》、《陈政事疏》等。",
"XS_xinqiji":
"CV：蚩羽。南宋官员、将领、文学家，豪放派词人，有“词中之龙”之称。辛弃疾生于金国，早年与党怀英齐名北方，号称“辛党”。青年时参与耿京起义，擒杀叛徒张安国，回归南宋，献《美芹十论》《九议》等，条陈战守之策。先后在江西、湖南、福建等地为守臣，平定荆南茶商赖文政起事，又力排众议，创制飞虎军，以稳定湖湘地区。由于他与当政的主和派政见不合，故而屡遭劾奏，数次起落，最终退隐山居。开禧北伐前后，宰臣韩侂胄接连起用辛弃疾知绍兴、镇江二府，并征他入朝任枢密都承旨等官，均遭辞免。开禧三年，辛弃疾抱憾病逝，享年六十八岁。宋恭帝时获赠少师，谥号“忠敏”。",
"XS_dufu":
"CV：蚩羽。唐代伟大的现实主义诗人。出生于河南巩县，原籍湖北襄阳。为了与另两位诗人李商隐与杜牧即“小李杜”区别，杜甫与李白又合称“大李杜”，杜甫也常被称为“老杜”。杜甫少年时代曾先后游历吴越和齐赵，其间曾赴洛阳应举不第。三十五岁以后，先在长安应试，落第；后来向皇帝献赋，向贵人投赠。官场不得志，亲眼目睹了唐朝上层社会的奢靡与社会危机。天宝十四载，安史之乱爆发，潼关失守，杜甫先后辗转多地。乾元二年杜甫弃官入川，虽然躲避了战乱，生活相对安定，但仍然心系苍生，胸怀国事。杜甫创作了《登高》《春望》《北征》以及“三吏”、“三别”等名作。",
"XS_yangxiong":
"汉朝时期辞赋家、思想家，庐江太守扬季五世孙，名士严君平弟子。少年好学，博览群书，长于辞赋。游历长安，担任大司马王音门下史。汉成帝时，得到同乡杨庄推荐，入奏《甘泉》、《河东》等赋。授给事黄门侍郎，修书于天禄阁，结交王莽。天凤五年，死去，时年七十一岁。著有《法言》《太玄》等，将源于老子之道的“玄”作为最高范畴，并在构筑宇宙生成图式、探索事物发展规律时，是汉朝道家思想的继承和发展者， 对后世意义可谓重大。",
"XS_taoyuanming":
"CV：剑寒。东晋末到刘宋初杰出的诗人、辞赋家、散文家。被誉为“隐逸诗人之宗”、“田园诗派之鼻祖”。是江西首位文学巨匠。曾任江州祭酒、建威参军、镇军参军、彭泽县令等职，最末一次出仕为彭泽县令，八十多天便弃职而去，从此归隐田园。他是中国第一位田园诗人，被称为“古今隐逸诗人之宗”，有《陶渊明集》。",
"XS_sushi":
"CV：蚩羽。北宋著名文学家、书法家、美食家、画家，历史治水名人。北京大学教授、引碑入草开创者李志敏评价：“苏轼是全才式的艺术巨匠。”嘉祐二年，苏轼进士及第。宋神宗时在凤翔、杭州、密州、徐州、湖州等地任职。元丰三年，因“乌台诗案”被贬为黄州团练副使。宋哲宗即位后任翰林学士、侍读学士、礼部尚书等职，并出知杭州、颍州、扬州、定州等地，晚年因新党执政被贬惠州、儋州。宋徽宗时获大赦北还，途中于常州病逝。宋高宗时追赠太师；宋孝宗时追谥“文忠” 。",
"XS_libai":
"CV：蚩羽。唐代伟大的浪漫主义诗人，被后人誉为“诗仙”，与杜甫并称为“李杜”，为了与另两位诗人李商隐与杜牧即“小李杜”区别，杜甫与李白又合称“大李杜”。北京大学教授李志敏评价：“李白之诗呼吸宇宙，出乎道；杜甫之诗德参天地，源于儒，皆至天人合一境界，故能出神入化。“《旧唐书》记载李白为山东人；《新唐书》记载，李白为兴圣皇帝李暠九世孙，与李唐诸王同宗。其人爽朗大方，爱饮酒作诗，喜交友。李白深受黄老列庄思想影响，有《李太白集》传世，诗作中多以醉时写的，代表作有《望庐山瀑布》《行路难》《蜀道难》《将进酒》《明堂赋》《早发白帝城》等多首。",
"XS_yiyin":
"商朝开国元勋，杰出的政治家、思想家，道家学派创始人之一、中华厨祖。。聪明颖慧，勤学上进，耕作于有莘国。经过成汤三聘之后，担任右相，联合仲虺辅佐商汤打败夏桀。商朝建立后。担任尹（丞相），用“以鼎调羹”、“调和五味”的理论治理天下（即《道德经》“治大国若烹小鲜”）。积极整顿吏治，洞察民心国情，推动经济繁荣、政治清明。历事成汤、外丙、仲壬、太甲、沃丁五代君主，尊号阿衡，辅政五十余年，为商朝兴盛富强立下汗马功劳。",
"XS_chengtang":
"商朝开国君主。原是夏朝方国商国的君主，在伊尹、仲虺等人的辅助下陆续灭掉邻近的葛国以及夏朝的方国韦、顾、昆吾等，十一征而无敌于天下，成为当时的强国，而后作《汤誓》，与桀大战于鸣条，最终灭夏。经过三千诸侯大会，汤被推举为天子，定都亳，定国号为“商”，成为商朝的开国君主。商汤为商国君主17年，作《汤誓》后自号武王，建立商朝后又在位12年。百岁而崩，庙号太祖，因其长子太丁早逝，由次子外丙继位。葬处据传有六处，说法最多的是在今河南商丘北面。",
"XS_jidan":
"西周初期杰出的政治家、军事家、思想家、教育家，被尊为“元圣”和儒学先驱。周公一生的功绩被《尚书·大传》概括为：“一年救乱，二年克殷，三年践奄，四年建侯卫，五年营成周，六年制礼乐，七年致政成王。”周公摄政七年，提出了各方面的带根本性典章制度，完善了宗法制度、分封制、嫡长子继承法和井田制。周公七年归政成王，正式确立了周王朝的嫡长子继承制，这些制度的最大特色是以宗法血缘为纽带，把家族和国家融合在一起，把政治和伦理融合在一起，这一制度的形成对中国封建社会产生了极大的影响，为周朝八百年的统治奠定了基础。",
"XS_jifa":
"CV：不问是非。西周王朝的开国君主。约前1050年文王崩逝，姬发继位，号为武王。武王继位后，继承父志，重用太公望、周公旦、召公奭等人治理国家，周国日益强盛。约前1046年，武王联合庸、蜀、羌、髳卢、彭、濮等部族，进攻商纣行在朝歌，讨伐暴君纣王统治下的商朝，是为牧野之战。殷商大败，纣王自焚于鹿台，殷商灭亡。周王朝建立，定都镐京。克殷三年后，周武王驾崩，葬于周陵，为后世尊崇为古代明君。",
"XS_jichang":
"周朝奠基者，中国历史上的一代明君。其父死后，继承西伯侯之位，故称西伯昌。在位四十二年后，正式称王，史称周文王。在位期间，克明德慎罚，勤于政事，重视农业生产。礼贤下士，广罗人才，拜姜尚为军师，制定军国大计，收服虞国和芮国，攻灭黎国、邘国等国，使天下三分，其二归周。建都丰京，为武王伐纣灭商奠定基础；演绎《周易》，得到后世儒家所推崇，孔子称其为“三代之英”。周文王五十年，驾崩，享寿九十七岁，葬于毕原。",
"XS_dixin":
"CV：九醉书生。商朝末代君主，世称“纣”、“商纣王”。帝辛是帝乙少子，继位后，在内营建朝歌、加重赋敛、严格周祭制度、改变用人政策、推行严刑峻法，对外屡次发兵攻打东夷诸部落。其种种举措既在统治集团内部引发矛盾，也动摇了商王朝的统治基础。牧野之战，商军被周武王所率诸侯联军击败，帝辛身死，商朝灭亡。在传统史学叙述中，帝辛沉湎酒色、穷兵黩武、重刑厚敛、拒谏饰非，是与夏桀并称“桀纣”的典型暴君，终致众叛亲离、身死国灭，相关典故有酒池肉林、炮烙之刑、牝鸡司晨等。后世就此存在争议。",
"XS_liukun":
"晋朝政治家、文学家、音乐家和军事家。工于诗赋，少有文名，为鲁公二十四友的重要成员。八王之乱时，效力诸王，累迁并州刺史，封广武侯。永嘉之乱，坚守晋阳九载，抵御汉赵和后赵的入侵。晋愍帝即位，拜司空、大将军、都督并冀幽诸军事。并州为石勒所陷后，投奔幽州刺史段匹磾，约为兄弟，惨遭杀害。太兴三年，平反昭雪，追赠侍中、太尉，谥号为愍。刘琨善于文学，精通音律，诗歌多描写边塞生活。《隋书·经籍志》有《刘琨集》9卷，又有《别集》12卷。明朝张溥辑为《刘中山集》，收入《汉魏六朝百三家集》。",
"XS_huanwen":
"东晋政治家、军事家、权臣，谯国桓氏代表人物，东汉名儒桓荣之后，宣城内史桓彝长子。桓温是晋明帝的驸马，因溯江而上灭亡成汉政权而声名大奋，又三次出兵北伐，战功累累。后独揽朝政十余年，操纵废立，有意夺取帝位，终因第三次北伐失败而令声望受损，受制于朝中王谢势力而未能如愿。桓温曾在晚年逼迫朝廷加其九锡，但因谢安等人借故拖延，直至去世也未能实现。死后谥号宣武。其子桓玄建立桓楚后，追尊为“宣武皇帝”。",
"XS_wangdao":
"东晋时期政治家、书法家，东晋政权的奠基人之一。王导出身于魏晋名门“琅邪王氏”，早年便与琅玡王司马睿友善，后建议其移镇建邺，又为他联络南方士族，安抚南渡北方士族。东晋建立后，先拜骠骑大将军、仪同三司，封武冈侯，又进位侍中、司空、假节、录尚书事，领中书监。与其从兄王敦一内一外，形成“王与马，共天下”的格局。“王敦之乱”时，王导拒绝王敦欲废元帝而立幼主的想法。咸康五年，王导去世，年六十四。成帝举哀于朝堂，遣使追谥“文献”。葬礼规格同霍光、司马孚，为东晋中兴名臣之最。",
"XS_simarui":
"东晋开国皇帝。晋宣帝司马懿曾孙，琅琊武王司马伷之孙，琅琊恭王司马觐之子，晋武帝司马炎从子。太熙元年，袭封琅琊王，参与讨伐成都王司马颖。作战失利后，离开洛阳，回到封国。晋怀帝即位，拜安东将军、都督扬州诸军事。后来，听从王导建议，南渡建康，笼络结交江左士族。永嘉七年，拜丞相、大都督中外军事。永嘉之乱，晋愍帝被俘，西晋灭亡。建兴五年，在晋朝宗室与南北大族拥戴下，即位为晋王，年号建武。太兴元年，正式即位，史称晋元帝，开启了“王与马共天下”的局面。永昌元年闰十一月初十日，王敦之乱后，郁郁而终，时年四十七，葬于建平陵，谥号元皇帝，庙号中宗。",
"XS_zuti":
"东晋军事家。祖逖出身于范阳祖氏，曾任司州主簿、大司马掾、骠骑祭酒、太子中舍人等职。永嘉之乱后，率领亲党避乱于江淮，担任奋威将军、豫州刺史。他在建武元年率部北伐，得到各地人民的响应。数年间，收复黄河以南大片领土，使得石勒不敢南侵，进号镇西将军。个人势力强盛，受到东晋朝廷的忌惮。太兴四年，朝廷命戴渊出镇合肥，以牵制祖逖。祖逖目睹朝内明争暗斗，国事日非，忧愤而死，获赠车骑将军，部众被弟弟祖约接掌。北伐大业也因此而功败垂成。",
"XS_zhufuyan":
"CV：白袖。汉武帝时大臣。临淄人。出身贫寒﹐早年学长短纵横之术，后学《易》﹑《春秋》和百家之言。在齐受到儒生的排挤，于是北游燕﹑赵﹑中山等诸侯王国，但都未受到礼遇。元光元年﹐主父偃抵长安。后直接上书汉武帝刘彻，当天就被召见，与徐乐﹑严安同时拜为郎中。不久又迁为谒者﹑中郎﹑中大夫，一年中升迁四次﹐得到武帝的破格任用。并向汉武帝提出了“大一统”的政治主张。",
"XS_shangguanwaner":
"CV：唐倾歌。唐代女官、诗人、皇妃。因祖父上官仪获罪被杀后随母郑氏配入内庭为婢。上官婉儿因聪慧善文而得到武则天重用，封为“内舍人”，掌管宫中制诰多年，有“巾帼宰相”之名。唐中宗时，封为昭容，权势更盛，在政坛、文坛有着显要地位，从此以皇妃兼内舍人的身份掌管内廷与外朝的政令文告。曾建议扩大书馆，增设学士，在此期间主持风雅，代朝廷品评天下诗文，一时词臣多集其门，《全唐诗》收其遗诗三十二首。710年，临淄王李隆基起兵发动唐隆政变，与韦后同时被杀。景云二年（711年），复封昭容，谥号惠文，葬于雍州咸阳县茂道乡洪渎原。",
"XS_huamulan":
"CV：唐倾歌。中国南北朝时期一个传说色彩极浓的巾帼英雄，她的故事也是一支悲壮的英雄史诗。花木兰最早出现于南北朝一首叙事诗《木兰辞》中，该诗约作于南北朝的北魏，最初收录于南朝陈的《古今乐录》。僧人智匠在《古今乐录》称：“木兰不知名。”长300余字，后经隋唐文人润色。公元429年的北魏破柔然之战，正史对于这场战役有3个行军记载切合了《木兰辞》提及的地名。《魏书·世祖纪上》：“车驾东辕，至黑山”。《魏书·列传第九十一》：“车驾出东道，向黑山……北渡燕然山”。《北史·列传第八十六》：“车驾出东道，向黑山……北度燕然山”。需知，燕然山经常被古代诗词简称为燕山。",
"XS_banzhao":
"东汉史学家、文学家。史学家班彪之女、班固之妹，十四岁嫁同郡曹世叔为妻，故后世亦称“曹大家”。班昭博学高才，其兄班固著《汉书》，未竟而卒，班昭奉旨入东观臧书阁，续写《汉书》。其后汉和帝多次召班昭入宫，并让皇后和贵人们视为老师，号“大家”。邓太后临朝后，曾参与政事。班昭作品存世七篇，《东征赋》和《女诫》等对后世有很大影响。",
"XS_dengsui":
"汉和帝皇后，中国历史上著名的女政治家。邓绥系出名门，她祖父正是以向光武帝刘秀进献了“图天下策”的东汉开国重臣、云台二十八将之首的太傅高密侯邓禹。邓绥15岁入宫，22岁被册封为皇后。东汉延平元年，年仅27岁的汉和帝突然驾崩，面对着“主幼国危”的局面，25岁的邓绥临朝称制。邓绥执政期间，对内帮助东汉王朝度过了“水旱十年”的艰难局面，对外则坚决派兵镇压了西羌之乱，使得危机四伏的东汉王朝转危为安，被誉为“兴灭国，继绝世”。但另一方面，邓绥亦有专权之嫌，其废长立幼，临朝称制达十六年而不愿还政于刘氏，同时对边疆问题、宦官问题等处理不当，史家亦有非议。",
"XS_zhaofeiyan":
"CV：唐倾歌。赵氏，号飞燕，出身京师长安平民之家，选入宫中为家人子，后在阳阿公主处学舞，为汉成帝刘骜第二任皇后。鸿嘉三年封为婕妤。永始元年六月封为皇后。绥和二年汉成帝去世，太子刘欣即位为帝，即汉哀帝，尽管太常丞谯玄等死谏亦未受阻，被尊为皇太后。元寿二年汉哀帝崩逝，被贬为孝成皇后。一个多月后被贬为庶人，下诏令其看守陵园，当日赵飞燕自杀身亡，死后陪葬延陵。在中国历史上，她以美貌著称，所谓“环肥燕瘦”讲的便是她和杨玉环，燕字指的正是赵飞燕。如此而燕瘦也通常用以比喻体态轻盈瘦弱的美女。同时她也因美貌而成为淫惑皇帝的一个代表性人物。",
"XS_hongfunv":
"CV：唐倾歌。红拂女，出自唐人小说《三十三剑侠传》中的《虬髯客传》，本姓张，江南吴兴人。相传为隋唐时的女侠，“风尘三侠”之一。红拂女是李靖的红颜知己、结发之妻。在野史与民间传说中，却是一个奇女子。她慧眼识英雄的故事乃千古佳话。红拂女一直是中国古代“奇女子”的代表，清代《红楼梦》中，林黛玉曾赋诗赞红拂女：“长揖雄谈态自殊，美人具眼识穷途；尸居余气杨公幕，岂得羁縻女丈夫。”",
"XS_daji":
"CV：茗香。传说妲己是一个美人。据《左传》记载：公元前1047年，商纣王发动大军攻打有苏氏部落。有苏部落抵挡不住强大的商军进攻，在灭亡和屈膝间，有苏部落首领选择屈膝，献出牛羊、马匹及美女妲己。关于妲己的种种记载及传说，已经家喻户晓，深入人心，一直到十九世纪末，二十世纪初，考古学家在河南省安阳市小屯村，挖掘出土许多殷商时期的遗物，其中的玉器，铜器等各种器具，尤其是龟甲与兽骨上所刻的大量文字与“卜辞”，使得我们对周代以前历史状况的认识，远较孔子、司马迁当时所能接触的资料为多，才对妲己和商王帝辛的真实面貌，有了接近事实的评估。",
"XS_fangla":
"方腊，又名方十三、方世腊，睦州青溪人，一说安徽歙县人，北宋末年农民起义首领，雇工出身。北宋徽宗宣和二年秋，利用摩尼教的“二宗”（明、暗）、“三际”（过去、现在、未来）之说，睦州帮源发动起义。因花石纲酷害百姓，得到了百姓支持。自号“圣公”，年号“永乐”，设置官吏将帅，建立政权。宣和三年夏，方腊率余部退守睦州青溪帮源洞和梓桐洞，后受伤被俘，同年秋被杀。",
"XS_songjiang":
"CV：九醉书生。宋江山东郓城县水堡乡宋家村人，是施耐庵小说《水浒传》中宋江的历史原型。公元1119年宋江领导了一次农民起义，不过，与同时期的方腊起义相比，规模要小得多。宋江投降后成为征讨方腊的马前卒。1121年初，宋江率领起义军挺进江苏地区，后被张叔夜设伏。宋江虽率部勇猛拼杀，给敌人以重创，但面对重围，船只着火，退路已断，向张叔夜投降接受招安。",
"XS_lizicheng":
"明末农民起义领袖。崇祯二年起义，后为闯王高迎祥部下的闯将，勇猛有识略。高迎祥牺牲后，他继称闯王。当时中原灾荒严重，社会阶级矛盾极度尖锐，李岩提出“均田免赋”等口号，获得广大人民的欢迎，部队发展到百万之众，成为起义军中的主力军。崇祯十七年正月，建立大顺政权，年号“永昌”。不久攻克北京，推翻明王朝。四月，多尔衮率八旗军与明总兵吴三桂合兵，在山海关内外会战李自成。李自成战败，退出北京，率军在河南、陕西抗击清军。顺治二年三月，大顺军逼走南明将领左良玉，占领武昌，李自成计划乘舟东下，夺取东南作为抗清基地。但大顺军尚未准备充分，清军分水陆两路突然袭来，李自成仓促弃武昌向东南进发。顺治二年5月17日，在湖北通城县九宫山遭村民误杀。",
"XS_huangchao":
"唐末农民起义领袖。乾符二年六月，黄巢与兄侄八人响应王仙芝。乾符四年二月，黄巢率军攻陷郓州，杀死节度使薛崇。乾符五年王仙芝死，众推黄巢为主，号称“冲天大将军”，改元王霸。乾符六年正月，兵围广州。广明元年十一月十七日，东都留守刘允章迎黄巢军入洛阳。十二月一日，兵抵潼关。广明元年十二月十三日，黄巢兵进长安，于含元殿即皇帝位，国号“大齐”，建元金统，并大肆屠戮唐朝宗室百官。在唐朝将领李克用、王重荣等人的猛烈进攻下，中和四年六月十五日，黄巢败死狼虎谷。",
"XS_wuguang":
"CV：蚩羽。秦朝末年农民起义领袖。秦二世元年，作为屯长押解犯人戍守渔阳郡。行至大泽乡，为大雨所阻，不能按期到达，坐罪当死。于是，带领戍卒起义，提出“伐无道，诛暴秦”口号，拥立陈涉为将军，自领都尉，借用秦始皇长子扶苏和楚将项燕的名义，号召群众反抗秦朝。秦二世二年，带兵围攻荥阳，屡攻不下，为部将田臧所害。",
"XS_chensheng":
"CV：九醉书生。秦朝末年农民起义的领袖之一。秦二世元年，联合吴广率领戍卒发动大泽乡起义，成为反抗暴秦起义的先驱；占据陈郡称王，建立政权。后被秦将章邯所败，为车夫庄贾所害，葬于芒砀山。刘邦称帝后，追封陈胜为“陈隐王”。",
"XS_liguangbi":
"唐朝中期名将。初任左卫亲府左郎将，袭封蓟郡公。天宝十五载，经郭子仪推荐而任为河东节度副使，东出井陉，参与平定安史之乱。乾元二年，任天下兵马副元帅、朔方节度使。上元二年，以河南副元帅、太尉兼侍中出镇临淮，震慑诸将，次年又命军镇压浙东袁晁起义，以功进封临淮郡王。次年，安史之乱平定，李光弼“战功推为中兴第一”，获赐铁券，名藏太庙，绘像凌烟阁。晚年为宦官程元振、鱼朝恩等所谗，拥兵不朝，声名受损，因此愧恨成疾，终于广德二年在徐州病逝，年五十七。追赠司空、太保，谥号“武穆”，世称“李临淮”、“李武穆”。李光弼足智多谋，治军威严而有方，善于出奇制胜，以少胜多，与郭子仪齐名，世称“李郭”，被誉为“自艰难已来，唯光弼行军治戎，沉毅有筹略，将帅中第一”。",
"XS_guoziyi":
"唐朝中兴名将，政治家、军事家。出身太原郭氏。郭子仪武举高第，累迁至九原太守。安史之乱后，拜朔方节度使，率兵勤王，收复两河地区，拜兵部尚书、同平章事。至德二年，辅佐广平王李俶收复两京，迁司徒，册封代国公。乾元元年，拜中书令。乾元二年五月，承担相州兵败之责，去职赋闲。宝应元年，平定河中兵变，册封汾阳郡王。广德元年，在吐蕃攻破长安后，奉命调兵遣将，驱逐吐蕃敌军。广德二年，抵抗仆固怀恩引叛乱，单骑说服回纥，合兵大破吐蕃。唐德宗即位后，拜太尉、中书令，充皇陵使，赐号“尚父”，剥夺实权。",
"XS_shisiming":
"唐朝时期少数民族将领。出身西域史国，相貌不扬，懂晓六蕃语言。天宝初年，骁勇善战，屡建战功，授平卢军知事。辅佐安禄山讨伐奚和契丹，迁平卢军兵马使。安禄山反叛后，平定河北，署范阳节度使。屡次唐军所败，退保邺城。乾元元年，兵败投降，封为范阳节度使、归义郡王。受到唐肃宗猜忌，起兵再次叛乱，攻破魏州，建立周国，年号应天。进兵解除邺城之围，杀死安庆绪，建都范阳，自称大燕皇帝，年号顺天。唐肃宗上元二年，为其子史朝义所杀，谥号昭武皇帝。",
"XS_yangyuhuan":
"CV：唐倾歌。唐朝时期后妃、宫廷音乐家、舞蹈家、中国古代四大美女之一，追封齐国公杨玄琰之女，宰相杨国忠堂妹。性格婉顺，姿质丰艳，擅长歌舞，通晓音律。嫁给寿王李瑁为妃开元二十八年，奉命出家为女道士，后唐玄宗下诏让杨玉环还俗，并接入宫中，正式册封为贵妃。天宝十五载，安禄山发动叛乱后，跟随唐玄宗李隆基流亡蜀中，途经马嵬驿，士兵哗变，含恨赐死。",
"XS_anlushan":
"唐代藩镇割据势力的建立者，伪燕皇帝。开元初年，逃离突厥，精通九蕃语言。进入幽州刺史张守珪帐下，收为义子。骁勇善战，屡建功勋，迁平卢军兵马使、营州都督。天宝年间，平步青云，历任平卢、范阳和河东三镇节度使，封为东平郡王，镇抚东北地区。天宝十四载，以诛杀杨国忠为名，悍然发动安史之乱。一路势如破竹，攻破两京。建立大燕政权，年号圣武。晚年失明，宠爱幼子，引发晋王安庆绪不满。至德二年，为嫡次子安庆绪指使宦官李猪儿所害，谥号为剌。史思明杀死安庆绪后，成为大燕皇帝，追谥光烈皇帝。",
"XS_lilongji":
"唐朝时期皇帝，先天元年至天宝十五年在位。安史之乱后，退位为太上皇，是唐朝在位最长的皇帝，亦是唐朝极盛时期的皇帝。唐隆元年，联合太平公主联手发动“唐隆政变”，诛杀韦后集团。先天元年，得到父亲李旦禅位，在长安太极宫登基称帝。赐死太平公主，取得了国家的最高统治权。唐玄宗在位前期，在政治上很有作为，勤于政事，从各方面采取措施，巩固和发展了唐朝政权。唐玄宗注意拨乱反正，任用姚崇、宋璟等贤相，励精图治，开创了唐朝的极盛之世——开元盛世。但是在位后期逐渐怠慢朝政、宠信奸臣李林甫、杨国忠等；宠爱杨贵妃，加上政策失误和重用安禄山等塞外民族试图来稳定唐王朝的边疆，结果导致了后来长达八年的安史之乱，为唐朝中衰埋下伏笔。天宝十五年太子李亨即位，尊其为太上皇。",
"XS_yurang":
"春秋战国时期晋国人，是晋国正卿智伯瑶的家臣。晋出公二十二年，赵、韩、魏联手在晋阳之战中攻打智氏，智伯瑶兵败身亡。为了给主公智伯瑶报仇，豫让用漆涂身，吞炭使哑，暗伏桥下，谋刺赵襄子未遂，后为赵襄子所捕。临死时，求得赵襄子衣服，拔剑击斩其衣，以示为主复仇，然后伏剑自杀，留下了“士为知己者死，女为悦己者容”的历史典故。",
"XS_niezheng":
"战国时侠客，韩国轵人，以任侠著称，为春秋战国四大刺客之一。聂政年青侠义，因除害杀人偕母及姊荌避祸齐地，以屠为业。韩大夫严仲子因与韩相侠累（名傀）廷争结仇，潜逃濮阳，闻政侠名，献巨金为其母庆寿，与政结为好友，求其为己报仇。聂政待母亡故守孝三年后，忆及严仲子知遇之恩，独自一人仗剑入韩都阳翟，以白虹贯日之势，刺杀侠累于阶上，继而格杀侠累侍卫数十人。因怕连累与自己面貌相似的姊姊荌，遂以剑自毁其面，挖眼、剖腹自杀。其姊在韩市寻认弟尸，伏尸痛哭，撞死在聂政尸前（。其事迹见《史记·刺客列传》。",
"XS_gaojianli":
"战国末燕人，荆轲的好友，擅长击筑，高渐离与荆轲的关系很好。荆轲刺秦王临行时，高渐离与太子丹送之于易水河畔，高渐离击筑，荆轲和而高歌“风萧萧兮易水寒，壮士一去兮不复还”。后秦灭六国后，秦王因为高渐离击筑太好了，就请他来王宫为他击筑，可是高渐离是荆轲的好友，秦王也就有所防备，事先命人将高渐离的眼睛弄瞎，以为这样高渐离就没法刺杀他了。但高渐离往筑里灌铅，趁秦王听曲正入迷时，向秦王的头部猛砸，想杀死他，但失败被杀。",
"XS_jingke":
"CV：蚩羽。战国时期著名刺客。荆轲喜好读书击剑，为人慷慨侠义。后游历到燕国，随之由田光推荐给太子丹。秦国灭赵后，兵锋直指燕国南界，太子丹震惧，决定派荆轲入秦行刺秦王。荆轲献计太子丹，拟以秦国叛将樊於期之头及燕督亢地图进献秦王，相机行刺，樊於期为成全荆轲而自刎。公元前227年，荆轲带燕督亢地图和樊於期首级，前往秦国刺杀秦王。临行前，燕太子丹、高渐离等许多人在易水边为荆轲送行，场面十分悲壮。荆轲与秦舞阳入秦后，秦王在咸阳宫隆重召见了他，在交验樊於期头颅，献督亢之地图，图穷匕首见，荆轲刺秦王不中，被秦王拔剑击成重伤后为秦侍卫所杀。",
"XS_yangguang":
"CV：九醉书生。隋朝第二位皇帝。美姿仪，少聪慧，初封雁门郡公。开皇元年，册立为晋王，参与灭陈朝，阴谋夺宗。开皇二十年，册立为皇太子。仁寿四年七月，正式即位。在位期间，修隋朝大运河，营建东都洛阳，迁都洛阳，改州为郡；改度量衡依古式；频繁发动战争，西征吐谷浑、三征高句丽，滥用民力、穷奢极欲，引发全国范围农民起义，天下大乱，导致隋朝崩溃覆亡。大业十四年，江都兵变之后，为宇文化及叛军所弑。隋恭帝杨侗追谥为明皇帝，庙号世祖；唐高祖李渊追谥为炀皇帝，夏王窦建德追谥为闵皇帝，《全隋诗》录存其诗四十余首。",
"XS_huanxuan":
"CV：九醉书生。东晋将领、权臣，大司马桓温之子。形貌瑰奇，风神疏朗，袭爵南郡公，世称“桓南郡”。先后消灭殷仲堪和杨佺期，除掉执政的司马道子父子，把持朝权。历任侍中、都督中外诸军事、丞相、录尚书事、扬州牧，领徐州刺史，相国、大将军，晋封楚王。大亨元年，威逼晋安帝禅位，在建康建立桓楚，改元“永始”。不久，刘裕举北府兵起义，桓玄败逃江陵重整军力，遭西讨义军击败。试图入蜀，被益州督护冯迁杀死，时年三十六岁。博综艺术，善属文，著有《桓玄集》二十卷。",
"XS_zhaogao":
"CV：九醉书生。秦朝二世皇帝时丞相，任中车府令，兼行符玺令事，“管事二十余年”。秦始皇死后，赵高发动沙丘政变，他与丞相李斯合谋伪造诏书，逼秦始皇长子扶苏自杀，另立始皇幼子胡亥为帝，是为秦二世，并自任郎中令。他在任职期间独揽大权，结党营私，征役更加繁重，行政更加苛暴。公元前208年又设计害死李斯，继之为秦朝丞相。第三年他迫秦二世自杀，另立子婴为秦王。不久被子婴设计杀掉，诛夷三族。",
"XS_laijunchen":
"唐朝武周时期著名酷吏。无赖出身，善于告密，得到武则天信任，先后任侍御史、御史中丞、太仆卿，组织数百名无赖专事告密，设立推事院，联合党羽朱南山等撰写《罗织经》，制造各种残酷刑具，大兴刑狱，采取刑讯逼供手段，任意捏造罪状致人死地，大臣和李唐宗室遭到枉杀灭族者达数千家。贪赃枉法，横行无忌，联合侯思止、王弘义等援朋结党。最后，企图陷害武氏诸王、太平公主、张易之等武则天最亲信的人物，诬告皇嗣李旦和庐陵王李显谋反，遭到卫遂忠告发。万岁通天二年，武氏诸王与太平公主等乘机揭露来俊臣种种罪恶。武则天下令处死来俊臣，将其酷吏党徒全部流放岭南，延续十四年之久的恐怖“酷吏政治”宣告结束。",
"XS_qinhui":
"CV：不问是非。南宋初年宰相、奸臣，主和派的代表人物。政和五年，秦桧进士及第，中词学兼茂科，任太学学正。宋钦宗时，历任左司谏、御史中丞。靖康二年，因上书金帅反对立张邦昌，随徽、钦二帝被俘至金，为挞懒信用。宋高宗建炎四年，秦桧回到临安，力主宋金议和。绍兴元年，擢参知政事，随后拜相，次年被劾落职，绍兴八年再相，前后执政十九年，历封秦、魏二国公，深得高宗宠信。绍兴二十五年，秦桧病逝，时年66岁，追赠申王，谥忠献。开禧二年，宋宁宗追夺其王爵，改谥谬丑。嘉定元年，史弥远执政后又恢复其王爵和谥号。",
"XS_yansong":
"CV：九醉书生。明代政治家、权臣。明孝宗弘治十八年进士，累迁礼部尚书、翰林院学士。嘉靖二十一年六十三岁时入阁，加少傅兼太子太师、谨身殿大学士，后改少师、华盖殿大学士，嘉靖二十七年诬害夏言，再任内阁首辅，专擅国政近十五年之久。晚年因事激怒嘉靖帝而失势，嘉靖四十一年勒令致仕，嘉靖四十三年严世蕃案发，遭罢职抄家，寄食于墓舍，两年后病死，年八十七。严嵩书法造诣深，擅长写青词。《明史》将严嵩列为明代六大奸臣之一，称其“惟一意媚上，窃权罔利”。",
"XS_tianrangju":
"CV：不问是非。又称司马穰苴，春秋末期齐国人，是田完（陈完）的后代，齐田氏家族的支庶。田穰苴是继姜尚之后一位承上启下的著名军事家，曾率齐军击退晋、燕入侵之军，因功被封为大司马，子孙后世称司马氏。后因齐景公听信谗言，田穰苴被罢黜，未几抑郁发病而死。由于年代久远，其事迹流传不多，但其军事思想却影响巨大。唐肃宗时将田穰苴等历史上十位武功卓著的名将供奉于武成王庙内，被称为武庙十哲。宋徽宗时追尊田穰苴为横山侯，位列宋武庙七十二将之一。",
"XS_zhusheng":
"元末明初的军事家、文学家，明代开国谋臣，官至翰林学士。元末被乡举荐为池州学正。弃官避隐石门，学者称枫林先生。后因向朱元璋建议“高筑墙、广积粮、缓称王”被采纳而闻名。洪武二年，七十一岁的朱升以年迈和祭扫祖茔为由告老还乡，辞官隐居。朱元璋感念他的功绩，意欲重封，但朱升执意退隐。朱升退隐时并未回老家休宁，也没有去原隐居地安徽歙县石门，而是携带着夫人涉江沂淮地方，抵东海转至西溪胥宇，并在南龙港建了房屋。",
"XS_caobin":
"北宋开国名将，后周太祖郭威张贵妃外甥。后周世宗时，奉诏出使吴越，累迁引进使。严于治军，明重军纪，得到宋太祖赵匡胤信任，为北宋统一战争中立下汗马功劳。乾德二年，参与灭亡后蜀，迁宣徽南院使。开宝七年，灭南唐、伐北汉、攻辽国，迁枢密使。雍熙三年，跟随宋太宗攻打辽国，作为东路军主将，孤军冒进、兵疲粮乏，导致岐沟关之战大败，坐罪降为右骁卫上将军，起为侍中、武宁军节度使、鲁国公。宋真宗即位后，迁枢密使。咸平二年，逝世，时年六十九岁，追赠中书令、济阳王，谥号武惠。",
"XS_jibu":
"楚地人，曾效力于西楚霸王项羽。项羽败亡后，被汉高祖刘邦悬赏缉拿。后在夏侯婴说情下，刘邦饶赦了他，并拜他为郎中。汉惠帝时，官至中郎将。汉文帝时，任河东郡守。季布为人仗义，好打抱不平，以信守诺言、讲信用而著称。所以楚国人中广泛流传着“得黄金百斤，不如得季布一诺”的谚语。“一诺千金”这个成语也是由此而来。",
"XS_zhangtang":
"西汉时期官员、酷吏，杜陵人，因为治陈皇后、淮南、衡山谋反之事，得到汉武帝的赏识。张汤先后晋升为太中大夫、廷尉、御史大夫。与赵禹编定《越宫律》、《朝律》等法律著作。用法主张严峻，常以春秋之义加以掩饰，以皇帝意旨为治狱准绳。曾助武帝推行盐铁专卖、告缗算缗，打击富商，剪除豪强。颇受武帝宠信，多行丞相事，权势远在丞相之上。元鼎二年十一月，因为御史中丞李文及丞相长史朱买臣的诬陷，被强令自杀。死后家产不足五百金，皆得自俸禄及皇帝赏赐。张汤虽用法严酷，后人常以他作为酷吏的代表人物，但他为官清廉俭朴，不失为古代廉吏。",
"XS_zhoubo":
"西汉时期开国将领、宰相，名将周亚夫之父。弓马娴熟，孔武有力。秦二世元年，随沛公刘邦起兵反秦，历任五大夫、虎贲令、将军，封为威武侯。参加楚汉之争，攻打赵贲、大败章平、包围章邯，屡建战功。成皋之战时，留守镇关重地，突入成皋战场。带兵攻取曲逆、泗水、东海两郡，凡得二十二县。汉高祖六年，封为绛侯。带兵讨平韩信、陈豨、卢绾叛乱，拜为太尉。刘邦死前预言“安刘氏天下者，必勃也”。吕后死后，联合陈平夺取吕禄军权，诛杀吕氏诸王，拥立汉文帝即位，两度成为丞相，最终罢职归国。汉文帝十一年，去世，谥号为武。",
"XS_dengqiang":
"十六国时期前秦将领、官员。邓羌有勇有谋，升平元年，进击羌族首领姚襄，献计激怒敌军，自己诈败，诱敌深入，击斩姚襄。之后随苻坚平定并州张平，与猛将张蚝交锋，以计擒之。受任御史中丞，与王猛协作，整肃长安治安，大见成效。再平刘卫辰部，苻柳等之乱。于石门大破燕军十万，又跟从王猛攻打前燕，曾与张蚝、徐成策马持矛，突入燕军，打败慕容评十余万燕军。晚年平定蜀地叛乱，并击败代王拓跋什翼犍等。此后事迹史书无载。邓羌除了骁勇善战，还精通兵法，曾奉命教授苻坚庶长子苻丕兵法。",
"XS_liudaogui":
"东晋末年将领，宋武帝刘裕异母弟。倜傥不群，胸怀大志，初为征虏中兵参军。桓玄之乱时，杀死青州刺史桓弘于广陵，响应刘裕起兵，随军收复建康，联合刘毅、何无忌一同消灭桓玄，攻杀荆州刺史桓振，迎复晋安帝，拜荆州刺史，领南蛮校尉，封华容县公。镇守荆州七年，剿灭桓氏残余势力，击杀后秦将领苟林，协助刘裕平定卢循之乱，大破徐道覆，拜征西大将军、开府仪同三司，迁豫州刺史，留京养病。义熙八年，病逝，时年四十三，追赠侍中、司徒、南郡公，谥号烈武。南朝宋建立后，追赠大司马、临川郡王。宋文帝元嘉年间，追赠丞相。",
"XS_yangdayan":
"南北朝时期北魏名将。骁勇，尤以行走迅捷著称。北魏太和年间，被选为军主，旋迁统军。身先士卒，冲突坚阵，雄猛异常。正始三年四月，梁江州刺史王茂领兵数万攻魏荆州，诱魏边民及蛮族民众另立宛州，遣其所署宛州刺史雷豹狼等袭取魏河南城。时杨大眼任平南将军，奉命督诸军反击，大破之，斩梁辅国将军王花、龙骧将军申天化等2000余人；收复河南城。次年正月，与中山王元英等率众数十万围攻梁之钟离，连战不克，于三月被梁军击败，右臂中箭，烧营退走。同年八月，免官徙往营州为兵。永平年间，被重新起用为试守中山内史。延昌四年三月，奉诏督诸军镇荆山。后出任荆州刺史，以武力威慑蛮众，安定地方，在州二年卒。",
"XS_direnjie":
"唐朝时期杰出政治家。出身太原狄氏，以明经及第，历任汴州判佐、并州法曹、大理寺丞、侍御史、度支郎中、宁州刺史、冬官侍郎、江南巡抚使、文昌右丞、豫复二州刺史、洛州司马等职，以不畏权贵著称。天授二年九月，升任宰相，担任地官侍郎、同平章事，为酷吏来俊臣诬害，贬为彭泽县令。营州之乱时，得到起复。神功元年，担任鸾台侍郎、同平章事，迁纳言。勇于犯颜直谏，力劝武则天复立庐陵王李显为太子，培植举荐忠于唐朝的大臣进入朝廷，成为大唐社稷光复的重要支柱。久视元年，拜中书令，卒于任上，追赠文昌右相，谥号文惠，累赠司空、太师、梁国公，配享唐中宗庙廷。",
"XS_wuzhao":
"CV：唐倾歌。武周开国君主。十四岁时进入后宫，为唐太宗才人，获赐号“武媚”。唐高宗时封昭仪，在“废王立武”事件后成为皇后，上元元年，加号“天后”，与高宗并称“二圣”，参预朝政。高宗驾崩后，作为唐中宗、唐睿宗的皇太后临朝称制。天授元年，武则天称帝，改国号为周，定都洛阳，称“神都”，建立武周。武则天在位前后，大肆杀害唐朝宗室，兴起“酷吏政治”。但她“明察善断”，多权略，能用人。又奖励农桑，改革吏治，重视选拔人材，所以使得贤才辈出。晚年逐渐豪奢专断，渐生弊政。神龙元年，武则天病笃，宰相张柬之等发动“神龙革命”，拥立唐中宗复辟，迫使其退位。中宗恢复唐朝后，为其上尊号“则天大圣皇帝”。",
"XS_boershu":
"蒙古名将、成吉思汗“四俊”开国元勋之首。原名孛儿楚。由于相助少年成吉思汗夺回被盗的爱马，成为其属下。最早加入蒙古军，为蒙古的发展作出巨大贡献。参加统一蒙古诸部战争，志意沉雄，善战知兵，多立战功。开禧二年蒙古国建立时，因功封右翼万户长兼千户长，统辖汗庭以西至阿尔泰山的广大地区，深受器重，群臣无出。其右者，被铁木真誉为“犹车之有辕，身之有臂”。并命汗子察合台从之受教诲。与木华黎、博尔忽、赤老温并称“掇里班·曲律”，世任“怯薛”之长，为十大功臣之一，享有九次犯罪不罚的特权。成吉思汗二十一年，随从征西夏，不久病逝。窝阔台汗八年，因功赐其后裔广平路一万七千三百余户为分地。大德五年，追封广平王。",
"XS_cuihong":
"十六国时期北魏名臣。崔宏出身关东名门“清河崔氏”，少时号称冀州神童。前秦苻坚时任阳平国侍郎兼领冀州从事、著作佐郎等职。苻坚死后，为翟钊及晋叛将张愿所留。继仕后燕慕容垂，任吏部郎、尚书左丞、高阳内史。后被北魏道武帝求得，获授黄门侍郎，与张衮执掌机要，草创典章。皇始三年，议改国号为魏，为道武帝采纳。改任吏部尚书，总裁律令、朝仪、官制，又通制三十六曹，权倾一时。北魏明元帝即位，奉诏与穆观查处不法官吏，又与长孙嵩疏决刑狱，为“八公”之一。曾建议明元帝起用寿光侯叔孙建，讨平并州羯胡。升任天部大人，累封白马公。",
"XS_tuobagui":
"CV：蚩羽。北魏王朝开国皇帝，昭成帝拓跋什翼犍之孙、献明帝拓跋寔之子。建国三十九年，在代国灭亡后，随母亲贺兰氏流亡，寄居匈奴独孤部首领刘库仁部落。登国元年，趁乱复立代国，即位于牛川，改称魏王。对内励精图治，实行一系列改革（拓跋珪改革），推动鲜卑政权进入封建社会；对外击败贺兰、铁弗、高车、柔然等草原诸部，并与后燕、后秦争霸于中原。皇始三年，确定国号为“魏”，将国都从盛乐城迁到平城，即皇帝位。晚年沉湎酒色，刚愎自用，不睦兄弟。天赐六年，在拓跋绍发动的宫廷政变中，遇弑身亡，终年三十九，追谥宣武皇帝，庙号烈祖。泰常五年，改谥道武皇帝 。太和十五年，改庙号为太祖。",
"XS_cuihao":
"CV：容返。北魏杰出政治家、军事谋略家。曹魏司空崔林七世孙，北魏司空崔宏长子。出身清河崔氏，貌如妇人，自比张良，历仕道武帝、明元帝、太武帝三帝，是太武帝最重要的谋臣之一，为促进北魏统一北方做出重大贡献。屡次力排众议，根据星象和人事判断时机，辅佐太武帝灭亡胡夏、平定北凉各击破柔然，解除了来自北方和西北地区的军事威胁，打开了通往西域的商道。拜太常卿，迁司徒，封东郡公。太平真君十一年，坐“国史之狱”，夷灭九族时年七十，牵连范阳卢氏、河东柳氏以及太原郭氏。太武帝常为此事后悔，并在一年之后改定律法、放宽刑罚。",
"XS_tuobatao":
"南北朝时期著名军事家、政治家，北魏王朝第三位皇帝。泰常八年登基，年号始光。心怀“廓定四表，混一戎华”之志。亲自率军征战，善用骑兵，轻骑奔袭，攻灭胡夏、北燕、北凉，征伐山胡，降伏鄯善、龟兹、粟特等西域诸国，驱逐吐谷浑，攻取刘宋河南重镇，统一中国北方。向北，远逐柔然。向南，“饮马长江”。作战鸷勇骁强，受到敌方的敬畏，被刘宋称为“英图武略，事驾前古”，超越冒顿和檀石槐。在休战期间，他常常抚恤孤儿和老人，体察民间疾苦，劝课农桑，减轻赋税，休养生息，偃武修文。但是，在执政末期，执法严苛、诛戮过多，因此后悔。正平二年，为中常侍宗爱所弑，时年四十五，谥号太武皇帝，庙号世祖。",
"XS_zhenghe":
"明朝太监，航海家、外交家。郑和年轻时从侍燕王朱棣，有智略，知兵习战。后在靖难之役中有功，升任为内官监太监。1405年至1424年，郑和六次作为正使太监下西洋。1425年后，郑和任南京守备太监，1430年受命第七次下西洋，一说在途中于1433年卒于古里国，今南京牛首山南麓郑和墓或为其衣冠冢。郑和下西洋，是15世纪初叶世界航海史上的空前壮举，对中外经济、文化交往起到了积极作用；郑和本人，也在这一历史事件中展现出其外交才能、军事谋略以及精神品质，并赢得世人的尊重和纪念。晚清以降，郑和研究获得迅速发展，但不少重要课题仍无定论。",
"XS_panmei":
"北宋开国名将之一。潘美与宋太祖赵匡胤关系素来深厚，宋朝建立后，受到重用。李重进叛乱，潘美为行营都监从征。开宝三年，率军灭南汉。开宝八年，助都部署曹彬伐南唐，南唐灭亡。太平兴国五年三月雁门关之捷，封代国公，太平兴国八年，改忠武军节度使，进封韩国公。雍熙三年，宋兵三路北伐辽朝，潘美为云、应、朔等州行营都部署，率西路军出雁门，所向克捷。不久，因曹彬所领东路军大败于岐沟关，潘美等受诏撤军，并护送寰、朔、云、应等四州百姓随军内迁。在护送边民内迁途中，潘美指挥失当，致名将杨业陷敌被俘而死。为此，潘美被削秩三等，降为检校太保。",
"XS_hanqinhu":
"隋朝名将，北周骠骑大将军韩雄之子。容仪魁伟，颇有胆略，爱好读书。初仕北周时，任都督、合州刺史，封新义郡公，随军平定北齐，屡次挫拜陈国进攻。开皇元年，任庐州总管，镇守江北要地庐江，作好灭陈准备。开皇八年，作为先锋将军攻打陈国，率兵夜渡长江，袭占采石，攻克姑孰，进军新林，攻破朱雀门，占领建康城，俘虏陈后主陈叔宝。功勋卓著，进位上柱国、大将军，封寿光县公。后以行军总管屯兵金城，防御突厥，拜凉州总管。开皇十二年，去世，年五十五。",
"XS_wangben":
"秦朝著名将领，战国四大名将之一王翦之子、秦灭六国战争中的主要将领。秦王政二十一年，大败楚军，夺取楚国十几座城池。公元前225年，王贲水淹大梁，灭亡魏国。公元前222年，王贲夺取辽东，灭亡燕国，继而消灭赵国残余势力。公元前221年，灭亡齐国，自此秦国统一六国，王贲因功受封通武侯。公元前219年，随秦始皇东巡。其后事迹不详。",
"XS_simacuo":
"战国时期秦国名将，历史学家司马迁八世祖，历仕秦惠文王、秦武王、秦昭襄王三朝。早年学习纵横家。曾跟相国张仪有过争论，主张“得蜀即得楚”。秦惠文王九年，率军灭亡蜀国，平定陈庄之乱。秦昭襄王二十七年，率军南下东攻楚国，迫使楚国献出汉水以北和上庸之地。其后事迹不详。",
"XS_zhangsunsheng":
"隋朝著名军事家、外交家。生性聪慧，涉猎文史。擅长骑射，一箭双雕。初仕北周，历任司卫上士、奉车都尉。隋朝建立后，历任仪同三司、左勋卫骠骑将军、左领军将军、右骁卫将军等职。深受隋文帝和隋炀帝父子重用，多次奉命出使突厥，在同突厥交往的二十余年中，采用出众谋略，分化瓦解突厥，为保持隋朝北境安宁、促进民族融合作出了重大贡献。大业五年，去世，时年五十八岁，追赠金紫光禄大夫、扬州大都督。唐太宗即位后，重赠上柱国、司空、齐郡王，谥号为献。《全隋文》辑录有其文。",
"XS_zhangsun":
"唐太宗李世民皇后，唐高宗李治母亲，太尉长孙无忌同母妹。八岁丧父，由舅父高士廉抚养。十三岁，嫁给唐国公李渊次子李世民。武德元年，册封为秦王正妃。武德末年，竭诚孝顺李渊及其寻求后宫支持。玄武门之变时，亲自勉慰将士。事情平定后，封为太子妃。唐太宗李世民即位，册封为皇后，诞下三子四女。善于借古喻今，匡正李世民为政失误，保护忠正得力大臣，抑制长孙家族的权势扩张。贞观十年，崩逝于立政殿，终年三十六岁，谥号文德皇后，葬于昭陵，累赠文德顺圣皇后，史称 “千古贤后”著有《女则》《史论东汉明德马后》《春游曲》。",
"XS_zhangsunwuji":
"唐朝初期政治家。长孙无忌幼年丧父，由舅父高士廉抚养成人。聪明鉴悟，雅有武略，与唐太宗是布衣之交，进而结为姻亲。晋阳起兵后，前往谒见投效，跟随唐太宗征战四方，成为心腹谋臣，封上党县公，参与策划玄武门之变。贞观年间，长孙无忌历任左武侯大将军，领吏部尚书，拜尚书右仆射，迁司空、司徒兼侍中、检校中书令，封赵国公，图形凌烟阁，位列第一。他在立储之争时，立储之争时支持李治，后被任为顾命大臣，授太尉、同中书门下三品。永徽年间，长孙无忌在《贞观律》基础上主持修订《唐律疏议》，冤杀吴王李恪，反对“废王立武”。显庆四年，为许敬宗所诬，削爵流放黔州，自缢而死。上元元年，追复官爵，陪葬昭陵。",
"XS_liumuzhi":
"CV：白袖。东晋末年大臣，汉高祖刘邦庶长子齐悼惠王刘肥后代。世居京口，博闻强识。刘穆之深受刘裕倚仗，更屡次在刘裕领兵在外时留守建康，并且总掌朝廷内外事务，官至尚书左仆射。义熙十三年，卒，追赠侍中、司徒、南昌县侯。刘裕受禅，追封为南康郡公，谥号文宣。",
"XS_xiehui":
"CV：白袖。南朝宋开国元勋，东晋东阳太守谢朗之孙。出身陈郡谢氏，颇识机变，才略明练。初随建威将军孟昶，授中兵参军。后来，投靠太尉刘裕，历任太尉参军、刑狱贼曹、豫州治中等职。宋武帝即位后，历任右卫将军、侍中、中领军，封武昌县公。选为顾命大臣，辅佐宋少帝，加任中书令。景平二年，联合徐羡之、傅亮废黜宋少帝，迎立宋文帝即位，出任荆州刺史、卫将军。元嘉三年，听闻傅亮等人被宋文帝所杀，举兵反叛，为名将檀道济和到彦之所破，坐罪伏诛，时年三十七岁。",
"XS_tandaoji":
"东晋末年名将，南朝宋开国元勋，左将军檀韶之弟。出身寒门，父母双亡。参加谢玄创建的北府兵，投身于刘裕部下。随刘裕率兵平定桓玄之乱，拜太尉参军、唐县男，从平卢循之乱。义熙十二年，拜冠军将军，随刘裕攻打后秦，披荆斩棘后秦、新蔡、洛阳、潼关；联合王镇恶攻克长安，灭亡后秦。宋武帝即位后，封护军将军、散骑常侍、丹阳尹，迁镇北将军、南兖州刺史，抵御北魏进攻。宋文帝即位后，拜征北将军，封武陵郡公，平定谢晦叛乱，拜征南大将军、江州刺史。元嘉八年，参加元嘉北伐，救援滑台未果，被宋文帝视为养寇自重。",
"XS_liuyu":
"CV：容返。东晋至南北朝时期杰出的政治家、改革家、军事家，南朝刘宋开国君主。刘裕自幼家贫，初为北府军将领。自隆安三年后，对内平定孙恩和桓玄，消灭桓楚、西蜀、卢循、刘毅、司马休之等割据势力，使南方出现百年未有的统一局面；对外消灭南燕、后秦等国，降服仇池，又以却月阵大破北魏，收复淮北、山东、河南、关中等地，光复洛阳、长安两都。即位后，又派兵南征林邑国，使其全境归附。永初元年，刘裕代晋自立，定都建康，国号“宋”。执政期间，集权中央，整顿吏治，重用寒门，发展生产，轻徭薄赋，废除苛法，振兴教育，策试诸州郡秀才，举善旌贤，终结了门阀专政的时代。史家誉之为“定乱代兴之君”，也有“南朝第一帝”之称。",
"XS_wanganshi":
"北宋著名思想家、政治家、文学家、改革家。庆历二年，王安石进士及第。历任扬州签判、鄞县知县、舒州通判等职，政绩显著。熙宁二年，任参知政事，次年拜相，主持变法。因守旧派反对，熙宁七年罢相。一年后，宋神宗再次起用，旋又罢相，退居江宁。元祐元年，保守派得势，新法皆废，郁然病逝于钟山，追赠太傅。绍圣元年，获谥“文”，故世称王文公。王安石潜心研究经学，著书立说，创“荆公新学”，促进宋代疑经变古学风的形成。在哲学上，他用“五行说”阐述宇宙生成，丰富和发展了中国古代朴素唯物主义思想。",
"XS_zongze":
"CV：白袖。宋朝名将。元祐六年进士。元祐八年，任大名府馆陶县县尉。任满，先后在衢州龙游、莱州胶水、晋州赵城、莱州掖县担任县令。政和五年，升登州通判。宣和元年，因事被贬提举鸿庆宫，遂上表引退。靖康元年，临危受命，出任磁州知州。宗泽为人刚直豪爽，沉毅知兵。到任后，积极修复城墙，整治兵器，招募义兵，广集粮饷。不久，受封河北义兵都总管，率军击退来犯的金兵。同年11月，金兵再次包围开封，钦宗任康王赵构为兵马大元帅，宗泽为副师。宗泽率军趋李固渡，途中遇敌，大破之。次年正月，率军至开德，与敌十三战皆胜。 ",
"XS_yaoguangxiao":
"明朝政治家、佛学家，文学家，靖难之役的主要策划者，中国历史上最著名的黑衣宰相。姚广孝年轻时在苏州妙智庵出家为僧，精通三教，与明初儒释道各家学术领袖都有不错的关系。洪武15年，被明太祖挑选，以“臣奉白帽著王”结识燕王朱棣，主持庆寿寺，成为朱棣的主要谋士。朱棣靖难第三年，姚广孝留守北平，建议朱棣轻骑挺进，径取南京，使得朱棣顺利夺取南京，登基称帝。以区区燕地一方土地敌全国兵马，且最终获胜，历史上绝无仅有。成祖继位后，姚广孝担任僧录司左善世，又加太子少师，被称为“黑衣宰相”。负责迁都事宜，一手规划今日北京城布局。而后在解缙编书失败后又担任了《永乐大典》和《明太祖实录》的最高编撰官。",
"XS_zhudi":
"明朝第三位皇帝。洪武三年，册封燕王。洪武十三年，就藩北平，率军打败北元，声望日隆，名列诸王之首。建文帝即位后，厉行削藩政策。发动靖难之役，起兵攻打南京。建文四年，攻破南京，正式即位，年号永乐。励精图治，延续洪武政策。政治上，改革官制机构，设置内阁和东厂；军事上，五次亲征蒙古，收复安南，东北设立奴儿干都司，西北设置哈密卫，西南设置大古刺、底马撒、底兀刺等宣慰使司和贵州承宣布政使司，拓展和维护华夏版图的完整；委派郑和下西洋，加强中外友好往来和南海地区的经营；编修《永乐大典》，疏浚大运河，迁都北京。统治期间，经济繁荣，国力强盛，文治武功很大提升。",
"XS_peixingjian":
"唐朝名将、政治家、于唐太宗时以明经科考试中选，并得名将苏定方教授用兵奇术。在西域时，各国多慕义归附。后还朝任吏部侍郎，与李敬玄、马载同掌选事十余年，甚有能名。他所创长名姓历榜及铨注等法，影响了后世选才授官的制度。上元三年，出任洮州道左二军总管、秦州右军总管，参与防御吐蕃。调露元年，计俘叛乱的西突厥十姓可汗阿史那匐延都支，以功升任礼部尚书兼检校右卫大将军，身兼文武两职。次年，大破东突厥阿史德温傅及阿史那伏念所部，尽平东突厥残部。永淳元年，裴行俭病逝，年六十四。追赠幽州都督，谥号“献”。",
"XS_shiwansui":
"隋朝时期名将，北周泾州总管史静之子。长于骑射，好读兵书，随父从军。北周武帝时，授开府仪同三司，袭爵太平县公。跟随上柱国梁士彦攻讨伐相州总管尉迟迥之乱，每战先登，拜上大将军。隋朝建立后，受到大将军尔朱绩谋反牵连，贬为敦煌郡戍卒。开皇三年，跟随秦州总管窦荣定攻打突厥，大败突厥部队。参与隋灭陈之战，平定江南叛乱。身先士卒，善抚部下，将士效力。南征北战，屡建战功。开皇二十年，遭到宰相杨素嫉妒诬陷，终为隋文帝所杀。",
"XS_gaojiong":
"隋朝杰出的政治家、战略家、军事家。相州总官尉迟迥起兵反叛，高颎请将兵平叛，以功封柱国，升相府司马。隋文帝建立隋朝后，有统一南北之志，高颎推荐贺若弼、韩擒虎二将分别任吴州和庐州总管，作灭陈准备。隋开皇元年九月，节度上柱国长孙览、元景山两路隋军攻陈。二年春，陈宣帝卒，陈遣使请和，遂班师。三年，率军与诸将分道击突厥。五年，任左领军大将军。七年，隋灭后梁，奉命赴江陵安集其遗民，甚得人和。不久，向文帝献取陈方略。开皇八年隋朝以晋王杨广为元帅伐南陈，任元帅长史，指挥全军一举平南陈。后因反对废太子杨勇并得罪独孤皇后，遭隋文帝猜忌，被免官为民，不久后又免去齐国公爵位。隋炀帝时，被起用为太常卿。",
"XS_yangjian":
"隋朝开国皇帝。北周大定元年，杨坚受北周静帝禅让为帝，改元开皇。隋文帝即位后，在政治、经济等制度方面进行了一系列的改革。修定刑律和制度，使适合于南北统一后的中国。在中央实行三省六部制，将地方的州、郡、县三级制改为州、县两级制，由此巩固了中央集权。多次减税，减轻人民负担，促进国家农业生产，稳定经济发展。开皇九年，派晋王杨广南下平陈，统一南北。隋文帝对周边各族，采取了军事上的防御和政治上的招抚政策，有效地处理了民族矛盾，被北方少数民族尊称为“圣人可汗”。开皇年间，隋朝疆域辽阔，人口达到700余万户。",
"XS_wangxizhi":
"东晋时期书法家，有“书圣”之称。历任秘书郞、宁远将军、江州刺史，后为会稽内史，领右将军。其书法兼善隶、草、楷、行各体，精研体势，心摹手追，广采众长，备精诸体，冶于一炉，摆脱了汉魏笔风，自成一家，影响深远。风格平和自然，笔势委婉含蓄，遒美健秀。李志敏评价：“王羲之的书法既表现以老庄哲学为基础的简淡玄远，又表现以儒家的中庸之道为基础的冲和。”代表作《兰亭序》被誉为“天下第一行书”。在书法史上，他与其子王献之合称为“二王”。",
"XS_zhaopu":
"五代至北宋初年著名政治家，北宋开国功臣。早年曾被刘词辟为从事，后担任赵匡胤的掌书记。显德七年（960年），与赵匡胤发动陈桥兵变，推翻后周，建立宋朝。乾德二年拜相，协助赵匡胤削夺藩镇、罢禁军宿将兵权，实行更戍法、改革官制、制定守边防辽等许多重大措施。淳化三年，赵普病逝，年七十一。宋太宗亲撰八分字神道碑赐之。累封韩王，赐谥“忠献”，并配飨太祖庙庭。为昭勋阁二十四功臣之一。赵普虽读书少，但喜观《论语》。其“半部《论语》治天下”之说对后世很有影响，成为以儒学治国的名言。",
"XS_caoshen":
"西汉开国功臣、军事家、政治家，汉朝第二位相国，史称“曹相国”。起家沛县狱掾。秦二世元年，跟随刘邦沛县起兵，身经百战，反秦灭楚，屡建战功，攻下二国和一百二十二个县。刘邦定都长安后后，论功行赏，功居第二，赐爵平阳侯。出任齐国丞相，辅佐齐王刘肥。汉惠帝即位，继任萧何为相国，秉承“萧规曹随，休养生息”，为文景之治奠定了良好的物质和理论基础。汉惠帝五年，卒于任上，谥号为懿。",
"XS_lvbuwei":
"CV：蚩羽。战国末年商人、政治家、思想家，秦国丞相。早年经商于阳翟，扶植秦国质子异人回国即位，成为秦庄襄王，拜为相国，封文信侯，食邑河南洛阳十万户。带兵攻取周国、赵国、卫国土地，分别设立三川郡、太原郡、东郡，对秦王嬴政兼并六国的事业作出重大贡献。庄襄王去世后，迎立太子嬴政即位，拜为相邦，尊称“仲父”，权倾天下。受到嫪毐集团叛乱牵连，罢相归国，全家流放蜀郡，途中饮鸩自尽。主持编纂《吕氏春秋》（又名《吕览》），包含八览、六论、十二纪，汇合了先秦诸子各派学说，“兼儒墨，合名法”，史称“杂家”。",
"XS_muhuali":
"大蒙古国名将、开国功臣。木华黎早年被父亲送给铁木真做“梯己奴隶”。他以沉毅多智、雄勇善战著称，与博尔术最受器重，被铁木真誉为“犹车之有辕，身之有臂。”四十年间追随铁木真，无役不从，辅佐铁木真统一蒙古诸部，战功卓著，与博尔术、博尔忽、赤老温并称“四杰”。成吉思汗元年，封为左翼万户长，为征金大元帅、太师、国王，赐九斿白纛，代成吉思汗施行恩威。经过六年征战，先后征服了金朝大部分国土。成吉思汗十八年，木华黎于凤翔之战结束后的班师途中病逝于闻喜县，时年五十四。",
"XS_bizaiyu":
"南宋名将。毕再遇容貌魁伟，武艺超群。初以恩荫补官，隶属侍卫马军司。开禧二年，随军北伐，屡立战功，迁为武功大夫。后因功历任镇江都统制兼权山东、京东招抚司事及骁卫大将军等职。因其勇猛过人，熟知兵略，且善于驾驭兵将，威名远扬。嘉定元年，被任为左骁卫上将军、保康军承宣使。“嘉定和议”签订后，毕再遇屡请回归田里，均不准。嘉定六年，提举太平兴国宫。嘉定十年，以武信军节度使致仕。不久去世。累赠太师，谥号“忠毅”。",
"XS_weiwuji":
"即信陵君，魏国公子，与春申君黄歇、孟尝君田文、平原君赵胜并称为“战国四公子”。是战国时期魏国著名的军事家、政治家，魏昭王少子、魏安釐王的异母弟。公元前276年，被封于信陵，所以后世皆称其为信陵君。魏无忌处于魏国走向衰落之时，他效仿孟尝君田文、平原君赵胜的辅政方法，延揽食客，养士数千人，自成势力。魏无忌礼贤下士、急人之困，曾在军事上两度击败秦军，分别挽救了赵国和魏国危局。但屡遭魏安釐王猜忌而未能予以重任。前243年，魏无忌因伤于酒色而死。十八年后，魏国为秦所灭。著有《魏公子兵法》。",
"XS_chuliji":
"战国时期秦国宗室将领。能说会道，足智多谋，绰号“智囊”，擅长外交、军事。辅佐秦惠文王，拜为右更，攻取魏国曲沃、赵国蔺邑和楚国汉中，攻城略地，封于蜀郡严道县，号严君。秦武王即位后，驱逐张仪和魏章，任命战功卓著的樗里子为右丞相，精通韬略的甘茂为左丞相。二人相得益彰，推动大规模对外战争，扩张秦国版图，为后来秦国统一中国打下坚实根基。秦昭襄王元年，拜为丞相，主持朝政和宗族事务。七年，去世，葬于渭水南岸章台之东，后世堪舆家尊之为“樗里先师”。著有作品《青鸟经》，传于世。",
"XS_mengke":
"CV：白袖。战国时期著名哲学家、思想家、政治家、教育家，儒家学派的代表人物之一，地位仅次于孔子，与孔子并称“孔孟”。宣扬“仁政”，最早提出“民贵君轻”的思想。韩愈《原道》将孟子列为先秦儒家继承孔子“道统”的人物，元朝追封孟子为“亚圣公·树宸”，尊称为“亚圣”，《孟子》一书，属语录体散文集，是孟子的言论汇编，由孟子的弟子共同编写完成，倡导“以仁为本”。代表作有《鱼我所欲也》《得道多助，失道寡助》《寡人之于国也》等。",
"XS_lanyu":
"明朝开国将领。有胆有谋，勇敢善战，屡立战功。于捕鱼儿海中大破北元，基本摧毁其职官体系而名震天下。洪武十二年封永昌侯，洪武二十年拜征虏大将军。洪武二十一年拜大将军、凉国公。蓝玉为常遇春的妻弟，而常遇春是太子朱标岳父，所以作为太子妃舅父，蓝玉极力维护太子的储君地位，与早已觊觎皇位的燕王交恶。朱元璋给儿子朱标组建当时明朝超一流的武人集团班底，作为儿子继承大统彻底清除北元的预备。然太子死皇孙幼，朱标太子的武人集团班底全部被屠戮干净，最后落了个周亚夫的下场。",
"XS_zhangheng":
"中国东汉时期伟大的天文学家、数学家、发明家、地理学家、文学家。张衡在天文学方面著有《灵宪》、《浑仪图注》等，数学著作有《算罔论》，文学作品以《二京赋》、《归田赋》等为代表。《隋书·经籍志》有《张衡集》14卷，久佚。明人张溥编有《张河间集》，收入《汉魏六朝百三家集》。张衡为中国天文学、机械技术、地震学的发展作出了杰出的贡献，发明了浑天仪、地动仪，是东汉中期浑天说的代表人物之一。被后人誉为“木圣”（科圣）。",
"XS_yangsu":
"CV：蚩羽。隋朝权臣、诗人、军事家。北魏谏议大夫杨暄之孙、北周骠骑大将军杨敷之子。出身弘农杨氏，不拘小节，胸怀大志。初仕北周，拜车骑将军、仪同三司，参加平定北齐之役，与族兄杨坚深相结纳。隋朝建立后，升御史大夫。开皇八年，以行军元帅身份，率水军东下攻灭陈朝，以功拜荆州总管，封越国公。暗中帮助晋王杨广，夺嫡成为太子。杨广即位后，领兵讨平汉王杨谅叛乱，拜尚书令、太师、司徒，封楚国公。",
"XS_huishi":
"CV：白袖。战国时期著名的政治家、哲学家，名家思想的开山鼻祖和主要代表人物。惠施是合纵抗秦的最主要的组织人和支持者。他主张魏国、齐国和楚国联合起来对抗秦国，并建议齐、魏互尊为王。魏惠王在位时，惠施因为与张仪不和而被驱逐出魏国，他首先到楚国，后来回到家乡宋国，并在宋国国都商丘与老乡庄子成为朋友。公元前三一九年魏惠王死后，由于东方各国的支持，魏国改用公孙衍为相国，张仪失宠离去，惠施重回魏国。",
"XS_longju":
"秦朝末年将领，西楚霸王项羽手下猛将。自幼跟随项羽，一起长大，情若兄弟。参加项梁起义，联合田荣大破秦军于东阿。在九江王英布背楚归汉之时，龙且率军十万大破之，联合曹咎、周殷同为大司马。在听闻韩信平定河北、吞赵灭齐之后，龙且奉命率兵攻打齐地。公元前203年，参加潍水之战，陷入韩信水淹围城之计，力战汉军诸将，终为汉军骑将丁复所杀。龙且之死，敲响了西楚灭亡的丧钟，项羽大为伤感。",
"XS_liyiji":
"CV：容返。中国历史上的著名说客。刘邦攻打陈留时，率众跟随，献计攻克陈留郡和贡献大批军粮，封为广野君，以三寸之舌游说列国，为刘邦建立灭秦抗楚“统一战线”做了重大贡献；出面劝降秦国守将，辅佐刘邦攻破武关，率先攻破咸阳，灭亡秦朝。楚汉相争时期，建议夺取荥阳，占据敖仓，夺取有利据点和粮食补给，为日后逆转形势、反败为胜奠定基础。奉命出使齐国，劝齐王田广以七十余城归顺。汉王四年，大将军韩信攻打齐国，导致郦食其为齐王田广烹杀，时年六十五岁，归葬于雍丘。",
"XS_liurengui":
"唐朝宰相、名将，汉章帝刘炟之后。他恭谨好学，博涉文史，直言敢谏。唐太宗时，累官至给事中。唐高宗即位后，历任青州刺史、带方州刺史、同中书门下三品、西京留守、文昌左相等职，封乐城郡公。镇守百济期间，他因救援新罗，并在白江口之战大败倭国、百济联军而名震天下。垂拱元年（685年），刘仁轨逝世，年八十四。册赠开府仪同三司、并州大都督。唐中宗即位，加赠太尉。唐玄宗时，追谥“文献”。天宝六载（747年），配享高宗庙廷。撰有《行年记》、《永徽留本司格后本》等，今已佚。",
"XS_nanzi":
"CV：唐倾歌。春秋时期女政治家。南子原是宋国公主，后嫁卫灵公为夫人。南子生性淫乱，与宋国公子朝私通。卫灵公不加阻止，反而纵容南子，召公子朝与其在洮地相会。卫灵公的太子蒯聩知道南子私通之事后，非常愤怒，便和家臣戏阳速商量，在朝见南子时趁机刺杀她。结果戏阳速反悔没有行动，被南子所察觉，蒯聩于是逃亡宋国，卫灵公将蒯聩党羽全部赶走。孔子周游列国时，曾访问卫国，南子与孔子隔帐见面。南子叩头还礼时，身上佩饰发出清脆响声，孔子学生子路对此颇为不满。后来孔子认为卫灵公不是爱好德行如爱好美色一样，于是离开卫国。",
"XS_qinliangyu":
"明朝末年著名女将。丈夫马千乘是汉伏波将军马援后人，世袭石砫宣慰使（俗称土司），马千乘被害后，因其子马祥麟年幼，秦良玉于是代领夫职。秦良玉率领兄弟秦邦屏、秦民屏先后参加抗击清军、奢崇明之乱、张献忠之乱等战役，战功显赫，被封为二品诰命夫人。崇祯皇帝曾作诗四首赞颂秦良玉。历朝历代修史，女性名人都是被记载到列女传里，而秦良玉是历史上唯一一位作为王朝名将被单独立传记载到正史将相列传里的巾帼英雄。",
"XS_lvzhi":
"CV：茗香。汉高祖刘邦在位时的皇后，高祖死后，被尊为皇太后，是中国历史上有记载的第一位皇后和皇太后。同时吕雉也是秦始皇统一中国，实行皇帝制度之后，第一个临朝称制的女性，被司马迁列入记录帝王政事的本纪，后来班固作汉书仍然沿用。她开启了汉代外戚专权的先河。吕雉统治期间实行黄老之术与民休息的政策，废除挟书律，下令鼓励民间藏书、献书，恢复旧典。为后来的文景之治打下了很好的基础，司马迁在《史记·吕太后本纪》中对她的评价是“政不出房户，天下晏然；刑罚罕用，罪人是希；民务稼穑，衣食滋殖”，给予吕后施政极大的肯定。",
"XS_mibazi":
"战国时期秦国王太后，秦惠文王之妾，秦昭襄王之母。前306年，秦武王因举鼎而死。因秦武王无子，他的弟弟们争夺王位。赵武灵王派代郡郡相赵固将在燕国作为人质的公子稷送回秦国。在宣太后异父弟魏冉的帮助下，公子稷继位，即秦昭襄王。魏冉随后平定了王室内部争夺君位的动乱，诛杀惠文后及公子壮、公子雍，将秦武王后驱逐至魏国，肃清了与秦昭襄王不和的诸公子。因秦昭襄王年幼，由宣太后以太后之位主政，魏冉辅政。秦昭襄王即位之初，宣太后以太后之位主政，执政期间，攻灭义渠国，一举灭亡了秦国的西部大患。死后葬于芷阳骊山。",
"XS_weiliao":
"著名的军事家。秦王政十年入秦游说，被任为国尉后，因称尉缭。他所著的《尉缭子》一书，在古代就被列入军事学名著，受到历代兵家推崇，与《孙子》、《吴子》、《司马法》等在宋代并称为《武经七书》。古代多以官名作为姓名，如宗正此姓，源于汉朝刘德，官至宗正，为九卿之一，即主持皇家宫室事务的官员。刘德的支庶子孙有的以祖上官职名命姓，称宗正氏，后来加文而为宗政氏。尉缭之父、爷爷、太爷均在魏国担任国尉职位，而后尉缭又在秦国担任国尉之职，故人多以称之尉缭。",
"XS_mayuan":
"西汉末年至东汉初年著名军事家，东汉开国功臣之一。新朝末年，马援投靠陇右军阀隗嚣麾下，甚得其器重。后归顺光武帝刘秀，为刘秀统一天下立下了赫赫战功。统一之后，马援虽已年迈，但仍请缨东征西讨，西破陇羌，南征交趾，北击乌桓，官至伏波将军，封新息侯，世称“马伏波”。其老当益壮、马革裹尸的气概，受到后人的崇敬。建武二十五年，马援在讨伐五溪蛮时身染重病，不幸逝世。死后遭人构陷，被刘秀收回新息侯印绶，直到汉章帝时才获得平反，追谥“忠成”。",
"XS_yudayou":
"明代抗倭名将，军事家、武术家、诗人、民族英雄。俞大猷一生与倭寇作战，战功显赫，率领“俞家军”能将敌人吓退，与戚继光并称为“俞龙戚虎”，扫平了为患多年、趁机作乱的伪倭寇。俞大猷战功累累，常被弹劾，遭到免官，被人冒领军功，从不计较。创立兵车营，设计创造用兵车对付骑兵的战术。官授平蛮将军，死后被追谥为武襄。著有《兵法发微》《剑经》《洗海近事》《续武经总要》等军事、武术作品。",
"XS_goujian":
"CV：不问是非。春秋末年越国国君。公元前496年，越王勾践即位，同年，在檇李大败吴师。越王勾践三年，被吴军败于夫椒，被迫向吴求和。三年后被释放回越国，返国后重用范蠡、文种，卧薪尝胆使越国国力渐渐恢复起来。越王勾践十五年，吴王夫差兴兵参加黄池之会，以彰显武力率精锐而出。越王勾践抓住机会率兵而起，大败吴师。夫差仓卒与晋国定盟而返，与勾践连战惨败，不得已与越议和。越王勾践十九年，勾践再度率军攻打吴国，在笠泽之战三战三捷大败吴军主力。越王勾践二十四年，破吴都，迫使夫差自尽，灭吴称霸。",
"XS_licunxu":
"唐末五代军事家。李存勖骁勇善战，长于谋略，继承王位十五年，南击后梁、北却契丹、东取河北、西并河中，使得晋国逐渐强盛，中兴唐朝霸业。同光元年四月在魏州称帝，定国号为唐，史称后唐，并于同年十二月灭亡后梁，尽取河南、山东等地，定都于洛阳。李存勖在位期间，并岐国，灭前蜀，得凤翔、汉中及两川之地，震动南方割据诸国。但他沉湎于声色，治国乏术，用人无方，纵容皇后干政，重用伶人、宦官，疏忌杀戮功臣，横征暴敛，又吝惜钱财，以致百姓困苦、藩镇怨愤、士卒离心，同光四年四月死于兴教门之变，时年四十二岁。",
"XS_sanghongyang":
"CV：白袖。西汉时期政治家、理财专家。出身商人家庭，十三岁时以精于心算入侍宫中，自元狩三年起，在汉武帝大力支持下，先后推行算缗、告缗、盐铁官营、均输、平准、币制改革、酒榷等经济政策，同时组织六十万人屯田戍边，防御匈奴。这些措施都在不同程度上取得了成功，大幅度增加了政府的财政收入，为武帝继续推行文治武功事业奠定了雄厚的物质基础。后元二年，汉昭帝即位，桑弘羊迁任御史大夫，与霍光、金日磾等同为辅政大臣。",
"XS_wentianxiang":
"CV：九醉书生。南宋末政治家、文学家。宝祐四年进士第一。德祐元年，元军沿长江东下，文天祥罄家财为军资，招勤王兵至5万人，入卫临安。旋为浙西、江东制置使兼知平江府。遣将援常州，因淮将张全见危不救而败，退守余杭。景炎二年五月，再攻江西，终因势孤力单，败退广东。祥兴元年十二月，在五坡岭被俘。次年，元军将其押赴厓山，令招降张世杰。文天祥拒之，书《过零丁洋》诗以明志。后被解至元大都，元世祖忽必烈亲自劝降，许以中书宰相之职。文天祥大义凛然，宁死不屈。元至元十九年十二月初九，于大都就义。终年47岁。",
"XS_dukang":
"杜康，《史记》记载他是夏朝的国君，道家。杜康是中国古代传说中的“酿酒始祖”，汉《说文解字》载：“杜康始作秫酒。又名少康，夏朝国君，道家名人。”因杜康善酿酒，后世将杜康尊为酒神，制酒业则奉杜康为祖师爷。后世多以“杜康”借指酒。",
"XS_hanshizhong":
"南宋名将、词人。韩世忠身材魁伟，勇猛过人。出身贫寒，十八岁时应募从军。他英勇善战，胸怀韬略，在抗击西夏、金国的战争中为宋朝立下汗马功劳，又在平定各地叛乱中作出重大贡献。韩世忠为人耿直，不肯依附权臣秦桧，曾为岳飞遭陷害而鸣不平，史称其“固将帅中社稷臣也”。累迁至镇南、武安、宁国三镇节度使，封爵咸安郡王。晚年杜门谢客，口不谈兵，悠游西湖以自乐。绍兴二十一年，韩世忠逝世，年六十三。追赠太师、通义郡王。",
"XS_zhangjuzheng":
"明朝政治家，改革家。嘉靖二十六年进士。隆庆六年代高拱为内阁首辅，晋中极殿大学士，一切军政大事均由张居正主持裁决，实行一系列改革措施。财政上，清仗田地、推行“一条鞭法”，总括赋、役，皆以银缴，“太仓粟可支十年，周寺积金，至四百余万”；军事上，任用戚继光、李成梁等名将镇北边，用凌云翼、殷正茂等平定西南叛乱；吏治上，实行综核名实。万历十年六月病逝，享年五十八岁，赠上柱国，谥文忠。明代唯一生前被授予太傅、太师的文官。死后被明神宗抄家，至明熹宗天启二年恢复名誉。",
"XS_yuxu":
"东汉时期名臣。最初被太尉张禹召为郎中，历任朝歌县长、怀县令，平定朝歌叛乱。任武都太守，以增灶计大破羌军，安定一郡，治理武都政绩卓然，深受爱戴。后任司隶校尉、尚书仆射、尚书令等职，为官清正廉明，刚正不阿，多次得罪权贵。一生九次遭到斥责，三次被依法惩处，但他刚正的性格，一直到老都不改变。",
"XS_simaguang":
"北宋政治家、史学家、文学家。宋仁宗宝元元年，进士及第，累迁龙图阁直学士。宋神宗时，反对王安石变法，离开朝廷十五年，主持编纂了中国历史上第一部编年体通史《资治通鉴》。历仕仁宗、英宗、神宗、哲宗四朝，官至尚书左仆射兼门下侍郎。元祐元年，去世，追赠太师、温国公，谥号文正。名列“元祐党人”，配享宋哲宗庙廷，图形昭勋阁；从祀于孔庙，称“先儒司马子”；从祀历代帝王庙。",
"XS_yuqian":
"CV：白袖。明朝名臣、民族英雄。宣德元年，以御史职随明宣宗平定汉王朱高煦之乱，因严词斥责朱高煦而受宣宗赏识，升为巡按江西，颂声满道。土木之变后，英宗兵败被俘，他力排南迁之议，坚请固守，升任兵部尚书。明代宗即位，整饬兵备，部署要害，亲自督战，率师二十二万，列阵北京九门外，抵御瓦剌大军。瓦剌太师也先挟英宗逼和，他以“社稷为重，君为轻”，不许。也先无隙可乘，被迫释放英宗。天顺元年，英宗复辟，大将石亨等诬陷于谦谋立襄王之子，致使其含冤遇害。他与岳飞、张煌言并称“西湖三杰”。",
"XS_yangyouji":
"CV：牛杂师傅春秋时期楚国将领，是中国古代著名的神射手。本是养国人，养国被楚国灭亡后，养由基成为楚国大夫。相传养由基能在百步之外射穿作标记的柳叶，并曾一箭射穿七层铠甲。《战国策·西周策》中记载：“楚有养由基者，善射，去柳叶百步而射之，百发百中。”百发百中、百步穿杨都出自这里。此人号“养一箭”，一箭就足以致胜。",
"XS_yingbu":
"秦末汉初名将，早年坐罪，受到黥刑，俗称黥布。初随项梁起义，迎娶吴芮之女，拥立楚怀王继位，封为当阳君。项梁阵亡后，成为项羽帐下将领之一，屡破秦军，封为九江王。受到汉朝游说，叛楚归汉，为楚将龙苴所败。辅佐刘邦打败项羽，建立汉朝，封为淮南王，与韩信、彭越并称汉初三大名将。韩彭被杀后，心生畏惧。汉高帝十一年，起兵反叛，兵败被杀。",
"XS_duruhui":
"唐朝初年名相。晋阳起兵后，成为秦王李世民幕府谋臣，跟随李世民平定薛仁杲、刘武周、王世充、窦建德叛乱，积极运筹帷幄，为时人所敬服。文学馆建立后，以为从事中郎，为秦王府十八学士之首。玄武门之变时，联合房玄龄参与策划，同居首功。唐太宗即位后，迁尚书右仆射，封蔡国公，配合房玄龄同心辅政，负责选拔人才、制定法度等。房玄龄善于谋划，杜如晦处事果断，并称“房谋杜断”。贞观四年，病逝，时年四十六，追赠司空、莱国公，谥号为成。贞观十七年，图形凌烟阁，位列第三。",
"XS_wangshouren":
"明代著名的思想家、哲学家、书法家兼军事家、教育家。弘治十二年进士，历任刑部主事、贵州龙场驿丞、庐陵知县、右佥都御史、南赣巡抚、两广总督等职，晚年官至南京兵部尚书、都察院左都御史。因平定宸濠之乱等军功而封爵新建伯，隆庆时追赠侯爵。王守仁是明代心学集大成者，明代心学发展的基本历程，可以归结为：陈献章开启，湛若水完善，王阳明集大成。王守仁的学说思想王学（阳明学）的直接源头是陈献章与湛若水的“陈湛心学”，阳明心学和与陈献章的学说堪相一致，已是学界的共识。",
"XS_xuewen":
"战国时期齐国贵族。因封袭其父爵于薛，又称薛公，号孟尝君。孟尝君依仗父亲留下的丰厚资产，在封地薛邑广招各国人才，门下有食客数千。秦昭王求贤若渴，听说孟尝君的名气，便想将他招揽到秦国来，封为丞相，不久逃归。后为齐湣王相国。曾联合韩、魏击败楚、秦。齐湣王七年因贵族田甲叛乱事，为湣王所疑，谢病归薛，不久出奔至魏，任相国。曾西合秦、赵与燕共伐破齐。齐襄王立，田文遂保持中立，不久复与莫联合相秦。死后诸子争立，领地薛为齐、魏共同攻灭。",
"XS_banchao":
"东汉时期著名军事家、外交家，史学家班彪的幼子，其长兄班固、妹妹班昭也是著名史学家。班超为人有大志，不修细节，但内心孝敬恭谨，审察事理。他口齿辩给，博览群书。不甘于为官府抄写文书，投笔从戎，随窦固出击北匈奴，又奉命出使西域，在三十一年的时间里，收复了西域五十多个国家，为西域回归，做出了巨大贡献。官至西域都护，封定远侯，世称“班定远”。",
"XS_sulie":
"唐朝杰出的军事家。苏定方少年时便以骁勇善战及气魄惊人闻名，曾随父征讨叛贼，安定乡里。显庆二年，累功升任行军大总管，开始独当一面，并以其非凡战绩和正直为人深受唐高宗的赏识与信任，多次被委以重任。苏定方征西突厥、平葱岭、夷百济、伐高句丽，“前后灭三国，皆生擒其主”，史无前例地将唐朝的版图向西开拓至中亚咸海，国境直抵波斯，向东延伸至朝鲜半岛南部。此后，苏定方历任左骁卫大将军、左武卫大将军，封邢国公。晚年受命担任安集大使，全面负责对吐蕃的军事防御。",
"XS_yinlihua":
"光武帝刘秀元配，东汉第二任皇后。史称阴丽华以美貌著称，刘秀尚未发迹时，就十分仰慕她的美貌，曾感叹道：“娶妻当得阴丽华。”新莽末年，天下大乱，刘秀亦于家乡起兵。昆阳之战后，刘秀于宛城迎娶阴丽华为妻。东汉建立后，阴丽华受封贵人。建武十七年，皇后郭圣通被废，刘秀封阴丽华为皇后。汉明帝即位后，尊阴丽华为皇太后，共在位二十四年。永平七年正月，阴丽华崩逝，年六十。同年二月，与刘秀合葬于原陵，谥号“光烈”。据《后汉书》记载：阴丽华生性仁爱孝顺，怜悯慈爱。性格恭谨俭约，“少嗜玩，不喜笑谑”。有贤后之名。",
"XS_xiexuan":
"东晋名将，豫州刺史谢奕之子、太傅谢安之侄。谢玄有经国才略，善于治军。太元二年，为抵御前秦袭扰，谢安荐谢玄为建武将军、兖州刺史，领广陵相，监江北诸军事。他招募北来民众中的骁勇之士，组建训练一支精锐部队，号为“北府兵”。太元四年，率兵击败前秦军的进攻，进号冠军将军，加领徐州刺史。淝水之战中，谢玄任前锋都督，先遣部将刘牢之率部夜袭洛涧，首战告捷。继而抓住战机，计诱前秦军后撤，乘势猛攻，取得以少胜多的巨大战果。太元九年，率兵为前锋，乘胜开拓中原，先后收复了今河南、山东、陕西南部等地区。后因病改任左将军、会稽内史。",
"XS_fanju":
"著名政治家、军事谋略家，秦国宰相。他主张将韩、魏作为秦国兼并的主要目标，同时应该与齐国等保持良好关系。范遂被拜为客卿，之后，他又提醒昭王，秦国的王权太弱，需要加强王权。秦昭王遂于前266年废太后，并将国内四大贵族赶出函谷关外，拜范雎为相。范雎为人恩怨分明，掌权后先羞辱魏使须贾，之后又迫使魏齐自尽。又举荐郑安平出任秦国大将，王稽出任河东郡守。前262年，长平之战爆发，两军对垒三年后，范雎以反间计使赵国启用无实战能力的赵括代廉颇为将，使得白起大破赵军。长平战后，范雎妒忌白起的军功，借秦昭王之命迫使白起自杀。",
"XS_chenqingzhi":
"CV：九醉书生。南北朝时期南朝梁将领。出身寒门，少为梁武帝萧衍随从，颇受信任。梁普通年间，任武威将军、宣猛将军等职，带兵有方，善抚军士。梁大通二年十月，为飙勇将军，奉命护送降梁的魏北海王元颢北还。次年四月，自铚县至梁国，击败拥兵7万、筑垒9座的魏将丘大千。在考城大败魏将元晖业2万人。五月，连拔荥阳、虎牢二城，长驱直入，护送元颢到洛阳。至此，平三十二城，四十七战，所向无前。陈庆之身体文弱，难开普通弓弩，不善于骑马和射箭，但是却富有胆略，善筹谋，带兵有方，是一位深得众心的儒将。",
"XS_menggong":
"南宋军事家，民族英雄，抗金、抗蒙名将。孟珙出身将门，曾祖孟安、祖父孟林都为岳飞部将。孟珙早年随父抗金，并参与灭金的蔡州之战。宋蒙战争爆发后，孟珙以一人之力统御南宋三分之二战线上的战事，由于其在抵抗蒙古军的杰出表现，被后世军史家称之“机动防御大师”。累官枢密都承旨、京西湖北路安抚制置使，四川宣抚使兼知夔州，封汉东郡开国公。淳祐四年，兼知江陵府。后以宁武军节度使致仕。淳祐六年，孟珙病逝，年五十二。后特赠太师、吉国公，谥号“忠襄”。",
"XS_fankuai":
"出身寒微，早年曾以屠狗为业。西汉开国元勋，大将军，左丞相，著名军事统帅。为吕后妹夫，深得汉高祖刘邦和吕后信任。后随刘邦平定臧荼、卢绾、陈豨、韩信等，为刘邦麾下最勇猛的战将。早年以屠宰狗为业，曾在鸿门宴时出面营救汉高祖刘邦。封舞阳侯，谥武侯。四川宣汉县有樊哙镇。",
"XS_liji":
"唐朝初年名将，与卫国公李靖并称。李勣早年投身瓦岗军，后随李密降唐。一生历事唐高祖、唐太宗、唐高宗三朝，深得朝廷信任和重任。他随唐太宗李世民平定四方，两击薛延陀，平定碛北。后又大破东突厥、高句丽，成为唐朝开疆拓土的主要战将之一。他出将入相，功勋卓著，被朝廷倚为干城，为凌烟阁二十四功臣之一。历任兵部尚书、同中书门下三品、司空、太子太师等职，累封英国公。总章二年，李勣去世，年七十六。册赠太尉、扬州大都督，谥号“贞武”，陪葬昭陵。",
"XS_zhanghao":
"十六国时期前秦将军，与邓羌齐名，并称“万人敌”。张蚝身强力壮又很矫捷，能够拽着牛倒退行走，城墙不论高低，都可翻越而过。初为后赵将领张平的养子，投降前秦之后，先后平定前秦宗室叛乱，攻灭前燕、代国，参与淝水之战。太元九年，迎接长乐公苻丕在晋阳称帝，被任命侍中、司空，上党郡公。太元十年，升任太尉。此后，史料找不到关于张蚝的记载。",
"XS_gengyan":
"东汉开国名将、军事家，云台二十八将第四位。耿弇自幼喜好兵事，后劝父投奔刘秀，被任命为偏将军，跟随刘秀平定河北。建武元年，刘秀称帝，封耿弇为建威大将军、好畤侯。此后，耿弇败延岑、平齐鲁、攻陇右，为东汉的统一立下赫赫战功。建武十三年，耿弇辞去大将军职。永平元年，耿弇去世，谥曰愍侯。耿弇将围点打援、声东击西等战术发挥到了极致，受历代军界推崇，并被视为有志者事竟成的典范。",
"XS_fusu":
"秦朝宗室大臣，秦始皇长子。刚毅勇武，信人而奋士。为人宽仁，有政治远见。直言劝谏父亲，反对坑杀“犯禁者四百六十余人”一事，触怒秦始皇。受命前往上郡，协助大将蒙恬修筑长城、抵御匈奴。秦始皇37年，秦始皇病逝后，遗诏扶苏治丧即位。中车府令赵高联合丞相李斯，拥立始皇第十八子胡亥登基，矫诏逼令扶苏自尽，葬于上郡。",
"XS_jiangxiaobai":
"春秋五霸之首，春秋时齐国第十五位国君，齐桓公是姜太公吕尚的第十二代孙。在齐僖公长子齐襄公和僖公侄子公孙无知相继死于齐国内乱后，公子小白与公子纠争位，成功后即国君位。齐桓公任管仲为相，推行改革，实行军政合一和兵民合一的制度，使齐国逐渐强盛。齐桓公于前681年在北杏同宋、陈、蔡、邾四国诸侯会见，是为平定宋国的动乱。后宋国违背盟约，齐桓公便以周天子的名义率几国诸侯伐宋，迫使宋国求和，此即为“九合诸侯”的第一次。前679年，各诸侯与齐桓公在鄄地盟会，齐桓公从此成为天下诸侯的霸主。此外，齐桓公还灭了谭、遂、鄣等小国。",
"XS_fanzeng":
"秦末农民战争中为项羽主要谋士，被项羽尊为“亚父”。公元前206，范增随项羽攻入关中，劝项羽消灭刘邦势力，未被采纳。后在鸿门宴上多次示意项羽杀刘邦，又使项庄舞剑，意欲借机行刺，终未获成功。汉三年，刘邦被困荥阳，用陈平计离间楚君臣关系，被项羽猜忌，范增辞官归里，途中病死。",
"XS_weizhe":
"秦汉时道家代表人物，思想家，军事家，别称圯上老人、下邳神人，后被道教纳入神谱。《史记·留侯世家》称其避秦世之乱，隐居东海下邳。其时张良因谋刺秦始皇不果，亡匿下邳。于下邳桥上遇到黄石公。黄石公三试张良后，授与《太公兵法》，临别时有言：“十三年后，在济北谷城山下，黄石公即我矣。”张良后来以黄石公所授兵书助汉高祖刘邦夺得天下，并于十三年后，在济北谷城下找到了黄石，取而葆祠之。后世流传有黄石公《素书》和《黄石公三略》。",
"XS_murongchui":
"后燕开国皇帝、军事家，才兼文武，勇猛多谋。建元二年，讨伐宇文逸豆归，导致宇文部散亡。永和五年，乘着后赵皇帝石虎新丧内乱之机，献策攻打后赵，夺取幽州等地，不杀降卒，收服人心。元玺三年，封为吴王。建熙六年，随同太宰慕容恪合力攻破洛阳，拜征南大将军、荆州牧。建熙十年，打败东晋大司马桓温进攻，威名大振。朝廷内讧之际，西投前秦，深得前秦皇帝苻坚赏识。次年，前秦灭亡前燕，回到邺都，密图兴复。太元七年，力劝苻坚进攻东晋，发动淝水之战，屯据郧城，实力保存。建元二十年，建立后燕，亲率兵马，大败北魏，病卒于还师途中，时年七十一，谥号成武皇帝，庙号世祖。",
"XS_yelvchucai":
"蒙古帝国时期的政治家。辽朝东丹王耶律倍八世孙、金朝尚书右丞耶律履之子。在金仕至左右司员外郎。蒙古军攻占金中都时，成吉思汗收耶律楚材为臣。耶律楚材先后辅弼成吉思汗父子三十余年，担任中书令十四年之久。提出以儒家治国之道并制定了各种施政方略，为蒙古帝国的发展和元朝的建立奠定了基础。乃马真后称制时，耶律楚材遭到排挤，渐失信任，他因此抑郁而死。后赠经国议制寅亮佐运功臣、太师、上柱国，追封广宁王，谥号“文正”。",
"XS_changyuchun":
"元末红巾军杰出将领，明朝开国名将。元顺帝至正十五年，归附朱元璋，自请为前锋，力战克敌，尝自言能将十万众，横行天下，军中称常十万，官至中书平章军国重事，兼太子少保，封鄂国公。洪武二年，北伐中原，暴卒军中，年仅四十，用宋太宗丧韩王赵普故事，追赠翊运推诚宣德靖远功臣、开府仪同三司、上柱国、太保、中书右丞相，追封开平王，谥号忠武，配享太庙。",
"XS_mengtian":
"秦朝时期名将，上卿蒙骜之孙，内史蒙武之子。出身名将世家，自幼胸怀大志。率军攻破齐国，拜为内史，深得秦始皇宠信。秦统一六国后，率领三十万大军北击匈奴，收复河南之地，威震匈奴，誉为“中华第一勇士”。中国西北最早的开发者，是古代开发宁夏第一人。监修万里长城和九州直道，克服了国内交通闭塞的困境，大大促进了北方各族人民经济、文化的交流和融合。秦始皇去世后，中车令赵高、丞相李斯、公子胡亥暗中谋划政变，导致蒙恬吞药自杀。",
"XS_weizifu":
"CV：唐倾歌。卫子夫是汉武帝刘彻的第二任皇后，史称孝武卫皇后，也是中国历史上第一位拥有独立谥号的皇后。卫子夫原为平阳公主家歌女。汉武帝刘彻十八岁时去探望平阳公主时，看上了卫子夫，卫子夫因此得以入宫，并于建元三年（前138年）封为夫人，元朔元年立为皇后。最后在征和二年卷入巫蛊之祸中，自杀身亡。谥思后，葬桐柏亭。身驻汉宫凡49年，在皇后位38年，育有一男三女。",
"XS_lixiaogong":
"唐朝宗室、名将,位列凌烟阁二十四功臣第二。武德元年，负责经略巴蜀，攻占三十余州，俘获朱粲。武德二年，任信州总管，献计并率军攻打南方的萧铣，立下战功。武德四年，任夔州总管，大造战舰，练习水军，李靖为副将，灭萧铣，受封荆州大总管，成功招抚岭南诸州。武德六年，又率军攻打辅公祏，将江南平定，因功拜扬州大都督，之后因被人告发谋反而免官改任宗正卿，又历任凉州都督、晋州刺史。武德九年，赐实封一千二百户。太宗李世民即位后升任礼部尚书，改封河间郡王。贞观初，任礼部尚书，以功封河间郡王，好游宴，晚年以歌舞美人自娱。",
"XS_lianghongyu":
"宋朝著名抗金女英雄，祖父与父亲都是武将出身，梁红玉自幼随父兄练就了一身功夫。史书中不见其名，只称梁氏。“红玉”是其战死后各类野史和话本中所取的名字，首见于明朝张四维所写传奇《双烈记》：“奴家梁氏，小字红玉。父亡母在，占籍教坊，东京人也。”后结识韩世忠，两人初次见面，是在平定方腊起义后的庆功宴上，梁红玉感其恩义，以身相许，韩赎其为妾，原配白氏死后成为韩世忠的正妻。",
"XS_yumeiren":
"CV：唐倾歌。楚汉之争时期西楚霸王项羽的美人，曾在定四面楚歌的困境下一直陪伴在项羽身边，项羽为其作《垓下歌》。相传虞姬容颜倾城，才艺并重，舞姿美艳，并有“虞美人”之称。后人曾根据《垓下歌》，以及相传是虞姬所作的《和垓下歌》，臆想她的结局是公元前202年楚汉战争项羽兵败之际，在楚营内自刎，由此流传了一段关于“霸王别姬”的传说。",
"XS_wangzhaojun":
"CV：菜籽。西汉南郡秭归人，与貂蝉、西施、杨玉环并称中国古代四大美女，是中国古代四大美女之一的“落雁”。成语中「沉鱼落雁」、「画工弃市」记载她的生平典故。竟宁元年正月，南匈奴呼韩邪单于来长安朝觐汉天子，自请为婿。元帝遂将昭君赐给了呼韩邪单于，并改元为竟宁。单于非常高兴，上书表示愿意永保塞上边境。王昭君抵达匈奴后，被称为宁胡阏氏。昭君和呼韩邪单于共同生活了三年，生下一子，取名伊屠智伢师，封为右日逐王。",
"XS_baiqi":
"战国时期杰出的军事家、“兵家”代表人物。熟知兵法，善于用兵，交好秦宣太后和穰侯魏冉的关系很好。辅佐秦昭王，屡立战功。伊阕之战，大破魏韩联军；伐楚之战，攻陷楚都郢城。长平之战，重创赵国主力。担任秦军主将30多年，攻城70余座，为秦国统一六国做出了巨大的贡献，受封为武安君。功高震主，得罪应侯，接连贬官。秦昭襄王五十年，赐死于杜邮。作为中国历史上继孙武、吴起之后又一个杰出的军事家、统帅，白起与廉颇、李牧、王翦并称为战国四大名将，名列武庙十哲。",
"XS_hanxin":
"CV：九醉书生。西汉开国功臣、军事家、淮阴侯，兵家四圣之一，汉初三杰之一，中国军事思想“兵权谋家”的代表人物，被后人奉为“兵仙”、“神帅”。“韩信点兵，多多益善”是有关于他的典故。秦末，参加反秦斗争，投奔项梁、项羽，未得到任用。转投刘邦，经夏侯婴推荐，拜治粟都尉，经萧何保为大将，为刘邦制定了汉中对策。刘邦兵败于彭城后，韩信先破楚军于京、索之间，后平定魏国。请命北伐拿下代国，刘邦收其精兵后背水一战击败赵国，派人降服燕国。支援刘邦以及清除项羽派往赵国的楚奇兵，平定剩下的赵国城邑。刘邦成皋兵败夺其精兵后，奉命攻打齐国，并于潍水全歼龙且二十万楚军。韩信攻打楚国，项羽与刘邦签订鸿沟协议。刘邦听从张良、陈平计策撕毁鸿沟协议，追击项羽失败。汉五年，带兵会师垓下，围歼楚军。",
"XS_wuqi":
"CV：容返。战国初期军事家、政治家、改革家，兵家代表人物。一生历仕鲁、魏、楚三国，通晓兵家、法家、儒家三家思想，在内政军事上都有极高的成就。在楚国时，辅佐楚悼王主持变法。周安王二十一年，因变法得罪守旧贵族，惨遭杀害。著作有《吴子兵法》，传于世，与兵圣孙武并称“孙吴”。唐肃宗时，位列武成王庙内，成为武庙十哲之一。宋徽宗时，追封广宗伯，成为武庙七十二将之一。",
"XS_sunwu":
"CV：蚩羽。春秋时期齐国人，出生于军事世家，被吴王阖闾赏识，于是孙武“吴宫教战”，当上了大将军，从此，吴国称霸中原，《史记》上称在孙武为将期间吴国“北威齐晋”“西破强楚”“南服夷越”，“郢都之战\"时，孙武以兵3万打败21万楚国军队，攻破郢都，几近灭亡楚国，直到阖闾薨，夫差继位后，孙武离开了吴国，隐居山林，重新编订《孙子兵法》(又称《吴孙子兵法》，是世界上仅存的最早兵书，被誉为“兵学圣典”，孙武也被誉为“兵学之父”)，因其军事才华，后世之人称其“兵圣”，唐代时，孙武被列入“武庙十哲”，并且为将首。",
"XS_lianpo":
"CV：九醉书生。战国末期赵国名将，勇猛果敢，屡立战功，闻名于诸侯。长平之战前期，采固守的方式，成功抵御了秦军进攻，后为赵括所取代，致使长平之战惨败。九年后，击退燕国入侵，斩杀燕军主帅栗腹，进军包围燕都三月，令对方割五城求和，拜为相国，封为信平君。赵悼襄王即位后，郁郁不得志，先后出奔魏国大梁，老死于楚地。",
"XS_jiangshang":
"CV：蚩羽。姜姓，吕氏，名尚，一名望，字子牙，或单呼牙，别号飞熊，因其先祖辅佐大禹平水土有功被封于吕，故以吕为氏，也称吕尚。相传姜子牙72岁时在渭水之滨的磻溪垂钓，遇到了求贤若渴的周文王，被封为“太师”（武官名），称“太公望”，俗称太公，被周武王尊为“师尚父”。姜子牙辅佐武王伐纣建立了周朝，是齐国的缔造者，周文王倾商，武王克纣的首席谋主、最高军事统帅与西周的开国元勋，齐文化的创始人，亦是中国古代的一位影响久远的杰出的韬略家、军事家与政治家,为各家所推崇，视为祖先。吕望为《武庙》主祭对象，同《文庙》的孔子相辉映。",
"XS_zhangjizhongjing":
"张仲景，名机，字仲景，东汉南阳涅阳县（今河南省邓州市穰东镇张寨村）人。东汉末年著名医学家，被后人尊称为医圣。张仲景广泛收集医方，写出了传世巨著《伤寒杂病论》。它确立的辨证论治原则，是中医临床的基本原则，是中医的灵魂所在。在方剂学方面，《伤寒杂病论》也做出了巨大贡献，创造了很多剂型，记载了大量有效的方剂。其所确立的六经辨证的治疗原则，受到历代医学家的推崇。",
"XS_xiangji":
"秦末农民起义领袖，杰出军事家，楚国名将项燕之孙。勇猛好武，早年跟随叔父项梁在吴中起义反秦。项梁阵亡后，率军渡河援救赵王歇。巨鹿之战，击破章邯和王离领导的秦军主力，领军灭亡秦国。自称西楚霸王，定都于彭城，大封灭秦功臣将领，拥立六国贵族后代为王。汉王刘邦从汉中出兵，掀起历时四年的楚汉之争。项羽在正面战场屡破刘邦。彭越不断后方破坏楚军补给。韩信统一了黄河以北，挥师南下。项羽刚愎自用，猜疑亚父范增，终为刘邦所败。公元前202年，项羽退守垓下，突围乌江。最后霸王别姬，自刎于乌江旁。",
"XS_lijing":
"CV：不问是非。字药师,雍州三原人,唐朝杰出的军事家。李靖仪表魁伟，善于用兵，长于谋略。初仕隋朝，拜马邑郡丞。晋阳起兵后，效力唐朝，从平王世充和窦建德，南平萧铣和辅公祏，北灭东突厥，西破吐谷浑，为唐王朝的建立及发展立下赫赫战功，成为凌烟阁二十四功臣之一。历任检校中书令、兵部尚书，拜尚书右仆射，封卫国公，世称李卫公。贞观二十三年（649年），李靖病逝，终年七十九。册赠司徒、并州都督，谥号“景武”，陪葬昭陵。唐玄宗时配享武成王庙，位列十哲。",
"XS_yuefei":
"CV：九醉书生。字鹏举，相州汤阴人。南宋时期抗金名将、军事家、战略家、民族英雄、书法家、诗人，位列南宋“中兴四将”之首。岳飞是南宋杰出的统帅，他重视人民抗金力量，缔结了“联结河朔”之谋，主张黄河以北的民间抗金义军和宋军互相配合，以收复失地；治军赏罚分明，纪律严整，又能体恤部属，以身作则，率领的“岳家军”号称“冻死不拆屋，饿死不打掳”。金军有“撼山易，撼岳家军难”的评语，以示对岳家军的由衷敬佩。",
"XS_qinqiong":
"CV：白袖。隋末唐初名将。勇武过人，远近闻名。初仕隋朝，跟随来护儿、张须陀、裴仁基帐下任职。后来，投奔瓦岗起义军领袖李密。瓦岗败亡后，投靠郑国王世充。不耻于王世充奸诈，投奔大唐。跟随秦王李世民南征北战，屡立战功，浑身伤病，拜左武卫大将军、翼国公。贞观十二年，病逝，追赠为徐州都督、胡国公，谥号为壮，列入凌烟阁二十四功臣之一。",
"XS_yingzheng":
"CV：九醉书生。中国古代政治家、战略家、改革家，首次完成中国大一统的政治人物，也是中国第一个称皇帝的君主。秦始皇出生于赵国都城邯郸，后回到秦国。前247年，13岁时即王位。前238年，平定长信侯嫪毐的叛乱，之后又除掉权臣吕不韦，开始亲政。重用李斯、尉缭，自前230年至前221年，先后灭韩、赵、魏、楚、燕、齐六国，完成了统一中国大业，建立起一个中央集权的统一的多民族国家——秦朝。秦始皇奠定中国两千余年政治制度基本格局，被明代思想家李贽誉为“千古一帝”。",
"XS_lishimin":
"CV：不问是非。杰出的政治家、战略家、军事家、诗人。生于武功别馆，少年从军，擅长骑射，曾往雁门关解救隋炀帝。首倡晋阳起兵，封为敦煌郡公，善于用兵，为唐朝的建立与统一过程立下赫赫战功。设立文学馆，笼络人才。武德九年，发动“玄武门之变”，杀死太子李建成、齐王李元吉及二人所有儿子，册立为太子。唐高祖李渊退位后，正式即位，年号贞观。在位初期，听取群臣意见，虚心纳谏。对内文治天下，厉行节约，劝课农桑，实现休养生息、国泰民安，开创“贞观之治”。对外开疆拓土，攻灭东突厥与薛延陀，征服高昌、龟兹、吐谷浑，重创高句丽，设立安西四镇，让各民族融洽相处，北方各族共同尊称为“天可汗”，为后来唐朝一百多年的盛世奠定重要基础。",
"XS_sunbin":
"本名孙伯灵，是中国战国时期军事家，华夏族，山东鄄城人。出生于阿、鄄之间，是孙武的后代。孙膑曾与庞涓为同窗，因受庞涓迫害遭受膑刑，身体残疾，后在齐国使者的帮助下投奔齐国，被齐威王任命为军师，辅佐齐国大将田忌两次击败庞涓，取得了桂陵之战和马陵之战的胜利，奠定了齐国的霸业。唐德宗时将孙膑等历史上六十四位武功卓著的名将供奉于武成王庙内，被称为武成王庙六十四将。宋徽宗时追尊孙膑为武清伯，位列宋武庙七十二将之一。",
"XS_tiandan":
"战国时期齐国名将，齐国远房宗室。初任市掾，管理临淄市场秩序。乐毅率领五国军队，攻打齐国。危亡之际，田单坚守即墨，以火牛阵大破燕军，收复失地七十余城，拜为相国，封为安平君。后来，受到齐王猜忌，前往赵国出将入相，封号都平君，死后葬于安平城内。",
"XS_yueyi":
"中山灵寿人，战国后期杰出的军事家，魏将乐羊后裔，拜燕上将军，受封昌国君，辅佐燕昭王振兴燕国。公元前284年，他统帅燕国等五国联军攻打齐国，连下70余城，创造了中国古代战争史上以弱胜强的著名战例，报了强齐伐燕之仇。后因受燕惠王猜忌，投奔赵国，被封于观津，号为望诸君。",
"XS_huoqubing":
"CV：不问是非。西汉中期名将、军事家、外戚，是我国历史上著名的民族英雄。官至大司马骠骑将军，封冠军侯。汉武帝皇后卫子夫和大将军卫青的外甥，权臣霍光异母兄。霍去病用兵灵活，注重方略，不拘古法，善于长途奔袭、快速突袭和大迂回、大穿插、歼灭战。17岁为票姚校尉，率领八百骑兵深入大漠，两次功冠全军，封“冠军侯”。19岁指挥两次河西之战，歼灭和招降河西匈奴近10万人，获匈奴祭天金人，直取匈奴圣地祁连山。这是华夏政权第一次占领河西走廊，从此丝绸之路得以开辟。漠北之战消灭匈奴左部主力7万余人，封狼居胥。徙乌桓至匈奴左部故地，以牵制匈奴。",
"XS_gongshuban":
"春秋时期鲁国人，姬姓，公输氏，名班，人称公输盘、公输般、班输，尊称公输子，又称鲁盘或者鲁般，惯称“鲁班”。鲁班的名字实际上已经成为古代劳动人民智慧的象征。2400多年来，人们把古代劳动人民的集体创造和发明也都集中到他的身上。因此，有关他的发明和创造的故事，实际上是中国古代劳动人民发明创造的故事。鲁班的名字实际上已经成为古代劳动人民智慧的象征。",
"XS_yangzaixing":
"新宁崀山人，南宋抗金名将。原是曹成部将，后降于岳飞，成为岳飞部将，跟随岳飞抗击金军，曾试图单枪匹马冲阵擒获金兀术，失败后仍能单骑而还。绍兴十年（1140年），杨再兴与金人在小商桥相遇，杨再兴寡不敌众，中箭无数，奋战而亡。",
"XS_modi":
"CV：蚩羽。东周春秋末期战国初期宋国人。墨家学派的创始人，也是战国时期著名的思想家、教育家、科学家、军事家。墨子是中国历史上唯一一个农民出身的哲学家，墨子创立了墨家学说，墨家在先秦时期影响很大，与儒家并称“显学”。他提出了“兼爱”、“非攻”、“尚贤”、“尚同”、“天志”、“明鬼”、“非命”、“非乐”、“节葬”、“节用”等观点。以兼爱为核心，以节用、尚贤为支点。墨子在战国时期创立了以几何学、物理学、光学为突出成就的一整套科学理论。在当时的百家争鸣，有“非儒即墨”之称。",
"XS_zhuanzhu":
"中国古代“五大刺客”之一，春秋时吴国棠邑（今南京市六合区西北）人，吴公子光（即吴王阖闾）欲杀王僚自立，伍子胥把他推荐给公子光。公元前515年，公子光乘吴内部空虚，与专诸密谋，以宴请吴王僚为名，藏匕首于鱼腹之中进献（鱼肠剑），当场刺杀吴王僚，专诸也被吴王僚的侍卫杀死。公子光自立为王，是为吴王阖闾，乃以专诸之子为卿。鱼肠剑出于专诸刺王僚。",
"XS_fanli":
"楚国宛地三户人。春秋末期政治家、军事家、经济学家和道家学者。曾献策扶助越王勾践复国，后隐去。著《范蠡》二篇，今佚。范蠡为中国早期商业理论家，楚学开拓者之一。被后人尊称为“商圣”，\"南阳五圣\"之一。虽出身贫贱，但是博学多才，与楚宛令文种相识、相交甚深。因不满当时楚国政治黑暗、非贵族不得入仕而一起投奔越国，辅佐越国勾践。传说他帮助勾践兴越国，灭吴国，一雪会稽之耻。功成名就之后急流勇退，化名姓为鸱夷子皮，遨游于七十二峰之间。期间三次经商成巨富，三散家财。后定居于宋国陶丘，自号“陶朱公”。",
"XS_zhuyuanzhang":
"CV：蚩羽。濠州钟离人，汉族。政治家，军事家，战略家。明朝开国皇帝，年号洪武。朱元璋幼时贫穷，曾为刘德地主放牛。至正四年入皇觉寺，25岁时参加郭子兴领导的红巾军起义反抗元朝，至正十六年攻占集庆路，将其改为应天府。至正二十七年命徐达、常遇春以“驱逐胡虏，恢复中华”为号召，举兵北伐，以推翻元朝统治。洪武元年初，在应天府称帝，国号大明，年号洪武。当年秋攻占大都，结束了元朝在全国的统治。又平定西南、西北、辽东等地，最终统一全国。",
"XS_shangyang":
"CV：不问是非。战国时期政治家、改革家、思想家，法家代表人物，卫国国君后代。商鞅辅佐秦孝公，积极实行变法，使秦国成为富裕强大的国家，史称“商鞅变法”。政治上，改革了秦国户籍、军功爵位、土地制度、行政区划、税收、度量衡以及民风民俗，并制定了严酷的法律；经济上，主张重农抑商、奖励耕战；军事上，统率秦军收复了河西之地，赐予商于十五邑，号为商君，史称为商鞅 。公元前338年，秦孝公逝世后，商鞅被公子虔指为谋反，战败死于彤地，尸身车裂，全族被杀。",
"XS_liubang":
"CV：蚩羽。沛郡丰邑中阳里人。杰出的政治家、战略家和军事指挥家，汉朝开国皇帝。出身农家，豁达大度，不事生产。初仕秦朝，授沛县泗水亭长，释放刑徒，亡匿于芒砀山中。陈胜起义之后，集合三千子弟响应，攻占沛县，自称沛公，投奔名将项梁，任砀郡长，受封为武安侯，统领砀郡兵马。率军进驻灞上，接受秦王子婴投降，灭亡秦朝。废除秦朝苛法，约法三章。鸿门宴之后，受封为汉王，统治巴蜀及汉中一带。楚汉战争前期，屡败屡战。能够知人善任，注意虚心纳谏，充分发挥部下的才能，积极整合反对项羽的力量，终于击杀西楚霸王项羽，赢得楚汉之争，统一天下。",
"XS_kongqiu":
"CV：蚩羽。春秋末期鲁国陬邑人，祖籍宋国栗邑，中国古代思想家、教育家，儒家学派创始人。孔子开创了私人讲学之风，倡导仁义礼智信。有弟子三千，其中贤人七十二。他曾带领部分弟子周游列国十三年，晚年修订《诗》《书》《礼》《乐》《易》《春秋》六经。孔子是当时社会上最博学者之一，去世后，其弟子及再传弟子把孔子及其弟子的言行语录和思想记录下来，整理编成《论语》。该书被奉为儒家经典。孔子在世时就被尊奉为“天纵之圣”“天之木铎”，更被后世统治者尊为孔圣人、至圣、至圣先师、大成至圣文宣王先师、万世师表。",
"XS_lier":
"CV：蚩羽。春秋末期人，生卒年不详，大约出生于公元前571年春秋晚期陈国苦县。中国古代思想家、哲学家、文学家和史学家，道家学派创始人和主要代表人物。老子与庄子并称老庄。在道教中，老子被尊为道教始祖，称“太上老君”。在唐朝，老子被追认为李姓始祖。老子思想对中国哲学发展具有深刻影响，其思想核心是朴素的辩证法。在政治上，老子主张无为而治、不言之教。在权术上，老子讲究物极必反之理。在修身方面，老子是道家性命双修的始祖，讲究虚心实腹、不与人争的修持。传世作品《道德经》（又称《老子》）。",
"XS_liguang":
"CV：九醉书生。陇西成纪人，中国西汉时期的名将，先祖为秦朝名将李信。汉文帝十四年从军击匈奴因功为中郎。景帝时，先后任北部边域七郡太守。武帝即位，召为未央宫卫尉。元光六年，任骁骑将军，领万余骑出雁门击匈奴，因众寡悬殊负伤被俘。匈奴兵将其置卧于两马间，李广佯死，于途中趁隙跃起，奔马返回。后任右北平郡太守。匈奴畏服，称之为飞将军，数年不敢来犯。元狩四年，漠北之战中，李广任前将军，因迷失道路，未能参战，愤愧自杀。",
"XS_limu":
"战国时期赵国柏仁人，战国时期的赵国名将、军事家。战国末期，李牧是赵国赖以支撑危局的唯一良将，素有“李牧死，赵国亡”之称。李牧生平事迹大致可划分为两个阶段，先是在赵国北部边境，抗击匈奴；后以抵御秦国为主，因在宜安之战重创秦军，得到武安君的封号。公元前229年，赵王迁中了秦国的离间计，听信谗言夺取了李牧的兵权，不久后将李牧杀害。李牧是战国末年东方六国最杰出的将领。深得士兵和人民的爱戴，有着崇高的威望。在一系列的作战中，他屡次重创敌军而未尝败，显示了高超的军事指挥艺术。",
"XS_zhangliang":
"CV：不问是非。秦末韩国人。秦末汉初杰出谋臣，与韩信、萧何并称为“汉初三杰”。张良先辈在韩国首都阳翟，任过五代韩王之国相。力劝刘邦在鸿门宴上卑辞言和，保存实力，并疏通项羽季父项伯，使得刘邦顺利脱身。凭借出色的智谋，协助汉王刘邦赢得楚汉战争，建立大汉王朝，帮助吕后之子刘盈成为皇太子，册封为留侯。精通黄老之道，不恋权位。晚年，跟随赤松子云游四海。张良去世后，谥号文成。《史记·留侯世家》专门记载了张良的生平。汉高祖刘邦在洛阳南宫评价他说：“夫运筹策帷帐之中，决胜于千里之外，吾不如子房。”",
"XS_limi":
"CV：蚩羽。祖籍辽东郡襄平县，生于京兆府。唐朝中期著名政治家、谋臣、学者。自幼聪颖，深得唐玄宗赏识，令其待诏翰林，为东宫属官。后遭宰相杨国忠忌恨，只得归隐名山。安史之乱时，唐肃宗即位于灵武，召李泌参谋军事，宠遇有加。但他又被权宦李辅国等诬陷，再次隐居衡岳。唐代宗即位后，再被召为翰林学士，屡遭宰相元载、常衮排挤，被外放至地方任职。唐德宗时入朝拜相，参预内政、外交、军事、财政等方面的筹划，对内勤修军政、调和将相，对外联结回纥、大食等国遏制吐蕃，达成“贞元之盟”，使边陲安定。累官至中书侍郎、同平章事，封邺县侯，世称“李邺侯”。",
"XS_suqin":
"战国时期著名的纵横家、外交家和谋略家。早年投入鬼谷子门下，学习纵横之术。学成游历多年，潦倒而归。随后，刻苦攻读《阴符》，游说列国，得到燕文公赏识，出使赵国，提出“合纵”六国以抗秦的战略思想，并最终组建合纵联盟，任“从约长”，兼佩六国相印，使秦国十五年不敢出兵函谷关。联盟解散后，齐国攻打燕国，苏秦说齐归还燕国城池。后自燕至齐，从事反间活动，被齐国任为客卿，齐国众大夫因争宠派人刺杀，苏秦死前献策诛杀了刺客。",
"XS_zhangyixs":
"CV：不问是非。战国时期魏国安邑人。魏国贵族后裔，战国时期著名的纵横家、外交家和谋略家。早年入于鬼谷子门下，学习纵横之术。出山之后，首创“连横”的外交策略，游说六国入秦。得到秦惠王赏识，封为相国，奉命出使游说各国，以“横”破“纵”，促使各国亲善秦国，受封为武信君。公元前310年，秦惠王死后，秦武王继位。张仪失去宠信，出逃魏国，担任相国，次年去世。",
"XS_licunxiao":
"唐末著名的猛将，武艺非凡，勇猛过人。李存孝是晋王李克用麾下一员骁将，也是李克用众多的“义儿”中的一个，因排行十三，故称为“十三太保”，而且也是十三太保中最出名的。李存孝天生神力，被晋王李克用看中，收为义子。随着李克用南征北战，攻无不克，战无不胜。《旧五代史唐书列传五李存孝传》中记载：“及壮，便骑射，骁勇冠绝，常将骑为先锋，未尝挫败；从武皇救陈、许，逐黄寇，及遇难上源，每战无不克捷。” ",
"XS_liuji":
"元末明初军事家、政治家、文学家，明朝开国元勋。洪武三年封诚意伯，故又称刘诚意。武宗正德九年追赠太师，谥号文成，后人称他刘文成、文成公。元至顺年间举进士。博通经史，尤精象纬之学，时人比之诸葛亮。至正十九年，朱元璋闻刘基及宋濂等名，礼聘而至。他上书陈述时务十八策，倍受宠信。参与谋划平定张士诚、陈友谅与北伐中原等军事大计。吴元年为太史令，进《戊申大统历》。奏请立法定制，以止滥杀。他以神机妙算、运筹帷幄著称于世。",
"XS_xiaohe":
"西汉初年政治家、宰相，西汉开国功臣之一。沛丰人，早年任秦沛县县吏，秦末辅佐刘邦起义。攻克咸阳后，他接收了秦丞相、御史府所藏的律令、图书，掌握了全国的山川险要、郡县户口，对日后制定政策和取得楚汉战争胜利起了重要作用。楚汉战争时，他留守关中，使关中成为汉军的巩固后方，不断地输送士卒粮饷支援作战，对刘邦战胜项羽，建立汉代起了重要作用。萧何采摭秦六法，重新制定律令制度，作为《九章律》。在法律思想上，主张无为，喜好黄老之术。汉十一年又协助刘邦消灭韩信、英布等异姓诸侯王。惠帝二年七月辛未去世，谥号“文终侯”。",
"XS_chenping":
"西汉王朝的开国功臣之一。秦二世元年陈平往事魏王咎。不久受谗亡归项羽，随从入关破秦。刘邦还定三秦时，又间行降汉。拜为都尉，使参乘、典护军。后历任亚将、护军中尉。先后参加楚汉战争和平定异姓王侯叛乱诸役，成为汉高祖刘邦的重要谋士。汉高祖死后，吕后以陈平为郎中令，傅教惠帝。惠帝六年，与王陵并为左、右丞相。王陵免相后陈平擢为右丞相，但因吕后大封诸吕为王，陈平被削夺实权。吕后死，陈平与太尉周勃合谋平定诸吕之乱，迎立代王为文帝。文帝初，陈平让位周勃，徙为左丞相，因明于职守，受到文帝赞赏。不久周勃罢相，陈平专为丞相。 孝文二年死。",
"XS_wangjian":
"战国时期秦国名将、杰出的军事家。少时喜欢军事，随侍秦王嬴政。率军攻破赵国都城邯郸，扫平三晋地区。统兵60万大败项燕，消灭楚国。联同儿子王贲，成为秦始皇统一六国、开疆扩土的最大功臣，功绩卓著，拜太师，封为武成侯。急流勇退，没有辅佐秦始皇建立德政，巩固国家根基。和白起比较，可谓“尺有所短，寸有所长”。凭借杰出的军事指挥才能，与白起、李牧、廉颇并称“战国四大名将”。后世尊为琅琊王氏和太原王氏的共同始祖。",
"XS_tiemuzhen":
"CV：九醉书生。蒙古族乞颜部人。大蒙古国可汗，世界史上杰出的政治家、军事家。绍兴三十二年，生于漠北斡难河上游地区，取名铁木真。淳熙十一年前后，成为蒙古乞颜部可汗，一步步统一蒙古诸部。开禧二年，建立大蒙古国，尊号“成吉思汗”，颁布了《成吉思汗法典》。多次发动对外战争，征服西达中亚、东欧的黑海海滨地区。宝庆三年，兴兵征伐西夏，途中去世，秘密安葬。元世祖至元二年十月，追尊为太祖。至元三年十月，太庙建成后，追谥圣武皇帝。元武宗至大二年，追谥“法天启运圣武皇帝”，庙号太祖。",
"XS_zhaokuangyin":
"五代至北宋初年军事家、武术家，宋朝开国皇帝。后周护圣都指挥使赵弘殷次子，母为杜氏。赵匡胤在后汉时投奔枢密使郭威，致身行伍。他受后周世宗柴荣器重，于征伐南唐时屡建战功。柴荣病重时，被任命为殿前都点检，掌管殿前禁军。显德七年，受命抵御北汉及契丹联军。旋即在“陈桥兵变”中被拥立为帝，并回京逼迫后周恭帝禅位。同年，赵匡胤登基为帝，改元建隆，国号“宋”，史称“宋朝”、“北宋”。",
"XS_fujian":
"CV：不问是非。十六国时期前秦政权君主，惠武帝苻洪之孙、丞相苻雄之子。在位前期，励精图治，重用汉人王猛，推行“休养生息，加强生产”政策，实现国力强盛，接着以军事力量消灭北方多个独立政权，成功统一北方，并攻占了东晋的蜀地，与东晋南北对峙。建元十九年，挥师南下，发动淝水之战。意图消灭东晋，一统天下。最终败给东晋谢玄率领的北府兵，导致前秦陷入混乱，各民族纷纷独立。建元二十一年，为秦武昭帝姚苌杀害，终年四十八，谥号宣昭皇帝，庙号世祖。",
"XS_xueli":
"CV：白袖。唐朝初年名将，北魏河东王薛安都六世孙。薛仁贵出身于河东薛氏南祖房，于贞观末年投军，征战数十年，曾大败九姓铁勒，降服高句丽，击破突厥，功勋卓著，留下了“良策息干戈”、“三箭定天山”、“神勇收辽东”、“仁政高丽国”、“爱民象州城”、“脱帽退万敌”等典故。唐高宗时，薛仁贵累官至瓜州长史、右领军卫将军、检校代州都督，封平阳郡公。永淳二年，薛仁贵去世，年七十。册赠左骁卫大将军、幽州都督。著有《周易新注本义》十四卷，今已佚。",
"XS_ouyezi":
"春秋末期到战国初期越国人。中国古代铸剑鼻祖，龙泉宝剑创始人。曾为越王允常铸五剑，名湛卢、纯钧、胜邪、鱼肠、巨阙。后因风胡子之邀，与干将夫妇赴楚为楚王铸龙渊、泰阿、工布三剑。欧冶子诞生时，正值东周列国纷争，先是吴国攻破楚国，后吴越先后吞并长江以南45国。少年时代，他从母舅那里学会冶金技术，开始冶铸青铜剑和铁锄、铁斧等生产工具。他肯动脑筋，具有非凡的智慧；他身体强健，能刻苦耐劳。他发现铜和铁性能的不同之处，冶铸出第一把铁剑“龙渊”，开创中国冷兵器之先河。",
"XS_ranmin":
"冉魏政权开国皇帝，西华侯冉良之子。果断敏锐，以勇猛著称。出仕后赵，授游击将军，封修成侯。数从征伐，屡立战功。石虎死后，拥立石鉴，然后屠胡灭石。永兴元年，即位称帝，建立冉魏。永兴三年，兵败突围不遂，为前燕君主慕容儁所擒，斩于遏陉山，追谥武悼天王。冉闵后人冉华的墓志铭则称冉闵为“平帝”。",
"XS_qijiguang":
"CV：不问是非。明朝抗倭名将，杰出的军事家、书法家、诗人、民族英雄。戚继光在东南沿海抗击倭寇十余年，扫平了多年为虐沿海的倭患，确保了沿海人民的生命财产安全；后又在北方抗击蒙古部族内犯十余年，保卫了北部疆域的安全，促进了蒙汉民族的和平发展，写下了十八卷本《纪效新书》和十四卷本《练兵实纪》等著名兵书，还有《止止堂集》及在各个不同历史时期呈报朝廷的奏疏和修议。同时，戚继光又是一位杰出的兵器专家和军事工程家，他改造、发明了各种火攻武器；他建造的大小战船、战车，使明军水路装备优于敌人。",
"XS_liuxiu":
"东汉王朝建立者，汉高祖刘邦九世孙。西汉建平元年，生于陈留郡济阳宫。适逢王莽篡立新朝，倒行逆施，天下大乱。作为汉室宗亲，随兄刘演起兵于南阳郡，号“舂陵军”。更始三年，公开决裂更始政权，即位于河北鄗县南千秋亭，尊奉汉元帝为皇考，光复汉室，定都于洛阳。经过长达12年统一战争，灭亡河北、关东、陇右、西蜀等地的割据势力，结束农民战争、军阀混战与地方割据局面。平定动乱之后，励精图治。政治上，改革官制，整饬官风吏治，精简结构，优待功臣；经济上，休养生息，恢复发展经济；文化上，大兴儒学、推崇气节，开创中国历史上“风化最美、儒学最盛”的“光武中兴”时代。",
"XS_guanyiwu":
"CV：不问是非。春秋时期齐国人，出身贫困，与老母相依为命，性至孝，曾经为老母诈死当了逃兵，被天下人笑话，和鲍叔牙联合经商之时也占他便宜，被视为小人，但鲍叔牙视之为知己。管仲对齐国进行了很大程度的改革，使得齐国大大强盛起来，不仅发动经济战争，而且锄强扶弱，匡扶正义，打击非华夏族的异族，扶持周天子，史称“九合诸侯，一匡天下”。齐国成为天下至霸，齐桓公成为“五霸之首”，因其功勋以及极其非凡的才华，管仲被称为“华夏第一相”，并且被列入“武庙十哲”为后世供奉。",
"XS_wangxu":
"CV：蚩羽。鬼谷子王诩，一作王禅，道号玄微子，战国时期显赫人物。相传，其额前四颗肉痣，成鬼宿之象。著名谋略家、道家代表人物、兵法集大成者、纵横家的鼻祖，精通百家学问，因隐居云梦山鬼谷，故自称鬼谷先生。鬼谷子常入山修炼，深谙道法，神妙莫测。“王禅老祖”是后人对鬼谷子的称呼，为老学五派之一。他通天彻地，智慧卓绝，人不能及。一曰数学，日星象纬，在其掌中，占往察来，言无不验；二曰兵学，六韬三略，变化无穷，布阵行兵，鬼神不测；三曰言学，广记多闻，明理审势，出辞吐辩，万口莫当；四曰出世，修真养性，祛病延年，服食导引，平地飞升。 ",
"XS_hanfei":
"战国末期韩国人。杰出的思想家、哲学家和散文家，法家代表人物，被誉为最得老子思想精髓的两个人之一。韩非将商鞅的，申不害的「术」和慎到的「势」集于一身，并且将老子的辩证法、朴素唯物主义与法融为一体。他的学说一直是中国封建统治阶级运用的基础。其文学功底之深厚，为后世留下了大量名言、名著。",
"XS_lishizhen":
"明代著名医药学家。后为楚王府奉祠正、皇家太医院判，去世后明朝廷敕封为“文林郎”。李时珍自1565年起，先后到武当山、庐山、茅山、牛首山及湖广、安徽、河南、河北等地收集药物标本和处方，并拜渔人、樵夫、农民、车夫、药工、捕蛇者为师，参考历代医药等方面书籍925种，考古证今、穷究物理”，记录上千万字札记，弄清许多疑难问题，历经27个寒暑，三易其稿，于明万历十八年完成了192万字的巨著《本草纲目》，此外对脉学及奇经八脉也有研究。著述有《奇经八脉考》《濒湖脉学》等多种。被后世尊为 “药圣”。",
"XS_linxiangru":
"战国时期赵国上卿，赵国著名的政治家、外交家。赵惠文王时，秦昭王写信给赵王，愿以十五个城池换取“和氏璧”。蔺相如奉命带“和氏璧”来到秦国，据理力争，机智周旋，终于完璧归赵。公元前279年，秦王与赵王相会于渑池，他随侍赵惠文王，当面斥责强大的秦国，不辱国体，使赵王没有受到屈辱，因其功，任为上卿，居官于廉颇之上。廉颇居功自恃，不服相如，耻居其下，并扬言要羞辱相如。蔺相如为保持将相和睦，不使外敌有隙可乘，始终回避忍让。蔺相如以国家利益为重、善自谦抑的精神感动了廉颇，于是亲自到蔺相如府上负荆请罪，二人成为刎颈之交。",
"XS_xuda":
"明朝开国军事统帅。徐达出身农家。元朝末年，徐达参加了朱元璋领导的起义军，为淮西二十四将之一。至正二十三年，在鄱阳湖之战中大败陈友谅。次年，被任命为左相国。至正二十五年，麾师攻取淮东，并于两年后攻克平江，灭张士诚。旋即出任征虏大将军，与副将常遇春一同挥师北伐，推翻元朝的统治。洪武元年，攻入大都，灭亡元朝。此后连年出兵，打击元朝残余势力，官至太傅、中书右丞相、参军国事兼太子少傅，封魏国公。他为人谨慎，善于治军，戎马一生，为明朝建立了不朽的功勋。",
"XS_weirui":
"南北朝时期南梁名将，西汉丞相韦贤之后。韦睿出身三辅大姓，早年任上庸太守。南齐末年，韦睿随萧衍起兵，“多建策，皆见用”。南梁建立后，拜廷尉，封都梁子。天监四年，督军北伐，攻小岘城。继而进军合肥，引肥水灌城，大破魏军，斩俘一万余人。天监五，与曹景宗率军于钟离之战中大破北魏，因功进爵永昌侯。官至侍中、车骑将军。普通元年，韦睿去世，年七十九。获赠车骑将军、开府仪同三司，谥号“严”。元代史学家胡三省称：“梁之将帅，韦睿一人而已。”明人杨慎亦称其为“六朝人才”之冠。",
"XS_xiean":
"东晋政治家、名士。谢安少以清谈知名，屡辞辟命，隐居会稽郡山阴县之东山，与王羲之、许询等游山玩水，并教育谢家子弟。后谢氏家族于朝中之人尽数逝去，他才东山再起，历任征西大将军司马、吴兴太守、侍中、吏部尚书、中护军等职。简文帝逝后，谢安与王坦之挫败桓温篡位意图。桓温死后，更与王彪之等共同辅政。在淝水之战中，谢安作为东晋一方的总指挥，以八万兵力打败了号称百万的前秦军队，为东晋赢得数十年的和平。战后因功名太盛而被孝武帝猜忌，被迫前往广陵避祸。太元十年，谢安病逝，年六十六。获赠太傅、庐陵郡公，谥号“文靖”。",
"XS_wangmeng":
"CV：剑寒。十六国时期著名的政治家、军事家。王猛出身贫寒，隐居山中，博学好读兵书，善于谋略和用兵。后与苻坚一见如故，论废兴大事，异常契合。苻坚即位，任中书侍郎，曾在一年中五次擢升，官至丞相、中书监、尚书令，封清河郡侯，成为苻坚主要的谋臣。王猛在前秦任职十八年，综合儒法，选拔廉明。在政治上，抵制氐、羌权贵，整肃吏治，强化中央集权。在京城一带坚持执法行事，数旬间诛不法贵戚豪强二十余人，百官震肃。在军事上，前秦建元六年统兵消灭前燕，都督关东六州军事，为统一北方作出重大贡献。在经济上，劝课农桑，开放山泽，兴修水利，改进耕作，以致田畴开辟，仓库充实。",
"XS_fangqiao":
"唐朝初年名相、政治家。善诗能文，博览经史。十八岁，举进士出身，授羽骑尉、隰城县尉。晋阳起兵后，投靠秦王李世民后，积极出谋划策，典管书记，选拔人才，成为秦王府得力谋士之一。武德九年，谋划玄武门之变，随同杜如晦等五人居于首功。唐太宗即位后，拜中书令，封邢国公，负责综理朝政，兼修国史、编纂《晋书》。执政期间，房玄龄善于谋略，杜如晦处事果断，并称“房谋杜断”，成为良相典范。迁尚书左仆射、司空，封梁国公，名列凌烟阁二十四功臣。",
"XS_weiqing":
"CV：卫青。西汉时期名将、外戚、军事家，汉武帝第二任皇后卫子夫的弟弟，汉武帝在位时官至大司马大将军，封长平侯。卫青的首次出征是奇袭龙城，揭开汉匈战争反败为胜的序幕，曾七战七捷，收复河朔、河套地区，击破单于，为北部疆域的开拓做出重大贡献。卫青善于以战养战，用兵敢于深入，为将号令严明，对将士爱护有恩，对同僚大度有礼，位极人臣而不立私威。元封五年，卫青逝世，起冢如庐山，葬于茂陵东北1000米处，谥号为“烈”。",
"XS_yuchigong":
"唐朝开国将领，凌烟阁二十四功臣之一。归顺唐朝后，赐名尉迟恭。大业末年，参与平定高阳暴乱，授朝散大夫。大业十三年，跟随刘武周起兵反隋，担任偏将。武德三年，投降李世民，讨伐王世充、窦建德、刘黑闼、徐圆朗。武德九年，参加玄武门之变，射杀齐王李元吉，拔得头等，拜右武候大将军，封为吴国公。贞观十一年，拜宣州刺史，封为上柱国、鄂国公。贞观十七年，授开府仪同三司，致仕还家，不问政事。图形凌烟阁，位列第七名。贞观十九年，跟随李世民征讨高句丽。",
"XS_simaqian":
"西汉史学家、散文家。任太史令，因替李陵败降之事辩解而受宫刑，后任中书令。发奋继续完成所著史籍，被后世尊称为史迁、太史公、历史之父。司马迁早年受学于孔安国、董仲舒，漫游各地，了解风俗，采集传闻。初任郎中，奉使西南。元封三年任太史令，继承父业，著述历史。他以其“究天人之际，通古今之变，成一家之言”的史识创作了中国第一部纪传体通史《史记》。被公认为是中国史书的典范，该书记载了从上古传说中的黄帝时期，到汉武帝元狩元年，长达3000多年的历史，是“二十五史”之首，被鲁迅誉为“史家之绝唱，无韵之离骚”。",
"XS_xishi":
"CV：菜籽。春秋时期越国美女，春秋末期出生于越国句无苎萝村。出身贫寒，自幼随母浣纱江边，故又称“浣纱女”。她天生丽质、秀媚出众，是美的化身和代名词。越王勾践在对吴国战争中失利后，采纳文种“伐吴九术”之四“遗美女以惑其心，而乱其谋”，于苎萝山下得西施、郑旦二人。并于土城山建美女宫，教以歌舞礼仪，饰以罗，教以容步，习于土城，临于都巷。三年学成，使范蠡献于吴王。吴王夫差大悦，筑姑苏台，建馆娃宫，置二女于椒花之房，沉溺酒色，荒于国政，而宠嬖西施尤甚。勾践灭吴后，西施随范蠡泛五湖而去，不知所终。",
"XS_mengjiangnv":
"中国民间传说人物，其人物故事是中国民间四大爱情故事之一，千百年来一直以口头传承的方式在民间广为流传。最早的传说可上溯到《左传》。孟姜女的传说，一直以口头传承的方式在民间广为流传。直到20世纪初，在“五四”精神的推动下，她才被纳入到研究者的视野中。中国著名的历史学家顾颉刚将孟姜女传说的原初形态一直追溯到《左传》上的一个故事。《左传》记述这个故事是想褒扬杞梁妻（也就是后世的孟姜女）在哀痛之际，仍能以礼处事，神志不乱，令人钦佩。",
"XS_quping":
"CV：蚩羽。中国战国时期楚国诗人、政治家。出生于楚国丹阳秭归。芈姓，屈氏，名平，字原；又自云名正则，字灵均。楚武王熊通之子屈瑕的后代。少年时受过良好的教育，博闻强识，志向远大。早年受楚怀王信任，任左徒、三闾大夫，兼管内政外交大事。提倡“美政”，主张对内举贤任能，修明法度，对外力主联齐抗秦。因遭贵族排挤诽谤，被先后流放至汉北和沅湘流域。楚国郢都被秦军攻破后，自沉于汨罗江，以身殉国。",
"XS_subutai":
"蒙元帝国名将，成吉思汗的“四獒”之一。早年辅佐成吉思汗统一诸部，常任先锋，以骁勇善战著称。蒙古建国时，封千户长，为十大功臣之一。曾参与第一、第二次西征，令大蒙古国版图扩展至俄罗斯一带。其征战所及东至高丽，西达波兰、匈牙利，北到西伯利亚，南抵开封。是古代世界征战范围最广的将领之一。死后追封为河南王，谥忠定。",
"XS_yueyun":
"南宋抗金名将岳飞长子，中国历史上少有的少年将军。历任武翼郎、左武大夫、忠州防御使等职。南宋绍兴十一年除夕，跟父亲岳飞，部将张宪一起惨遭宋高宗赵构和奸臣秦桧诬陷而死，岳云死时年仅23岁，死后葬于杭州栖霞岭。南宋绍兴三十二年，宋孝宗赵昚为岳飞父子平反昭雪，岳云附葬在杭州栖霞岭下。",
"XS_liuche":
"CV：容返。西汉第七位皇帝，政治家、文学家。在位期间，在政治上，创设中外朝制、刺史制、察举制，颁行推恩令，加强君主专制与中央集权。在经济上，推行平准、均输、算缗、告缗等措施，铸五铢钱，由官府垄断盐、铁、酒的经营，并抑制富商大贾的势力。文化方面，“罢黜百家，独尊儒术”，并设立太学。对外，汉武帝采扩张政策，除与匈奴长年交战外，还破闽越、南越、卫氏朝鲜、大宛，又凿空西域、开丝绸之路，并开辟西南夷。此外，还有创设年号、颁布太初历等举措。但他崇信方术、自奉奢侈，兼以穷兵黩武，引发统治危机，晚年爆发巫蛊之祸，后因对外扩张受挫而颁《轮台诏》。后元二年，崩于五柞宫。",
"XS_lisi":
"秦朝著名政治家、文学家和书法家。李斯早年师从荀子学习帝王之术。学成之后，入秦为官，秦王纳其计谋，遣谋士持金玉游说关东六国，离间各国君臣，以为客卿，在秦灭六国事业中发挥重大作用。秦王政十年，进上《谏逐客书》，阻止驱逐六国客卿，迁为廷尉。秦统一天下后，建议拆除郡县城墙，销毁民间的兵器；反对分封制度，坚持郡县制；主张焚烧民间收藏的《诗》、《书》等诸子学说，禁止私学，以加强思想统治。参与制定法律，统一车轨、文字、度量衡制度。",
},//介绍

		characterTitle:{
			//"XS_yingzheng":"始皇帝",
			"XS_hanxin":"国士无双",
			"XS_wuqi":"兵家亚圣",
			"XS_sunwu":"兵家至圣",
			"XS_xiangji":"拔山盖世",
			"XS_lishimin":"天可汗",
			"XS_guanyiwu":"华夏首相",
			"XS_yingzheng":"并吞八荒",
			"XS_liubang":"威加海内",
			"XS_kongqiu":"万世师表",
			"XS_lier":"道法自然",
			"XS_zhangliang":"谋国谋身",
			"XS_zhangyixs":"高谈阔论",
			"XS_tiemuzhen":"一代天骄",
			"XS_zhaokuangyin":"杯酒释权",
			"XS_liuxiu":"复汉中兴",
			"XS_fujian":"举贤任能",
			"XS_yuchigong":"勇冠三军",
			"XS_simaqian":"秉笔直书",
			"XS_xishi":"沉鱼之姿",
			"XS_yumeiren":"垓下悲歌",
			"XS_lixiaogong":"节贯神明",
			"XS_lianghongyu":"桴鼓亲操",
			"XS_yelvchucai":"救世济民",
			"XS_murongchui":"一世之雄",
			"XS_changyuchun":"横行天下",
			"XS_fusu":"刚毅宽仁",
			"XS_gengyan":"志者事竟",
			"XS_fanzeng":"老成谋国",
			"XS_fanju":"睚眦必报",
			"XS_fankuai":"卮酒何辞",
			"XS_yinlihua":"友爱天至",
			"XS_menggong":"孤手擎天",
			"XS_wangshouren":"知行合一",
			"XS_chenqingzhi":"白袍所向",
			"XS_zhangjuzheng":"扶厦将倾",
			"XS_simaguang":"博古鉴今",
			"XS_yangyouji":"百步穿杨",
			"XS_dukang":"酒中之圣",
			"XS_wentianxiang":"光照汗青",
			"XS_licunxu":"善始无终",
			"XS_sanghongyang":"天下用饶",
			"XS_mayuan":"马革裹尸",
			"XS_yudayou":"奇正相生",
			"XS_goujian":"卧薪尝胆",
			"XS_mibazi":"掌政宮闈",
			"XS_lvzhi":"临朝称制",
			"XS_qinliangyu":"须眉不让",
			"XS_nanzi":"祸乱朝堂",
			"XS_liurengui":"赤海焚舟",
			"XS_liyiji":"高阳酒徒",
			"XS_huishi":"名辩鼻祖",
			"XS_yangsu":"擒剪凶魁",
			"XS_zhangheng":"经天纬地",
			"XS_lanyu":"鸟尽弓藏",
			"XS_mengke":"儒家亚圣",
			"XS_chuliji":"堪舆先师",
			"XS_bizaiyu":"威震夷貊",
			"XS_muhuali":"策马横戈",
			"XS_lvbuwei":"囤积居奇",
			"XS_caoshen":"出将入相",
			"XS_wangxizhi":"倾江洒墨",
			"XS_yangjian":"圣人可汗",
			"XS_gaojiong":"经宇佐代",
			"XS_shiwansui":"威惊绝域",
			"XS_peixingjian":"长策驱戎",
			"XS_zhudi":"定乱拓疆",
			"XS_yaoguangxiao":"玄袈朝宰",
			"XS_zongze":"拨乱忧邦",
			"XS_wanganshi":"拗执推新",
			"XS_liuyu":"气吞万里",
			"XS_tandaoji":"万里长城",
			"XS_xiehui":"璧染微瑕",
			"XS_liumuzhi":"端猷勤政",
			"XS_ranmin":"武悼天王",
			"XS_wangjian":"翦灭六国",
			"XS_zhangsunwuji":"凌烟功首",
			"XS_zhangsun":"母仪何炜",
			"XS_simacuo":"肃清遐服",
			"XS_wangben":"善战无功",
			"XS_zhangsunsheng":"威行域外",
			"XS_hanqinhu":"搏虎阎罗",
			"XS_panmei":"师领邦器",
			"XS_zhenghe":"千舟逐浪",
			"XS_tuobatao":"混一戎华",
			"XS_cuihao":"究览天人",
			"XS_tuobagui":"克翦方难",
			"XS_cuihong":"鹏才成邦",
			"XS_boershu":"志意沉雄",
			"XS_wuzhao":"明月当空",
			"XS_direnjie":"绝维更张",
			"XS_yangdayan":"世推骁果",
			"XS_liudaogui":"秉业蕴兴",
			"XS_dengqiang":"万人之敌",
			"XS_zhoubo":"扶危挽澜",
			"XS_zhangtang":"素索束国",
			"XS_jibu":"千金一诺",
			"XS_caobin":"清谦畏谨",
			"XS_zhusheng":"片语定邦",
			"XS_tianrangju":"兵尽赏罚",
			"XS_yansong":"窃权罔利",
			"XS_qinhui":"利惑君心",
			"XS_laijunchen":"片言折狱",
			"XS_zhaogao":"权移马鹿",
			"XS_baiqi":"功高盖世",
			"XS_zhangjizhongjing":"悬壶济世",
			"XS_lianpo":"壮血涌冠",
			"XS_lijing":"才兼文武",
			"XS_yuefei":"忠魂武魄",
			"XS_jiangshang":"乾坤万转",
			"XS_sunbin":"坐筹运能",
			"XS_qinqiong":"擎峰负勇",
			"XS_huoqubing":"绝域汉威",
			"XS_zhuanzhu":"义重生死",
			"XS_yangzaixing":"万夫辟易",
			"XS_zhuyuanzhang":"应天豪主",
			"XS_liguang":"龙城飞将",
			"XS_quping":"英石沉渊",
			"XS_liuji":"佐定天下",
			"XS_xiaohe":"功人筑宇",
			"XS_ouyezi":"剑鸣吴越",
			"XS_hanfei":"法思之极",
			"XS_linxiangru":"凛节不辱",
			"XS_xuda":"功昭日月",
			"XS_weirui":"虎威麟德",
			"XS_xiean":"江左风流",
			"XS_fangqiao":"帷幄经邦",
			"XS_weiqing":"安边勋鼎",
			"XS_wangzhaojun":"雪朔惊鸿",
			"XS_subutai":"功獒爪牙",
			"XS_weizifu":"盛云饰日",
			"XS_weizhe":"圯上老人",
			"XS_sulie":"雄谋戡定",
			"XS_liji":"英机振时",
			"XS_xiexuan":"翦凶拓北",
			"XS_xuewen":"慨比虹霓",
			"XS_zhanghao":"纵锋横刃",
			"XS_duruhui":"廊庙纬国",
			"XS_yuxu":"断难正艰",
			"XS_yuqian":"危挽日月",
			"XS_hanshizhong":"仗剑从戎",
			"XS_longju":"凭风飒戾",
			"XS_weiwuji":"气凌苍云",
			"XS_zhaopu":"国卿家相",
			"XS_huanxuan":"肆逆迁鼎",
			"XS_yangguang":"书罪无穷",
			"XS_jingke":"风萧水寒",
			"XS_gaojianli":"易水悲歌",
			"XS_niezheng":"白虹贯日",
			"XS_yurang":"士死知己",
			"XS_lilongji":"盛极而衰",
			"XS_yangyuhuan":"润日惭芳",
			"XS_anlushan":"朔鞞裂邦",
			"XS_shisiming":"逆戈赫伍",
			"XS_guoziyi":"再造区夏",
			"XS_liguangbi":"中兴首将",
			"XS_chensheng":"振羽惊禽",
			"XS_wuguang":"死国举义",
			"XS_huangchao":"满城金甲",
			"XS_lizicheng":"闯声覆黯",
			"XS_songjiang":"仗义疏财",
			"XS_fangla":"得天符牒",
			"XS_daji":"狐媚妖姬",
			"XS_hongfunv":"慧眼识英",
			"XS_zhaofeiyan":"掌上飘舞",
			"XS_dengsui":"地温终煦",
			"XS_banzhao":"赋颂并娴",
			"XS_huamulan":"红巾铁胄",
			"XS_shangguanwaner":"称量天下",
			"XS_zhufuyan":"五鼎而食",
			"XS_dongfangshuo":"大隐于朝",
			"XS_xiangru":"赋圣辞宗",
			"XS_zhuowenjun":"白首不离",
			"XS_liling":"百战名裂",
			"XS_zhangqian":"凿空开远",
			"XS_dongzhongshu":"究天法人",
			"XS_zuti":"击楫中流",
			"XS_simarui":"立朝江左",
			"XS_wangdao":"立堂弥庙",
			"XS_huanwen":"奇风豪骨",
			"XS_liukun":"枕戈北塞",
			"XS_dixin":"诸恶归焉",
			"XS_jichang":"英行大道",
			"XS_jifa":"时维鹰扬",
			"XS_jidan":"卜都定鼎",
			"XS_chengtang":"顺天革命",
			"XS_yiyin":"鼎烹隆殷",
			"XS_libai":"谪仙人",
			"XS_sushi":"超逸绝尘",
			"XS_taoyuanming":"归去来兮",
			"XS_yangxiong":"皓首穷经",
			"XS_tiandan":"五兕扬旌",
			"XS_limu":"孤擎危邦",
			"XS_yueyi":"一身昌邦",
			"XS_fanli":"见达识微",
			"XS_xueli":"惊艺无双",
			"XS_shangyang":"雷法风行",
			"XS_gongshuban":"鬼斧神工",
			"XS_modi":"天下于胸",
			"XS_limi":"天覆地载",
			"XS_suqin":"相拜六国",
			"XS_chenping":"奇谋六奋",
			"XS_licunxiao":"威长万夫",
			"XS_qijiguang":"彻宇平波",
			"XS_liuche":"鞭扬万里",
			"XS_lisi":"帝相如渊",
			"XS_yueyun1":"勇烈昭昭",
			"XS_mengtian":"秦丗虎翼",
			"XS_banchao":"投戎定远",
			"XS_weiliao":"怀略兴师",
			"XS_yingbu":"锋犹骇电",
			"XS_mengjiangnv":"千载铭贞",
			"XS_lishizhen":"遍尝百草",
			"XS_wangxu":"鬼谷纵横",
			"XS_yueyun":"烈勇昭昭",
			"XS_jiangxiaobai":"春秋首霸",
			"XS_wangmeng":"忧勤万机",
			"XS_dufu":"苍生忧怀",
			"XS_xinqiji":"大声鞺鞳",
			"XS_jiayi":"政论天下",
			"XS_xielingyun":"风流自然",
			"XS_gaohuan":"龙摅豹变",
			"XS_gaoyang":"克振戎夏",
			"XS_gaosu":"柔貌修罗",
			"XS_gaoaocao":"气冠万夫",
			"XS_louzhaojun":"贤诲三朝",
			"XS_hulvguang":"东国明月",
			"XS_duanshao":"光辅七君",
			"XS_yangyin":"仁杰弼英",
			"XS_chenbaxian":"胜筭雄图",
			"XS_xiaomohe":"志奋无前",
			"XS_wumingche":"御武戡乱",
			"XS_xianying":"明识远图",
			"XS_lishiminsp":"天策上将",
			"XS_liubangsp":"斩蛇起义",
			"XS_xiangjisp":"垓下之围",
			"XS_yuwentai":"恩信被物",
			"XS_yuwenyong":"克己励精",
			"XS_suchuo":"共济难艰",
			"XS_weishuyu":"西邦玉璧",
			"XS_tiemuzhensp":"四海之汗",
			"XS_yingrenhao":"威霸戎翟",
			"XS_jiangxi":"施德服戎",
			"XS_jichonger":"还轸正邦",
			"XS_xianzhen1":"罄谋摧虏",
			"XS_yingzhengsp":"始皇帝",
			"XS_milv":"鼎和南声",
			"XS_miao":"丰业千秋",
			"XS_helv":"恤民闻仁",
			"XS_wuyuan":"刚戾忍卼",
			"XS_helv":"恤民闻仁",
			"XS_zhuyuanzhangsp":"神武戡乱",
			"XS_liyuanba":"鹏威振翅",
			"XS_liangshanbo":"如月皎洁",
			"XS_zhuyingtai":"春丛蝶栖",
			"XS_muguiying":"浑天晓略",
			"XS_liuchesp":"功烈被远",
			"XS_murongke":"古之遗爱",
			"XS_chairong":"虎步龙飞",
			"XS_dugujialuo":"雅俪宸极",
			"XS_boertie":"禀德宅心",
			"XS_jiangxiaobaisp":"一匡天下",
			"XS_weizhongxian":"孽遗覆国",
			"XS_yuanchonghuan":"力捍危疆",
			"XS_zhengchenggong":"忠节伟器",
			"XS_chengyaojin":"志怀锐颖",
			"XS_siyu":"攸宁九州",
			"XS_nvjiao":"悠悠我思",
			"XS_xunkuang":"天行有常",
			"XS_zhuangzhou":"圣人无名",
			"XS_baiqisp":"长平之戮",
			"XS_hanxinsp":"十面埋伏",
			"XS_liqingzhao":"漱玉声慢",
			"XS_baoshuya":"厥芳犹兰",
			"XS_zouyan":"思宏不经",
			"XS_zhouyafu":"守节不逊",
			"XS_yuefeisp":"直捣黄龙",
			"XS_luoshixin":"今世孟贲",
			"XS_yaoli":"壮士断臂",
			"XS_lifuren":"绝世独立",
			"XS_fengxiaolian":"一笑相倾",
			"XS_qifangxun":"昭明万邦",
			"XS_huchonghua":"豪奢无节",
			"XS_lijingsp":"燕然勒功",
			"XS_suwu":"无坠汉节",
			"XS_guichonghua":"德启荒蛮",
			"XS_wangmengsp":"经世王佐",
			"XS_jixuanyuan":"华夏初祖",
			"XS_leizu":"先蚕圣母",
			"XS_jigaoyang":"礼化太初",
			"XS_jijun":"抚宁天地",
			"XS_guanyiwusp":"九合诸侯",
			"XS_chaocuo":"远虑谋藩",
			"XS_liuqi":"承文启武",
			"XS_taipinggongzhu":"盛宠倾权",
			"XS_baozheng":"铁面丹心",
			
		},//称号
		perfectPair:{
			//"xwj_xhuoying_xiaoying":['xwj_xhuoying_zhuozhu'],

		},//珠联壁合

skill:{
// "XS_shiba":{
	// usable:1,
	// priority:-9599,
	// trigger:{global:['damageBegin4','loseHpBegin','recoverBegin']},
	// check:function (event,player){
		// var att=get.attitude(player,event.player);
		// if(event.name=='recover') {
			// if(att<=0) return false;
			// return event.num*2<=event.player.getDamagedHp();
		// }
		// else {
			// if(att>0) return false;
			// return event.num*2>=trigger.player.hp;
		// }
	// },
	// "prompt2":function (event,player){
		// var str='是否令'+get.translation(event.player);
		// switch(event.name) {
			// case 'damage':str+='受到的'+event.num+'点伤害翻倍，';break;
			// case 'loseHp':str+='失去的'+event.num+'点体力翻倍，';break;
			// case 'recover':str+='回复的'+event.num+'点体力翻倍，';break;
		// }
		// str+='如此其摸其已损失体力值张牌。'
		// return str;
	// },		
	// filter:function(event,player){
		// return event.num>0;
	// },
	// logTarget:'player',
	// content:function(){
		// trigger.num*=2;
		// var tm1=trigger.name+'After',tm2=trigger.name+'Cancelled';
		// trigger.player.addTempSkill('XS_shiba_temp');
	// },
	// group:['XS_shiba_draw'],
	// subSkill:{
        // draw:{
			// trigger:{global:['damageAfter','loseHpAfter','recoverAfter','damageCancelled','loseHpCancelled','recoverCancelled']},
			// direct:true,
			// filter:function(event,player){
				// return event.player.hasSkill('XS_shiba_temp');
			// },
			// content:function(){
				// trigger.player.draw(trigger.player.getDamagedHp());
				// trigger.player.removeSkill('XS_shiba_temp');
			// },
            // sub:true,
        // },
		// temp:{
			// charlotte:true,
            // sub:true,
        // },
    // },
// },
// "XS_zunwang":{
	// audio:"ext:血色衣冠:2",
	// unique:true,
	// limited:true,
	// enable:'phaseUse',
	// filter:function(event,player){
		// return !player.storage.XS_zunwang&&!player.hasSkill('XS_zuiwang_tp')&&player.countCards('h');
	// },
	// init:function(player){
		// player.storage.XS_zunwang=false;
	// },
	// mark:true,
	// intro:{
		// content:'limited'
	// },
	// skillAnimation:true,
	// content:function(){
		// "step 0"
		// player.awakenSkill('XS_zunwang');
		// player.storage.XS_zunwang=true;
		// player.discard(player.getCards('h'));
		// player.addTempSkill('XS_zuiwang_tp');
		// "step 1"
		// player.draw(3);
		// player.chooseTarget(1,'对1名角色造成1点伤害或令其回复1点体力，若其体力因此变为1或上限，你可令其获得或重置“尊王”',true,function(card,player,target){
			// return true;
        // }).set('ai',function(target){
			// var att=get.attitude(player,target),dh=target.getDamagedHp();
			// if(!player.hasSkill('XS_shiba_temp')&&dh==1) dh*=10;
			// else if(dh==2) dh*=10;
			// return att*dh;
        // });
		// "step 2"
		// event.tg=result.targets[0];
		// player.chooseControlList(['对'+get.translation(player)+'造成1点伤害','令'+get.translation(player)+'回复1点体力'],true).set('ai',function(event,player){
			// return 1;
        // }).set('prompt','请选择一项');
		// "step 3"
		// if(result.index==0) event.tg.damage(1,player,'nocard');
		// else event.tg.recover();
		// "step 4"
		// if(event.tg.hp==1||event.tg.isHealthy()) {
			// if(event.tg.awakenedSkills.contains('XS_zuiwang')) event.tg.restoreSkill('XS_zuiwang');
			// else event.tg.addSkill('XS_zuiwang');
		// }
	// },
	// ai:{
		// order:1,
		// result:{
			// player:function(player){
				// if(!game.hasPlayer(function(current){
					// return get.attitude(player,current)&&current.isDamaged()&&current.getDamagedHp()<=2;
				// })) return 0;
				// return 3-player.countCards('h');
			// }
		// }
	// },
// },
// "XS_zuiwang_tp":{
	// charlotte:true,
// },
// "XS_dinggang":{
	// audio:"ext:血色衣冠:2",
	// enable:"phaseUse",
	// usable:1,
	// filterTarget:function (card,player,target){
        // return target!=player;
    // },
	// selectTarget:1,
	// content:function (){
		// "step 0"
		// target.draw(player.maxHp);
		// "step 1"
		// target.showCards();
		// var lt=['heart','spade','diamond','club'];
		// for(var i=0;i<target.countCards('h');i++) {
			// lt.remove(get.suit(target.getCards('h')[i]));
		// }
		// if(lt.length>0) player.loseHp(); 
    // },
	// ai:{
		// expose:0.3,
		// result:{
			// target:function (player,target){
				// if((player.maxHp+target.countCards('h'))<5) return 0;
				// return player.maxHp;

            // },
        // },
		// order:9.5,
	// },
// },
// "XS_zhixian":{
	// trigger:{
		// player:["damageBegin2"],
	// },
	// priority:297,
	// check:function (event,player){
		// return event.num>1||event.num>=player.hp;
	// },
	// filter:function (event){
		// return player.maxHp>1;
	// },
	// "prompt2":function (event,player){
		// var str='是失去1点体力上限以防止你受到的'+event.num+'点伤害？';
		// if(event.source) str+='如此，你可弃置'+get.translation(event.source)+'的1张牌。'
		// return str;
	// },
	// content:function (){
		// "step 0"
		// player.loseMaxHp();
		// if(trigger.source) {
			// player.discardPlayerCard(trigger.source,'he',1,false);
		// }
		// "step 1"
		// trigger.cancel();
	// },
	// ai:{
		// threaten:0.95,
	// },
// },
// "XS_zunye":{
	// ai:{
		// expose:0.3,
	// },
	// audio:2,
	// trigger:{
		// player:"phaseUseAfter",
	// },
	// filter:function(event,player){
		// return player.storage.XS_zunye&&player.countCards('h')<player.storage.XS_zunye;
	// },
	// check:function (event,player){return true;},
	// "prompt2":function (event,player){
		// var nm=Math.min(3,player.storage.XS_zunye-player.countCards('h'));
		// return '你可摸至多3张牌（'+nm+'张）使手牌数变至与此阶段开始相同，如此你可展示手牌，并将其中1种颜色的所有牌交给1名其他角色。';
	// },
	// content:function(){
		// "step 0"
		// player.draw(Math.min(3,player.storage.XS_zunye-player.countCards('h')));
		// "step 1"
		// player.chooseCardTarget({
			// filterCard:function(card){
				// if(!ui.selected.cards.length) return true;
				// return get.color(card)==get.color(ui.selected.cards[i]);
			// },
			// position:"h",
			// selectCard:function (){
				// var player=_status.event.player;
				// if(!ui.selected.cards.length) return 1;
				// return player.countCards('h',{color:get.color(ui.selected.cards[i])});
			// },
			// selectTarget:1,
			// filterTarget:function(card,player,target){
				// return player!=target;
			// },
			// ai1:function(card){
				// var player=_status.event.player;
				// if(!player.needsToDiscard()) return -1;
				// return 5.5-get.value(card);
			// },
			// ai2:function(target){
				// var player=_status.event.player;
				// return get.attitude(player,target);
			// },
			// prompt:'是否展示手牌，并将其中1种颜色的所有牌交给1名其他角色？'
		// });
		// "step 2"
		// if(result.bool){
			// player.showHandcards();
			// result.targets[0].gain(result.cards,player,'giveAuto');
			// player.logSkill('XS_xiongcai',result.targets[0]);
		// }
	// },
	// ai:{
		// expose:0.3,
	// },
// },
// "XS_dingfan":{
	// audio:"ext:血色衣冠:2",
	// unique:true,
	// limited:true,
	// enable:'phaseUse',
	// filter:function(event,player){
		// return !player.storage.XS_dingfan;
	// },
	// init:function(player){
		// player.storage.XS_dingfan=false;
	// },
	// mark:true,
	// intro:{
		// content:'limited'
	// },
	// skillAnimation:true,
	// content:function(){
		// "step 0"
		// player.awakenSkill('XS_dingfan');
		// player.storage.XS_dingfan=true;
		// player.chooseCardTarget({
			// filterCard:function(card){
				// if(!ui.selected.cards.length) return true;
				// return get.color(card)==get.color(ui.selected.cards[i]);
			// },
			// position:"h",
			// selectCard:[1,Infinity],
			// forced:true,
			// selectTarget:function (card){
				// return ui.selected.cards.length;
			// },
			// filterTarget:function(card,player,target){
				// return target.isDamaged();
			// },
			// ai1:function(card){
				// return 6-get.value(card);
			// },
			// ai2:function(target){
				// var att=get.attitude(_status.event.player,player);
				// att*=target.getDamagedHp();
				// return -att;
			// },
			// prompt:'弃置任意张同颜色手牌，令等量已受伤角色失去体力上限至与体力值相同'
		// });
		// "step 1"
		// player.discard(result.cards);
		// for(var i=0;i<result.targets.length;i++) {
			// result.targets[i].loseMaxHp(result.targets[i].getDamagedHp());
		// }
	// },
	// ai:{
		// order:1,
		// result:{
			// player:function(player){
				// var eff=0;
				// for(var i=0;i<game.players.length;i++) {
					// if(player==game.players[i]) continue;
					// if(get.attitude(player,game.players[i])<0&&game.players[i].getDamagedHp()>1) eff++;
				// }
				// return eff-2;
			// }
		// }
	// },
// },
// "XS_chongsheng":{
	// audio:"ext:血色衣冠:2",
 	// trigger:{
		// global:["useCardBegin"],
	// },
	// intro:{
		// content:function(storage,player,skill){
			// if(!storage.length) return '本局游戏尚未有牌被使用';
			// return '本局游戏已被使用的牌：'+get.translation(storage);
		// },
	// },
	// init:function (player){
		// player.storage.XS_chongsheng=[];
	// },
	// direct:true,
	// priority:37,
	// filter:function (event,player){
		// return !player.storage.XS_chongsheng.contains(event.card.name);
	// },
	// content:function (){
		// player.storage.XS_chongsheng.push(trigger.card.name);
		// player.markSkill('XS_chongsheng');
		// if(trigger.player==player) {
			// player.logSkill('XS_chongsheng');
			// player.gainMaxHp();
			// player.recover();
		// }
	// },
	// ai:{
		// effect:{
			// player:function(card,player,target){
				// if(!player.storage.XS_chongsheng.contains(card.name)) return [1,2];
			// },
		// },
	// },
// },
// "XS_quanqing":{
	// audio:"ext:血色衣冠:2",
	// priority:22,
    // trigger:{
        // global:["useCardBegin"],
    // },
    // filter:function (event,player){
        // return event.player!=player&&event.card.name=='sha'&&event.player.countCards('ej');
    // },
	// check:function (event,player){
		// var eff=0,att=get.attitude(player,event.player);
		// if(att>0) return false;
		// for(var i=0;i<event.targets.length;i++) {
			// eff+=get.effect(event.targets[i],event.card,event.player,player);
		// }
		// return (eff<0&&event.player.countCards('e'))||event.targets.contains(player);
    // },
	// logTarget:'player',
    // content:function (){
		// "step 0"
		// player.gainPlayerCard('ej',1,trigger.player,true);
		// if(!trigger.player.hasSkill('XS_quanqing_mark')) {
			// trigger.player.addSkill('XS_quanqing_mark');
			// trigger.player.storage.XS_quanqing_mark=0;
		// }
		// trigger.player.storage.XS_quanqing_mark++;
		// trigger.player.markSkill('XS_quanqing_mark');
		// "step 1"
		// if(trigger.player.inRange(player)) {
			// trigger.targets=[];
			// trigger.targets.push(player);
		// }
    // },
	// ai:{
		// expose:0.4,
	// },
	// subSkill:{
		// mark:{
			// intro:{
				// content:function(storage,player,skill){
					// return '你的攻击距离+<span class="bluetext">'+storage+'</span>';
				// },
			// },
			// mod:{
				// attackFrom:function (from,to,distance){
					// return distance-from.storage.XS_quanqing_mark;
				// },
			// },
		// },
	// },
// },
// "XS_dongming":{
	// trigger:{global:'phaseBegin'},
	// priority:348,
	// direct:true,
	// filter:function (event,player){
		// if(event.player==player||player.hasSkill('XS_dongming_temp')) return false;
		// return player.countCards('h')&&event.player.countCards('h');
	// },
	// logTarget:'player',
	// audio:"ext:血色衣冠:2",
	// content:function(){
		// "step 0"
		// player.chooseToDiscard(get.prompt2('XS_dongming',trigger.player),1,'h',false).set('ai',function(card){
			// var trigger=_status.event.getTrigger();
			// var att=get.attitude(player,trigger.player);
			// if(att<0) {
				// return trigger.player.countCards('h')*2-get.value(card);
			// }
			// return -1;
		// });
		// "step 1"
		// if(result.bool) {
			// player.addTempSkill('XS_dongming_temp','roundStart');
			// player.logSkill('XS_dongming',trigger.player);
			// event.cds=trigger.player.getCards('h');
		// }
		// else event.finish();
		// "step 2"
		// if(event.cds.length) {
			// trigger.player.chooseCardButton(event.cds,1,true).ai=function(button){
				// var val=get.value(button.link);
				// if(get.color(button.link)=='red') val/=10;
				// return 20-val;
			// };
		// }
		// else event.finish();
		// "step 3"
		// event.cd=result.links[0];
		// trigger.player.showCards(event.cd);
		// player.chooseTarget('是否终止洞明的流程，令1名角色获得'+get.translation(event.cd)+'？',false,1,function(card,player,target){
			// return true;
		// }).ai=function(target){
			// var val=get.value(event.cd)-event.cds.length*2.4;
			// if(val>0) {
				// return get.attitude(player.target)/(target.countCards('h')+0.1);
			// }
			// return -1;
		// }
		// "step 4"
		// if(result.bool) {
			// result.targets[0].gain(event.cd,'gain2');
			// event.finish();
		// }
		// else event.goto(2);
	// },
	// ai:{
		// expose:0.4,
	// },
	// subSkill:{
		// temp:{
			// charlotte:true,
			// sub:true,
		// },
	// },
// },
// "XS_tiemian":{
	// trigger:{global:'showCardsAfter'},
	// priority:48,
	// forced:true,
	// filter:function (event,player){
		// if(event.player==player) return false;
		// for(var i=0;i<event.cards.length;i++) {
			// if(get.position(event.cards[i])=='h'&&get.color(event.cards[i])=='black') return true;
		// }
		// return false;
	// },
	// logTarget:'player',
	// audio:"ext:血色衣冠:2",
	// content:function(){
		// player.useCard({name:'sha',isCard:true},trigger.player);
	// },
// },
"XS_lingxing":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:'gameDrawAfter',
		player:'enterGame',
	},
	check:function (event,player){return true;},
	logTarget:function(){
		return game.players;
	},
	getEquipCard:function (subtype){
		var list=[];
		for(var i=0;i<ui.cardPile.childElementCount;i++){
			var node=ui.cardPile.childNodes[i];
			if(get.subtype(node)==subtype){
				list.push(node);
				break;
			}
		}
		if(!list.length){
			for(var i=0;i<ui.discardPile.childElementCount;i++){
				var node=ui.discardPile.childNodes[i];
				if(get.subtype(node)==subtype){
					list.push(node);
					break;
				}
			}
		}
		return list;
    },	
	content:function(){
		'step 0'
		var list=[];
		for(var i=0;i<4;i++) list.push(lib.skill['XS_lingxing_'+i].title);
		player.chooseControlList(list,true).set('ai',function(event,player){
			var list1=player.getEnemies().length;
			var list2=game.players.length-list1;
			if(list2-list1>1) return 1;
			if(game.players.length<6) return 2;
			return 0;
		}).set('prompt','请选择一项');
		'step 1'
		var skill='XS_lingxing_'+result.index;
		game.log(player,'选择了','#g'+lib.skill[skill].title);
		for(var i of game.players) {
			i.addMark('XS_lingxing_count',1);
			i.addSkill(skill);	
		}
		game.delayx();
	},
	subSkill:{
		0:{
			title:'手牌上限+1',
			charlotte:true,
			mark:true,
			marktext:'令',
			mod:{
				maxHandcard:function (player,num){
					return num+player.storage.XS_lingxing_count;
				},
			},
			intro:{
				content:function(storage,player){
					var tp=player.storage.XS_lingxing_count;
					if(tp>0) return '手牌上限+'+tp;
					else return '手牌上限-'+(-tp);
				},
			},
		},
		1:{
			title:'摸牌阶段摸牌数+1',
			charlotte:true,
			mark:true,
			marktext:'令',
			trigger:{player:'phaseDrawBegin'},
			forced:true,
			filter:function(event,player){
				return !event.numFixed;
			},
			content:function(){
				trigger.num+=player.storage.XS_lingxing_count;
			},
			intro:{
				content:function(storage,player){
					var tp=player.storage.XS_lingxing_count;
					if(tp>0) return '摸牌阶段摸牌数+'+tp;
					else return '摸牌阶段摸牌数-'+(-tp);
				},
			},
		},
		2:{
			title:'进攻距离-1',
			charlotte:true,
			mark:true,
			marktext:'令',
			mod:{
				globalFrom:function(player,target,num){
					return num+player.storage.XS_lingxing_count;
				},
			},
			intro:{
				content:function(storage,player){
					var tp=player.storage.XS_lingxing_count;
					if(tp>0) return '进攻距离-'+tp;
					else return '进攻距离+'+(-tp);
				},
			},
		},
		3:{
			title:'随机废除一个装备栏',
			charlotte:true,
			mark:true,
			marktext:'令',
			onremove:function(player){
				var tp=player.storage.XS_lingxing_eq;
				for(var i=0;i<tp.length;i++) {
					if(player.storage.XS_lingxing_count>0) {
						player.enableEquip(tp[i]);
					}
					else {
						if(!player.isEmpty(tp[i])) player.discard(player.getEquip(tp[i]));
					}
				}

				delete player.storage.XS_lingxing_eq;
			},
			init:function (player){
				player.storage.XS_lingxing_eq=[];
				var list=[],count=Math.abs(player.storage.XS_lingxing_count)
				for(var i=1;i<5;i++){
					if(player.isDisabled(i)) continue;
					list.push('equip'+i);
				}
				var eqs=list.randomGets(count);
				for(var i=0;i<eqs.length;i++) {
					player.storage.XS_lingxing_eq.push(eqs[i]);
					if(player.storage.XS_lingxing_count<0) {
						var cards=lib.skill.XS_lingxing.getEquipCard(eqs[i]);
						if(cards.length) {
							player.gain(cards,'gain2');
							player.useCard(cards[0],player);
						}
						else game.log('牌堆与弃牌堆中已无'+get.translation(eqs[i]));
					}
					else {
						player.disableEquip(eqs[i]);
					}
				}
			},
			intro:{
				content:function(storage,player){
					var tp1=player.storage.XS_lingxing_count,tp2=player.storage.XS_lingxing_eq;
					var str=get.translation(tp2[0]);
					for(var i=1;i<tp2.length;i++) {
						str+='、'+get.translation(tp2[i]);
					}
					if(tp1>0) return '已废除装备栏：'+str;
					else return '随机获得装备的栏位：'+str;
				},
			},
		},
	},
},
"XS_jiezhi":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:"roundStart",
	},
	filter:function(event,player){
		return player.countCards('h');
	},
	direct:true,
	priority:45,
	content:function (){
		"step 0"
		player.chooseCardTarget({
			filterCard:function(card){return true;},
			position:"h",
			selectCard:[1,Infinity],
			selectTarget:function (card){
				return ui.selected.cards.length;
			},
			filterTarget:function(card,player,target){
				return typeof target.storage.XS_lingxing_count=='number';
			},
			ai1:function(card){
				return 5.5-get.value(card);
			},
			ai2:function(target){
				var player=_status.event.player;
				var att=Math.abs(get.attitude(player,target)),tp=target.storage.XS_lingxing_count;
				return att/tp;
			},
			prompt:'是否发动【竭智】？</br></br>一轮开始，你可弃置任意张手牌，令等量角色的“令行”效果进行1项变化：更改；翻转；数值增加1；移除并摸其当前数值张牌。'
		});
		"step 1"
		if(result.bool) {
			player.logSkill('XS_jiezhi',result.targets);
			player.discard(result.cards);
			event.tars=result.targets;
		}
		else event.finish();
		"step 2"
		if(event.tars.length){
			var target=event.tars.shift();
			event.current=target;
		}
		else event.finish();
		"step 3"
		if(event.current.hasSkill('XS_lingxing_0')) event.id=0;
		else if(event.current.hasSkill('XS_lingxing_1')) event.id=1;
		else if(event.current.hasSkill('XS_lingxing_2')) event.id=2;
		else event.id=3;
		player.chooseControlList(['更改','翻转','数值增加1','移除并摸其当前数值张牌'],true).set('ai',function(event,player){
			var att=get.attitude(player,event.current);
			if(att>0) {
				if((event.id==2||event.id==3)&&event.current.storage.XS_lingxing_count>0) return 1;
				else return 2;
			}
			else {
				if((event.id==0||event.id==1)&&event.current.storage.XS_lingxing_count>0) return 1;
				return 2;
			}
		}).set('prompt','令'+get.translation(event.current)+'的“令行”效果进行一项变化');
		"step 4"
		switch(result.index){
			case 0:
				var lt=[];
				if(!event.current.hasSkill('XS_lingxing_0')) lt.push('手牌上限');
				if(!event.current.hasSkill('XS_lingxing_1')) lt.push('摸牌阶段摸牌数');
				if(!event.current.hasSkill('XS_lingxing_2')) lt.push('进攻距离');
				if(!event.current.hasSkill('XS_lingxing_3')) lt.push('装备栏');
				player.chooseControl(lt).set('ai',function(event,player){
					return lt.randomGet();
				}).set('prompt','请选择更改'+get.translation(event.current)+'的“令行”效果为哪一项');
			break;
			case 1:
				event.current.storage.XS_lingxing_count=-event.current.storage.XS_lingxing_count;
				if(event.id==3) {
					var eq=event.current.storage.XS_lingxing_eq;
					if(event.current.storage.XS_lingxing_count<0) {
						for(var i=0;i<eq.length;i++) {
							event.current.enableEquip(eq[i]);
							var cards=lib.skill.XS_lingxing.getEquipCard(eq[i]);
							if(cards.length) {
								event.current.gain(cards,'gain2');
								event.current.useCard(cards[0],event.current);
							}
							else game.log('牌堆与弃牌堆中已无'+get.translation(eq[i]));
						}
					}
					else {
						for(var i=0;i<eq.length;i++) {
							event.current.disableEquip(eq[i]);
						}
					}
				}
				event.current.syncStorage('XS_lingxing_'+event.id);
				event.goto(6);
			break;
			case 2:
				if(event.current.storage.XS_lingxing_count>0) event.current.storage.XS_lingxing_count++;
				else event.current.storage.XS_lingxing_count--;
				if(event.id==3) {
					var lt=[];
					for(var i=1;i<5;i++) {
						if(event.current.storage.XS_lingxing_eq.contains('equip'+i)) continue;
						lt.push('equip'+i);
					}
					if(lt.length) {
						var tp=lt.randomGet();
						event.current.storage.XS_lingxing_eq.push(tp);
						if(event.current.storage.XS_lingxing_count<0) {			
							var cards=lib.skill.XS_lingxing.getEquipCard(tp);
							if(cards.length) {
								event.current.gain(cards,'gain2');
								event.current.useCard(cards[0],event.current);
							}
							else game.log('牌堆与弃牌堆中已无'+get.translation(tp));
						}
						else {
							event.current.disableEquip(tp);
						}
					}
				}
				event.current.syncStorage('XS_lingxing_'+event.id);
				event.goto(6);
			break;
			case 3:
				event.current.draw(Math.abs(event.current.storage.XS_lingxing_count));
				event.current.removeSkill('XS_lingxing_'+event.id);
				delete event.current.storage.XS_lingxing_count;
				delete event.current.storage.XS_lingxing_eq;
				event.goto(6);
			break;
		}
		"step 5"
		var skill;
		switch(result.control){
			case '手牌上限':skill='XS_lingxing_0';break;
			case '摸牌阶段摸牌数':skill='XS_lingxing_1';break;
			case '进攻距离':skill='XS_lingxing_2';break;
			case '装备栏':skill='XS_lingxing_3';break;
		}
		event.current.removeSkill('XS_lingxing_'+event.id);
		event.current.addSkill(skill);
		event.current.syncStorage(skill);
		"step 6"
		game.delay();
		"step 7"
		event.goto(2);
	},
},
"XS_zhenbing":{
	init:function(player){
		player.storage.renku=true;
	},
	audio:"ext:血色衣冠:2",
	trigger:{
		player:["phaseJudgeBefore","phaseDrawBefore","phaseUseBefore","phaseDiscardBefore"],
	},
	filter:function (event,player){
        return player.countCards('hej');
    },
	priority:818,
	audio:"ext:血色衣冠:2",
	check:function (event,player){
		return player.countCards('j')||player.countCards('e')==1||player.countCards('h')==1;
	},
	content:function(){
		"step 0"
		var lt=[];
		if(player.countCards('h')) lt.push('手牌区');
		if(player.countCards('e')) lt.push('装备区');
		if(player.countCards('j')) lt.push('判定区');
		player.chooseControl(lt).set('ai',function(event){
			return 'equip';
        }).set('prompt','将你一个区域内所有牌置于“仁”，视为使用一张无距离限制的杀');
		"step 1"
		var cds=[];
		switch(result.control){
			case '手牌区':cds=player.getCards('h');break;
			case '装备区':cds=player.getCards('e');break;
			case '判定区':cds=player.getCards('j');break;
		}
		player.$throw(cds,1000);
		game.log(player,'将',cds,'置入了“仁”中');
		player.lose(cds,ui.special,'toRenku');
		"step 2"
		player.chooseUseTarget({name:"sha",isCard:true},'nodistance');
	},
	ai:{
		effect:{
			target:function (card,player,target,current){
                if(get.type(card)=='delay') return [0,1];
            },
		},
	},
},
"XS_fumin":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:['equipAfter','addJudgeAfter','loseAfter','gainAfter','loseAsyncAfter'],
	},
	audio:2,
	check:function (event,player){
		var att=get.attitude(player,trigger.player);
		att-=trigger.player.countCards('h')*2;
		return att>0;
    },
	logTarget:'player',
	filter:function(event,player){
		if(player.hasSkill('XS_fumin_temp')) return false;
		return game.hasPlayer(function(current){
			var evt=event.getl(current);
			return evt&&evt.hs&&evt.hs.length&&current.isMinHandcard(false);
		})&&_status.renku.length>=2;
	},
	content:function(){
		"step 0"
		var str='你可交给'+get.translation(event.current)+'“仁”中2张牌';
		if(trigger.player!=player) str+='如此，其可将1张装备牌置于你的装备区';
		player.chooseButton([str,_status.renku],2,true).set('ai',function(button){
			return get.value(button.link);
		});
		"step 1"
		if(result.bool) {
			player.addTempSkill('XS_fumin_temp','roundStart');
			var cards=result.links;
			_status.renku.removeArray(cards);
			game.updateRenku();
			trigger.player.gain(cards,'gain2','fromRenku');
		}
		else event.finish();
		"step 2"
		if(trigger.player!=player) {
			event.att=get.attitude(trigger.player,player);
			trigger.player.chooseCard('你可将手牌中一张装备牌置于'+get.translation(player)+'的装备区','h',function(card){
				return get.type(card)=='equip';
			}).ai=function(card){
				return event.att>0?(9.5-get.value(card)):-1;
			};
		}
		else event.finish();
		"step 3"
		if(result.bool){
			trigger.player.$give(result.cards,player,false);
			player.equip(result.cards[0]);
        }
	},
	ai:{
		expose:0.4,
	},
	subSkill:{
		temp:{
			charlotte:true,
        },
    },
},
"XS_xianshi":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:'gameStart',
		player:'enterGame',
	},
	forced:true,
	unique:true,
	zhuSkill:true,
	priority:982,
	filter:function(event,player){
		return player.hasZhuSkill('XS_xianshi');
	},
	content:function(){
		var skills=[];
		for(var i=0;i<game.players.length;i++) {
			if(game.players[i]==player) continue;
			if(lib.character[game.players[i].name][3]) {
				skills.addArray((lib.character[game.players[i].name][3]).filter(function(skill){
					var info=get.info(skill);
					return info&&info.zhuSkill;
				}));
			}
		}
		for(var i=0;i<skills.length;i++) {
			player.addSkill(skills[i]);
		}	
	},
},
"XS_shican":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"phaseBegin",
	},
	filter:function(event,player){
		return player.isEmpty(1)||player.isEmpty(2)||player.isEmpty(3)||player.isEmpty(4);
	},
	frequent:true,
	content:function (){
		"step 0"
		var lt=[];
		if(player.isEmpty(1)) lt.push('武器');
		if(player.isEmpty(2)) lt.push('防具');
		if(player.isEmpty(3)) lt.push('防御马');
		if(player.isEmpty(4)) lt.push('进攻马');
		player.chooseControl(lt).set('ai',function(event){
			return lt.randomGet();
        }).set('prompt','从牌堆中获得一张指定装备牌');
		"step 1"
		var stp;
		switch(result.control){
			case '武器':stp='equip1';break;
			case '防具':stp='equip2';break;
			case '防御马':stp='equip3';break;
			case '进攻马':stp='equip4';break;
		}
		var lt=[],list=[];
		for(var i=0;i<ui.cardPile.childElementCount;i++){
			var node=ui.cardPile.childNodes[i];
			if(get.subtype(node)==stp&&!lt.contains(node.name)){
				lt.push(node.name);
			}
		}
		for(var i=0;i<lt.length;i++) {
			list.push([result.control,'',lt[i]]);
		}
		if(list.length) {
			var dialog=ui.create.dialog('从牌堆中随机获得一张你指定的'+result.control+'并装备之',[list,'vcard'],'hidden');
            player.chooseButton(dialog,true).set('ai',function(button){
                return Math.random();
            });
		}
		else {
			player.draw();
			event.finish();
		}
		"step 2"
		if(result.bool){
			var name=result.buttons[0].link[2];
			var card=get.cardPile(function(card){
				return card.name==name;
			});
			player.gain(card,'gain2','log');
			player.useCard(card,player);
        }
    },
},
"XS_saosi":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:1,
	filter:function (event,player){
        return player.countCards('e')>0;
    },
	filterTarget:function (card,player,target){
        return target!=player;
    },
	selectTarget:1,
	content:function (){
		"step 0"
		if(!target.countCards('e')) player.getStat().skill.XS_saosi--;
		player.chooseCardButton('将装备区1张牌移至'+get.translation(target)+'对应区域，令其摸其有牌区域数张牌；你对装备区无牌角色发动此技能时，重置之。',1,player.getCards('e'),true).set('filterButton',function(button){
            return lib.filter.canBeGained(card,target,player);
        }).set('ai',function(button){
			return 20-get.value(button.link);
        });
		"step 1"
		if(result.bool){
			target.gain(result.links,player,'giveAuto');
			target.equip(result.links[0]);
		}
		else event.finish();
		"step 2"
		target.draw(target.countCards('e'));
    },
	ai:{
		expose:0.4,
		result:{
			target:function (player,target){
				return target.countCards('e')+1;
			},
		},
		order:9,
	},
},
"XS_dinggang":{
	init:function(player){
		player.storage.renku=true;
	},
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:1,
	filter:function (event,player){
        return game.hasPlayer(function(current){
            return current!=player&&current.countCards('hej');
        });
    },
	filterTarget:function (card,player,target){
        return target!=player&&target.countCards('hej');
    },
	selectTarget:1,
	content:function (){
		"step 0"
		player.chooseControlList(['将至多手牌上限张手牌置于“仁”并摸等量的牌，如此其可视为使用1张杀','将1张你指定的牌置于“仁”并摸等量的牌，如此其可视为使用1张桃']).set('ai',function(event,player){
			if(target.isDamaged()&&(target.countCards('j')||target.getEquip('baiyin'))) return 1;
			return 0;
		}).set('prompt','你可令'+get.translation(target)+'获得一项效果');
		"step 1"
		if(result.control!='cancel2') {
			event.nm=result.index;
			if(result.index==0&&target.countCards('h')) {
				target.choosePlayerCard('将至多手牌上限张手牌置于“仁”并摸等量的牌，如此你可视为使用1张杀',target,'h',[1,target.getHandcardLimit()],false).set('ai',function(button){
					var val=get.value(button.link);
					return 6-val;
				});
			}
			else if(result.index==1){
				player.choosePlayerCard('将'+get.translation(target)+'任意区域一张牌置于“仁”并令其摸等量的牌，如此其可视为使用1张杀',target,'hej',1,true).set('ai',function(button){
					var val=get.value(button.link);
					if(get.type(button.link)=='trick') val/=10;
					if(get.type(button.link)=='equip') val/=2;
					return 6-val;
				});
			}
		}
		else event.finish();
		"step 2"
		if(result.links) {
			var tp=result.links.length;
			target.$throw(result.links,1000);
			game.log(target,'将',result.links,'置入了“仁”中');
			target.lose(result.links,ui.special,'toRenku');
			target.draw(tp);
		}
		if(event.nm==0) target.chooseUseTarget({name:"sha",isCard:true});
		else target.chooseUseTarget({name:"tao",isCard:true});
    },
	ai:{
		expose:0.4,
		result:{
			target:2,
		},
		order:9.5,
	},
},
"XS_chengsi":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"phaseEnd",
	},
	priority:73,
	filter:function (event,player){
		for(var i=0;i<_status.renku.length;i++) {
			if(get.type(_status.renku[i])=='equip') return true;
		}
		return false;
	},
	check:function (event,player){return true;},
	content:function(){
		"step 0"
		var lt=[];
		for(var i=0;i<_status.renku.length;i++) {
			if(get.type(_status.renku[i])=='equip') lt.push(_status.renku[i]);
		}
		player.chooseButton(['将“仁”中任意张装备牌置于一名角色的装备区',lt],[1,Infinity],false).set('ai',function(button){
			return get.value(button.link);
		});
		"step 1"
		if(result.bool) {
			event.cds=result.links;
			player.chooseTarget('将'+get.translation(event.cds)+'置于一名角色的装备区',true,function(card,player,target){
				return true;
			}).ai=function(target){
				var att=get.attitude(player,target);
				for(var i=0;i<event.cds.length;i++) {
					if(!target.isEmpty(get.subtype(event.cds[i]))) att/=2;
				}
				return att;
			}
		}
		else event.finish();
		"step 2"
		var tar=result.targets[0];
		_status.renku.removeArray(event.cds);
		game.updateRenku();
		tar.gain(event.cds,'gain2','fromRenku');
		for(var i=0;i<event.cds.length;i++) {
			tar.equip(event.cds[i]);
		}
	},
	ai:{
		expose:0.4,
	},
},
"XS_guishi":{
	init:function(player){
		player.storage.renku=true;
	},
	audio:"ext:血色衣冠:2",
	trigger:{
		global:"roundStart",
	},
	priority:111,
	check:function (event,player){return true;},
	"prompt2":function (event,player){
		return '一轮开始时，你可进行1次闪电效果判定，然后获得1个额外回合。';
	},
	content:function (){
		"step 0"
		player.judge('规时',function(card){
			if(get.suit(card)=='spade'&&get.number(card)>1&&get.number(card)<10) return -6;
			return 0;
		});
		"step 1"
		if(result.bool==false){
			player.damage(3,'thunder','nosource');
		}
		"step 2"
		player.phaseJudge();
		player.phaseDraw();
		player.phaseUse();
		player.phaseDiscard();
	},
	group:['XS_guishi_judge'],
	subSkill:{
		judge:{
			trigger:{global:'cardsDiscardAfter'},
			priority:19,
			forced:true,
			filter:function(event,player){
				var evt=event.getParent().relatedEvent;
				if(!evt||evt.name!='judge') return;
				if(get.position(event.cards[0],true)!='d') return false;
				return true;
			},
			content:function(){
				game.log(player,'将',trigger.cards[0],'置于了仁库');
				game.cardsGotoSpecial(trigger.cards[0],'toRenku');
			}
		}
	},
},
"XS_guishiex":{
	trigger:{
		global:"roundStart",
	},
	priority:112,
	check:function (event,player){return true;},
	"prompt2":function (event,player){
		return '一轮开始时，你可进行1次闪电效果判定，然后获得1个额外回合。';
	},
	content:function (){
		"step 0"
		player.judge('规时',function(card){
			if(get.suit(card)=='spade'&&get.number(card)>1&&get.number(card)<10) return -6;
			return 0;
		});
		"step 1"
		if(result.bool==false){
			player.damage(3,'thunder','nosource');
		}
		"step 2"
		player.phaseJudge();
		player.phaseDraw();
		player.phaseUse();
		player.phaseDiscard();
	},
},
"XS_shanren":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:["phaseDiscardBefore"],
	},
	check:function (event,player){
		return player.needsToDiscard();
	},
	filter:function (event,player){
		if(player.hasSkill('XS_shanren_temp')) return false;
		return player.countCards('h');
	},
	content:function(){
		"step 0"
		player.addTempSkill('XS_shanren_temp','roundStart');
		player.chooseCardButton('请选择要置于“仁”中的牌',player.getCards('h'),[1,Infinity]).set('filterButton',function(button){
            return true;
        }).set('ai',function(button){
			var nm=6-_status.renku.length;
			if(ui.selected.buttons.length<nm) return 6.5-get.value(button.link)
			return 5-get.value(button.link);
        });
		"step 1"
		if(result.bool){
			player.$throw(result.links,1000);
			game.log(player,'将',result.links,'置入了“仁”中');
			player.lose(result.links,ui.special,'toRenku');
		}
		else event.finish();
		"step 2"
		if(_status.renku.length==6) {
			player.chooseTarget('你可令1名其他角色获得“规时”前半部分至你下回合开始',1,function(card,player,target){
				return target!=player&&!target.hasSkill('XS_guishiex');
			}).ai=function(target){
				return get.attitude(player,target);
			}
		}
		else event.finish();
		"step 3"
		if(result.bool) {
			player.line(result.targets[0]);
			result.targets[0].addSkill('XS_guishiex');
			trigger.cancel();
		}
	},
	ai:{
		expose:0.3,
	},
	group:['XS_shanren_clear'],
	subSkill:{
		clear:{
			trigger:{player:'phaseBegin'},
			priority:99,
			direct:true,
			filter:function(event,player){
				return game.countPlayer(function(current){
					if(current.hasSkill('XS_guishiex')) current.removeSkill('XS_guishiex');
				});
			},
			content:function(){
			}
		},
		temp:{
			charlotte:true,
		}
	},
},
"XS_jidian":{
	init:function (player){
		player.storage.XS_jidian=1;
    },
	trigger:{
		player:"useCardToAfter",
	},
	logTarget:'target',
	frequent:true,
	filter:function (event,player){
		return event.target&&event.target!=player;
	},
	content:function (){
		"step 0"
		if(!trigger.target.hasSkill('XS_jidian_mark')) {
			trigger.target.addSkill('XS_jidian_mark');
		}
		trigger.target.addMark('XS_jidian_mark',1);
		trigger.target.storage.XS_jidian_marka=player;
		"step 1"
		if(get.distance(player,trigger.target)<=1&&trigger.target.isAlive()) {
			player.chooseBool('是否令'+get.translation(trigger.target)+'进行一次“浮雷”效果的判定，并重置与其的距离？').set('ai',function(){
				return get.attitude(player,_status.event.getTrigger().target)<0;
			});
		}
		else event.finish();
		"step 2"
		if(result.bool) {
			game.playXSAudio('XS_jidian',2);
			trigger.target.removeMark('XS_jidian_mark',trigger.target.countMark('XS_jidian_mark'));
			trigger.target.judge('疾电',function(card){
				if(get.suit(card)=='spade') return -6;
				return 0;
			});
		}
		else event.finish();
		"step 3"
		if(result.bool==false){
			trigger.target.damage(player.storage.XS_jidian,'thunder','nosource');
			player.storage.XS_jidian++;
		}
	},
	group:["XS_jidian_rec"],
	subSkill:{
		mark:{
			marktext:"疾",
			intro:{
				content:function(storage,player,skill){
					return '因“疾电”减少距离：<span class="bluetext">'+storage+'</span>';
				},
			},
			mark:true,
			mod:{
				globalTo:function (from,to,current){
					var nm=to.storage.XS_jidian_mark,pla=to.storage.XS_jidian_marka;
					if(from==pla) return current-nm;
				},
			},
			sub:true,
		},
		rec:{
			trigger:{
				global:"dieAfter",
			},
			filter:function(event,player){
				return event.getParent(3)&&event.getParent(3).name=='XS_jidian';
			},
			direct:true,
			priority:67,
			content:function (){
				player.storage.XS_jidian=1;
			},
			sub:true,
		},
	},
	ai:{
		expose:0.2,
	},
},
"XS_jihou":{
	audio:"ext:血色衣冠:3",
	mod:{
		aiOrder:function(player,card,num){
			if(typeof card=='object'){
				if(['basic','trick','equip','delay'].contains(player.storage.XS_jihou)&&get.type(card)!=player.storage.XS_jihou&&['basic','trick','equip','delay'].contains(get.type(card))){
					return num+10;
				}
			}
		},
	},
	init:function (player){
		player.storage.XS_jihou='none';
	},
	intro:{
		content:function (storage){
			if(storage!='none') return '你使用的上一张牌的类型为：'+get.translation(storage);
			return '你尚未使用任何牌';
		},
	},
	trigger:{player:'useCard'},
	frequent:true,
	filter:function(event,player){
		if(!['basic','trick','equip','delay'].contains(player.storage.XS_jihou)) return false;
		return ['basic','trick','equip','delay'].contains(get.type(event.card))&&player.storage.XS_jihou!=get.type(event.card);
	},
	content:function(){
		"step 0"
		var tp=get.type(trigger.card);
		var info=get.info(trigger.card);
		if(tp=='basic'&&!info.notarget) {
			player.addTempSkill('XS_jihou_ex','phaseUseAfter');
			trigger.XS_jihou_ex=player;
			event.finish();
		}
		else if(tp=='delay') {
			player.draw(2);
		}	
		else if(tp=='trick') {
			var goon=false;
			if(trigger.targets&&!info.multitarget&&!info.notarget){
				var players=game.filterPlayer();
				for(var i=0;i<players.length;i++){
					if(lib.filter.targetEnabled2(trigger.card,player,players[i])&&!trigger.targets.contains(players[i])){
						goon=true;break;
					}
				}
			}
			if(goon){
				player.chooseTarget('你可为'+get.translation(trigger.card)+'指定1名额外目标',1,function(card,player,target){
					var trigger=_status.event.getTrigger();
					if(trigger.targets.contains(target)) return false;
					return lib.filter.targetEnabled2(trigger.card,player,target);
				}).set('ai',function(target){
					var trigger=_status.event.getTrigger();
					return get.effect(target,trigger.card,player,player);
				});
			}
			else event.finish();
		}
		else if(tp=='equip') {
			event.goto(2);
		}
		else event.finish();
		"step 1"
		if(result.bool){
			game.log(result.targets[0],'成为了'+get.translation(trigger.card)+'的额外目标');
            trigger.targets.add(result.targets[0]);
        }
		event.finish();
		"step 2"
		if(game.hasPlayer(function(current){
			var es=current.getCards('e');
			for(var i=0;i<es.length;i++){
				if(game.hasPlayer(function(current2){
					return current!=current2&&!current2.isMin()&&current2.isEmpty(get.subtype(es[i]));
				})){
					return true;
				}
			}
		})) {
			var next=player.chooseTarget(2,function(card,player,target){
				if(ui.selected.targets.length){
					var from=ui.selected.targets[0];
					if(target.isMin()) return false;
					var es=from.getCards('e');
					for(var i=0;i<es.length;i++){
						if(target.isEmpty(get.subtype(es[i]))) return true;
					}
					return false;
				}
				else{
					return target.countCards('e')>0;
				}
			});
			next.set('ai',function(target){
				var player=_status.event.player;
				var att=get.attitude(player,target);
				var sgnatt=get.sgn(att);
				if(ui.selected.targets.length==0){
					if(att>0){
						if(target.countCards('e',function(card){
							return get.value(card,target)<0&&game.hasPlayer(function(current){
								return current!=target&&current.isEmpty(get.subtype(card))&&get.effect(current,card,player,player)<0;
							});
						})>0) return 9;
					}
					else if(att<0){
						if(game.hasPlayer(function(current){
							if(current!=target&&get.attitude(player,current)>0){
								var es=target.getCards('e');
								for(var i=0;i<es.length;i++){
									if(get.value(es[i],target)>0&&current.isEmpty(get.subtype(es[i]))&&get.effect(current,es[i],player,current)>0) return true;
								}
							}
						})){
							return -att;
						}
					}
					return 0;
				}
				var es=ui.selected.targets[0].getCards('e');
				var i;
				var att2=get.sgn(get.attitude(player,ui.selected.targets[0]));
				for(i=0;i<es.length;i++){
					if(sgnatt!=0&&att2!=0&&sgnatt!=att2&&
						get.sgn(get.value(es[i],ui.selected.targets[0]))==-att2&&
						get.sgn(get.effect(target,es[i],player,target))==sgnatt&&
						target.isEmpty(get.subtype(es[i]))){
						return Math.abs(att);
					}
				}
				if(i==es.length){
					return 0;
				}
				return -att*get.attitude(player,ui.selected.targets[0]);
			});
			next.set('multitarget',true);
			next.set('targetprompt',['被移走','移动目标']);
			next.set('prompt','移动场上的一张装备牌');
		}
		else event.finish();
		"step 3"
		if(result.bool){
			player.line2(result.targets,'green');
			event.targets=result.targets;
		}
		else event.finish();
		"step 4"
		game.delay();
		"step 5"
		if(event.targets.length==2){
			player.choosePlayerCard('e',true,function(button){
				var targets0=event.targets[0];
				var targets1=event.targets[1];
				if(get.attitude(player,targets0)>0&&get.attitude(player,targets1)<0){
					if(get.value(button.link,targets0)<0&&get.effect(targets1,button.link,player,targets1)>0) return 10;
					return 0;
				}
				else{
					return get.value(button.link)*get.effect(targets1,button.link,player,player);
				}
			},targets[0]).set('filterButton',function(button){
				var targets1=event.targets[1];
				return targets1.isEmpty(get.subtype(button.link));
			});
		}
		else{
			event.finish();
		}
		"step 6"
		if(result.bool&&result.links.length){
			var link=result.links[0];
			event.targets[1].equip(link);
			event.targets[0].$give(link,event.targets[1])
			game.delay();
		}
		else event.finish();
	},
	group:["XS_jihou_rec"],
    subSkill:{
        ex:{
			trigger:{global:'useCardToTargeted'},
			forced:true,
			charlotte:true,
			popup:false,
			lastDo:true,
			filter:function(event,player){
				return (event.parent.XS_jihou_ex==player&&event.targets.length==event.parent.triggeredTargets4.length);
			},
			content:function(){
				trigger.getParent().targets=trigger.getParent().targets.concat(trigger.targets);
				trigger.getParent().triggeredTargets4=trigger.getParent().triggeredTargets4.concat(trigger.targets);
			},
        },
		rec:{
			trigger:{
				player:["useCardAfter"],
			},
			direct:true,
			content:function (){
				player.storage.XS_jihou=get.type(trigger.card);
				player.markSkill('XS_jihou');
			},
        },
    },
},
"XS_chongshe":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:"gameDrawAfter",
	},
	forced:true,
	filter:function(event,player){
		return player.countCards('h')>0;
	},
	marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"40px")+" src="+lib.assetURL+"extension/血色衣冠/icon/chongshe.png>":"奢",
	intro:{
		content:function(storage,player,skill){
			var tp=game.storage.XS_chongshe;
			return '其他角色可将点数小于<span class="bluetext">'+tp+'</span>的基本牌当作伤害基数为2的火杀对你使用';
		},
	},
	content:function (){
		"step 0"
		player.chooseCard(get.prompt2('XS_chongshe'),'h',1,true).set('ai',function(card){
			return get.number(card)+get.value(card)/10;
		});
		"step 1"
		if(result.bool) {
			player.showCards(result.cards[0]);
			var nm=get.number(result.cards[0]);
			player.maxHp+=nm;
			player.hp+=nm;
			player.update();
			if(typeof game.storage=="undefined") game.storage={};
			game.storage.XS_chongshe=nm;
			player.markSkill('XS_chongshe');
		}
    },
	global:'XS_chongshe2',
	group:["XS_chongshe_dam"],
	subSkill:{
		dam:{
			trigger:{
				global:["shaBegin"],
			},	
			priority:578,
			direct:true,
			filter:function (event,player){
				return event.getParent(2)&&event.getParent(2).name=='XS_chongshe2';
			},
			content:function (){
				trigger.baseDamage++;
			},
			sub:true,
		},
	},
},
"XS_chongshe2":{
	enable:"phaseUse",
	filterTarget:function (card,player,target){
        return target.hasSkill('XS_chongshe')&&player.canUse({name:'sha',nature:'fire'},target,null,true);
    },
	selectTarget:1,
    filter:function (event,player){
		if(typeof game.storage.XS_chongshe!='number') return false;
		if(!game.hasPlayer(function(current){
			return current.hasSkill('XS_chongshe')&&player.canUse({name:'sha',nature:'fire'},current,null,true);
		})) return false;
		var tp=game.storage.XS_chongshe,hs=player.getCards('h');
		for(var i=0;i<hs.length;i++) {
			if(get.type(hs[i])=='basic'&&get.number(hs[i])<tp) return true;
		}
		return false;
    },
	discard:false,
	selectCard:1,
	position:'h',
	filterCard:function (card,player){
		var tp=game.storage.XS_chongshe;
		return get.type(card)=='basic'&&get.number(card)<tp;
	},
	check:function (card){
		return 6-get.value(card);
	},
	prompt:'将一张基本牌当作伤害基数为2的火杀对一名角色使用',
	content:function (){
		player.useCard({name:'sha',nature:'fire'},cards,target);
    },
    ai:{
		order:9,
		expose:0.1,
		result:{
			target:function (player,target){
				var tp=-4;
				if(!target.isLinked()) return tp;
				for(var i=0;i<game.players.length;i++){
					if(game.players[i]!=target&&game.players[i].isLinked()) {
						var att=get.attitude(target,game.players[i]);
						if(att<=0) tp+=2;
						else tp-=2;
					}
					else continue;
				}
				return tp;
            },
        },
    },
},
"XS_yanxing":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:"linkAfter",
	},
	"prompt2":function (event,player){
		return '是否令'+get.translation(event.player)+'摸1张牌？';
	},
	logTarget:'player',
	check:function (event,player){
		return get.attitude(player,event.player)>0;
	},
	filter:function (event,player){
		return event.player.isLinked();
	},
	priority:69,
	content:function (){
		trigger.player.draw();
	},
	ai:{
		expose:0.3,
    },
},
"XS_canbing":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"damageBegin4",
	},
	priority:55,
	frequent:true,
	filter:function (event,player){
		return !player.hasJudge('bingliang')&&get.itemtype(event.cards)=='cards'&&get.position(event.cards[0],true)=='o';
	},
	content:function (){
		"step 0"
		var next=player.useCard({name:'bingliang'},trigger.cards,player);
		"step 1"
		player.draw();
		trigger.cancel();
	},
	ai:{
		nodamage:true,
		nofire:true,
		nothunder:true,
		skillTagFilter:function (player){
			if(player.hasJudge('bingliang')) return false;
        },
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')) {
					if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
					if(!target.hasFriend()||target.hasJudge('bingliang')) return;
					return 0.5;
				}
			},
		},
	},
},
"XS_zhongjie":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:"phaseBefore",
	},
	priority:884,
	filter:function (event,player){
		if(player.hasSkill('XS_zhongjie_temp')) return false;
		return player.countCards('h')&&player.countCards('e')&&player.countCards('j');
	},
	direct:true,
	content:function(){
		"step 0"
		player.discardPlayerCard(get.prompt2('XS_zhongjie',trigger.player),player,3,'hej',false).set('filterButton',function(button){
			for(var i=0;i<ui.selected.buttons.length;i++){
				if(get.position(button.link)==get.position(ui.selected.buttons[i].link)) return false;
			}
			return true;
		}).set('ai',function(button){
			if(get.attitude(player,_status.event.getTrigger().player)<=0) return -1;
			return 7.5-get.value(button.link);
		});
		"step 1"
		if(result.bool) {
			player.logSkill('XS_zhongjie',trigger.player);
			trigger.player.draw(3);
			trigger.player.addTempSkill('XS_zhongjie_mark');
			player.addTempSkill('XS_zhongjie_temp','roundStart');
		}
	},
	ai:{
		expose:0.3,
    },
	subSkill:{
		mark:{
			intro:{
				content:function(storage,player,skill){
					return '使用牌无距离、次数限制';
				},
			},
			mark:true,
			marktext:'节',
			mod:{
				cardUsable:function(card,player){
					return Infinity;
				},
				targetInRange:function (card,player,target,now){
					return true;
				},
			},
		},
		temp:{
			charlotte:true,
		},
	},
},
"XS_enze":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:["phaseDrawBefore"],
	},
	filter:function (event,player){
		return game.hasPlayer(function(current){
			return current!=player&&(current.getDamagedHp()>player.getDamagedHp());
		});
	},
	check:function (event,player){
		var tars=game.filterPlayer(function(current){
			return current!=player&&(current.getDamagedHp()>player.getDamagedHp());
		});
		var eff=0;
		for(var i=0;i<tars.length;i++) {
			if(get.attitude(player,tars[i])>0) eff++;
			else eff--;
		}
		return eff>0;
    },
	priority:-3,
	content:function(){
		"step 0"
		event.nm1=game.filterPlayer(function(current){
			return current!=player&&(current.getDamagedHp()>player.getDamagedHp());
		}).length;
		player.chooseTarget('选择任意名已损失体力值大于你的其他角色',[1,Infinity],true,function(card,player,target){
			return target!=player&&target.getDamagedHp()>player.getDamagedHp();
		}).ai=function(target){
			return get.attitude(player,target)+20;
		}
		"step 1"
		var tars=result.targets.slice(0);
		event.tars=tars.sort(lib.sort.seat);
		event.nm2=event.tars.length;
		"step 2"
		if(event.tars.length){
			var target=event.tars.shift();
			event.current=target;
		}
		else event.goto(6);
		"step 3"
		if(_status.renku.length) {
			player.chooseButton(['你可交给'+get.translation(event.current)+'“仁”中一张牌，否则令其摸一张牌',_status.renku],1,false).set('ai',function(button){
				var att=get.attitude(player,event.current),val=get.value(button.link);
				return att>0?(val-3.5):(3.5-val);
			});
		}
		else event.goto(5);
		"step 4"
		if(result.bool) {
			var cards=result.links;
			_status.renku.removeArray(cards);
			game.updateRenku();
			event.current.gain(cards,'gain2','fromRenku');
			event.goto(2);
		}
		"step 5"
		event.current.draw();
		event.goto(2);
		"step 6"
		if(event.nm1==event.nm2) player.draw(2);
		trigger.cancel();
	},
	ai:{
		expose:0.3,
	},
},
"XS_xiebang":{
	init:function(player){
		player.storage.renku=true;
	},
	trigger:{
		player:["phaseDiscardBefore"],
	},
	audio:"ext:血色衣冠:2",
	check:function (event,player){
		return game.hasPlayer(function(current){
			return get.recoverEffect(current,player,player)>0;
		});
	},
	filter:function (event,player){
		var hs=player.getCards('h'),nm=0;
		for(var i=0;i<hs.length;i++) {
			nm+=get.number(hs[i]);
		}
		return nm>player.hp;
	},
	content:function(){
		"step 0"
		player.chooseCardButton('请选择要置于“仁”中的牌',player.getCards('h')).set('filterButton',function(button){
            return true;
        }).set('ai',function(button){
			var tp=player.getDamagedHp();
			if(ui.selected.buttons.length>=tp) return -get.value(button.link);
			return 20-get.value(button.link);
        }).set('selectButton',function(button){
			var nm1=ui.selected.buttons.length,nm2=0;
			for(var i=0;i<nm1;i++) {
				nm2+=get.number(ui.selected.buttons[i]);
			}
			if(nm2>player.hp) return [nm1,Infinity];
            else return [player.countCards('h'),Infinity];
        });
		"step 1"
		if(result.bool){
			player.$throw(result.links,1000);
			game.log(player,'将',result.links,'置入了“仁”中');
			player.lose(result.links,ui.special,'toRenku');
			event.nm=result.links.length;
		}
		else event.finish();
		"step 2"
		player.chooseTarget('令任意角色共计回复至多'+event.nm+'点体力',[1,event.nm],function(card,player,target){
			return target.isDamaged();
		}).ai=function(target){
			var eff=get.recoverEffect(target,player,player),tp=target.hp;
			return eff/tp;
		}
		"step 3"
		if(result.bool) event.tars=result.targets.slice(0);
		else event.finish();
		"step 4"
		if(event.tars.length==event.nm) {
			for(var i=0;i<event.tars.length;i++) {
				event.tars[i].recover();
			}
			event.goto(7);
		}
		else if(event.tars.length==1) {
			event.tars[0].recover(event.nm);
			event.goto(7);
		}
		else {
			var target=event.tars.shift();
			event.current=target;
		}
		"step 5"
		if(event.current){
			var lt=[];
			for(var i=1;i<=event.nm-event.tars.length;i++) {
				lt.push(i.toString());
			}
			player.chooseControl(lt,true).set('ai',function(event){
				var tp=event.current.getDamagedHp();
				if(tp>2) return '2';
				return '1';
			}).set('prompt','为'+get.translation(event.current)+'分配几点回复数值？');
		}
		"step 6"
		event.current.recover(parseInt(result.control));
		event.nm-=parseInt(result.control);
		event.goto(4);
		"step 7"
		trigger.cancel();
	},
	ai:{
		expose:0.3,
	},
},
"XS_mingde":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:["phaseDrawBefore"],
	},
	filter:function (event,player){
		return player.countCards('h');
	},
	init:function(player){
		player.storage.renku=true;
	},
	check:function (event,player){
		var nm=game.countPlayer(function(current){
			return current.countCards('h');
		});
		var nm1=6-_status.renku.length;
		return (nm-nm1)>2;
    },
	priority:5,
	content:function(){
		"step 0"
		event.pla=player;
		event.targets=game.filterPlayer(function(current){
			return current.countCards('h');
		});
		event.targets.sort(lib.sort.seat);
		"step 1"
		if(event.targets.length) {
			var target=event.targets.shift();
			event.current=target;
		}
		else {
			trigger.cancel();
			event.finish();
		}
		"step 2"
		event.current.chooseCard('你可将一张手牌置于“仁”中并摸一张牌',1,'h',false).ai=function(card){
			var att=get.attitude(event.current);
			return att>0?(10-get.value(card)):(2-get.value(card));
		}
		"step 3"
		if(result.bool) {
			event.current.$throw(result.cards,1000);
			game.log(event.current,'将',result.cards,'置入了“仁”中');
			event.current.lose(result.cards,ui.special,'toRenku');
			event.current.draw();
		}
		"step 4"
		game.delay();
		"step 5"
		event.goto(1);
	},
	ai:{
		threaten:1.3,
	},
	group:["XS_mingde_draw"],
    subSkill:{
		draw:{
			trigger:{
				global:['gainAfter','cardsDiscardAfter'],
			},
			direct:true,
			filter:function(event,player){
				return event.fromRenku==true;
			},
			content:function(){
				"step 0"
				player.chooseTarget(get.prompt('XS_mingde'),'你可令一名角色摸一张牌',1,false,function(card,player,target){
					return true;
				},function(target){
					var att=get.attitude(player,target),hs=target.countCards('h')+1;
					return att/hs;
				});
				"step 1"
				if(result.bool) {
					player.logSkill('XS_mingde',result.targets[0]);
					result.targets[0].draw();
				}
			},
			ai:{
				expose:0.3,
			},
        },
    },
},
"XS_jiaohua":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:["damageAfter"],
	},
	filter:function(event,player){
		return event.source&&event.source.countCards('h')>0&&event.num>0;
	},
	check:function (event,player){
		return true;
	},
	priority:68,
	logTarget:'source',
	content:function(){
		"step 0"
		player.choosePlayerCard(trigger.source,'h',1,'visible',true).set('ai',function(button){
			var att=get.attitude(player,_status.event.getTrigger().source);
			var val=get.value(button.link);
			return att>0?(4-val):(val-4);
		});
		"step 1"
		trigger.source.$throw(result.links,1000);
		game.log(trigger.source,'将',result.links,'置入了“仁”中');
		trigger.source.lose(result.links,ui.special,'toRenku');
		trigger.source.draw();
	},
	ai:{
		expose:0.1,
		maixie:true,
		"maixie_defend":true,
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')) {
					if(!target.hasFriend()||!player.countCards('h')) return;
					return [1,0,1,-0.3];
				}
			},
		},
	},
},
"XS_shaoying":{
	audio:"ext:血色衣冠:2",
	init:function (player){
		player.storage.XS_shaoying=[];
    },
	priority:2,
    trigger:{
        global:["useCardBegin"],
    },
    filter:function (event,player){
        return event.player!=player&&get.tag(event.card,'damage')&&!player.hasSkill('XS_shaoying_temp');
    },
	check:function (event,player){
		var eff=0;
		for(var i=0;i<event.targets.length;i++) {
			eff+=get.effect(event.targets[i],event.card,event.player,player);
		}
		return eff<0&&player.countCards('hs','sha');
    },
	logTarget:'player',
    content:function (){
		"step 0"
		trigger.targets=[];
		trigger.targets.push(player);
		trigger.card={name:'juedou'};
		player.addTempSkill('XS_shaoying_temp','roundStart');
		"step 1"
		player.storage.XS_shaoying.push(trigger.card);
    },
	ai:{
		expose:0.4,
		threaten:1.1,
	},
	group:["XS_shaoying_dam","XS_shaoying_remove"],
	subSkill:{
		dam:{
			trigger:{
				source:["damageEnd"],
			},	
			priority:78,
			direct:true,
			filter:function (event,player){
				return event.card&&player.storage.XS_shaoying.indexOf(event.card)>=0;
			},
			content:function (){
				player.removeSkill('XS_shaoying_temp');
			},
			sub:true,
		},
		remove:{
			trigger:{
				global:["useCardAfter","useCardCancelled"],
			},
			direct:true,
			priority:8,
			filter:function(event,player){ 
				return player.storage.XS_shaoying.indexOf(event.card)>=0;
			},
			content:function(){
    			var n=player.storage.XS_shaoying.indexOf(trigger.card);
    			player.storage.XS_shaoying.splice(n,1);
			},
			sub:true,
		},
		temp:{
			charlotte:true,
			sub:true,
		},
	},
},
"XS_haoqiang":{
	audio:"ext:血色衣冠:2",
	init:function (player){
		player.storage.XS_haoqiang=[];
    },
	intro:{
		content:"cards",
	},
	trigger:{global:'phaseAfter'},
	filter:function(event,player){
		return player.storage.XS_haoqiang.length>0;
	},
	priority:2,
	direct:true,
	content:function(){
		"step 0"
		player.chooseBool(get.prompt2('XS_haoqiang')).set('ai',function(){
			return true;
		});
		"step 1"
		if(result.bool) {
			player.logSkill('XS_haoqiang');
			player.judge('豪枪',function(card){
				if(get.number(card)>7) return 3;
				return 0;
			});
		}
		else event.goto(3);
		"step 2"
		event.nm=result.number;
		var cds=[];
		for(var i=0;i<player.storage.XS_haoqiang.length;i++) {
			if(get.number(player.storage.XS_haoqiang[i])<event.nm&&get.position(player.storage.XS_haoqiang[i])=='d') {
				cds.push(player.storage.XS_haoqiang[i]);
			}
		}
		if(cds.length) player.gain(cds,'gain2');
		"step 3"
		player.storage.XS_haoqiang=[];
		player.unmarkSkill('XS_haoqiang');
	},
	group:["XS_haoqiang_rec"],
	subSkill:{
		rec:{
			trigger:{global:'respondEnd'},
			filter:function(event,player){
				if(event.card.name!='sha') return false;
				if(event.cards){
					for(var i=0;i<event.cards.length;i++){
						if(get.position(event.cards[i],true)=='o') return true;
					}
				}
				return false;
			},
			priority:-99999,
			direct:true,
			content:function(){
				var cards=trigger.cards.slice(0);
				for(var i=0;i<cards.length;i++){
					if(get.position(cards[i],true)=='o'){
						player.storage.XS_haoqiang.push(cards[i]);;
					}
				}
				player.markSkill('XS_haoqiang');
			},
		},
	},
},
"XS_yuchen":{
	audio:"ext:血色衣冠:2",
	enable:["chooseToUse","chooseToRespond"],
	filter:function (event,player){
		if(player.isLinked()) return false;
		if(event.filterCard({name:'sha'},player,event)) return true;
		if(event.filterCard({name:'jiu'},player,event)) return true;
		if(event.filterCard({name:'tao'},player,event)) return true;
		if(event.filterCard({name:'shan'},player,event)) return true;
		return false;
	},
	hiddenCard:function(player,name){
		if(!player.isLinked()&&(['sha','shan','tao','jiu'].contains(name))) return true;
		return false;
	},
	chooseButton:{
		dialog:function (event,player){
			var list=[];
			if(event.filterCard({name:'sha'},player,event)){list.push(['基本','','sha']);}
			if(event.filterCard({name:'tao'},player,event)) {list.push(['基本','','tao']);}
			if(event.filterCard({name:'jiu'},player,event)) {list.push(['基本','','jiu']);}
			if(event.filterCard({name:'shan'},player,event)) {list.push(['基本','','shan']);}
			return ui.create.dialog("将自身横置，视为使用或打出一张基本牌",[list,"vcard"],"hidden");
		},
		check:function (button){
			var player=get.player();
			var card={name:button.link[2]};
			if(card.name=='shan') return 3;
			if(game.hasPlayer(function(current){
				return player.canUse({name:'sha'},current)&&get.effect(current,{name:'sha'},player,player)>0;
			})){
				if(card.name=='sha'){
					return 2.9;
				}
				else if(card.name=='jiu'){
					if(player.hasUsableCard('sha')) return 4;
					if(player.hp<=0) return 3.5;
					else return 0;
				}
			}
			if(game.hasPlayer(function(current){
				return player.canUse({name:'tao'},current)&&get.effect(current,{name:'tao'},player,player)>0;
			})&&card.name=='tao'){
				return 4;
			}
			return 0;
		},
		backup:function (links,player){
			return {
				filterCard:function (card){
					return false;
				},
				popname:true,
				selectCard:-1,
				check:function(card,player,target){
					return true;
				},
				viewAs:{
					name:links[0][2],
				}, 
				onuse:function(result,player){
					player.logSkill('XS_yuchen');
					player.link(true);
				},
				onrespond:function(){return this.onuse.apply(this,arguments)},
			}
		},
		prompt:function (links,player){
			return '视为使用1张'+get.translation(links[0][2]);
		},
	},
	ai:{
		order:function (){
			var player=get.player();
			var event=_status.event;
			if(event.type=='dying'){
				if(event.filterCard({name:'tao'},player,event))return 0.5;
			}
			else{
				if(event.filterCard({name:'tao'},player,event)||event.filterCard({name:'shan'},player,event))return 4;
				if(event.filterCard({name:'sha'},player,event))return 2.9;
			}
			return 0;
		},
		save:true,
		respondSha:true,
		respondShan:true,
		skillTagFilter:function (player,tag,arg){
			if(player.isLinked()) return false;
		},
		result:{
			player:function (player){
				if(_status.event.type=='dying')return get.attitude(player,_status.event.dying);
				else return 1;
			},
		},
	},
	group:["XS_yuchen_rec"],
    subSkill:{
		rec:{
			trigger:{
				global:"roundStart",
			},
			filter:function (event,player){
				return player.isLinked();
			},
			priority:11,
			check:function (event,player){return true;},
			"prompt2":function (event,player){
				return '是否解除自身的横置状态？';
			},
			content:function (){
				player.link(false);
			},
			sub:true,
        },
    },
},
"XS_xiahui":{
	audio:"ext:血色衣冠:2",
	intro:{
		content:function(storage,player,skill){
			return '此次横置期间，你已使用<span class="bluetext">'+storage+'</span>张牌。';
		},
	},
	marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"40px")+" src="+lib.assetURL+"extension/血色衣冠/icon/xiahui.png>":"黠",
	trigger:{
		player:["linkAfter"],
	},
	frequent:true,
	filter:function (event,player){
		return !player.isLinked()&&typeof player.storage.XS_xiahui=='number'&&player.storage.XS_xiahui>0;
	},
	content:function (){
		"step 0"
		event.tp=player.storage.XS_xiahui;
		if(event.tp>0) {
			player.chooseControlList(['摸'+event.tp+'张牌','令1名其他角色弃置'+event.tp+'张牌'],true).set('ai',function(event,player){
				if(player.countCards('h')<3) return 0;
				return 1;
			}).set('prompt','请选择一项');
		}
		else event.goto(3);
		"step 1"
		if(result.index==0){
			player.draw(event.tp);
			event.goto(3);
        }
        else {
			player.chooseTarget(1,'令1名其他角色弃置'+event.tp+'张牌',function(card,player,target){
				return target!=player&&target.countCards('he');
			}).set('ai',function(target){
				var att=get.attitude(player,target);
				if(target.countCards('he')<event.tp) att/=10;
				return -att;
			});
        }
		"step 2"
		if(result.bool) {
			player.line(result.targets[0]);
			result.targets[0].chooseToDiscard(event.tp,'he',true);
		}
		"step 3"
		delete player.storage.XS_xiahui;
		player.unmarkSkill('XS_xiahui');
	},
	group:["XS_xiahui_st","XS_xiahui_count"],
    subSkill:{
		st:{
			trigger:{
				player:["linkAfter"],
			},
			direct:true,
			filter:function (event,player){
				return player.isLinked();
			},
			priority:99,
			content:function (){
				player.storage.XS_xiahui=0;
			},
        },
		count:{
			trigger:{
				player:["useCardAfter"],
			},
			direct:true,
			priority:88,
			filter:function (event,player){
				return (typeof player.storage.XS_xiahui=='number')&&event.skill!='XS_yuchen_backup'&&player.isLinked();
			},
			content:function (){
				player.storage.XS_xiahui++;
				if(player.storage.XS_xiahui>3) player.storage.XS_xiahui=3;
				player.markSkill('XS_xiahui');
			},
        },
    },
},
"XS_qingzi":{
	audio:"ext:血色衣冠:2",
	zhuanhuanji:true,
	init:function (player){
        player.storage.XS_qingzi=true;
    },
	mark:true,
	intro:{
		content:function(storage,player,skill){
			var str;
			if(player.storage.XS_qingzi) str='回合结束，你可交给1名其他角色2张手牌，如此若其与你手牌数之差不大于4，你可与其交换手牌';
			else str='回合结束，你可令1名其他角色摸3张牌，如此若其与你手牌数之差不大于4，你可与其交换手牌';
			return str;
		},
	},
	trigger:{
		player:"phaseAfter",
	},
	direct:true,
	filter:function (event,player){
		if(player.storage.XS_qingzi) return player.countCards('h')>=2;
		return true;
	},
	content:function(){
		"step 0"
		var str=player.storage.XS_qingzi?"你可交给1名其他角色2张手牌":"你可令1名其他角色摸3张牌";
		str+="，如此若其与你手牌数之差不大于4，你可与其交换手牌";
		player.chooseTarget(get.prompt('XS_qingzi'),1,str,false,function(card,player,target){
			return player!=target;
		},function(target){
			var att=get.attitude(player,target),ds=player.countCards('h')-target.countCards('h');
			if(player.storage.XS_qingzi) return (ds==0||ds==1)?-att:0;
			return att;
		});
		"step 1"
		if(result.bool) {
			event.tar=result.targets[0];
			player.logSkill('XS_qingzi',event.tar);
			if(!player.storage.XS_qingzi) {
				event.tar.draw(3);
				event.goto(3);
			}
			else {
				player.chooseCard('交给'+get.translation(event.tar)+'2张手牌',2,'h',true).ai=function(card){
					return 7.5-get.value(card);
				}
			}
		}
		else event.finish();
		"step 2"
		event.tar.gain(result.cards,player,'giveAuto');
		"step 3"
		if((event.tar.countCards('h')-player.countCards('h'))<=4) {
			player.chooseBool('是否与'+get.translation(event.tar)+'交换手牌？').set('ai',function(){
				return get.attitude(player,event.tar)<0;
			});
		}
		else event.goto(5);
		"step 4"
		if(result.bool){
			player.swapHandcards(event.tar);
		}
		"step 5"
		if(player.storage.XS_qingzi) player.storage.XS_qingzi=false;
		else player.storage.XS_qingzi=true;
		player.syncStorage('XS_qingzi');
	},
	ai:{
		expose:0.5,
	},
},
"XS_jieli":{
	global:'XS_jieli1',
},
"XS_jieli1":{
	mod:{
		targetInRange:function (card,player,target){
			var info=get.info(card);
			if(info&&info.range) {
				if(player!=target&&target.hasSkill('XS_jieli')&&target.isMinHandcard(false)) return false;
			}
		},
	},
},
"XS_kuji":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:["damageAfter"],
	},
	filter:function(event,player){
		return player.isDamaged()&&game.hasPlayer(function(current){
			return current!=player&&player.inRange(current);
    	});
	},
	direct:true,
	priority:88,
	content:function(){
		"step 0"
		var nm=player.getDamagedHp();
		player.chooseTarget(get.prompt('XS_kuji'),'你可令攻击范围内至多'+nm+'名其他角色各摸1张牌。',[1,nm],false,function(card,player,target){
			return target!=player&&player.inRange(target);
        }).ai=function(target){
			return get.attitude(player,target);
        }
		"step 1"
		if(result.bool) {
			player.logSkill('XS_kuji',result.targets);
			game.asyncDraw(result.targets);
		}
	},
	ai:{
		expose:0.4,
		maixie:true,
		"maixie_hp":true,
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')) {
					if(!target.hasFriend()) return;
					var num=game.countPlayer(function(current){
						if(current!=target){
							return target.inRange(current)&&get.attitude(target,current)>0;
						}
					});
					var tp=Math.min(2,num)
					return [1,tp];
				}
			},
		},
	},
	group:["XS_kuji_lose"],
	subSkill:{
		lose:{
			trigger:{
				player:["loseHpAfter"],
			},
			filter:function(event,player){
				return player.isDamaged()&&game.hasPlayer(function(current){
					return current!=player&&player.inRange(current);
				});
			},
			direct:true,
			priority:87,
			content:function(){
				"step 0"
				var nm=player.getDamagedHp();
				player.chooseTarget(get.prompt('XS_kuji'),'你可对攻击范围内至多'+nm+'名其他角色各造成1点伤害。',[1,nm],false,function(card,player,target){
					return target!=player&&player.inRange(target);
				}).ai=function(target){
					return get.damageEffect(target,player,player)>0;
				}
				"step 1"
				if(result.bool) {
					player.logSkill('XS_kuji',result.targets);
					for(var i=0;i<result.targets.length;i++) {
						result.targets[i].damage(player,1,'nocard');
					}
				}
			},
			ai:{
				expose:0.4,
			},
        },
    },
},
"XS_ziqiang":{
	audio:"ext:血色衣冠:2",
	unique:true,
	limited:true,
	enable:'phaseUse',
	filter:function(event,player){
		return !player.storage.XS_ziqiang;
	},
	init:function(player){
		player.storage.XS_ziqiang=false;
	},
	mark:true,
	intro:{
		content:'limited'
	},
	skillAnimation:true,
	content:function(){
		"step 0"
		event.nm=player.hp;
		player.awakenSkill('XS_ziqiang');
		player.storage.XS_ziqiang=true;
		player.storage.XS_ziqiang1=event.nm;
		player.addTempSkill('XS_ziqiang1');
		"step 1"
		player.loseHp(event.nm);
		player.draw(event.nm);
		
	},
	ai:{
		order:14,
		result:{
			player:function(player){
				if(player.hp>2) return false;
				if(player.countCards('hs',{name:['tao','jiu']})) return 1;
				return 0;
			}
		}
	},
},
"XS_ziqiang1":{
	onremove:true,
	mod:{
		cardUsable:function(card,player,num){
			if(typeof player.storage.XS_ziqiang1=='number'&&card.name=='sha'){
				return num+player.storage.XS_ziqiang1;
			}
		},
		globalFrom:function(from,to,distance){
			if(typeof from.storage.XS_ziqiang1=='number'){
				return distance-from.storage.XS_ziqiang1;
			}
		}
	},
},
"XS_beiwei":{
	audio:"ext:血色衣冠:2",
	intro:{
		content:function(storage,player,skill){
			var str='使用杀可指定目标数+<span class="bluetext">'+storage[0]+'</span>/响应所需闪数+<span class="bluetext">'+storage[1]+'</span>/进攻距离+<span class="bluetext">'+storage[2]+'</span>';
			return str;
		},
	},
	mark:true,
	marktext:'嵬',
 	mod:{
		selectTarget:function (card,player,range){
			if(card.name=='sha') {
				range[1]+=player.storage.XS_beiwei[0];
			}
		},
		globalFrom:function (from,to,current){
            return current-from.storage.XS_beiwei[2];
        },
	},
	init:function (player){
        player.storage.XS_beiwei=[0,1,2];
    },
	trigger:{
		player:["useCardAfter"],
	},	
	priority:45,
	direct:true,
	filter:function (event,player){
		return get.type(event.card)=='equip';
	},
	content:function (){
		"step 0"
		event.nm=player.storage.XS_beiwei[0]+player.storage.XS_beiwei[1]+player.storage.XS_beiwei[2];
		player.chooseControl(['向左','向右','置为0','cancel2']).set('prompt','背嵬：你可将所有数字向左移动1位/右移动1位/置为0至你下回合开始，视为使用1张不计次数的酒/视为使用1张不计次数的杀/摸'+event.nm+'张牌').set('ai',function(event,player){
			return '向左';
		});
		"step 1"
		if(result.control!='cancel2') {
			player.logSkill('XS_beiwei');
			var tp=player.storage.XS_beiwei;
			if(result.control=='向左') {
				player.storage.XS_beiwei=tp.slice(1).concat(tp.slice(0,1));
				player.chooseUseTarget({name:"jiu",isCard:true},false);
			}
			else if(result.control=='向右'){
				player.storage.XS_beiwei=tp.slice(-1).concat(tp.slice(0,-1));
				player.chooseUseTarget({name:"sha",isCard:true},false);
			}
			else {
				player.storage.XS_beiwei_b=player.storage.XS_beiwei;
				player.draw(event.nm);
				player.storage.XS_beiwei=[0,0,0];
			}
			player.syncStorage('XS_beiwei');
		}
	},
	group:["XS_beiwei_rec","XS_beiwei_clear"],
	subSkill:{
		rec:{
			trigger:{
				player:"shaBegin",
			},
			priority:92,
			filter:function (event,player){
				if(event.directHit) return false;
				return player.storage.XS_beiwei[1]!=0;
			},
			direct:true,
			content:function (){
				if(typeof trigger.shanRequired=='number'){
					trigger.shanRequired+=player.storage.XS_beiwei[1];
				}
				else{
					trigger.shanRequired=player.storage.XS_beiwei[1]+1;
				}
			},
		},
		clear:{
			trigger:{
				player:"phaseBefore",
			},
			priority:13,
			direct:true,
			content:function (){
				"step 0"
				if(player.storage.XS_beiwei_b) player.storage.XS_beiwei=player.storage.XS_beiwei_b;
				player.syncStorage('XS_beiwei');
				"step 1"
				delete player.storage.XS_beiwei_b;
			},
		},
	},
},
"XS_zhonghun":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:"dying",
	},
	filter:function(event,player){
		if(event.player.hasSkill('XS_zhonghun_temp')) return false;
		return event.player.hp<=0&&event.player!=player&&event.player.group==player.group;
	},
	direct:true,
	content:function(){
		"step 0"
		trigger.player.addSkill('XS_zhonghun_temp');
		event.nm=get.attitude(trigger.player,player);
		event.pla=player;
		trigger.player.chooseBool('忠魂：是否令'+get.translation(player)+'选择一项：失去1点体力令你回复1点体力；弃置装备区所有牌令“背嵬”数字共增加弃牌数').set('ai',function(){
			if(event.nm<=0&&!event.pla.countCards('e')) return true;
			return event.pla.hp>1;
		});
		"step 1"
		if(result.bool) {
			player.logSkill('XS_zhonghun',trigger.player);
			var lt=['失去1点体力令'+get.translation(trigger.player)+'回复1点体力'];
			if(player.countCards('e')>0) lt.push('弃置装备区所有牌令“背嵬”数字共增加弃牌数');
			player.chooseControlList(lt,true).set('ai',function(event,player){
				return (player.countCards('e')>0?1:0);
			}).set('prompt','请选择一项');
		}
		else event.finish();
		"step 2"
		if(result.index==0){
			player.loseHp();
			trigger.player.recover();
			event.finish();
        }
        else {
			event.tpnm=player.getCards('e').length;
			player.discard(player.getCards('e'));
			var lt=[];
			for(var i=0;i<=event.tpnm;i++) {
				lt.push(i.toString());
			}
			player.chooseControl(lt,true).set('ai',function(event){
				return '1';
			}).set('prompt','令：“使用杀可指定目标数”增加几点数值？');
        }
		"step 3"
		if(player.storage.XS_beiwei_b) {
			player.storage.XS_beiwei_b[0]+=parseInt(result.control);
		}
		else player.storage.XS_beiwei[0]+=parseInt(result.control);
		event.tpnm-=parseInt(result.control);
		var lt=[];
		for(var i=0;i<=event.tpnm;i++) {
			lt.push(i.toString());
		}
		player.chooseControl(lt,true).set('ai',function(event){
			return '1';
		}).set('prompt','令：“进攻距离”增加几点数值？');
		"step 4"
		if(player.storage.XS_beiwei_b) {
			player.storage.XS_beiwei_b[1]+=parseInt(result.control);
		}
		else player.storage.XS_beiwei[1]+=parseInt(result.control);
		event.tpnm-=parseInt(result.control);
		"step 5"
		if(player.storage.XS_beiwei_b) {
			player.storage.XS_beiwei_b[2]+=parseInt(result.control);
		}
		else player.storage.XS_beiwei[2]+=event.tpnm;
		player.syncStorage('XS_beiwei');		
	},
	ai:{
		expose:0.3,
	},
	subSkill:{
		temp:{
			charlotte:true,
			sub:true,
		},
	},
},
"XS_zhixian":{
	enable:'phaseUse',
	usable:1,
	selectTarget:1,
	filterTarget:function (card,player,target){
        return target!=player;
    },
	filter:function (event,player){
		return player.countCards('h');
    },
	content:function(){
		"step 0"
		target.viewHandcards(player);
		"step 1"
		if(player.countCards('h')>=target.countCards('h')) {
			target.draw();
			player.addTempSkill('XS_zhixian_mx',{player:'phaseAfter'});
		}
		else {
			player.draw();
			target.addTempSkill('XS_zhixian_mx',{player:'phaseAfter'});
		}
	},
	ai:{
		order:1,
		result:{
			target:function(player,target){
				return 1/(target.countCards('h')+1);
			}
		},
		expose:0.3,
	},
	subSkill:{
		mx:{
			mod:{
				maxHandcard:function (player,num){
					return num+2;
				},
			},
        },
    },
},
"XS_gangzhi":{
	init:function (player){
        player.storage.XS_gangzhi=[];
    },
	intro:{
		content:"cards",
	},
	audio:"ext:血色衣冠:2",
	trigger:{
        global:["phaseUseBefore"],
    },
	filter:function (event,player){
		return event.player!=player&&player.countCards('h')&&event.player.countCards('h');
    },
	direct:true,
    content:function (){
		"step 0"
		player.chooseCard(get.prompt('XS_gangzhi',trigger.player),'你可令你与'+get.translation(trigger.player)+'将等量手牌置于你的武将牌上；你的出牌阶段开始，可从你开始令所有角色依次获得你武将牌上的1张牌。','h',[1,trigger.player.countCards('h')],false).ai=function(card){
			var att=get.attitude(player,_status.event.getTrigger().player);
			if(att>=0) return -1;
			return 5.5-get.value(card);
		}
		"step 1"
        if(result.bool){
			player.logSkill('XS_gangzhi',trigger.player);
            player.lose(result.cards,ui.special,'toStorage');
            player.storage.XS_gangzhi=player.storage.XS_gangzhi.concat(result.cards);
			player.markSkill('XS_gangzhi');
			trigger.player.chooseCard('将'+result.cards.length+'张手牌置于'+get.translation(player)+'的武将牌上','h',result.cards.length,true).ai=function(card){
				return 20-get.value(card);
			}
        }
		else event.finish();
		"step 2"
		trigger.player.lose(result.cards,ui.special,'toStorage');
		player.storage.XS_gangzhi=player.storage.XS_gangzhi.concat(result.cards);
		player.syncStorage('XS_gangzhi');
    },
	ai:{
        expose:0.5,
    },
	group:['XS_gangzhi_st'],
	subSkill:{
		st:{
			trigger:{
				player:"phaseUseBegin",
			},
			filter:function (event,player){
				return player.storage.XS_gangzhi.length>0;
			},
			"prompt2":function (event,player){
				return '是否令从你开始的所有角色依次获得你武将牌上的1张牌？';
			},
			check:function (card){
				return true;
			},
			content:function(){
				"step 0"
				event.cds=player.storage.XS_gangzhi;
				var tars=game.filterPlayer();
				event.tars=tars.sortBySeat();
				"step 1"
				if(event.cds.length==1) {
					event.tars[0].gain(event.cds[0],'log','gain2');
					event.goto(4);
				}
				else {
					event.tars[0].chooseCardButton('获得其中一张牌',true,event.cds,1).set('ai',function(button){
						return get.value(button.link);
					});				
				}
				"step 2"
				event.tars[0].gain(result.links[0],'log','gain2');
				event.cds.remove(result.links[0]);
				var temp=event.tars.shift();
				event.tars.push(temp);
				"step 3"
				game.delay(0.7);
				event.goto(1);
				"step 4"
				player.storage.XS_gangzhi=[];
				player.unmarkSkill('XS_gangzhi');
			},
            sub:true,
        },
    },
},
"XS_yinyang":{
	audio:"ext:血色衣冠:3",
	trigger:{
		global:"roundStart",
	},
	direct:true,
	priority:35,
	content:function (){
		"step 0"
		if(player.storage.XS_yinyang&&player.storage.XS_yinyang.length) {
			player.storage.XS_yinyang[0].unmarkSkill('XS_yinyang');
			player.storage.XS_yinyang[1].unmarkSkill('XS_yinyang');
		}
		"step 1"
		player.storage.XS_yinyang=[];
		player.storage.XS_yinyang_a='none';
		"step 2"
		player.chooseTarget(get.prompt('XS_yinyang'),2,'你可选择2名角色并指定增加/减少，至下轮开始，一者体力产生该方向变化后，另一者体力进行相反方向的变化',function(card,player,target){
			if(!ui.selected.targets.length) return true
			return target!=ui.selected.targets[0];
        }).set('ai',function(target){
			return Math.random();
        });
		"step 3"
		if(result.bool) {
			player.logSkill('XS_yinyang',result.targets);
			player.storage.XS_yinyang=result.targets;
			player.chooseControl(['增加','减少']).set('ai',function(event){
				return ['增加','减少'].randomGet();
			}).set('prompt','请选择一个体力变化方向');
		}
		else event.finish();
		"step 4"
		player.storage.XS_yinyang_a=result.control;
		player.storage.XS_yinyang[0].markSkillCharacter('XS_yinyang',player.storage.XS_yinyang[1],'阴阳','本轮你的体力'+result.control+'后，'+get.translation(player.storage.XS_yinyang[1])+'的体力进行相反方向的变化');
		player.storage.XS_yinyang[1].markSkillCharacter('XS_yinyang',player.storage.XS_yinyang[0],'阴阳','本轮你的体力'+result.control+'后，'+get.translation(player.storage.XS_yinyang[0])+'的体力进行相反方向的变化');
	},
	group:["XS_yinyang_change"],
	subSkill:{
		change:{
			trigger:{
				global:["damageAfter","recoverAfter","loseHpAfter"],
			},
			direct:true,
			filter:function (event,player){
				if(!player.storage.XS_yinyang_a||player.storage.XS_yinyang_a=='none') return false;
				if(!player.storage.XS_yinyang.contains(event.player)) return false;
				if(player.storage.XS_yinyang_a=='增加'&&['damage','loseHp'].contains(event.name)) return false;
				if(player.storage.XS_yinyang_a=='减少'&&event.name=='recover') return false;
				return player.storage.XS_yinyang[0].isAlive()&&player.storage.XS_yinyang[1].isAlive();
			},
			priority:-99,
			content:function (){
				player.logSkill('XS_yinyang');
				if(player.storage.XS_yinyang[0]==trigger.player) event.tar=player.storage.XS_yinyang[1];
				else event.tar=player.storage.XS_yinyang[0];
				if(player.storage.XS_yinyang_a=='增加') event.tar.loseHp(trigger.num);
				else event.tar.recover(trigger.num);
			},
            sub:true,
        },
    },
},
"XS_zhongshi":{
	audio:"ext:血色衣冠:2",
	priority:33,
	trigger:{
		player:["damageBegin3"],
		source:["damageBegin3"],
	},
	filter:function (event,player){
		return player.countCards('h');
	},
	"prompt2":function (event,player){
		if(event.player==player) return '是否展示手牌？若均为红色，你受到的伤害-1。';
		else return '是否展示手牌？若均为黑色，你对'+get.translation(event.player)+'造成的伤害+1。';
	},
	check:function (event,player){
		if(event.player!=player&&get.damageEffect(event.player,player,player)<0) return false;
		var mk=true,tp=(event.player==player?'red':'black'),hs=player.getCards('h');
		for(var i=0;i<hs.length;i++) {
			if(get.color(hs[i])!=tp) {
				mk=false;
				break;
			}
		}
		return mk;
	},
	content:function (){
		"step 0"
		player.showHandcards();
		"step 1"
		var mk=true,tp=(trigger.player==player?'red':'black'),hs=player.getCards('h');
		for(var i=0;i<hs.length;i++) {
			if(get.color(hs[i])!=tp) {
				mk=false;
				break;
			}
		}
		if(mk) {
			if(trigger.player==player) trigger.num--;
			else trigger.num++;
		}
	},
	ai:{
		effect:{
			target:function(card,player,target){
				if(target.countCards('h')>1&&get.tag(card,'damage')){
					if(!target.hasFriend()) return;
					if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
					var nm=(Math.min(4,target.countCards('h')-1))/4;
					return nm
				}
			}
		}
	},
},
"XS_yanzhen":{
	mod:{
		cardEnabled:function (card,player){
			if(_status.currentPhase==player) {
				var evt=_status.event.getParent('phaseUse');
				if(evt&&evt.name=='phaseUse'&&player.getHistory('useCard',function(evt2){
					return evt2.getParent('phaseUse')==evt
				}).length==0) {
					if(card.name!='sha') return false;
				}
			}
		},
		cardUsable:function(card,player,num){
			if(card.name=='sha') return num+1;
		},
		targetInRange:function(card,player,target,now){
			if(_status.currentPhase==player) {
				var evt=_status.event.getParent('phaseUse');
				if(evt&&evt.name=='phaseUse'&&player.getHistory('useCard',function(evt2){
					return evt2.getParent('phaseUse')==evt
				}).length==0) {
					if(card.name=='sha') return true;
				}
			}
		},
	},
	trigger:{
		player:'useCardBegin',
	},
	filter:function(event,player){
		if(event.card.name!='sha') return false;
		var evt2=event.getParent('phaseUse');
		if(evt2.player!=player) return false;
		return player.getHistory('useCard',function(evt){
			return evt.card.name=='sha'&&evt.getParent('phaseUse')==evt2;
		}).indexOf(event.getParent())==0;
	},
	direct:true,
	content:function(){
		game.playXSAudio('XS_yanzhen',2);
	},
},
"XS_jieao":{
	enable:['chooseToUse'],
	filterCard:function(card){return false;},
	position:'he',
	viewAs:{
		name:'sha'
	},
	selectCard:-1,
	viewAsFilter:function(player){return true;},
	prompt:'你可失去1点体力上限，视为使用1张伤害基数为2的杀',
	check:function(card){
		var player=_status.event.player;
		return (player.isDamaged()&&player.maxHp>1)?10:0;
	},
	onuse:function(result,player){
		player.loseMaxHp();
	},
	ai:{
		order:2.9,
		result:{
			player:function (player){
				return (player.isDamaged()&&player.maxHp>1)?1:0;
			},
		},
	},
	group:["XS_jieao_add"],
	subSkill:{
		add:{
			trigger:{
				player:"shaBegin",
			},
			filter:function (event){
				return event.skill=='XS_jieao';
			},
			direct:true,
			content:function (){
				trigger.baseDamage++;
			},
		},
	},
},
"XS_jinglu":{
	audio:"ext:血色衣冠:2",
	init:function (player){
		player.storage.XS_jinglu=[];
	},
	marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"40px")+" src="+lib.assetURL+"extension/血色衣冠/icon/jinglu.png>":"鹭",
	intro:{
		content:function (storage){
			return '“惊鹭”已使用普通锦囊牌：'+get.translation(storage);
		},
	},
	trigger:{
        player:["discardBegin"],
    },
	frequent:true,
    filter:function (event,player){
		return event.getParent(2)&&event.getParent(2).name=='phaseDiscard'&&event.cards.length>0;
    },
	firstDo:true,
	priority:9,
    content:function (){
		"step 0"
		trigger.cancel();
		"step 1"
		var tricklist=[];
		for(var i=0;i<lib.inpile.length;i++){
			if(get.type(lib.inpile[i])=='trick'&&!player.storage.XS_jinglu.contains(lib.inpile[i])&&lib.filter.cardEnabled({name:lib.inpile[i]},player)) tricklist.push(['锦囊','',lib.inpile[i]]);
		}
		player.chooseButton(['你可将'+get.translation(trigger.cards)+'当作1张普通锦囊牌使用，若这些牌颜色相同，你可使用其中1张',[tricklist,'vcard']],false).set('ai',function(button){
			var recover=0,lose=1,players=game.filterPlayer();
			for(var i=0;i<players.length;i++){
				if(players[i].hp==1&&get.damageEffect(players[i],player,player)>0&&!players[i].hasSha()){
					return (button.link[2]=='juedou')?2:-1;
				}
				if(!players[i].isOut()){
					if(players[i].hp<players[i].maxHp){
						if(get.attitude(player,players[i])>0){
							if(players[i].hp<2){
								lose--;
								recover+=0.5;
							}
							lose--;
							recover++;
						}
						else if(get.attitude(player,players[i])<0){
							if(players[i].hp<2){
								lose++;
								recover-=0.5;
							}
							lose++;
							recover--;
						}
					}
					else{
						if(get.attitude(player,players[i])>0){
							lose--;
						}
						else if(get.attitude(player,players[i])<0){
							lose++;
						}
					}
				}
			}
			if(lose>recover&&lose>0) return (button.link[2]=='nanman')?1:-1;
			if(lose<recover&&recover>0) return (button.link[2]=='taoyuan')?1:-1;
			return (button.link[2]=='wuzhong')?1:-1;
		});
		"step 2"
		if(result&&result.bool&&result.links[0]){
			player.chooseUseTarget({name:result.links[0][2]},trigger.cards,false).viewAs=true;
			player.storage.XS_jinglu.push(result.links[0][2]);
			player.markSkill('XS_jinglu');
		}
		else event.finish();
		"step 3"
		var cl=get.color(trigger.cards[0]);
		for(var i=1;i<trigger.cards.length;i++) {
			if(get.color(trigger.cards[i])!=cl) event.finish();
		}
		event.cds=[];
		for(var i=0;i<trigger.cards.length;i++) {
			if(lib.filter.cardEnabled(trigger.cards[i],player)) event.cds.push(trigger.cards[i]);
		}
		if(!event.cds.length) event.finish();
		"step 4"
		player.chooseCardButton('你可选择一张牌使用',event.cds).ai=function(button){
            return get.value(button.link);
        }
		"step 5"
		if(result.bool){
			player.chooseUseTarget(result.links[0]);
        }
    },
},
"XS_piaoling":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"phaseBefore",
	},
	check:function (event,player){
		return player.hasFriend();
	},
	content:function (){
		"step 0"
		player.storage.XS_xianzhuo=[];
		"step 1"
		var func=function(){
			var list=[
				'手牌上限',
				'使用杀次数',
				'摸牌阶段摸牌数',
			];
			var choiceList=ui.create.dialog('你可使你本回合任意项-1：手牌上限，使用杀次数，摸牌阶段摸牌数；如此，你可令1名其他角色摸X张牌，X为-1项数','forcebutton');
			for(var i=0;i<list.length;i++){
				var str='<div class="popup text" style="width:calc(100% - 10px);display:inline-block">';
				if(i==0) str+='<div>';
				str+=list[i];
				if(i==0) str+='</div>';
				str+='</div>';
				var next=choiceList.add(str);
				next.firstChild.addEventListener(lib.config.touchscreen?'touchend':'click',ui.click.button);
				next.firstChild.link=i;
				for(var j in lib.element.button){
					next[j]=lib.element.button[i];
				}
				choiceList.buttons.add(next.firstChild);
			}
			return choiceList;
		};
		if(player.isOnline2()){
			player.send(func);
		}
		event.dialog=func();
		if(player!=game.me||_status.auto){
			event.dialog.style.display='none';
		}
		var next=player.chooseButton();
		next.set('forced',true);
		next.set('selectButton',[1,3]);
		next.set('filterButton',function(button){
			return true;
		});
		next.set('ai',function(button){
			switch(button.link){
				case 0:{return 1;}
				case 1:{return 0;}
				case 2:{return 1;}
			}
		});
		"step 2"
		event.dialog.close();
		var map=[
			function(trigger,player,event){
				player.addTempSkill('XS_piaoling_temp1');
			},
			function(trigger,player,event){
				player.addTempSkill('XS_piaoling_temp2');
			},
			function(trigger,player,event){
				player.addTempSkill('XS_piaoling_temp3');
			},
		];
		event.nm=result.links.length;
		for(var i=0;i<result.links.length;i++){
			game.log(player,'选择了','#g“飘零”','的','#y选项'+get.cnNumber(result.links[i]+1,true));
			map[result.links[i]](trigger,player,event);
		}
		"step 3"
		player.chooseTarget('你可令1名其他角色摸'+event.nm+'张牌',1,false,function(card,player,target){
			return player!=target;
		}).ai=function(target){
			var att=get.attitude(player,target),hs=1/(target.countCards('h')+0.1);
			return att*hs;
		}
		"step 4"
		if(result.bool){
			result.targets[0].draw(event.nm);
		}
    },
	ai:{
		expose:0.4,
	},
    subSkill:{
        temp1:{
			mod:{
				maxHandcard:function(player,num){
					return num-1;
				},
			},
        },
		temp2:{
			mod:{
				cardUsable:function (card,player,num){
					if(card.name=='sha') return num-1;
				},
			},
        },
		temp3:{
			trigger:{
				player:"phaseDrawBegin",
			},
			priority:991,
			direct:true,
			content:function (){
				trigger.num--;
			},
        },
    },
},
"XS_yangtui":{
	audio:"ext:血色衣冠:2",
	init:function (player){
		player.storage.XS_yangtui=[];
	},
	intro:{
		content:"cards",
	},
	trigger:{global:'phaseAfter'},
	filter:function(event,player){
		return player.storage.XS_yangtui.length>0;
	},
	priority:4,
	frequent:true,
	content:function(){
		"step 0"
		if(player.storage.XS_yangtui.length) {
			var cd=player.storage.XS_yangtui.shift();
			event.cd=cd;
		}
		else event.goto(4);
		"step 1"
		event.nm=(get.color(event.cd)=='black'?'caomu':'XS_simian');
		player.chooseTarget('你可将'+get.translation(event.cd)+'当作'+get.translation(event.nm)+'置于1名其他角色的判定区',1,false,function(card,player,target){
			return player!=target&&!target.hasJudge(event.nm);
		}).ai=function(target){
			return get.effect(target,{name:event.nm,isCard:true},player,player);
		}
		"step 2"
		if(result.bool){
			player.line(result.targets[0]);
			var next=player.useCard({name:event.nm},[event.cd],result.targets[0]);
			next.animate=false;
			next.audio=false;
		}
		else game.cardsDiscard(event.cd);
		"step 3"
		game.delay(0.2);
		event.goto(0);
		"step 4"
		if(!player.storage.XS_yangtui.length) player.unmarkSkill('XS_yangtui');
	},
	group:["XS_yangtui_dam","XS_yangtui_rec"],
	subSkill:{
		dam:{
			trigger:{
				player:"damageAfter",
			},
			filter:function (event,player){
				return event.num>0&&player.countCards('he')>0;
			},
			direct:true,
			content:function (){
				player.chooseToDiscard('he',1,true);
			},
			ai:{
				expose:0.3,
				maixie:true,
				"maixie_defend":true,
				effect:{
					target:function (card,player,target){
						if(get.tag(card,'damage')) {
							if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
							if(!target.hasFriend()) return;
							return [1,1];
						}
					},
				},
			},
		},
		rec:{
			trigger:{
				player:'loseAfter',
				global:'cardsDiscardAfter',
			},
			priority:-9999,
			filter:function(event,player){
				if(event.name=='lose'){
					if(event.toStorage||event.type!='discard') return false;
				}
				else{
					var evt=event.getParent();
					if(evt.name!='orderingDiscard'||!evt.relatedEvent||evt.relatedEvent.player!=player||!['useCard','respond'].contains(evt.relatedEvent.name)) return false;
				}
				return (event.cards2||event.cards).filterInD('d').length>0;
			},
			direct:true,
			content:function(){
				'step 0'
				var evt=trigger.getParent().relatedEvent;
				if((trigger.name=='discard'&&!trigger.delay)||evt&&evt.name=='respond') game.delayx();
				'step 1'
				var cards=(trigger.cards2||trigger.cards).filterInD('d');
				player.lose(cards,ui.special,'toStorage');
				var tp=player.storage.XS_yangtui.concat(cards);
				player.storage.XS_yangtui=tp;
				if(player.storage.XS_yangtui.length) player.markSkill('XS_yangtui');
			},
		},
	},
},
"XS_jufu":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
    filterTarget:function (card,player,target){
        return target.countCards('j')&&target!=player;
    },
	filter:function (event,player){
		return game.hasPlayer(function(current){
			return player!=current&&current.countCards('j');
		});
    },
    selectTarget:1,
    content:function (){
        "step 0"
		event.nm=target.countCards('j');
		"step 1"
		player.discardPlayerCard(target,1,'j',true);
		"step 2"
		if(event.nm>0) {
			player.useCard({name:'sha',isCard:true},target,false);	
		}
		else event.finish();
		"step 3"
		event.nm--;
		"step 4"
		game.delay(0.7);
		event.goto(2);
    },
    ai:{
		order:9,
		expose:0.6,
		result:{
			target:-1,
		},
    },
},
"XS_tianlun":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
    usable:1,
	filterTarget:function (card,player,target){
        return target!=player&&target.countCards('h');
    },
	selectTarget:1,
    filter:function (event,player){
		return player.countCards('h');
    },
	content:function (){
		"step 0"
		player.chooseCard('h',true,'将一张手牌置于牌堆顶');
		"step 1"
		if(result&&result.cards){
			player.lose(result.cards,ui.cardPile,'insert');
			game.log(player,'将一张牌置于牌堆顶')
			game.broadcastAll(function(player){
				var cardx=ui.create.card();
				cardx.classList.add('infohidden');
				cardx.classList.add('infoflip');
				player.$throw(cardx,1000,'nobroadcast');
			},player);
		}
		"step 2"
		game.delay();
		target.chooseToDiscard('弃置2张手牌，否则进行一次闪电效果判定','h',2).set('ai',function(card){
			return 7-get.value(card);
		});
		"step 3"
		if(result.bool){
			event.finish();
		}
		else {
			target.judge('天论',function(card){
				if(get.suit(card)=='spade'&&get.number(card)>1&&get.number(card)<10) return -6;
				return 0;
			});
		}
		"step 4"
		if(result.bool==false){
			target.damage(3,'thunder','nosource');
		}
    },
    ai:{
		order:9,
		expose:0.5,
		result:{
			target:function (player,target){
				if(target.countCards('h')<2) return -0.2;
				return -2;
            },
        },
    },
},
"XS_xinge":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"damageBefore",
	},
	priority:22,
	check:function (event,player){
		return get.attitude(player,event.source)<0;
	},
	logTarget:'source',
	filter:function (event,player){
		return event.source&&event.source!=player&&player.countCards('h');
	},
	content:function (){
		"step 0"
		player.chooseToDiscard('h',1).set('ai',function(card){
			var tar=_status.event.getTrigger().source;
			if(!tar.countCards('h')) return 8-get.value(card);
			return 6-get.value(card);
		});
		"step 1"
		if(result.bool){
			trigger.source.chooseToDiscard('h',1).set('ai',function(card){
				return 6-get.value(card);
			});
		}
		else event.finish();
		"step 2"
		if(result.bool){
			event.goto(0);
		}
		else {
			trigger.player=trigger.source;
			event.finish();
		}
	},
	ai:{
		notrick:true,
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')) {
					if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
					if(!target.hasFriend()) return;
					if(target.countCards('h')) {
						if(player.countCards('h')>=target.countCards('h')) return 0.8;
						else return 0;
					}
				}
            },
		},
	},
},
"XS_qiwuzhuang":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	filter:function (event,player){
		if(player.countCards('e',{color:'black'})&&!player.hasSkill('XS_qiwuzhuang_temp1')) return true;
		if(player.countCards('e',{color:'red'})&&!player.hasSkill('XS_qiwuzhuang_temp2')) return true;
		if(!player.countCards('e')&&!player.hasSkill('XS_qiwuzhuang_temp3')) return true;
		return false;
	},
	content:function (){
		"step 0"
		var lt=[];
		if(player.countCards('e',{color:'black'})&&!player.hasSkill('XS_qiwuzhuang_temp1')) lt.push('唇枪舌剑');
		if(player.countCards('e',{color:'red'})&&!player.hasSkill('XS_qiwuzhuang_temp2')) lt.push('火攻');
		if(!player.countCards('e')&&!player.hasSkill('XS_qiwuzhuang_temp3')) lt.push('无中生有');
		player.chooseControl(lt).set('ai',function(event){
			return lt.randomGet();
		}).set('prompt','你可视为使用一张牌');
		"step 1"
		switch(result.control) {
			case '唇枪舌剑':
				player.chooseUseTarget({name:'XS_chunqiangshejian',isCard:true});
				player.addTempSkill('XS_qiwuzhuang_temp1');
			break;
			case '火攻':
				player.chooseUseTarget({name:'huogong',isCard:true});
				player.addTempSkill('XS_qiwuzhuang_temp2');
			break;
			case '无中生有':
				player.useCard({name:'wuzhong',isCard:true},player);
				player.addTempSkill('XS_qiwuzhuang_temp3');
			break;
		}
    },
	ai:{
		order:10,
		result:{
			player:1,
		},
	},
	subSkill:{
		temp1:{
			charlotte:true,
        },
		temp2:{
			charlotte:true,
        },
		temp3:{
			charlotte:true,
        },
    },
},
"XS_xiaoyao":{
	mod:{
		targetEnabled:function(card,player,target,now){
			if(target!=player&&!player.inRange(target)) return false;
		},
	},
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"phaseAfter",
	},
	check:function (event,player){
		return player.countCards('e')<2||(player.getEquip('baiyin')&&player.isDamaged());
	},
	filter:function (event,player){
		return player.countCards('e');
	},
	content:function (){
		var cds=player.getCards('e');
		player.chongzhuCards(cds);
	},
},
"XS_sijun":{
	audio:"ext:血色衣冠:2",
	trigger:{
        global:["phaseUseBefore"],
    },
	filter:function (event,player){
		return event.player!=player&&player.countCards('h');
    },
	direct:true,
    content:function (){
		"step 0"
		player.chooseCard(get.prompt('XS_sijun',trigger.player),'你可交给'+get.translation(trigger.player)+'1/2张手牌，如此，其于此阶段使用的第2/1张牌结算完毕后，立即结束其出牌阶段。','h',[1,2],false).ai=function(card){
			var att=get.attitude(player,_status.event.getTrigger().player);
			if(att>=0) return -1;
			return 5-get.value(card);
		}
		"step 1"
        if(result.bool){
			var nm=(result.cards.length==1?2:1);
			player.logSkill('XS_sijun',trigger.player);
			trigger.player.gain(result.cards,player,'giveAuto');
			trigger.player.addTempSkill('XS_sijun_mark');
			trigger.player.storage.XS_sijun_mark=nm;
			trigger.player.markSkillCharacter('XS_sijun_mark',player,'思君','你于此出牌阶段使用第'+nm+'张牌结算完成后，立即结束此阶段');
        }
    },
	subSkill:{
		mark:{
			trigger:{
				player:"useCardAfter",
			},
			onremove:function(player){
				delete player.storage.XS_sijun_mark;
				player.unmarkSkill('XS_sijun_mark');
			},
			filter:function (event,player){
				var nm=player.storage.XS_sijun_mark;
				return player.getHistory('useCard').length>=nm;
			},
			direct:true,
			charlotte:true,
			content:function(){
				var evt=_status.event.getParent('phaseUse');
				if(evt&&evt.name=='phaseUse'){
					evt.skipped=true;
				}
			},
            sub:true,
        },
    },
},
"XS_wangxiang":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:'loseAfter',
		global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter'],
	},
	check:function (event,player){
		return true;
	},
	filter:function(event,player){
		if(player.countCards('h')) return false;
		var evt=event.getl(player);
		return evt&&evt.hs&&evt.hs.length;
	},
	content:function(){
		"step 0"
		var tars=game.filterPlayer(function(current){
			return current!=player&&current.countCards('h')&&current.isDamaged();
		});
		event.tars=tars.sort(lib.sort.seat);
		"step 1"
		if(event.tars.length){
			var target=event.tars.shift();
			event.current=target;
		}
		else event.finish();
		"step 2"
		event.att=get.attitude(event.current,player);
		event.current.chooseCard('你可交给'+get.translation(player)+'一张手牌以回复一点体力','h',function(card){
			return true;
		}).ai=function(card){
			if(event.att>0) return 6-get.value(card);
			return 4.5-get.value(card);
		};
		"step 3"
		if(result.bool){
			player.gain(result.cards,event.current,'giveAuto');
			event.current.recover();
        }
		event.goto(1);
	},
	ai:{
		threaten:0.8,
		effect:{
			target:function(card){
				if(card.name=='guohe'||card.name=='liuxinghuoyu') return 0.5;
			}
		},
		noh:true,
	}
},
"XS_youmie":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	filter:function(event,player){
		if(player.hasSkill('XS_youmie_temp')) return false;
		if(player.hasSkill('XS_youmie_temp2')) {
			if(!player.countCards('he')) return false;
		}
		else if(!player.countCards('he',{type:'equip'})) return false;
		return game.hasPlayer(function(current){
			return current!=player&&current.countCards('h');
		});
	},
	filterTarget:function (card,player,target){
        return target!=player&&target.countCards('h');
    },
    selectTarget:1,
	filterCard:function(card){
		var player=_status.event.player;
		if(player.hasSkill('XS_youmie_temp2')) return true;
		else return get.type(card)=='equip';
	},
	position:"he",
	selectCard:1,
	content:function (){
        "step 0"
		if(player.hasSkill('XS_youmie_temp3')) target.discard(target.getCards('h'));
		else target.discard(target.getCards('h',{type:'basic'}));
		"step 1"
		if(!player.hasSkill('XS_youmie_temp1')) player.addTempSkill('XS_youmie_temp');
    },
	ai:{
		order:9,
		expose:0.4,
		threaten:1.2,
		result:{
			player:function (player){
				return -1;
            },
			target:function (player,target){
				return -target.countCards('h');
            },
		},
	},	
	group:['XS_youmie_lose'],
	subSkill:{
		lose:{
			trigger:{
				player:'phaseUseBefore',
			},
			check:function (event,player){
				if(game.roundNumber>=3) return player.hp>2;
				if(game.roundNumber>=2) player.hp>3&&!player.countCards('h',{type:'equip'})
				return false;
			},
			"prompt2":function (event,player){
				return '你可使“诱灭”任意()内容本回合不生效，如此你各失去(2/3/4-轮数)点体力，至少为1。';
			},
			content:function(){
				"step 0"
				var rdnum=Math.min(3,game.roundNumber);
				var func=function(){
					var list=[
						'失去1点体力：出牌阶段（限1次）',
						'失去'+Math.max(1,3-rdnum)+'点体力：你可弃置1张（装备）牌',
						'失去'+Math.max(1,4-rdnum)+'点体力：令1名其他角色弃置手牌中所有（基本）牌',
					];
					var choiceList=ui.create.dialog('你可失去对应点体力，使本回合等量（）中的内容不生效','forcebutton');		
					for(var i=0;i<list.length;i++){
						var str='<div class="popup text" style="width:calc(100% - 10px);display:inline-block">';
						if(i==0) str+='<div>';
						str+=list[i];
						if(i==0) str+='</div>';
						str+='</div>';
						var next=choiceList.add(str);
						next.firstChild.addEventListener(lib.config.touchscreen?'touchend':'click',ui.click.button);
						next.firstChild.link=i;
						for(var j in lib.element.button){
							next[j]=lib.element.button[i];
						}
						choiceList.buttons.add(next.firstChild);
					}
					return choiceList;
				};
				if(player.isOnline2()){
					player.send(func);
				}
				event.dialog=func();
				if(player!=game.me||_status.auto){
					event.dialog.style.display='none';
				}
				var next=player.chooseButton();
				next.set('forced',true);
				next.set('selectButton',[1,3]);
				next.set('filterButton',function(button){
					return true;
				});
				next.set('ai',function(button){
					switch(button.link){
						case 0:{return 0;}
						case 1:{
							if(game.roundNumber<2) return 0;
							return player.hp>3&&!player.countCards('h',{type:'equip'});
						}
						case 2:{
							if(game.roundNumber<3) return 0;
							return player.hp>2;
						}
					}
				});
				"step 1"
				event.dialog.close();
				var map=[
					function(trigger,player,event){
						player.addTempSkill('XS_youmie_temp1');
						player.loseHp(1);
					},
					function(trigger,player,event){
						player.addTempSkill('XS_youmie_temp2');
						player.loseHp(Math.max(1,3-game.roundNumber));
					},
					function(trigger,player,event){
						player.addTempSkill('XS_youmie_temp3');
						player.loseHp(Math.max(1,4-game.roundNumber));
					},
				];
				for(var i=0;i<result.links.length;i++){
					game.log(player,'选择了','#g“诱灭”','的','#y选项'+get.cnNumber(result.links[i]+1,true));
					map[result.links[i]](trigger,player,event);
				}
			},
        },
		temp:{
			charlotte:true,
        },
		temp1:{
			charlotte:true,
        },
		temp2:{
			charlotte:true,
        },
		temp3:{
			charlotte:true,
        },
    },
},
"XS_jintu":{
	audio:"ext:血色衣冠:2",
	trigger:{
		source:["damageBegin4"],
	},	
	filter:function (event,player){
		return event.player!=player&&event.notLink()&&!event.player.countCards('h');
	},
	priority:-8998,
	check:function (event,player){
		return event.num<event.player.hp;
	},
	logTarget:'player',
	"prompt2":function (event,player){
		return '是否使你对'+get.translation(event.player)+'造成的'+event.num+'点伤害改为'+event.player.hp+'点？如此，若你杀死该角色，你失去1点体力上限。';
	},
	content:function (){
		trigger.num=trigger.player.hp;
		trigger.mk=true;
	},
	ai:{
		damageBonus:true,
	},
	group:['XS_jintu_die'],
	subSkill:{
		die:{
			trigger:{
				source:"dieAfter",
			},
			filter:function (event,player){
				var evt=event.getParent(2);
				return evt&&evt.mk;
			},
			forced:true,
			silent:true,
			content:function(){
				player.loseMaxHp();
			},
        },
    },
},
"XS_shujun":{
	audio:"ext:血色衣冠:2",
	init:function (player){
		var num=game.countPlayer()<4?1:0;
		player.storage.XS_shujun=num;
	},
	intro:{
		content:function (storage){
			return '疏浚当前手牌上限减值为：'+storage;
		},
	},
	mark:true,
	trigger:{
		global:"phaseDiscardBefore",
	},
	priority:-1,
	filter:function (event,player){
        return event.player!=player&&event.player.countCards('h');
    },
	logTarget:'player',
	check:function (event,player){
		return get.attitude(player,event.player)<0;
    },
	"prompt2":function (event,player){
		var num=game.countPlayer()<4?1:0;
		return '你可令其此阶段手牌上限-'+player.storage.XS_shujun+'，并令此数值+1，若其因此弃置了所有牌，重置数值为'+num+'。';
	},
	content:function (){
		"step 0"
		trigger.player.addTempSkill('XS_shujun_temp',{player:'phaseDiscardAfter'});
		trigger.player.storage.XS_shujun_temp=player.storage.XS_shujun;
		"step 1"
		player.addMark('XS_shujun',1,false);
		"step 2"
		if(trigger.player.getHandcardLimit()<=0) {
			var num=game.countPlayer()<4?1:0;
			player.storage.XS_shujun=num;
			player.markSkill('XS_shujun');
		}
    },
	subSkill:{
		temp:{
			onremove:function(player){
				delete player.storage.XS_shujun_temp;
			},
			mod:{
				maxHandcard:function(player,num){
					return num-player.storage.XS_shujun_temp;
				},
			},
        },
    },
},
"XS_dingzhou":{
	audio:"ext:血色衣冠:2",
	init:function (player){
		player.storage.renku=true;
		player.storage.XS_dingzhou=false;
		player.storage.XS_dingzhou_rec=[];
	},
	trigger:{
		global:"roundStart",
	},
	filter:function(event,player){
		return !player.storage.XS_dingzhou&&(player.storage.XS_dingzhou_rec.length>0||_status.renku.length>0);
	},
	check:function (event,player){
		var num=game.countPlayer()<4?3:5;
		return (player.storage.XS_dingzhou_rec.length+_status.renku.length)>num;
	},
	"prompt2":function (event,player){
		var str='你可将'+get.translation(player.storage.XS_dingzhou_rec);
		if(_status.renku.length>0) str+='，与“仁”中的'+get.translation(_status.renku);
		var tp=player.storage.XS_dingzhou_rec.length+_status.renku.length;
		return str+'共计<span class="bluetext">'+tp+'</span>张牌分配给任意角色，若所有角色手牌数因此相同，重置此技能。';
	},
	mark:true,
	unique:true,
	limited:true,
	skillAnimation:true,
	animationColor:'wood',
    intro:{
        content:"limited",
    },
    content:function (){
		"step 0"
		player.awakenSkill('XS_dingzhou');
        player.storage.XS_dingzhou=true;
		var tps=_status.renku.slice(0);
		_status.renku.removeArray(tps);
		game.updateRenku();
		event.cds=player.storage.XS_dingzhou_rec.concat(tps);
		"step 1"
		if(event.cds.length>1){
			player.chooseCardButton('将牌分配给任意角色',true,event.cds,[1,event.cds.length]).set('ai',function(button){
				if(ui.selected.buttons.length==0) return 1;
				return 0;
			});
		}
		else if(event.cds.length==1){
			event._result={links:event.cds.slice(0),bool:true};
		}
		else{
			event.goto(4);
		}
		"step 2"
		if(result.bool){
			for(var i=0;i<result.links.length;i++){
				event.cds.remove(result.links[i]);
			}
			event.togive=result.links.slice(0);
			player.chooseTarget('将'+get.translation(result.links)+'交给一名角色',true).set('ai',function(target){
				var att=get.attitude(_status.event.player,target);
				var hs=target.countCards('h')+0.01;
				if(_status.event.enemy){
					return -att;
				}
				else if(att>0){
					if(target.hasSkill('XS_xuhuai')) return 2+att/hs;
					return att/hs;
				}
				else{
					return att/100;
				}
			}).set('enemy',get.value(event.togive[0])<0);
		}
		"step 3"
		if(result.targets.length){
			result.targets[0].gain(event.togive,'gain2');
			player.line(result.targets[0],'green');
			game.log(result.targets[0],'获得了'+get.cnNumber(event.togive.length)+'张牌');
			event.goto(1);
		}
		"step 4"
		var nm=player.countCards('h'),mk=true;
		game.countPlayer(function(current){
			if(current!=player&&current.countCards('h')!=nm) mk=false;
		});
		if(mk) {
			player.restoreSkill('XS_dingzhou');
		}
    },
	ai:{
		order:9,
		result:{
			player:2,
		}
	},
	group:["XS_dingzhou_rec","XS_dingzhou_clear"],
	subSkill:{
		rec:{
			trigger:{
				global:["discardAfter"],
			},
			direct:true,
			filter:function (event,player){
				return _status.event.name=='phaseDiscard'||_status.event.getParent('phaseDiscard').name=='phaseDiscard';
			},
			priority:-99,
			content:function (){
				for(var i=0;i<trigger.cards.length;i++) {
					if(get.position(trigger.cards[i])=='d') player.storage.XS_dingzhou_rec.push(trigger.cards[i]);
				}
			},
            sub:true,
        },
		clear:{
			trigger:{
				global:["roundStart"],
			},
			direct:true,
			filter:function (event,player){
				return player.storage.XS_dingzhou_rec.length>0;
			},
			priority:-1999,
			content:function (){
				player.storage.XS_dingzhou_rec=[];
			},
            sub:true,
        },
    },
},
"XS_xiongxing":{
	mod:{
		attackFrom:function (from,to,distance){
			var nm=Math.max(2,from.getDamagedHp());
			return distance-nm;
		},
		cardUsable:function (card,player,num){
			var nm=Math.max(2,player.getDamagedHp())-1;
			if(card.name=='sha') return num+nm;
		},
		selectTarget:function (card,player,range){
			var nm=Math.max(2,player.getDamagedHp())-2;
			if(card.name=='sha') range[1]+=nm;
		},
	},
},
"XS_liefu":{
	intro:{
		content:"cards",
	},
	init:function(player,skill){
		player.storage.XS_liefu=[];
	},
	marktext:'斧',
	derivation:["XS_xiongxing","XS_weizhen","XS_lieyong","XS_yaowei"],
	enable:'chooseToUse',
	filter:function(event,player){
		if(player.storage.XS_liefu>=4) return false;
		var cds=player.getCards('h'),stlist=[],mk=false;
		for(var i=0;i<player.storage.XS_liefu.length;i++) {
			stlist.add(get.suit(player.storage.XS_liefu[i]));
		}
		for(var i=0;i<cds.length;i++) {
			if(!stlist.contains(get.suit(cds[i]))) {
				mk=true;break;
			}
		}
		return mk&&event.filterCard({name:'sha',isCard:true},player,event);
	},
	chooseButton:{
		dialog:function(event,player){
			var list=[['基本','','sha']];
			return ui.create.dialog('烈斧',[list,'vcard'],'hidden');
		},
		check:function(button){
			var player=_status.event.player;
			if(game.hasPlayer(function(current){
				return player.canUse({name:'sha'},current)&&get.effect(current,{name:'sha'},player,player)>0;
			})) return 1.5;
			return 0;
		},
		backup:function(links,player){
			return {
				check:function(card){
					return 1/Math.max(0.1,get.value(card));
				},
				filterCard:function(card){
					var player=_status.event.player,stlist=[];
					for(var i=0;i<player.storage.XS_liefu.length;i++) {
						stlist.add(get.suit(player.storage.XS_liefu[i]));
					}
					return !stlist.contains(get.suit(card));
				},
				selectCard:1,
				viewAs:{
					name:'sha',
					suit:'none',
					number:null,
					isCard:true,
				},
				position:'h',
				popname:true,
				ignoreMod:true,
				precontent:function(){
					"step 0"
					var cd=event.result.cards[0];
					player.logSkill('XS_liefu');
					player.lose(cd,ui.special,'toStorage');
					player.storage.XS_liefu.push(cd);
					if(player.storage.XS_liefu.length!=0){
						player.markSkill('XS_liefu');
					}
					"step 1"
					player.removeAdditionalSkill('XS_liefu');
					var list=[];
					switch(player.storage.XS_liefu.length){
						case 1:list.push('XS_xiongxing');break;
						case 2:list.push('XS_weizhen');break;
						case 3:list.push('XS_lieyong');break;
						case 4:list.push('XS_yaowei');break;
					}
					if(list.length){
						player.addAdditionalSkill('XS_liefu',list);
					}
				},
			}
		},
		prompt:function(links,player){
			return '将1张与“斧”花色均不同的手牌置于武将牌上，称为“斧”，视为使用1张杀';
		}
	},
	ai:{
		order:8,
		respondSha:true,
		result:{
			player:1,
		}
	},
},
"XS_fuyuan":{
	enable:"phaseUse",
	filter:function (event,player){
		return player.storage.XS_liefu.length>=4;
	},
	selectTarget:1,
	filterTarget:function (card,player,target){
		return true;
	},
	content:function (){
		"step 0"
		game.cardsDiscard(player.storage.XS_liefu);
		player.storage.XS_liefu=[];
		player.unmarkSkill('XS_liefu');
		"step 1"
		target.useCard({name:'wuzhong',isCard:true},target,false);
    },
	ai:{
		order:9,
		result:{
			target:function (player,target){
				return 2/(target.countCards('h')+0.1);
            },
		},
	},
},
"XS_qiangxi":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:1,
	content:function (){
		"step 0"
		var next=player.judge('强袭',function(card){
			if(get.color(card)!='black') return 3;
			return -3;
		});
		next.set('callback',function(){
			if(event.judgeResult.color!='black') {
				if(player.getStat().skill.XS_qiangxi>0) player.getStat().skill.XS_qiangxi--;
				if(get.position(card,true)=='o') player.gain(card,'gain2');
			}
			else {
				player.chooseUseTarget({name:'sha',nature:'fire',isCard:true},false);
			}
		});
    },
	ai:{
		order:9,
		result:{
			player:1,
		},
	},
},
"XS_guzhong":{
	audio:"ext:血色衣冠:2",
	intro:{
		content:function(storage,player,skill){
			var str='本回合进入弃牌堆的牌数为：</br>红色： '+player.storage.XS_guzhong_red+' 张</br>黑色： '+player.storage.XS_guzhong_black+' 张';
			return str;
		},
	},
	init:function(player,skill){
		player.storage.XS_guzhong_red=0;
		player.storage.XS_guzhong_black=0;
	},
	trigger:{player:['phaseJieshuEnd']},
	priority:8,
	forced:true,
	filter:function(event,player){
		return player.storage.XS_guzhong_red!=0||player.storage.XS_guzhong_black!=0;
	},
	content:function(){
		"step 0"
		var mk=player.storage.XS_guzhong_red<player.storage.XS_guzhong_black;
		player.storage.XS_guzhong_red=0;
		player.storage.XS_guzhong_black=0;
		player.unmarkSkill('XS_guzhong');
		if(mk) {
			player.loseHp();
			event.finish();
		}
		else {
			event.nm=player.getDamagedHp();
			player.chooseBool('是否失去'+event.nm+'点体力上限，视为使用等量张火杀？').set('ai',function(){
				return game.hasPlayer(function(current){
					return player.canUse({name:'sha'},current)&&get.effect(current,{name:'sha'},player,player)>0;
				});
			});
		}
		"step 1"
		if(result.bool) player.loseMaxHp(event.nm);
		else event.finish();
		"step 2"
		if(event.nm>0) {
			player.chooseUseTarget({name:'sha',nature:'fire',isCard:true},false);
		}
		else event.finish();
		"step 3"
		event.nm--;
		event.goto(2);
	},
	group:["XS_guzhong_rec"],
    subSkill:{
		rec:{
			trigger:{global:['loseAfter','cardsDiscardAfter']},
			direct:true,
			filter:function(event,player){
				if(_status.currentPhase!=player) return false;
				if(event.name=='lose'&&event.position!=ui.discardPile) return false;
				return true;
			},
			content:function(){
				"step 0"
				var list1=[];
				var list2=[];
				for(var i=0;i<trigger.cards.length;i++){
					var st=get.color(trigger.cards[i]);
					if(st=='red') {
						list1.push(trigger.cards[i]);
					}
					else if(st=='black') {
						list2.push(trigger.cards[i]);
					}
				}
				game.getGlobalHistory('cardMove',function(evt){
					if(evt==trigger||(evt.name!='lose'&&evt.name!='cardsDiscard')) return false;
					if(evt.name=='lose'&&evt.position!=ui.discardPile) return false;
					for(var i=0;i<evt.cards.length;i++){
						var card=evt.cards[i];
						list1.remove(card);
						list2.remove(card);
					}
				},trigger);
				if(list1.length!=0||list2.length!=0) {
					player.storage.XS_guzhong_red+=list1.length;
					player.storage.XS_guzhong_black+=list2.length;
				}
				else event.finish();
				"step 1"
				if(player.storage.XS_guzhong_red!=0||player.storage.XS_guzhong_black!=0) {
					player.markSkill('XS_guzhong');
				}
			},
            sub:true,
        },
    },
},
"XS_polu":{
	audio:"ext:血色衣冠:2",
    trigger:{
        global:["useCardBegin"],
    },
    filter:function (event,player){
		if(event.card.name!='sha'||player.hasSkill('XS_polu_temp')) return false;
        return event.player!=player;
    },
	check:function (event,player){
		var eff1=get.effect(event.player,{name:'sha',nature:'fire',isCard:true},player,player),eff2=0;
		for(var i=0;i<event.targets.length;i++) {
			eff2+=get.effect(event.targets[i],event.card,event.player,player);
		}
		return eff1>0&&eff2<0;
    },
	logTarget:'player',
    content:function (){
		player.addTempSkill('XS_polu_temp');
		player.useCard({name:'sha',nature:'fire',isCard:true},trigger.player);
    },
	ai:{
		expose:0.4,
		threaten:1.2,
	},
	group:["XS_polu_res"],
	subSkill:{
		res:{
			trigger:{
				player:["useCardAfter"],
			},	
			priority:38,
			direct:true,
			filter:function (event,player){
				return event.getParent().name=='XS_polu';
			},
			content:function (){
				if(!game.hasPlayer2(function(current){
					return current.getHistory('damage',function(evt){
						return evt.card==trigger.card;
					}).length>0;
				})) {
					player.link();
				}
				else {
					var evt=trigger.getParent().getTrigger();
					var tars=evt.targets;
					evt.targets.remove(tars);
				}
			},
			sub:true,
		},
		temp:{
			charlotte:true,
			sub:true,
		},
	},
},
"XS_xianzhuo":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"phaseBefore",
	},
	check:function (card){
		return true;
	},
	content:function (){
		"step 0"
		player.storage.XS_xianzhuo=[];
		"step 1"
		var func=function(card,target){
			var list=[
				'判定阶段',
				'摸牌阶段',
				'出牌阶段',
				'弃牌阶段',
			];
			var choiceList=ui.create.dialog('专行：跳过本回合任意个主要阶段','forcebutton');
			for(var i=0;i<list.length;i++){
				var str='<div class="popup text" style="width:calc(100% - 10px);display:inline-block">';
				if(i==0) str+='<div>';
				str+=list[i];
				if(i==0) str+='</div>';
				str+='</div>';
				var next=choiceList.add(str);
				next.firstChild.addEventListener(lib.config.touchscreen?'touchend':'click',ui.click.button);
				next.firstChild.link=i;
				for(var j in lib.element.button){
					next[j]=lib.element.button[i];
				}
				choiceList.buttons.add(next.firstChild);
			}
			return choiceList;
		};
		if(player.isOnline2()){
			player.send(func,get.translation(trigger.card),get.translation(trigger.target));
		}
		event.dialog=func(get.translation(trigger.card),get.translation(trigger.target));
		if(player!=game.me||_status.auto){
			event.dialog.style.display='none';
		}
		var tpnm=Math.min(4,game.countPlayer(function(current){
			return current!=player&&!current.hasSkill('XS_xianzhuo_mark');
		}));	
		var next=player.chooseButton();
		next.set('forced',true);
		next.set('selectButton',[1,tpnm]);
		next.set('filterButton',function(button){
			return true;
		});
		next.set('ai',function(button){
			switch(button.link){
				case 0:{return 1;}
				case 1:{return 0;}
				case 2:{return 0;}
				case 3:{return 1;}
			}
		});
		"step 2"
		event.dialog.close();
		var map=[
			function(trigger,player,event){
				player.storage.XS_xianzhuo.push('判定阶段');
				player.skip('phaseJudge');
			},
			function(trigger,player,event){
				player.storage.XS_xianzhuo.push('摸牌阶段');
				player.skip('phaseDraw');
			},
			function(trigger,player,event){
				player.storage.XS_xianzhuo.push('出牌阶段');
				player.skip('phaseUse');
			},
			function(trigger,player,event){
				player.storage.XS_xianzhuo.push('弃牌阶段');
				player.skip('phaseDiscard');
			},
		];
		event.nm=result.links.length;
		for(var i=0;i<result.links.length;i++){
			game.log(player,'选择了','#g“专行”','的','#y选项'+get.cnNumber(result.links[i]+1,true));
			map[result.links[i]](trigger,player,event);
		}
		"step 3"
		player.chooseTarget('选择'+event.nm+'名其他角色，在其回合开始时横置该角色，然后你执行1个跳过的阶段',event.nm,true,function(card,player,target){
			return player!=target&&!target.hasSkill('XS_xianzhuo_mark');
		}).ai=function(target){
			var att=get.attitude(player,target);
			return -att;
		}
		"step 4"
		for(var i=0;i<result.targets.length;i++) {
			result.targets[i].addSkill("XS_xianzhuo_mark");
			result.targets[i].markSkillCharacter('XS_xianzhuo_mark',player,'专行','你于回合开始横置，并令'+get.translation(player)+'执行一个其选择的主要阶段');
			result.targets[i].storage.XS_xianzhuo_mark=player;
		}
    },
	ai:{
		expose:0.4,
	},
	subSkill:{
		mark:{
			onremove:function (player,skill){
				player.unmarkSkill('XS_xianzhuo_mark');
				delete player.storage.XS_xianzhuo_mark;
			},
			trigger:{
				player:"phaseBefore",
			},
			priority:997,
			direct:true,
			content:function (){
				"step 0"
				player.link();
				"step 1"
				event.pla=player.storage.XS_xianzhuo_mark;
				if(event.pla.storage.XS_xianzhuo.length) {
					var lt=[];
					for(var i=0;i<event.pla.storage.XS_xianzhuo.length;i++) {
						lt.push(event.pla.storage.XS_xianzhuo[i]);
					}
					event.pla.chooseControl(lt).set('ai',function(event){
						return lt.randomGet();
					}).set('prompt','专行：执行一个主要阶段');
				}
				else event.finish();
				"step 2"
				player.removeSkill('XS_xianzhuo_mark');
				event.pla.storage.XS_xianzhuo.remove(result.control);
				switch(result.control){
					case '判定阶段':
						_status.currentPhase=event.pla;
						event.pla.phaseJudge();
					break;
					case '摸牌阶段':
						_status.currentPhase=event.pla;
						event.pla.phaseDraw();
					break;
					case '出牌阶段':
						_status.currentPhase=event.pla;
						event.pla.phaseUse();
					break;
					case '弃牌阶段':
						_status.currentPhase=event.pla;
						event.pla.phaseDiscard();
					break;
				}
            },
			sub:true,
		},
	},
},
"XS_shanquan":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	filter:function(event,player){
		if(player.hasSkill('XS_shanquan_temp')) return false;
		if(player.storage.disableEquip==undefined||player.storage.disableEquip.length>=5) return false;
		return game.hasPlayer(function(current){
			return current!=player&&!current.hasSkill('XS_shanquan_mark');
		});
	},
	filterTarget:function (card,player,target){
        return target!=player&&!target.hasSkill('XS_shanquan_mark');
    },
    selectTarget:1,
	content:function (){
        "step 0"
		player.chooseToDisable(false);
		"step 1"
		target.addSkill("XS_shanquan_mark");
		target.markSkillCharacter('XS_shanquan_mark',player,'擅权','你始终处于横置状态');
		player.addTempSkill('XS_shanquan_temp');
    },
	ai:{
		order:10,
		expose:0.4,
		result:{
			player:function (player){
				if(player.storage.disableEquip.length>2) return -2;
				return 0.5;
            },
			target:function (player,target){
				if(!target.hasSkill('XS_shanquan_mark')) return -1;
				return 0;
            },
		},
	},
	group:["XS_shanquan1"],
	subSkill:{
		mark:{
			onremove:function (player,skill){
				if(player.isLinked()) player.link(false);
				player.unmarkSkill('XS_shanquan_mark');
			},
			init:function (player){
				player.link(true);
			},
			trigger:{
				player:["linkEnd"],
			},
			direct:true,
			filter:function (event,player){
				return !player.isLinked();
			},
			content:function (){
				player.link(true);
			},
			ai:{
				link:true,
				effect:{
					target:function (card){
						if(card.name=='tiesuo') return 'zeroplayertarget';
					},
				},
			},
			sub:true,
        },
		temp:{
			charlotte:true,
			sub:true,
        },
    },
},
"XS_shanquan1":{
	enable:"phaseUse",
	filter:function(event,player){
		if(player.hasSkill('XS_shanquan_temp')) return false;
		return game.hasPlayer(function(current){
			return current.hasSkill('XS_shanquan_mark');
		})&&player.storage.disableEquip.length>0;
	},
	filterTarget:function (card,player,target){
        return target!=player&&target.hasSkill('XS_shanquan_mark');
    },
    selectTarget:1,
	content:function (){
        "step 0"
		game.playXSAudio('XS_shanquan',2);
		player.chooseToEnable();
		"step 1"
		target.removeSkill('XS_shanquan_mark');
		player.addTempSkill('XS_shanquan_temp');
    },
	ai:{
		order:9,
		expose:0.4,
		result:{
			player:function (player){
				if(player.storage.disableEquip.length>2) return 1;
				return -1;
            },
			target:function (player,target){
				return 0.5;
            },
		},
	},
},
"XS_lianhuo":{
	audio:"ext:血色衣冠:2",
    trigger:{
        global:"damageAfter",
    },
	check:function (event,player){
		var att=get.attitude(player,event.player);
		if(att>0) return (!event.player.needsToDiscard()&&event.player.countCards('h')==player.countCards('h'))||event.player.isTurnedOver();
		return !event.player.isTurnedOver();
	},
	filter:function (event,player){
		return event.player!=player&&event.nature;
	},
	logTarget:'player',
	content:function (){
		"step 0"
		event.nm=trigger.player.getHandcardLimit()-trigger.player.countCards('h');
		trigger.player.chooseControlList(['将手牌数弃置至上限，然后若你的手牌数与'+get.translation(player)+'相同，其摸1张牌','翻面'],true).set('ai',function(event,player){
			var tri=_status.event.getTrigger();
			if(event.nm>2||tri.player.isTurnedOver()) return 1;
			return 0;
        }).set('prompt','请选择一项');
		"step 1"
        if(result.index==0){
			if(event.nm<0) trigger.player.chooseToDiscard(-event.nm,'h',true);		
        }
        else {
			trigger.player.turnOver();
			event.finish();
        } 
		"step 2"
		if(trigger.player.countCards('h')==player.countCards('h')) {
			player.draw();
		}
    },
	ai:{
		threaten:1.1,
		expose:0.4,
	},
},
"XS_huimeng":{
	audio:"ext:血色衣冠:2",
	trigger:{
        global:["damageAfter"],
    },
	priority:5,
    filter:function (event,player){
		return !player.hasSkill('XS_huimeng_temp')&&event.player!=player&&event.player.isAlive();
    },
	logTarget:"player",
	check:function (event,player){
		var att=get.attitude(player,event.player);
		if(att>0) return (player.hp+event.player.hp)<5;
		return event.player.hp>2||player.hp<2;
	},
    content:function (){
		"step 0"
		player.addTempSkill('XS_huimeng_temp','roundStart');
		var lt=[];
		for(var i=1;i<=Math.min(4,player.maxHp);i++) {
			lt.push(i.toString());
		}
		player.chooseControl(lt).set('ai',function(event){
			var att=get.attitude(player,_status.event.getTrigger().player);
			if(att>0) return (Math.max(1,player.hp-1)).toString();
			return '3';
		}).set('prompt','将你的体力值调整为1个数值（合计至多5点，至少为1）');
		"step 1"
		event.nm1=parseInt(result.control);
		game.log(player,'将体力值调整为',result.control);
		var nm=player.hp-event.nm1,tp=5-event.nm1;
		if(nm>0) player.loseHp(nm);
		else if(nm<0) player.recover(-nm);
		var lt=[];
		for(var i=1;i<=tp;i++) {
			lt.push(i.toString());
		}
		player.chooseControl(lt).set('ai',function(event){
			var att=get.attitude(player,_status.event.getTrigger().player);
			if(att>0) return lt[lt.length-1].toString();
			return '1';
		}).set('prompt','将'+get.translation(trigger.player)+'的体力值调整为1个数值（合计至多5点，至少为1）');
		"step 2"
		event.nm2=parseInt(result.control);
		game.log(player,'将',trigger.player,'的体力值调整为',result.control);
		var nm=trigger.player.hp-event.nm2;
		if(nm>0) trigger.player.loseHp(nm);
		else if(nm<0) trigger.player.recover(-nm);
		"step 3"
		player.chooseCardButton('重铸'+event.nm1+'张不同花色的牌，否则你失去1点体力',event.nm1,false,player.getCards('h')).set('filterButton',function(button){
			var st=get.suit(button.link);
			for(var i=0;i<ui.selected.buttons.length;i++){
				if(get.suit(ui.selected.buttons[i])==st) return false;
			}
			return true;
		}).set('ai',function(button){
			return 10-get.value(button.link);
		});
		"step 4"
		if(result.bool) {
			var cds=result.links.slice(0);
			player.chongzhuCards(cds);
		}
		else player.loseHp();
		trigger.player.chooseCardButton('重铸'+event.nm2+'张不同花色的牌，否则你失去1点体力',event.nm2,false,trigger.player.getCards('h')).set('filterButton',function(button){
			var st=get.suit(button.link);
			for(var i=0;i<ui.selected.buttons.length;i++){
				if(get.suit(ui.selected.buttons[i])==st) return false;
			}
			return true;
		}).set('ai',function(button){
			return 7-get.value(button.link);
		});
		"step 5"
		if(result.bool) {
			var cds=result.links.slice(0);
			trigger.player.chongzhuCards(cds);
		}
		else trigger.player.loseHp();
    },
	ai:{
		expose:0.6,
    },
	subSkill:{
         temp:{
			charlotte:true,
			sub:true,
        },
    },
},
"XS_rangyi":{
	audio:"ext:血色衣冠:2",
    trigger:{
		player:["changeHp"],
    },
	direct:true,
	filter:function (event,player){
		return event.num!=0;
	},
    content:function (){
		"step 0"
		var str,tp;
		if(trigger.num>0) str='是否令1名其他角色于当前回合结束后获得1个额外的出牌阶段？';
		else str='是否令1名其他角色跳过其下一个出牌阶段？';
		player.chooseTarget(get.prompt('XS_rangyi'),str,1,function(card,player,target){
			var nm=_status.event.getTrigger().num;
			if(nm>0) return target!=player&&!target.hasSkill('XS_rangyi_gain');
			return target!=player&&!target.hasSkill('XS_rangyi_lose');
		}).ai=function(target){
			var att=get.attitude(player,target),tp=_status.event.getTrigger().num;
			if(tp>0&&!target.hasSkill('XS_rangyi_gain')) return att;
			if(tp<0&&!target.hasSkill('XS_rangyi_lose')) return -att;
			return -1;
		}
		"step 1"
		if(result.bool){
			player.logSkill('XS_rangyi',result.targets);
			for(var i=0;i<result.targets.length;i++) {
				if(trigger.num>0) {
					result.targets[i].markSkillCharacter('XS_rangyi_gain',player,'攘夷','当前回合结束后，你获得一个额外的出牌阶段');
					result.targets[i].addTempSkill('XS_rangyi_gain');
				}
				else {
					result.targets[i].markSkillCharacter('XS_rangyi_lose',player,'攘夷','你跳过你下一个出牌阶段');
					result.targets[i].addTempSkill('XS_rangyi_lose',{player:'phaseUseBegin'});
				}
			}
		}
    },
	ai:{
		expose:0.4,
    },
	subSkill:{
		gain:{
			charlotte:true,
			onremove:function (player,skill){
				player.unmarkSkill('XS_rangyi_gain');
				player.phaseUse();
			},
			sub:true,
        },
		lose:{
			charlotte:true,
			trigger:{player:'phaseUseBefore'},
			direct:true,
			content:function(){
				player.unmarkSkill('XS_rangyi_lose');
				player.removeSkill('XS_rangyi_lose');
				trigger.cancel();
			},
			sub:true,
        },
    },
},
"XS_tuojiang":{
	mark:true,
	unique:true,
	limited:true,
	skillAnimation:true,
	animationColor:'wood',
	audio:"ext:血色衣冠:2",
    enable:"phaseUse",
    init:function (player){
        player.storage.XS_tuojiang=false;
    },
    intro:{
        content:"limited",
    },
    filter:function (event,player){
        return !player.storage.XS_tuojiang;
    },
    content:function (){
		player.awakenSkill('XS_tuojiang');
        player.storage.XS_tuojiang=true;
		player.chooseUseTarget({name:'nanman',isCard:true},true);
    },
	ai:{
		order:9,
		result:{
			player:2,
		}
	},
},
"XS_tuojiang1":{
	group:["XS_tuojiang1_gain","XS_tuojiang1_dam"],
    subSkill:{
        gain:{
			trigger:{
				global:['respond']
			},
			filter:function(event,player){
				if(!event.respondTo) return false;
				if(event.player==player||event.respondTo[0]!=player) return false;
				return event.getParent(5).name=='XS_tuojiang';
			},
			direct:true,
			content:function(){
				var cards=trigger.cards.filterInD('od');
				player.gain(cards,'log','gain2');
			},
            sub:true,
        },
		dam:{
			trigger:{
				global:["damageBefore"],
			},
			filter:function (event,player){
				if(event.source!=player) return false;
				if(event.getParent(4).name!='XS_tuojiang') return false;
				if(event.card.name=='nanman') return player.countCards('h','sha');
				if(event.card.name=='wanjian') return player.countCards('h','shan');
			},
			direct:true,
			content:function (){
				"step 0"
				var str=(trigger.card.name=='nanman')?'杀':'闪';
				event.str='你可弃置1张'+str+'，令对'+get.translation(trigger.player)+'造成的伤害由1名其他角色承担';
				player.chooseCardTarget({
					filterCard:function(card){
						var tri=_status.event.getTrigger();
						if(tri.card.name=='nanman') return card.name=='sha';
						return card.name=='shan';
					},
					filterTarget:function(card,player,target){
						var tri=_status.event.getTrigger();
						return target!=tri.player;
					},
					position:"h",
					selectCard:1,
					ai1:function(card){
						var pla=_status.event.player;
						var tri=_status.event.getTrigger();
						var eff=get.damageEffect(tri.player,pla,pla);
						return (eff<0)?9-get.value(card):-1;
					},
					ai2:function(target){
						var pla=_status.event.player;
						var eff=get.damageEffect(target,pla,pla);
						return eff;
					},
					prompt:event.str,
				});
				"step 1"
				if(result.bool){
					player.discard(result.cards[0]);
					player.line(result.targets[0]);
					trigger.player=result.targets[0];
				}
			},
			ai:{
				expose:0.6,
			},
			sub:true,
		},	
    },
},
"XS_dingtu":{
	intro:{
		content:function(storage,player,skill){
			if(!player.storage.XS_dingtu.length) return '未跳过任何阶段';
			var str=player.storage.XS_dingtu[0];
			for(var i=1;i<player.storage.XS_dingtu.length;i++) {
				str+='、'+player.storage.XS_dingtu[i];
			}
			return '已跳过阶段：'+str;
		},
	},
	init:function (player){
		player.storage.XS_dingtu=[];
	},
	filter:function (event,player){
        return player.storage.XS_tuojiang===true&&player.storage.XS_dingtu.length<4;
    },
	check:function(card){
		return true;
	},
    trigger:{
        player:"phaseBefore",
    },
    content:function (){
		"step 0"
		var lt=['摸牌阶段','出牌阶段','判定阶段','弃牌阶段'];
		lt.remove(player.storage.XS_dingtu);
		player.chooseControl(lt).set('ai',function(event){
			if(lt.contains('判定阶段')&&player.countCards('j')) return '判定阶段';
			if(lt.contains('弃牌阶段')&&player.needsToDiscard()) return '弃牌阶段';
			return lt.randomGet();
		}).set('prompt','选择跳过本回合一个阶段');
		"step 1"
		var tp,nm;
		player.storage.XS_dingtu.push(result.control);
		switch(result.control) {
			case '摸牌阶段':tp='phaseDraw';nm=4;break;
			case '出牌阶段':tp='phaseUse';nm=3;break;
			case '判定阶段':tp='phaseJudge';nm=2;break;
			case '弃牌阶段':tp='phaseDiscard';nm=1;break;
		}
		player.skip(tp);
		player.draw(nm);
		player.markSkill('XS_dingtu');
		"step 2"
		if(player.storage.XS_dingtu.length>=4) {
			player.addTempSkill('XS_dingtu_store');
		}
    },
    subSkill:{
        store:{
			charlotte:true,
			onremove:function(player){
				player.restoreSkill('XS_tuojiang');
			},
            sub:true,
        },
    },
},
"XS_zhuanglian":{
	enable:"phaseUse",
	discard:false,
	filterCard:function (card,player){
        return card.name=='sha';
    },
	selectCard:1,
	position:"h",
	filter:function (event,player){
		return player.countCards('h','sha');
	},
	check:function (card){
		return 5-get.value(card);
    },
	init:function(player,skill){
		if(typeof game.storage=="undefined") game.storage={};
		game.storage.XS_zhuanglian=[];
	},
    content:function (){
		"step 0"
		var list=['equip1','equip2','equip3','equip4','equip5'];
		player.chooseControl(list).set('ai',function(event){
			for(var i=0;i<list.length;i++) {
				if(player.isEmpty(list[i])) return list[i];
			}
			return list.randomGet();
		}).set('prompt','将'+get.translation(cards[0])+'置于你的一个装备栏');
		"step 1"
		var ca=cards[0];
		event.ca=[ca.name,ca.nature];
		var eq=cards[0].name+'_'+result.control;
		lib.card[eq]={
			type:"equip",
			subtype:result.control,
			fullimage:true,
			image:"ext:血色衣冠/icon/sha.png",
			enable:true,
			selectTarget:-1,
			filterTarget:function (card,player,target){
				return target==player;
			},
			modTarget:true,
			allowMultiple:false,
			content:function (){
				target.equip(cards[0]);
			},
			ai:{
				basic:{
					equipValue:1
				}
			},
			toself:true,
		};
		lib.translate[eq]=lib.translate[cards[0].name];
		lib.translate[eq+"_info"]='【妆奁】牌，没有任何效果。';
		ca.init(game.createCard(eq,ca.suit,ca.number));
		ca.storage.orname=event.ca;
		game.storage.XS_zhuanglian.push(ca);
		player.useCard(ca,player);
    },
    ai:{
        order:9,
		result:{
			player:1,
        },
        expose:0.3,
    },
	group:['XS_zhuanglian_eq','XS_zhuanglian_lose'],
	subSkill:{
        eq:{
			trigger:{
				player:'equipBegin',
			},
			frequent:true,
			filter:function(event,player){
				return player.isEmpty(get.subtype(event.card));
			},
			prompt:'你的空装备栏置入牌时，你可摸1张牌。',
			content:function(){
				player.draw();
			},
			ai:{
				effect:{
					target:function(card,player,target,current){
						if(get.type(card)=='equip'&&!get.cardtag(card,'gifts')) {
							if(target.isEmpty(get.subtype(card))) return [1,2];
						}
					}
				}
			},
            sub:true,
        },
		lose:{
			trigger:{
				player:"loseAfter",
			},
			priority:99,
			direct:true,
			forceDie:true,
			filter:function(event,player){
				if(event.getParent(2).name=="XS_zhuanglian") return false;
				if((event.parent&&event.parent.name!='swapEquip')&&event.type!='equip'){
					for(var i=0;i<event.cards.length;i++){
						if(game.storage.XS_zhuanglian.contains(event.cards[i]))return true;
					}
				}
			},
			content:function(){
				"step 0"
				for(var i=0;i<trigger.cards.length;i++){
					if(game.storage.XS_zhuanglian.contains(trigger.cards[i])){
						game.storage.XS_zhuanglian.remove(trigger.cards[i]);
						trigger.cards[i].init(game.createCard(trigger.cards[i].storage.orname[0],trigger.cards[i].suit,trigger.cards[i].number,trigger.cards[i].storage.orname[1]));
					}
				}
			},
            sub:true,
        },
    },
},
"XS_xinyue":{
	trigger:{
		player:"phaseAfter",
	},
	check:function (event,player){
		return true;
	},
	filter:function (event,player){
		return player.countCards('e');
	},
	content:function (){
		"step 0"
		event.cds=player.getCards('e');
		player.discard(event.cds);
		player.draw(event.cds.length);
		"step 1"
		event.list=[];
		for(var i=0;i<event.cds.length;i++) {
			var tp=event.cds[i].name.slice(0,3);
			if(tp=='sha') event.list.push(event.cds[i]);
		}
		if(!event.list.length) event.finish();
		else {
			player.chooseTarget('你可令一名其他角色获得'+get.translation(event.list),1,false,function(card,player,target){
				return target!=player;
			}).set('ai',function(target){
				var att=get.attitude(player,target),hs=target.countCards('h')+1;
				return att/hs;
			});
		}
		"step 2"
		if(result.bool){
			result.targets[0].gain(event.list,'gain2','log');
		}
	},
	ai:{
        expose:0.3,
    },
},
"XS_dashi":{
	trigger:{
		global:"gainAfter",
	},
	check:function(event,player){
		return get.attitude(player,event.player)<0;
	},
	logTarget:'player',
	filter:function (event,player){
		if(event.player==player||event.getParent(2).name=='phaseDraw') return false;
		return event.player.countCards('h')>event.player.getHandcardLimit();
	},
	content:function (){
		"step 0"
		player.choosePlayerCard(trigger.player,'h',1,true);
		"step 1"
		event.cd=result.links[0];
		player.showCards('达识',event.cd);
		if(event.cd.name=='sha'&&game.hasPlayer(function(current){
			return player.canUse({name:'sha'},current);
		})) {
			event.str='是否使用'+get.translation(event.cd)+'？';
		}
		else if(event.cd.name=='shan'){
			event.str='是否获得'+get.translation(event.cd)+'？';
		}
		else if(event.cd.name=='tao'){
			event.str='是否弃置'+get.translation(event.cd)+'？';
		}
		else event.finish();
		"step 2"
		player.chooseBool(event.str).set('ai',function(){
			if(event.cd.name=='shan'||event.cd.name=='tao') return true;
			return game.hasPlayer(function(current){
				return player.canUse({name:'sha'},current)&&get.effect(current,{name:'sha'},player,player)>0;
			});
		});
		"step 3"
		if(result.bool) {
			if(event.cd.name=='shan') player.gain(event.cd,'gain2','log');
			else if(event.cd.name=='tao') trigger.player.discard(event.cd);
			else {
				player.chooseUseTarget(event.cd,true);
				//trigger.player.lose(event.cd,ui.special);
			}
		}				
	},
	ai:{
		expose:0.5,
	},
},
"XS_shanchong":{
	trigger:{
		player:"useCardAfter",
	},
	filter:function(event,player){
		return get.type(event.card)=='basic';
	},
	forced:true,
	content:function (){
		"step 0"
		player.discard(player.getCards('h'));
		"step 1"
		player.draw(2);
	},
	ai:{
		effect:{
　　		player:function(card,player){
				if(get.type(card)=='basic'&&player.countCards('h')>3) return [1,-1];
			}
		},
    },
},
"XS_enxin":{
	group:['XS_enxin_shan','XS_enxin_wuxie'],
	subSkill:{
        temp:{
			charlotte:true,
            sub:true,
        },
    },
},

"XS_enxin_shan":{
	enable:["chooseToUse"],
	filterCard:function (){return false},
	selectCard:-1,
	viewAsFilter:function (player){
		if(player.hasSkill('XS_enxin_temp')) return false;
		return true;
	},
	viewAs:{
		name:"shan",
	},
	prompt:"将装备区牌弃置至场上最少，视为使用1张闪/无懈可击；若弃牌数为：0，本轮此技能失效；2，获得响应的牌；>=3，回合结束后你获得1个额外回合",
	check:function (){
		return true;
	},
	precontent:function(){
		'step 0'
		var nh=player.countCards('e');
		for(var i=0;i<game.players.length;i++){
			if(game.players[i].isOut()||game.players[i]==player) continue;
			if(game.players[i].countCards('e')<nh) {
				nh=game.players[i].countCards('e');
			}
		}
		event.num1=Math.max(0,player.countCards('e')-nh);
		player.chooseToDiscard([event.num1,Infinity],'e',true,function(card){
			return true;
		}).set('ai',function(card){
			return 6.5-get.value(card);
		});
        "step 1"
		var tp=result.cards.length;
		if(tp==0) {
			player.addTempSkill('XS_enxin_temp','roundStart');
		}
		else if(tp==2) {
			var evt=event.getParent(2);
			if(get.itemtype(evt.cards)=='cards') player.gain(evt.cards,'gain2','log');
		}
		else if(tp>=3) {
			player.insertPhase();
		}
	},	
	ai:{
		respondShan:true,
		threaten:0.8,
	},
},

"XS_enxin_wuxie":{
	enable:["chooseToUse"],
	filterCard:function (){return false},
	selectCard:-1,
	viewAsFilter:function (player){
		if(player.hasSkill('XS_enxin_temp')) return false;
		return true;
	},
	viewAs:{
		name:"wuxie",
	},
	prompt:"将手牌弃置至场上最少，视为使用1张无懈可击；若弃牌数为：0，本轮此技能失效；1，需重铸1张牌；2，获得响应的牌；>=3,回合结束后你获得1个额外回合",
	check:function (){
		return true;
	},
	precontent:function(){
		'step 0'
		var nh=player.countCards('e');
		for(var i=0;i<game.players.length;i++){
			if(game.players[i].isOut()||game.players[i]==player) continue;
			if(game.players[i].countCards('e')<nh) {
				nh=game.players[i].countCards('e');
			}
		}
		event.num1=Math.max(0,player.countCards('e')-nh);
		player.chooseToDiscard([event.num1,Infinity],'e',true,function(card){
			return true;
		}).set('ai',function(card){
			return 6.5-get.value(card);
		});
        "step 1"
		var tp=result.cards.length;
		if(tp==0) {
			player.addTempSkill('XS_enxin_temp','roundStart');
		}
		else if(tp==2) {
			var evt=event.getParent(5);
			if(get.itemtype(evt.cards)=='cards') player.gain(evt.cards,'gain2','log');
		}
		else if(tp>=3) {
			player.insertPhase();
		}
	},	
	ai:{
		threaten:0.9,
	},	
},
"XS_xujin":{
	trigger:{
		global:"phaseDrawBegin",
	},
	filter:function (event,player){
		if(player.hasSkill('XS_xujin_temp')) return false;
		return !event.numFixed;
	},
	logTarget:'player',
	"prompt2":function (event,player){
		return '是否令'+get.translation(event.player)+'于此阶段的摸牌数改为'+Math.max(0,4-event.player.countCards('e'))+'张？';
	},
	check:function(event,player){
		var att=get.attitude(player,event.player),nm=Math.max(0,4-event.player.countCards('e'));
		if(att>0) return nm>=3;
		if(att<0) return nm==0;
		return false;
	},
	content:function (){
		var nm=Math.max(0,4-event.player.countCards('e'));
		trigger.num=nm;
		player.addTempSkill('XS_xujin_temp','roundStart');
    },
	ai:{
		expose:0.3,
	},
	subSkill:{
        temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_yangbian":{
	audio:"ext:血色衣冠:2",
	init:function (player){
		player.storage.XS_yangbian=[['XS_duzun','XS_dongzhongshu'],['XS_tuien','XS_zhufuyan'],['XS_quzhu','XS_weiqing'],['XS_zhengshui','XS_sanghongyang']];
	},
	intro:{
		content:function(storage,player,skill){
			var pss=[];
			for(var i=0;i<player.storage.XS_yangbian.length;i++) {
				pss.push(player.storage.XS_yangbian[i][0]);
			}
			return '可获得技能：'+get.translation(pss);
		},
	},
    trigger:{
        player:"phaseBefore",
    },
	mark:true,
    direct:true,
    content:function (){
		"step 0"
		player.removeAdditionalSkill('XS_yangbian');
		"step 1"
		var skilllist=player.storage.XS_yangbian.slice(0),skills=[];
		var nm=Math.max(1,player.getDamagedHp());
		for(var i=0;i<skilllist.length;i++) {
			lib.card['skillCard_'+skilllist[i][0]]={
				fullimage:true,
				image:'character:'+skilllist[i][1],
			};
			lib.translate['skillCard_'+skilllist[i][0]]=lib.translate[skilllist[i][0]];
			lib.translate['skillCard_'+skilllist[i][0]+'_info']=lib.translate[skilllist[i][0]+'_info'];
		}
		for(var i=0;i<skilllist.length;i++){
			skills[i]=['','','skillCard_'+skilllist[i][0]];
		}
		player.chooseButton(['你可获得以下技能之'+nm+'直到你下回合开始',[skills,'vcard']],[0,nm],true).set('ai',function(button){
			return Math.random();
		});
		"step 2"
		var sk=[];
		for(var i=0;i<result.links.length;i++){
			sk.push(result.links[i][2].slice(10));
		}
		if(sk.length) {
			player.logSkill('XS_yangbian');
			player.addAdditionalSkill('XS_yangbian',sk);
		}
    },
},
"XS_guquan":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:"dieAfter",
	},
	forced:true,
	logTarget:'player',
	filter:function (event,player){
		if(event.player==player||!player.hasSkill('XS_yangbian')) return false;
		var pss=[];
		for(var i=0;i<player.storage.XS_yangbian.length;i++) {
			pss.push(player.storage.XS_yangbian[i][0]);
		}
		var sks=event.player.getGainableSkills(function(info,skill,name){
			return lib.translate[skill+'_info']&&!lib.skill[skill].unique&&!lib.skill[skill].zhuSkill&&!pss.contains(skill);
		});
		return sks.length>0;
    },
	content:function (){
		'step 0'
		event.skillai=function(list){
			return get.max(list,get.skillRank,'item');
		};
		if(event.isMine()){
			event.dialog=lib.skill.XS_zhinang.createDialog(player,trigger.player);
			event.switchToAuto=function(){
				event._result=event.skillai(event.list);
				game.resume();
			};
			_status.imchoosing=true;
			game.pause();
		}
		else{
			event._result=event.skillai(lib.skill.XS_zhinang.createDialog(player,trigger.player,true));
		}
		'step 1'
		_status.imchoosing=false;
		if(event.dialog){
			event.dialog.close();
		}
		player.storage.XS_yangbian.push([result,trigger.player.name]);
		game.log(player,'将','【'+get.translation(result)+'】加入了【扬鞭】选项中');
		player.syncStorage('XS_yangbian');
		_status.currentPhase=player;
		player.phaseUse();
    },
	ai:{
		combo:'XS_yangbian',
	},
},
"XS_pozhen":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
    usable:1,
    filter:function (event,player){
		return player.countCards('h')&&game.hasPlayer(function(current){
			return current!=player&&current.countCards('h');
		});
    },
	filterTarget:function (card,player,target){
        return player!=target&&target.countCards('h');
    },
	selectTarget:1,
    content:function (){
		"step 0"
		player.chooseCard([1,Infinity],true,'h',function(card){
            return true;
        }).set('ai',function(card){
			return 6.5-get.value(card);
        });
		"step 1"
		event.cds1=result.cards.slice(0);
		target.chooseCard([1,Infinity],true,'h',function(card){
            return true;
        }).set('ai',function(card){
			return 5.5-get.value(card);
        });
		"step 2"
		event.cds2=result.cards.slice(0);
		player.chongzhuCards(event.cds1);
		target.chongzhuCards(event.cds2);
		"step 3"
		if(event.cds1.length>event.cds2.length) {
			player.useCard({name:'sha',isCard:true},target,false);
		}
		else if(event.cds1.length<event.cds2.length) {
			target.useCard({name:'sha',isCard:true},player,false);
		}
    },
    ai:{
        order:9,
		expose:0.4,
		result:{
			target:function(player,target){
				if(player.countCards('h')>target.countCards('h')) {
					return target.countCards('h')-player.countCards('h');
				}
				return 0;
			},
        },
    },
},
"XS_lingshuai":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"useCardBegin",
	},
	direct:true,
	filter:function (event,player) {
		if(get.type(event.card)!='basic') return false;
		var hs=player.getCards('h');
		for(var i=0;i<hs.length;i++) {
			if(!event.cards.contains(hs[i])) return true;
		}
		return false;
	},
	priority:9,
	content:function (){
		"step 0"
        player.chooseCard(get.prompt('XS_lingshuai'),'是否展示手牌中的一张'+get.translation(trigger.card.name)+'？如此你摸1张牌。','h',1,function(card){
            var trigger=_status.event.getTrigger();
			return card.name==trigger.card.name&&!trigger.cards.contains(card);
        }).set('ai',function(card){
			return true;
        });
        "step 1"
        if(result.bool){
			player.logSkill('XS_lingshuai');
            player.draw();
        }
	},
	group:["XS_lingshuai_die"],
	subSkill:{
         die:{
			trigger:{
				player:'die',
			},
			forced:true,
			forceDie:true,
			filter:function (event,player){
				return event.source&&event.source.isIn();
			},
			content:function (){
				trigger.source.addSkill('XS_lingshuai');
			},
			ai:{
				effect:{
					target:function(card,player,target,current){
						if(target.hp<=1&&get.tag(card,'damage')) return [1,0,1,2];
					}
				},
			},
			sub:true,
        },
    },
},
"XS_siyou":{
	audio:"ext:血色衣冠:2",
	init:function (player){
		player.storage.XS_siyou=[];
	},
	enable:"chooseToUse",
	filter:function (event,player){
		if(!player.countCards('hej')) return false;
		if(event.filterCard({name:'sha'},player,event)) return true;
		if(event.filterCard({name:'jiu'},player,event)) return true;
		if(event.filterCard({name:'tao'},player,event)) return true;
		if(event.filterCard({name:'shan'},player,event)) return true;
		return false;
	},
	chooseButton:{
		dialog:function (event,player){
			var list=[];
			if(event.filterCard({name:'sha'},player,event)){list.push(['基本','','sha']);}
			if(event.filterCard({name:'tao'},player,event)) {list.push(['基本','','tao']);}
			if(event.filterCard({name:'jiu'},player,event)) {list.push(['基本','','jiu']);}
			if(event.filterCard({name:'shan'},player,event)) {list.push(['基本','','shan']);}
			return ui.create.dialog("将你一个区域的所有牌当作一张不计次数的基本牌使用，其结算完成后，你可弃置1名其他角色对应区域至多X张牌，X为你失去的牌数。",[list,"vcard"],"hidden");
		},
		check:function (button){
			var player=_status.event.player;
			if(player.countCards('j')||player.countCards('e')==1||player.countCards('h')<=2) {
				var player=get.player();
				var card={name:button.link[2]};
				if(card.name=='shan') return 3;
				if(game.hasPlayer(function(current){
					return player.canUse({name:'sha'},current)&&get.effect(current,{name:'sha'},player,player)>0;
				})){
					if(card.name=='sha'){
						return 2.9;
					}
					else if(card.name=='jiu'){
						if((player.countCards('h','sha')&&player.countCards('ej'))||player.isDying()) return 4;
						return 0;
					}
				}
				if(game.hasPlayer(function(current){
					return player.canUse({name:'tao'},current)&&get.effect(current,{name:'tao'},player,player)>0;
				})&&card.name=='tao'){
					return 4;
				}
			}
			return 0;
		},
		backup:function (links,player){
			return {
				filterCard:function (card){
					return false;
				},
				popname:true,
				position:"he",
				selectCard:-1,
				check:function(card,player,target){
					return true;
				},
				viewAs:{
					name:links[0][2],
				}, 
				precontent:function(){
					'step 0'
					var list=[];
					if(player.countCards('h')) list.push('手牌区');
					if(player.countCards('e')) list.push('装备区');
					if(player.countCards('j')) list.push('判定区');
					player.chooseControl(list).set('ai',function(event){
						var player=_status.event.player;
						if(list.contains('判定区')) return '判定区';
						if(list.contains('装备区')) {
							if(player.countCards('e')<=1||player.countCards('e')<player.countCards('h')) return '装备区';
						}
						return '手牌区';
					}).set('prompt','选择1个区域的所有牌');
					"step 1"
					switch(result.control) {
						case '手牌区':var ps='h';break;
						case '装备区':var ps='e';break;
						case '判定区':var ps='j';break;
					}
					var nm=player.countCards(ps);
					player.storage.XS_siyou=[nm,ps];
					event.result.cards=player.getCards(ps);
					player.logSkill('XS_siyou');
				},			
			}
		},
		prompt:function (links,player){
			return '将1个区域的所有牌当作1张'+get.translation(links[0][2])+'使用';
		},
	},
	ai:{
		order:function (){
			var player=get.player();
			var event=_status.event;
			if(event.type=='dying'){
				if(event.filterCard({name:'tao'},player,event)) return 0.5;
			}
			else{
				if(event.filterCard({name:'tao'},player,event)||event.filterCard({name:'shan'},player,event)) return 4;
				if(event.filterCard({name:'sha'},player,event)) return 5;
			}
			return 0;
		},
		save:true,
		respondSha:true,
		respondShan:true,
		skillTagFilter:function (player,tag,arg){
			return player.countCards('hej');
		},
		result:{
			player:function (player){
				if(_status.event.type=='dying') return get.attitude(player,_status.event.dying);
				else return 1;
			},
		},
		effect:{
			target:function(card,player,target,current){
				if(get.type(card)=='equip'&&target.countCards('e')) return 0;
			}
		},	
	},
	group:["XS_siyou_dis"],
    subSkill:{
		dis:{
			trigger:{
				player:"useCardAfter",
			},
			priority:17,
			direct:true,
			filter:function (event,player){
				if(event.skill!='XS_siyou_backup') return false;
				return player.storage.XS_siyou.length>0;
			},
			content:function (){
				"step 0"
				switch(trigger.card.name){
					case 'sha':
						if(player.stat[player.stat.length-1].card.sha>0){
							player.stat[player.stat.length-1].card.sha--;
						}
					break;
					case 'tao':
						if(player.stat[player.stat.length-1].card.tao>0){
							player.stat[player.stat.length-1].card.tao--;
						}
					break;
					case 'jiu':
						if(player.stat[player.stat.length-1].card.jiu>0){
							player.stat[player.stat.length-1].card.jiu--;
						}
					break;
				}
				event.nm=player.storage.XS_siyou[0];
				event.ps=player.storage.XS_siyou[1];
				var str;
				switch(event.ps){
					case 'h':str='手牌区';break;
					case 'e':str='装备区';break;
					case 'j':str='判定区';break;
				}
				player.storage.XS_siyou=[];
				player.chooseTarget('你可弃置1名其他角色'+str+'至多'+event.nm+'张牌',1,false,function(card,player,target){
					return player!=target&&target.countCards(event.ps);
				}).set('ai',function(target){
					var att=get.attitude(player,target),tp=target.countCards(event.ps);
					if(event.ps=='j') return att*tp;
					return -att*tp;
				});
				"step 1"
				if(result.bool){
					player.discardPlayerCard(result.targets[0],event.ps,[1,event.nm],false);
				}
			},
			sub:true,
        },
    },
},
"XS_youbu":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:1,
	content:function (){
        'step 0'
		event.mk=0;
		player.chooseBool('是否摸1张牌？（若你仅执行此项，可视为使用1张无距离限制的杀）').set('ai',function(){
			return true;
		});
        'step 1'
		if(result.bool){
			player.draw();
			event.mk++;
        }
		else event.finish();
		'step 2'
		if(player.countCards('he')>0) {
			player.chooseToDiscard('是否弃置1张牌？（若你仅执行前两项，可视为使用1张桃）',1,'he').set('ai',function(card){
				if(!player.isDamaged()) return -10;
				return 5.5-get.value(card);
			});		
		}
		else event.goto(6);
		'step 3'
		if(result.bool&&result.cards&&result.cards.length) event.mk++;
		else event.goto(6);
		'step 4'
		if(player.countCards('he')>0) {
			player.chooseCardButton('是否重铸1张牌？（若你执行此项，可视为使用1张酒）',1,player.getCards('he'),false).ai=function(button){
				if(!player.hasUsableCard('sha')) return -10;
				return 6-get.value(button.link);
			}
		}
		else event.goto(6);
		'step 5'
		if(result.bool){
			var cards=result.links.slice(0);
			player.chongzhuCards(cards);
			event.mk++;
        }
		'step 6'
		var cd='sha';
		if(event.mk==2) cd='tao';
		else if(event.mk==3) cd='jiu';
		player.chooseUseTarget({name:cd,isCard:true},false,'nodistance');
    },
	ai:{
		order:9,
		result:{
			player:1,
		},
	},
},
"XS_huadie":{
 	trigger:{
		player:["useCardAfter"],
	},
	filter:function (event,player){
		if(!player.countCards('h')) return false;
		return ['sha','tao','jiu'].contains(event.card.name);
	},
	direct:true,
	priority:39,
	content:function (){
		"step 0"
		event.tp;
		switch(trigger.card.name){
			case 'sha':
				event.tp='tao';
			break;
			case 'tao':
				event.tp='jiu';
			break;
			case 'jiu':
				event.tp='sha';
			break;
		}
		player.chooseTarget(get.prompt('XS_huadie'),'是否指定一名其他角色？其可将你一张手牌当作'+get.translation(event.tp)+'使用。',function(card,player,target){
			return target!=player;
		}).ai=function(target){
			var att=get.attitude(player,target);
			if(player.countCards('h')<3) return false;
			return att;
		}
		"step 1"
		if(result.bool) {
			player.line(result.targets[0],'fire');
			player.logSkill('XS_huadie',result.targets[0]);
			if(player.sex=='male') game.playXSAudio('XS_huadiel',2);
			else game.playXSAudio('XS_huadien',2);
			event.pla=player;
			event.tar=result.targets[0];
			event.tar.choosePlayerCard(player,'h',1,'visible').set('ai',function(button){
				var val=get.value(button.link);
				var cdvl,att=get.attitude(event.tar,event.pla);
				switch(event.tp){
					case 'tao':cdvl=9;break;
					case 'jiu':cdvl=7;break;
					case 'sha':cdvl=5;break;
				}
				if(att>=0) {
					if(event.tp=='jiu'||(event.tp=='tao'&&event.tar.isHealthy())) return 0;
					if(event.tp=='sha') {
						if(game.hasPlayer(function(current){
							return event.tar.canUse({name:'sha'},current)&&get.effect(current,{name:'sha'},event.tar,event.tar)>0;
						})) return cdvl-val;
					}
					return cdvl-val;
				}
				return val-cdvl;
			});
		}
		else event.finish();
		"step 2"
		if(result.bool){
			event.tar.chooseUseTarget({name:event.tp},result.links,true).viewAs=true;
			event.tar.lose(result.links,ui.special);
		}
	},
	ai:{
		expose:0.4,
	},
},
"XS_lieyong":{
	audio:"ext:血色衣冠:2",
	trigger:{
		source:"damageBegin4",
	},
	filter:function (event,player){
		if(event.player==player||!event.card||!event.notLink()) return false;
        return player.hp>event.player.hp||player.countCards('h')>event.player.countCards('h');
    },
	priority:-999,
	check:function (event,player){
		var eff=get.damageEffect(event.player,player,player,event.nature);
		return eff>0;
	},
	logTarget:'player',
	"prompt2":function (event,player){
		var str='是否令你对'+get.translation(event.player)+'造成的伤害';
		if(player.hp>event.player.hp&&player.countCards('h')>event.player.countCards('h')) str+='翻倍？';
		else str+='+1？'
		return str;
	},
	content:function (){
		if(player.hp>trigger.player.hp&&player.countCards('h')>trigger.player.countCards('h')) {
			trigger.num*=2;
		}
		else trigger.num++;
    },
	ai:{
		expose:0.3,
	},
},
"XS_tiandou":{
	audio:"ext:血色衣冠:2",
	init:function (player){
        player.storage.XS_tiandou=3;
		player.storage.XS_tiandou_fulei=1;
    },
	mark:true,
	intro:{
		content:function (storage){
			return '当前判定次数：<span class="bluetext">'+storage+'</span> ';
		},
	},
	trigger:{
		player:["phaseDrawBefore"],
	},
	forced:true,
	firstDo:true,
	content:function(){
		"step 0"
		event.mk=false;
		event.nm=player.storage.XS_tiandou;
		"step 1"
		event.nm--;
		player.judge('天斗',function(card){
			if(get.suit(card)=='spade') return -6;
			return 0;
		});
		"step 2"
		if(result.bool==false){
			player.damage(player.storage.XS_tiandou_fulei,'thunder','nosource');
			player.storage.XS_tiandou_fulei++;
			event.mk=true;
		}
		else {
			player.gain(result.card,'gain2','log');
		}
		"step 3"
		if(event.nm>0) event.goto(1);
		else {
			if(!event.mk) {
				player.storage.XS_tiandou++;
				player.syncStorage('XS_tiandou');
			}
			trigger.cancel();
		}
	},
	group:["XS_tiandou_rec"],
	subSkill:{
		rec:{
			trigger:{
				player:"dieBegin",
			},
			filter:function(event,player){
				return event.getParent(3)&&event.getParent(3).name=='XS_tiandou';
			},
			direct:true,
			priority:67,
			content:function (){
				player.storage.XS_tiandou_fulei=1;
			},
			sub:true,
		},
	},
},
"XS_zhangju":{
	audio:"ext:血色衣冠:2",
	forced:true,
	trigger:{
		player:["drawBefore"],
	},
	filter:function (event,player){
		return event.num>0;
	},
	firstDo:true,
	priority:999,
	content:function (){
		"step 0"
		player.chooseControl('牌堆顶','牌堆底').set('ai',function(event){
			return '牌堆顶';
		}).set('prompt','展示牌堆顶或牌堆底'+trigger.num*3+'张牌');
		event.nm=trigger.num;
		"step 1"
		if(result.control=='牌堆顶'){
			event.cds=get.cards(event.nm*3);
		}
		else{
			event.cds=get.bottomCards(event.nm*3);
		}
		player.showCards(event.cds);
		"step 2"
		player.chooseCardButton('获得其中'+event.nm+'张牌，并弃置其余的牌',event.nm,event.cds,true).ai=function(button){
			return get.value(button.link);
		}
		"step 3"
		for(var i=0;i<result.links.length;i++) {
			event.cds.remove(result.links[i]);
		}
		player.gain(result.links,'gain2','log');
		game.cardsDiscard(event.cds);
		"step 4"
		trigger.cancel();
	},
	ai:{
		effect:{
			target:function(card,player,target){
				if(card.name=='wuzhong'||card.name=='zengbin') return 3;
			}
		}
	},
},
"XS_tianhuo":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:1,
	filter:function (event,player){
		var tp=0;
		for(var i=0;i<ui.discardPile.childNodes.length;i++){
			var current=ui.discardPile.childNodes[i];
			if(current.name=='sha'&&current.nature=='fire') tp++;
		}
        return tp>0;
    },
	content:function (){
        'step 0'
		event.mk=false;
		event.tp=0;
		for(var i=0;i<ui.discardPile.childNodes.length;i++){
			var current=ui.discardPile.childNodes[i];
			if(current.name=='sha'&&current.nature=='fire') event.tp++;
		}
		'step 1'
		if(event.tp>0) {
			var nm=Math.min(game.countPlayer(),event.tp);
			player.chooseTarget('为至多'+nm+'名角色分配共计'+event.tp+'点火伤害',[1,event.tp],true,function(card,player,target){
				return true;
			}).ai=function(target){
				return get.damageEffect(target,player,player,'fire');
			}
		}
		else event.finish();
		'step 2'
		event.tars=result.targets;
		if(event.tars.length<event.tp) {
			event.mk=true;
		}
		'step 3'
		if(event.tars.length==event.tp) {
			for(var i=0;i<event.tars.length;i++) {
				event.tars[i].damage(player,1,'fire');
			}
			event.goto(6);
		}
		else if(event.tars.length==1) {
			event.tars[0].damage(player,event.tp,'fire');
			event.goto(6);
		}
		else {
			var target=event.tars.shift();
			event.current=target;
		}
		'step 4'
		if(event.current){
			var lt=[];
			for(var i=1;i<=event.tp-event.tars.length;i++) {
				lt.push(i.toString());
			}
			player.chooseControl(lt,true).set('ai',function(event){
				if(event.current.hp==1) return '1';
				return '2';
			}).set('prompt','为'+get.translation(event.current)+'分配几点火伤害？');
		}
		'step 5'
		event.current.damage(player,parseInt(result.control),'fire','nocard');
		event.tp-=parseInt(result.control);
		event.goto(3);
		'step 6'
		if(event.mk) {
			player.loseHp();
		}		
    },
	ai:{
		expose:0.3,
		order:9,
		result:{
			player:1,
		},
	},
},
"XS_nishi":{
	audio:"ext:血色衣冠:2",
	trigger:{
        player:["phaseUseBegin"],
    },
	check:function (event,player){
		if(player.hasSkill('XS_nufa_temp')) return true;
		var ck=0;
		for(var i=0;i<game.players.length;i++){
			if(game.players[i].isOut()) continue;
			if(game.players[i]!=player&&get.attitude(game.players[i],player)<0){
				ck++;
			}
		}
		return ck>1;
	},
	"prompt2":function (event,player){
		if(player.hasSkill('XS_nufa_temp')) return '出牌阶段开始，你可弃置1名角色2张牌，并对1名角色造成1点伤害。';
		else return '出牌阶段开始，你可弃置1名角色2张牌，并对1名角色造成1点伤害；若选择了同一不为你的角色，你失去1点体力以及1点体力上限。';
	},
    content:function (){
		"step 0"
		player.chooseTarget('弃置1名角色2张牌',1,true,function(card,player,target){
			return target.countCards('he');
		}).set('ai',function(target){
			var att=get.attitude(player,target);
			return -att;
		});
		"step 1"
		event.tar1=result.targets[0];
		player.discardPlayerCard(event.tar1,2,'he',true);
		"step 2"
		if(event.tar1!=player&&!player.hasSkill('XS_nufa_temp')) var str='对1名角色造成1点伤害；若为'+get.translation(event.tar1)+'，你失去1点体力并失去1点体力上限。';
		else var str='对1名角色造成1点伤害';
		player.chooseTarget(str,1,true,function(card,player,target){
			return true;
		}).set('ai',function(target){
			var eff=get.damageEffect(target,player,player);
			return eff;
		});
		"step 3"
		event.tar2=result.targets[0];
		event.tar2.damage(player,1,'nocard');
		if(!player.hasSkill('XS_nufa_temp')) {
			if(event.tar1==event.tar2&&event.tar1!=player) {
				player.loseHp();
				player.loseMaxHp();
			}
		}
		else {
			player.removeSkill('XS_nufa_temp');
		}
    },
},
"XS_nufa":{
	audio:"ext:血色衣冠:2",
	forced:true,
	trigger:{
		player:["damageAfter"],
	},
	filter:function (event,player){
		return event.num>0;
	},
	priority:-3,
	content:function (){
		player.addSkill('XS_nufa_temp');
	},
	ai:{
		maixie:true,
		maixie_defend:true,
		effect:{
			target:function(card,player,target){
				if(get.tag(card,'damage')){
					if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
					if(target.hasSkill('XS_nufa_temp')) return [1,-2];
					if(!target.hasFriend()) return;
					var num=1;
					if(get.attitude(player,target)>0){
						if(player.needsToDiscard()){
							num=0.7;
						}
						else{
							num=0.5;
						}
					}
					if(target.hp>=4) return [1,num*2];
					if(target.hp==3) return [1,num*1.5];
					if(target.hp==2) return [1,num*0.5];
				}
			}
		}
	},
	subSkill:{
		temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_shoulue":{
	audio:"ext:血色衣冠:2",
	trigger:{
        global:["damageAfter","recoverAfter"],
    },
	priority:8,
    filter:function (event,player){
		if(event.num<=0||event.cards) return false;
		if(event.name=='damage') {
			return event.source&&event.source!=player;
		}
		else {
			return event.player!=player;
		}
    },
	frequent:true,
    content:function (){
		player.draw();
    },
},
"XS_zhiyuan":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:1,
	filter:function (event,player){
		return player.countCards('h');
	},
	filterCard:function (card,player){
		return true;
	},
	prompt:'你可将至少1张手牌当作1张五谷丰登对等量角色使用，其结算完成后，视为对不为其目标的所有角色使用1张万箭齐发。',
	selectCard:[1,Infinity],
	selectTarget:function (card){
		return ui.selected.cards.length;
	},
	position:"h",
	multitarget:true,
	multiline:true,
	filterTarget:function (card,player,target){
		return player.canUse({name:'wugu'},target);
	},
	check:function (card){
		return 6-get.value(card);
	},
	content:function (){
		"step 0"
		player.useCard({name:'wugu',isCard:true},targets);
		"step 1"
		event.tars=game.filterPlayer(function(current){
			return !targets.contains(current);
		});
		"step 2"
		player.useCard({name:'wanjian',isCard:true},event.tars);
	},
	ai:{
		order:9,
		expose:0.3,
		result:{
			target:1,
		},
	},
},
"XS_xunli":{
	zhuanhuanji:true,
	init:function (player){
        player.storage.XS_xunli=true;
		player.storage.XS_xunli_p=player;
    },
	mark:true,
	intro:{
		content:function(storage,player,skill){
			var str='(<span class="bluetext">'+get.translation(player.storage.XS_xunli_p)+'</span>)摸牌时，你可令摸牌数';
			str+=player.storage.XS_xunli?' 翻倍 ':' 减半 ';
			str+='，如此，你需失去1点体力将（）中更改为1名其他角色，否则本轮此技能失效。';
			return str;
		},
	},
	trigger:{
		global:"drawBegin",
	},
	check:function (event,player){
		if(event.num<2) return false;
		var att=get.attitude(player,event.player);
		if(player.storage.XS_xunli) return att>0;
		else return att<0;
	},
	"prompt2":function (event,player){
		var str='你可令（'+get.translation(event.player)+'）的摸牌数';
		str+=player.storage.XS_xunli?'翻倍':'减半';
		str+='，如此，你需失去1点体力将（）中更改为1名其他角色，否则本轮此技能失效。';
		return str;
	},
	logTarget:'player',
	priority:12,
	filter:function (event,player){
		if(player.hasSkill('XS_xunli_temp')) return false;
		return event.player==player.storage.XS_xunli_p;
	},
	content:function(){
		"step 0"
		if(player.storage.XS_xunli) {
			trigger.num*=2;
			player.storage.XS_xunli=false;
		}
		else {
			var tp=Math.floor(trigger.num/2);
			trigger.num=tp;
			player.storage.XS_xunli=true;
		}
		player.syncStorage('XS_xunli');
		"step 1"
		player.chooseTarget('是否失去1点体力，将“循吏”（）中的目标替换为一名其他角色？否则本轮此技能失效。',1,false,function(card,player,target){
			return target!=player.storage.XS_xunli_p;
		}).set('ai',function(target){
			var att=get.attitude(player,target);
			if(player.hp<3) return false;
			if(player.storage.XS_xunli) return att;
			else return -att;
		});
		"step 2"
		if(result.bool){
			player.loseHp();
			player.storage.XS_xunli_p=result.targets[0];
			player.syncStorage('XS_xunli');
        }
        else {
			player.addTempSkill('XS_xunli_temp','roundStart');
		}
	},
	ai:{
		expose:0.5,
	},
    subSkill:{
		temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_mingjie":{
	trigger:{
        player:["damageAfter","loseHpAfter"],
    },
	priority:4,
    filter:function (event,player){
        return event.num>0&&player.isAlive();
    },
	direct:true,
    content:function (){
		"step 0"
		player.chooseTarget(get.prompt2('XS_mingjie'),1,false,function(card,player,target){
			return player!=target;
		},function(target){
			var att=get.attitude(player,target);
			return -att;
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_mingjie',result.targets[0]);
			event.tar=result.targets[0];
			event.nm=player.getDamagedHp();
			event.cds=[];
		}
		else event.finish();
		"step 2"
		if(event.nm>0) {
			event.tar.judge('铭诫',function(card){
				if(get.suit(card)=='spade'&&get.number(card)>1&&get.number(card)<10) return -6;
				return 0;
			});
		}
		else event.goto(4);
		"step 3"
		if(result.bool==false){
			event.tar.damage(3,'thunder','nosource');
		}
		else {
			event.cds.push(result.card);
		}
		event.nm--;
		event.goto(2);
		"step 4"
		if(event.cds.length>0) {
			player.gain(event.cds,'gain2','log');
		}
    },
    ai:{
        expose:0.3,
		maixie:true,
		maixie_hp:true,
		effect:{
			target:function(card,player,target){
				if(get.tag(card,'damage')){
					if(!target.hasFriend()) return;
					var num=1;
					if(get.attitude(player,target)>0){
						if(player.needsToDiscard()){
							num=0.7;
						}
						else{
							num=0.5;
						}
					}
					if(target.hp>=4) return [1,num*2];
					if(target.hp==3) return [1,num*1.5];
					if(target.hp==2) return [1,num*0.5];
				}
			}
		}
    },
},
"XS_xiongming":{
	trigger:{
		player:"useCardBefore",
	},
	priority:990,
	filter:function (event,player){
		if(event.card.name!='sha') return false;
		var hs=player.getCards('h',function(cardx){
			return !event.cards.contains(cardx);
		});
        return hs.length>1;
    },
	direct:true,
	content:function (){
        "step 0"
		var hs=player.getCards('h',function(cardx){
			var tri=_status.event.getTrigger();
			return !tri.cards.contains(cardx);
		});
		player.chooseCardButton('雄鸣：你可重铸至少2张手牌，因此重铸了：武器牌，获得其效果至此杀结算完成；杀/酒，此杀伤害基数+1；闪/桃，此杀可无视距离地指定1个额外目标。',[2,Infinity],hs).set('filterButton',function(button){
			return true;
		}).set('ai',function(button){
			return 6-get.value(button.link);
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_xiongming');
			event.cds=result.links.slice(0);
			player.chongzhuCards(event.cds);
		}
		else event.finish();
		"step 2"
		event.dam=0;
		event.ext=0;
		for(var i=0;i<event.cds.length;i++) {
			if(get.subtype(event.cds[i])=='equip1') {
				var info=get.info(event.cds[i]);
				if(info.skills){
					player.addAdditionalSkill('XS_xiongming',info.skills);
					trigger.gainskill=true;
				}
			}
			else if(event.cds[i].name=='sha'||event.cds[i].name=='jiu'){
				event.dam++;
			}
			else if(event.cds[i].name=='tao'||event.cds[i].name=='shan'){
				event.ext++;
			}
		}
		"step 3"
		if(event.dam>0) {
			trigger.exDamage=event.dam;
		}
		if(event.ext>0) {
			player.chooseTarget('是否为'+get.translation(trigger.card)+'额外指定至多'+event.ext+'个目标?',[1,event.ext],false,function(card,player,target){
				var trigger=_status.event.getTrigger();
                return !trigger.targets.contains(target)&&trigger.player.canUse(trigger.card,target,false);
            }).set('ai',function(target){
				var trigger=_status.event.getTrigger();
                var pla=trigger.player;
                return get.effect(target,trigger.card,pla,pla);
            });
		}
		"step 4"
        if(result.bool){
            if(!event.isMine()&&!_status.connectMode) game.delayx();
            event.tars=result.targets;
        }
        else event.finish();
        "step 5"
        player.line(event.tars,'green');
		for(var i=0;i<event.tars.length;i++) {
			trigger.targets.push(event.tars[i]);
		}
    },
	group:['XS_xiongming_clear','XS_xiongming_damage'],
	subSkill:{
		clear:{
			trigger:{
				global:["useCardAfter","useCardCancelled"],
			},
			priority:2,
			filter:function (event,player){
				if(!event.card||event.card.name!='sha') return false;
				return event.gainskill==true;
			},
			direct:true,
			content:function (){    
				player.removeAdditionalSkill('XS_xiongming');
				game.log(player,'失去了武器技能');
			},
			sub:true,
		},
		damage:{
			trigger:{
				player:"shaBegin",
			},
			priority:92,
			filter:function(event,player){ 
				if(!event.card||event.card.name!='sha'||!event.notLink()) return false;
				return (typeof event.getParent().exDamage=='number'&&event.getParent().exDamage>0);
			},
			direct:true,
			content:function (){
				trigger.baseDamage+=trigger.getParent().exDamage;
			},
			sub:true,
		},
	},
},
"XS_hengding":{
	init:function (player){
		player.storage.XS_hengding=[];
	},
	intro:{
		content:function (storage){
			if(!storage.length){
				return '未使用过有花色的牌';
			}
			else{
				var str='已使用过的花色有：'+get.translation(storage);
				return str;
			}
		},
	},
	trigger:{
		player:'useCardBefore',
	},
	filter:function(event,player){
		return player==_status.currentPhase&&
		player.getHistory('useCard').length==0;
	},
	priority:190,
	direct:true,
	content:function(){
		"step 0"
		var lt=['红桃','方块','梅花','黑桃','cancel2'],tp=get.color(trigger.cards[0]);
		if(tp!='none') {
			var tp1=tp+'2';
			lt.remove(get.translation(tp1));
		}
		player.chooseControl(lt,true).set('ai',function(event){
			return lt.randomGet();
		}).set('prompt','衡鼎：你可令你于出牌阶段使用的第一张牌改为任意花色');
		"step 1"
		if(result.control!='cancel2') {
			player.logSkill('XS_hengding');
			var tp;
			switch(result.control){
				case '红桃':tp='heart';break;
				case '方块':tp='diamond';break;
				case '梅花':tp='club';break;
				case '黑桃':tp='spade';break;
			}
			trigger.cards[0].suit=tp;
		}
		else event.finish();
	},
	ai:{
		unequip_ai:true,
		skillTagFilter:function(player,tag,arg){
			if(arg&&arg.name=='sha'&&!player.countUsed('sha')) return true;
			return false;
		}
	},
	group:['XS_hengding_record','XS_hengding_clear'],
	subSkill:{
		clear:{
			trigger:{
				player:["phaseUseAfter"],
			},
			direct:true,
			filter:function (event,player){
				return player.storage.XS_hengding.length>0;
			},
			content:function (){
				player.storage.XS_hengding=[];
				player.unmarkSkill('XS_hengding');
				
			},
			sub:true,
		},
		record:{
			trigger:{
				player:"useCardAfter",
			},
			direct:true,
			filter:function (event,player){
				if(_status.currentPhase!=player) return false;
				for(var i=0;i<event.cards.length;i++) {
					var suit=get.suit(event.cards[i]);
					if(suit&&suit!='none'&&!player.storage.XS_hengding.contains(suit)) return true;
				}
				return false;
			},
			content:function (){
				"step 0"
				for(var i=0;i<trigger.cards.length;i++) {
					var suit=get.suit(trigger.cards[i]);
					if(suit) player.storage.XS_hengding.add(suit);
				}
				player.markSkill('XS_hengding');
				"step 1"
				if(player.storage.XS_hengding.length==3) {
					var basiclist=[];
					basiclist.push(['基本','','sha']);
					basiclist.push(['基本','','jiu']);
					basiclist.push(['基本','','tao']);
					player.chooseButton(['衡鼎：你可视为使用1张基本牌',[basiclist,'vcard']],false).set('ai',function(button){
						if(player.isDamaged()) {
							if(button.link[2]=='tao') return 9;
						}
						else if(button.link[2]=='sha') return 4;
						return 1;
					});
				}
				else event.finish();
				"step 2"
				if(result&&result.bool&&result.links[0]){
					player.logSkill('XS_hengding');
					player.chooseUseTarget({name:result.links[0][2],isCard:true},false);
				}
			},
			sub:true,
		},
	},
},
"XS_xiaofeng":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:'phaseUseBegin',
	},
	filter:function (event,player){
		if(game.hasPlayer(function(current){
			return current!=player&&(current.getEquip(1)||current.getEquip(2));
		})) return true;
		return false;
	},
	check:function (event,player){
		var eff=0;
		game.countPlayer(function(current){
			if(current!=player&&(current.getEquip(1)||current.getEquip(2))) {
				if(get.attitude(player,current)>0) eff--;
				else eff++;
			}
		});
		return eff>=0;
    },
	priority:12,
	content:function(){
	"step 0"
		player.addTempSkill('XS_xiaofeng_temp');
		var tars=game.filterPlayer(function(current){
			return current!=player&&(current.getEquip(1)||current.getEquip(2));
		});
		event.tars=tars.sort(lib.sort.seat);
		"step 1"
		if(event.tars.length){
			var target=event.tars.shift();
			event.current=target;
		}
		else event.finish();
		"step 2"
		var str='获得'+get.translation(event.current)+'的一张武器或防具牌';
		player.chooseCardButton(str,event.current.getCards('e',{subtype:['equip1','equip2']}),1,true).ai=function(button){
			var att=get.attitude(player,event.current);
			if(att>0) return 4-get.equipValue(button.link);
			else return get.equipValue(button.link);
		};
		"step 3"
		player.gain(result.links[0],'gain2','log');
		event.goto(1);
	},
	group:["XS_xiaofeng_dis"],
	subSkill:{
		dis:{
			trigger:{
				player:"phaseJieshuBegin",
			},
			forced:true,
			priority:7,
			filter:function (event,player){
				return player.countCards('h',{type:'equip'})&&player.hasSkill('XS_xiaofeng_temp');
			},
			content:function (){
				var cds=player.getCards('h',{type:'equip'});
				player.chongzhuCards(cds);
			},
			sub:true,
		},
		temp:{
			charlotte:true,
			sub:true,
		},
    },
},
"XS_tongwen":{
	init:function (player){
		player.storage.XS_tongwen=['none','none'];
	},
	intro:{
		content:function(storage,player,skill){
			return '任意角色可将1张(<span class="bluetext">'+get.translation(player.storage.XS_tongwen[1])+'</span>)牌当作(<span class="bluetext">'+get.translation(player.storage.XS_tongwen[0])+'</span></span>)使用，若不为你，其需先交给你1张牌';
		},
	},
	marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"40px")+" src="+lib.assetURL+"extension/血色衣冠/icon/tongwen.png>":"文",
	audio:"ext:血色衣冠:2",
	global:'XS_tongwen_gl',	
	enable:"phaseUse",
    filter:function (event,player){
		return player.countCards('h',{type:['basic','trick']});
    },
	usable:1,
	selectCard:1,
	position:'h',
	filterCard:function (card,player){
		return get.type(card)=='basic'||get.type(card)=='trick';
	},
	check:function (card){
		var val=-1,st=get.suit(card),player=_status.event.player;
		if(["nanman","wanjian","shunshou","wuzhong","zengbin","tao"].contains(card.name)) {
			val=get.value(card);
		}
		var ts=Math.max(0,player.countCards('h',{suit:st})-1.9);
		return ts*val;
	},
	prompt:'你可重铸1张基本牌或普通锦囊牌，将“同文”中两个()分别替换为此牌花色及牌名。',
	content:function (){
		var nm=cards[0].name,st=get.suit(cards[0]);
		player.chongzhuCards(cards);
		player.storage.XS_tongwen=[nm,st];
		player.syncStorage('XS_tongwen');
    },
    ai:{
		order:1,
		result:{
			player:1,
        },
    },	
	group:["XS_tongwen_start"],
	subSkill:{
		start:{
			trigger:{
				global:"gameDrawAfter",
			},
			direct:true,
			content:function (){
				"step 0"
				player.chooseCard('he',1,'你需重铸1张基本或普通锦囊牌，将“同文”两个()分别替换为此牌花色及牌名',true,function(card){
					return get.type(card)=='basic'||get.type(card)=='trick';
				}).set('ai',function(card){
					var val=Math.random(),st=get.suit(card);
					if(["nanman","wanjian","shunshou","wuzhong","zengbin","tao"].contains(card.name)) {
						val+=get.value(card);
					}
					var ts=Math.max(1,player.countCards('h',{suit:st})-1);
					return ts*val;
				});
				"step 1"
				player.logSkill('XS_tongwen');
				var nm=result.cards[0].name,st=get.suit(result.cards[0]);
				player.chongzhuCards(result.cards);
				player.storage.XS_tongwen=[nm,st];
				player.markSkill('XS_tongwen');
            },
		},
    },
},
"XS_tongwen_gl":{
	getPlayer:function (skill){
		var tp=game.filterPlayer(function(current){
			return current.hasSkill(skill);
		});
		if(tp.length>0) return tp[0];
		return 'none';
	},
	enable:"chooseToUse",
	filter:function (event,player){
		var tp=lib.skill.XS_tongwen_gl.getPlayer('XS_tongwen');
		if(tp=='none') return false;
		if(event.filterCard({name:tp.storage.XS_tongwen[0]},player,event)&&player.countCards('he',{suit:tp.storage.XS_tongwen[1]})) {
			if(player==tp) return true;
			else return player.countCards('he')>1;
		}
		return false;
	},
	chooseButton:{
		dialog:function (event,player){
			var tp=lib.skill.XS_tongwen_gl.getPlayer('XS_tongwen');
			var list=[];
			if(event.filterCard({name:tp.storage.XS_tongwen[0]},player,event)){
				var mk=get.type(tp.storage.XS_tongwen[0]);
				if(mk=='basic') list.push(['基本','',tp.storage.XS_tongwen[0]]);
				else list.push(['锦囊','',tp.storage.XS_tongwen[0]]);	
			}
			return ui.create.dialog("同文",[list,"vcard"],"hidden");
		},
		check:function (button){
			var tp=lib.skill.XS_tongwen_gl.getPlayer('XS_tongwen');
			var player=get.player();
			var att=get.attitude(player,tp),hs=player.getCards('h',{suit:tp.storage.XS_tongwen[1]}),card={name:button.link[2]};
			for(var i=0;i<hs.length;i++) {
				if(att>0) {
					if((get.value(card)-get.value(hs[i]))>0) return 20;
				}
				else if((get.value(card)-get.value(hs[i]))>2) return 20;
			}
			return -1;
		},
		backup:function (links,player){
			return {
				filterCard:function (card){
					var tar=lib.skill.XS_tongwen_gl.getPlayer('XS_tongwen');
					var st=tar.storage.XS_tongwen[1];
					return get.suit(card)==st;
				},
				position:'he',
				popname:true,
				selectCard:1,
				viewAs:{
					name:links[0][2],
				}, 
				check:function(card){
					return 10-get.value(card);
				},
				onuse:function (result,player){
					var tar=lib.skill.XS_tongwen_gl.getPlayer('XS_tongwen');
					game.log(result.cards);
					if(player!=tar) {
						player.givePlayerCard(tar,1,'he',true,result.cards);
					}
					player.logSkill('XS_tongwen_gl');
					game.playXSAudio('XS_tongwen',2);
				},
			}
		},
		prompt:function (links,player){
			return '将一张牌当作'+get.translation(links[0][2])+'使用';
		},
	},
	ai:{
		order:15,
		save:true,
		respondSha:true,
		respondShan:true,
		skillTagFilter:function (player,tag,arg){
			var tp=lib.skill.XS_tongwen_gl.getPlayer('XS_tongwen');
			if(tp=='none') return false;
			if(tag=='save'&&tp.storage.XS_tongwen[0]!='tao'&&tp.storage.XS_tongwen[0]!='jiu'){
				return false;
			}
			if(tag=='respondSha'&&tp.storage.XS_tongwen[0]!='sha'){
				return false;
			}
			if(tag=='respondShan'&&tp.storage.XS_tongwen[0]!='shan'){
				return false;
			}
		},
		result:{
			player:function (player){
				if(_status.event.type=='dying') return get.attitude(player,_status.event.dying);
				else return 1;
			},
		},
	},
},
"XS_guizhan":{
	enable:'chooseToUse',
	usable:1,
	filter:function(event,player){
		if(!player.isPhaseUsing()) return false;
		return player.countCards('h',{type:['trick','delay']});
	},
	filterCard:function(card){
		return get.type2(card)=='trick';
	},
	position:'h',
	viewAs:{name:'sha'},
	prompt:'将一张锦囊牌当杀使用，此杀可额外使用1次，如此直到你下次发动此技能为止，受到的前两次伤害改为2，0。',
	check:function(card){return 9-get.value(card)},
	onuse:function(result,player){
		player.addSkill('XS_guizhan_dam');
		player.storage.XS_guizhan_dam=2;
		player.markSkill('XS_guizhan_dam');
	},
	ai:{
		skillTagFilter:function(player){
			return player.countCards('h',{type:['trick','delay']})>0;
		},
	},
	group:["XS_guizhan_ex"],
	subSkill:{
        ex:{
			trigger:{
				player:["useCardAfter"],
			},
			forced:true,
			filter:function (event,player){
				if(event.card.name!='sha') return false;
				return event.skill=='XS_guizhan';
			},
			priority:3,
			content:function (){
				player.chooseUseTarget(trigger.card,trigger.cards);
			},
            sub:true,
        },
		dam:{
			intro:{
				content:function (storage){
					return '你受到的下一次伤害值改为：'+storage;
				},
			},
			trigger:{
				player:["damageBegin4"],
			},
			usable:1,
			forced:true,
			filter:function (event,player){
				return player.storage.XS_guizhan_dam==2||player.storage.XS_guizhan_dam==0;
			},
			priority:-99,
			content:function (){
				if(player.storage.XS_guizhan_dam==2) {
					trigger.num=2;
					player.storage.XS_guizhan_dam=0;
					player.syncStorage('XS_guizhan_dam');
				}
				else {
					trigger.num=0;
					delete player.storage.XS_guizhan_dam;
					player.removeSkill('XS_guizhan_dam');
				}	
			},
			ai:{
				effect:{
					target:function (card,player,target){
						if(get.tag(card,'damage')&&!player.hasSkillTag('jueqing',false,target)){
							return (target.storage.XS_guizhan_dam==2)?2:0;
						}
					},
				},
			},
            sub:true,
        },
    },
},
"XS_xunyi":{
	init:function (player){
		player.storage.XS_xunyi=[];
	},
	trigger:{
		global:"roundStart",
	},
	filter:function(event,player){
		return player.storage.XS_xunyi.length;
	},
	direct:true,
	priority:15,
	content:function (){
		"step 0"
		event.str=player.storage.XS_xunyi;
		player.storage.XS_xunyi=[];
		if(event.str[0]=='recover') {
			var tp='是否回复'+event.str[1]+'点体力？';
		}
		else {
			var tp='是否受到'+event.str[1]+'点伤害？如此你可令1名其他角色获得'+event.str[1]+'点体力上限并回复'+event.str[1]+'点体力。';
		}
		player.chooseBool(get.prompt('XS_xunyi'),tp).set('ai',function(){
			if(event.str[0]=='recover') return true;
			else {
				if(player.hasFriend()) {
					if(player.hasSkill('XS_guizhan_dam')&&player.storage.XS_guizhan_dam==0) return true;
					if(event.str[1]<player.hp) return true;
				}
			}
			return false;
		});
		"step 1"
		if(result.bool) {
			player.logSkill('XS_xunyi');
		}
		else event.finish();
		"step 2"
		if(event.str[0]=='recover') {
			player.recover(event.str[1]);
			event.finish();
		}
		else {
			player.damage(event.str[1],'nosource');
			player.chooseTarget('你可令1名其他角色获得'+event.str[1]+'点体力上限并回复'+event.str[1]+'点体力。',1,false,function(card,player,target){
				return target!=player;
			}).ai=function(target){
				var att=get.attitude(player,target),hp=target.hp;
				if(target.hasSkill('XS_tuibi')) att*=3;
				return att/hp;
			}
		}
		"step 3"
		if(result.bool){
			result.targets[0].gainMaxHp(event.str[1]);
			result.targets[0].recover(event.str[1]);
		}
	},
	group:["XS_xunyi_rec"],
	subSkill:{
		rec:{
			trigger:{
				global:["damageEnd","recoverEnd"],
			},
			direct:true,
			filter:function (event,player){
				return event.num>0;
			},
			priority:-99,
			content:function (){
				if(trigger.name=='damage') {
					player.storage.XS_xunyi=['damage',trigger.num];
				}
				else {
					player.storage.XS_xunyi=['recover',trigger.num];
				}
			},
            sub:true,
        },
    },
},
"XS_liuli":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:"roundStart",
	},
	forced:true,
	derivation:["XS_shoutu","XS_qiuxianex","XS_tubaex"],
	content:function (){
        player.removeAdditionalSkill('XS_liuli');
        var list=[];
        if(game.roundNumber>=1){
            list.push('XS_shoutu');
        }
        if(game.roundNumber>=2){
            list.push('XS_qiuxianex');
        }
        if(game.roundNumber>=3){
            list.push('XS_tubaex');
        }
        if(list.length){
            player.addAdditionalSkill('XS_liuli',list);
        }
    },
	ai:{
		threaten:function (player,target){
			if(game.roundNumber==1)return 1.1;
			if(game.roundNumber==2)return 1.2;
			if(game.roundNumber>=3)return 1.5;
        },
		combo:'XS_tuibi',
	},
},
"XS_tuibi":{
	ai:{
		combo:'XS_liuli',
	},
},
"XS_shoutu":{
	trigger:{global:'loseAfter'},
	filter:function(event,player){
		if(event.type!='discard') return false;
		if(event.player==player) return false;
		for(var i=0;i<event.cards2.length;i++){
			if(get.position(event.cards2[i],true)=='d'){
				return true;
			}
		}
		return false;
	},
	check:function (event,player){
		if(player.maxHp>3&&event.cards2.length>1) return true;
        return false;
    },
	logTarget:'player',
	usable:1,
	content:function(){
		"step 0"
		if(trigger.delay==false) game.delay();
		"step 1"
		event.cards=[];
		for(var i=0;i<trigger.cards2.length;i++){
			if(get.position(trigger.cards2[i],true)=='d'){
				event.cards.push(trigger.cards2[i]);
			}
		}
		if(!event.cards.length) event.finish();
		else {
			if(event.cards.length>1&&player.hasSkill('XS_tuibi')) {
				player.chooseBool(get.prompt('XS_tuibi'),'是否使“受土”的效果改为“其他角色的牌因弃置进入弃牌堆后，你可令其选择其中任意张令你获得之。”？').set('ai',function(){
					return event.cards.length>=3&&player.maxHp>=3;
				});
			}	

		}
		"step 2"
		if(result.bool){
			player.logSkill('XS_tuibi');
			player.loseMaxHp();
			event.nm=event.cards.length;
		}
		else event.nm=1;
		"step 3"			
		event.pla=player;
		trigger.player.chooseButton(['选择令'+get.translation(player)+'获得的牌',event.cards],[1,event.nm],true).set('ai',function(button){
			var tar=_status.event.getTrigger().player;
			if(get.attitude(tar,event.pla)>0) {
				return get.value(button.link,event.pla,'raw');
			}
			else {
				return 3-get.value(button.link,event.pla,'raw');
			}
		});
		"step 4"
		if(result.bool){
			player.gain(result.links,'gain2','log');
		}
	},
},
"XS_qiuxianex":{
	trigger:{
		player:'phaseDrawBegin',
	},
	audio:"ext:血色衣冠:2",
	direct:true,
	filter:function (event,player){
		return true;
	},
	priority:2,
	content:function(){
		"step 0"
		event.tplt=[];
		event.typ=false;
		player.chooseTarget(get.prompt2('XS_qiuxianex'),[1,trigger.num]).set('ai',function(target){
			var att=get.attitude(player,target),hs=target.getHandcardLimit()-target.countCards('h')+0.01;
			return att*hs;
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_qiuxian',result.targets);
			event.tars=result.targets.slice(0);
			game.asyncDraw(event.tars);
		}
		else event.finish();
		"step 2"
		if(player.hasSkill('XS_tuibi')) {
			player.chooseBool(get.prompt('XS_tuibi'),'是否使“求贤”的效果改为“你可将摸牌阶段改为令至多等量角色各摸1张牌，并可依次将这些角色超出上限的手牌当作1张不重复的普通锦囊牌使用。”？').set('ai',function(){
				return player.maxHp>=3;
			});
		}	
		else event.goto(4);
		"step 3"
		if(result.bool){
			player.logSkill('XS_tuibi');
			player.loseMaxHp();
			event.typ=true;
		}
		"step 4"
		if(event.tars.length){
			var target=event.tars.shift();
			event.current=target;
			event.mk=event.current.countCards('h')-event.current.getHandcardLimit();
		}
		else {
			trigger.cancel();
			event.finish();
		}
		"step 5"
		if(event.mk>0) {
			var list=[];
			if(event.typ) {
				var tp='普通锦囊牌';
				for(var i=0;i<lib.inpile.length;i++){
					if(get.type(lib.inpile[i])=='trick'&&!event.tplt.contains(lib.inpile[i])) list.push(['锦囊','',lib.inpile[i]]);
				}
			}
			else {
				var tp='基本牌';
				if(!event.tplt.contains('sha')&&game.hasPlayer(function(current){
					return player.canUse({name:'sha'},current);
				})) list.push(['基本','','sha']);
				if(!event.tplt.contains('jiu')) list.push(['基本','','jiu']);
				if(!event.tplt.contains('tao')) list.push(['基本','','tao']);
			} 
			player.chooseButton(['你可将'+get.translation(event.current)+'的'+event.mk+'张牌当作1张'+tp+'使用',[list,'vcard']],false).set('ai',function(button){
				if(event.typ) {
					if(button.link[2]=='wuzhong') return 10;
					if(button.link[2]=='zengbin') return 9.5;
					if(button.link[2]=='shunshou') return 9;
				}
				else {
					if(player.isDamaged()&&button.link[2]=='tao') return 9;
					if(button.link[2]=='jiu') return 7;
					if(button.link[2]=='sha') return 4;
				}
				return -1;
			});
		}
		else event.goto(4);
		"step 6"
		if(result&&result.bool&&result.links[0]){
			event.cd=result.links[0][2];
			player.choosePlayerCard('选择'+get.translation(event.current)+'的'+event.mk+'张牌',event.current,'h',event.mk,false);
		}
		else event.goto(4);
		"step 7"
		if(result.bool){
			event.tplt.push(event.cd);
			event.current.lose(result.links,ui.special);
			player.chooseUseTarget({name:event.cd},result.links,true).viewAs=true;	
		}
		event.goto(4);
	},
	ai:{
		expose:0.5,
	},
},
"XS_tubaex":{
	enable:'phaseUse',
	selectTarget:1,
	filterTarget:function (card,player,target){
        return target!=player&&target.countDiscardableCards(player,'hej')>0;
    },
	init:function(player,skill){
		player.storage.XS_tubaex=0;
	},
	filter:function (event,player){
		var gp=player.group;
		var num=Math.min(4,game.countPlayer(function(current){
			return current!=player&&current.group!=gp;
		}));
		var nm=Math.max(1,num);
		if(player.getStat().skill.XS_tubaex>=nm) return false;
		return true;
    },
	content:function(){
		"step 0"
		if(player.hasSkill('XS_tuibi')) {
			player.chooseBool(get.prompt('XS_tuibi'),'是否使“图霸”的效果改为“出牌阶段限X次，你可弃置1名其他角色的1张牌并令其弃置1张牌，X为与你不同势力角色数且至少为1至多为4。”？').set('ai',function(){
				return player.maxHp>=3&&get.attitude(player,target)<0&&target.countCards('he')>1;
			});
		}	
		"step 1"
		if(result.bool){
			player.logSkill('XS_tuibi');
			player.discardPlayerCard(target,'hej',true);
			player.loseMaxHp();
			target.chooseToDiscard(1,'he',true);
		}
		else {
			player.discardPlayerCard(target,'hej',true);
			target.draw();
		}
		"step 2"
		player.storage.XS_tubaex++;
	},
	ai:{
		order:4,
		result:{
			target:function(player,target){
				if(target.hasSkill('XS_tongku')) return 0;
				if(target.countCards('j')) return (target.hasJudge('XS_mantian'))?-1:2;
				if(target.countCards('j')) return (target.getEquip('baiyin'))?2:-1;
				return -0.5;
			}
		},
		expose:0.3,
		threaten:1.1,
	},
},
"XS_qimin":{
	init:function (player){
		player.storage.XS_qimin=[];
    },
	intro:{
		content:function(content,player){
			var tp=player.storage.XS_qimin[0];
			for(var i=1;i<player.storage.XS_qimin.length;i++) {
				tp+='、'+player.storage.XS_qimin[i];
			}
			return '已发动过的手牌数：'+tp;
		},
	},
	trigger:{
		player:"phaseAfter",
	},
	direct:true,
	filter:function (event,player){
		var tp=get.cnNumber(player.countCards('h'));
		if(!player.storage.XS_qimin.contains(tp)) return true;
		if(player.storage.XS_qimin.length>0) return true;
		return false;
	},
	content:function (){
		"step 0"
		if(!player.storage.XS_qimin.contains(get.cnNumber(player.countCards('h')))) {
			player.chooseBool(get.prompt('XS_qimin'),'回合结束，若你未于当前手牌数时发动过此技能，你可摸2张牌。').set('ai',function(){
				var tp=player.storage.XS_qimin.length;
				return (tp>2)?false:true;
			});
		}
		else event.goto(2);
		"step 1"
		if(result.bool){
			player.logSkill('XS_qimin');
			player.storage.XS_qimin.push(get.cnNumber(player.countCards('h')));
			player.draw(2);
			player.markSkill('XS_qimin');
			event.finish();
		}
		"step 2"
		if(player.storage.XS_qimin.length>0) {
			event.tp=player.storage.XS_qimin.length*2;
			player.chooseBool(get.prompt('XS_qimin'),'是否失去“启民”并摸'+event.tp+'张牌？').set('ai',function(){
				return event.tp>5;
			});
		}
		else event.finish();
		"step 3"
		if(result.bool){
			player.logSkill('XS_qimin');
			player.draw(event.tp);
			player.removeSkill('XS_qimin');
		}
	},
},
"XS_wugu":{
	trigger:{
		player:'phaseDrawBegin',
	},
	filter:function(event,player){
		return player.countCards('h')<5;
	},
	check:function (event,player){
		var nm=game.countPlayer(function(current){
			return current!=player;
		});
		var tp,tar=player,mk=5,gain=3-player.countCards('h');
		for(var i=0;i<nm;i++) {
			tp=tar.next;
			tar=tp;
			var att=get.attitude(tp,player);
			if(att<=0&&mk>tp.countCards('h')) {
				mk--;
				gain-=2;
			}
		}
		return gain>0;
	},
	priority:3,
	content:function(){
		"step 0"
		var tp=5-player.countCards('h');
		player.draw(tp);
		"step 1"
		event.nm=game.countPlayer(function(current){
			return current!=player;
		});
		event.mk=0;
		event.tar=player;
		"step 2"
		if(event.mk<event.nm) {
			event.tp=event.tar.next;
			event.tar=event.tp;
			if(event.tp.countCards('h')<player.countCards('h')) {
				event.tp.gainPlayerCard('h',1,player,false);
			}
		}
		else {
			trigger.cancel();
			event.finish();
		}
		"step 3"
		event.mk++;
		event.goto(2);
	},
},
"XS_qiuxian":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:'phaseDrawBegin',
	},
	direct:true,
	filter:function (event,player){
		return true;
	},
	priority:2,
	content:function(){
		"step 0"
		event.tplt=[];
		player.chooseTarget(get.prompt2('XS_qiuxian'),[1,trigger.num]).set('ai',function(target){
			var att=get.attitude(player,target);
			var hs=target.getHandcardLimit()-target.countCards('h')+0.01;
			return att*hs;
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_qiuxian',result.targets);
			event.tars=result.targets.slice(0);
			game.asyncDraw(event.tars);
		}
		else event.finish();
		"step 2"
		if(event.tars.length){
			var target=event.tars.shift();
			event.current=target;
			event.mk=event.current.countCards('h')-event.current.getHandcardLimit();
		}
		else {
			trigger.cancel();
			event.finish();
		}
		"step 3"
		if(event.mk>0) {
			var list=[];
			if(!event.tplt.contains('sha')&&game.hasPlayer(function(current){
				return player.canUse({name:'sha',isCard:true},current);
			})) list.push(['基本','','sha']);
			if(!event.tplt.contains('jiu')) list.push(['基本','','jiu']);
			if(!event.tplt.contains('tao')) list.push(['基本','','tao']);
			player.chooseButton(['你可将'+get.translation(event.current)+'的'+event.mk+'张牌当作1张基本牌使用',[list,'vcard']],false).set('ai',function(button){
				if(player.isDamaged()) {
					if(button.link[2]=='tao') return 9;
				}
				if(button.link[2]=='jiu') return 7;
				if(button.link[2]=='sha') return 4;
				return -1;
			});
		}
		else event.goto(2);
		"step 4"
		if(result&&result.bool&&result.links[0]){
			event.cd=result.links[0][2];
			player.choosePlayerCard('选择'+get.translation(event.current)+'的'+event.mk+'张牌',event.current,'h',event.mk,false);
		}
		else event.goto(2);
		"step 5"
		if(result.bool){
			event.tplt.push(event.cd);
			event.current.lose(result.links,ui.special);
			player.chooseUseTarget({name:event.cd},result.links,true).viewAs=true;	
		}
		event.goto(2);
	},
	ai:{
		expose:0.5,
	},
},
"XS_weifu":{
	audio:"ext:血色衣冠:2",
	init:function (player){
		player.storage.XS_weifu=[];
		player.storage.XS_weifu_a=['判定阶段','摸牌阶段','出牌阶段','弃牌阶段'];
    },
	trigger:{
		player:'useCardBegin',
	},
	direct:true,
	filter:function (event,player){
		if(_status.currentPhase!=player) return false;
		if(player.hasSkill('XS_weifu_temp')) return false;
		if(event.card.name!='sha') return false;
		return event.targets.length&&event.targets.length<4;
	},
	priority:-6,
	content:function(){
		"step 0"
		var nm=4-trigger.targets.length;
		player.chooseTarget(get.prompt2('XS_weifu'),[0,nm],false,function(card,player,target){
			var trigger=_status.event.getTrigger();
			return target!=player&&!trigger.targets.contains(target)&&player.canUse(trigger.card,target);
		}).ai=function(target){
			return get.effect(target,{name:'sha'},player,player);
		}
		"step 1"
		if(result.bool) {
			player.addTempSkill('XS_weifu_temp');
			player.storage.XS_weifu.push(trigger.card);
			player.logSkill('XS_weifu',result.targets);
			for(var i=0;i<result.targets.length;i++) {
				trigger.targets.push(result.targets[i]);
			}
		}
	},
	group:["XS_weifu_dis","XS_weifu_clear"],
	subSkill:{
		dis:{
			trigger:{
				global:'damageBegin2',
			},
			priority:15,
			forced:true,
			logTarget:'player',
			filter:function (event,player){
				if(!event.card||!event.notLink()) return false;
				if(!player.storage.XS_weifu_a.length) return false;
				return player.storage.XS_weifu.indexOf(event.card)>=0;
			},
			content:function(){
				"step 0"
				var tp=player.storage.XS_weifu_a;
				player.chooseControl(tp,true).set('ai',function(event){
					var tar=_status.event.getTrigger().player;
					var att=get.attitude(player,tar);
					if(att>0) {
						if(tp.contains('弃牌阶段')) return '弃牌阶段';
					}
					else {
						return tp.randomGet();
					}
				}).set('prompt','威服：令'+get.translation(trigger.player)+'跳过其一个主要阶段');
				"step 1"
				trigger.player.addTempSkill('XS_weifu_temp1',{player:'phaseBefore'});
				switch(result.control){
					case '判定阶段':
						trigger.player.markSkillCharacter('XS_weifu_temp1',player,'威服','跳过下一个判定阶段');
						trigger.player.skip('phaseJudge');
					break;
					case '摸牌阶段':
						trigger.player.markSkillCharacter('XS_weifu_temp1',player,'威服','跳过下一个摸牌阶段');
						trigger.player.skip('phaseDraw');
					break;
					case '出牌阶段':
						trigger.player.markSkillCharacter('XS_weifu_temp1',player,'威服','跳过下一个出牌阶段');
						trigger.player.skip('phaseUse');
					break;
					case '弃牌阶段':
						trigger.player.markSkillCharacter('XS_weifu_temp1',player,'威服','跳过下一个弃牌阶段');
						trigger.player.skip('phaseDiscard');
					break;
				}
				player.storage.XS_weifu_a.remove(result.control);
				trigger.cancel();
			},
			sub:true,
		},
		temp:{
			charlotte:true,
			sub:true,
		},
		temp1:{
			onremove:function (player,skill){
				player.unmarkSkill('XS_weifu_temp1');
			},
			sub:true,
		},
		clear:{
			trigger:{
				global:["useCardAfter","useCardCancelled"],
			},
			direct:true,
			priority:7,
			filter:function(event,player){ 
				return player.storage.XS_weifu.indexOf(event.card)>=0;
			},
			content:function(){
    			var n=player.storage.XS_weifu.indexOf(trigger.card);
    			player.storage.XS_weifu.splice(n,1);
				player.storage.XS_weifu_a=['判定阶段','摸牌阶段','出牌阶段','弃牌阶段'];
			},
			sub:true,
		},
    },
},
"XS_jianlu":{
	zhuanhuanji:true,
	init:function (player){
        player.storage.XS_jianlu=['可更改此杀属性','不计次数'];
		player.storage.XS_jianlu_a=[[],[],[]];
    },
	mark:true,
	intro:{
		content:function(storage,player,skill){
			var str='与你同势力角色使用杀时，你可使之';
			str+=player.storage.XS_jianlu[0];
			return str+='；若为你，可选择额外1项';
		},
	},
	audio:"ext:血色衣冠:2",
	trigger:{
		global:"useCardBefore",
	},
	priority:-8,
	filter:function (event,player){
		if(event.card.name!='sha') return false;
		//return player.group==event.player.group;
		return true;
    },
	"prompt2":function (event,player){
		var str=player.storage.XS_jianlu[0];
		var tp='是否令'+get.translation(event.player)+'对'+get.translation(event.targets)+'使用的'+get.translation(event.card)+str+'?';
		if(event.player==player) tp+='且你可选择额外的1项效果。';
		return tp;
	},
	check:function (event,player){
		return get.attitude(player,event.player)>0;
	},
	logTarget:'player',
	content:function(){
		"step 0"
		event.changena=false;
		event.usesha=false;
		event.tp=[];
		event.tp.push(player.storage.XS_jianlu[0]);
		if(trigger.player==player) {
			event.lt=player.storage.XS_jianlu.slice(1);
			if(event.lt.length) {
				player.chooseControlList(event.lt).set('ai',function(event,player){
					return Math.random()+0.01;
				}).set('prompt','你可选择额外一项');
			}
		}
		else event.goto(2);
		"step 1"
		if(result.control!='cancel2') {
			event.tp.push(event.lt[result.index]);
		}
		"step 2"
		if(event.tp.contains('可更改此杀属性')){
			event.changena=true;
		}
		if(event.tp.contains('不计次数')){
			player.storage.XS_jianlu_a[0].push(trigger.card);
		}
		if(event.tp.contains('可弃置目标至多2张牌')){
			player.storage.XS_jianlu_a[1].push(trigger.card);
		}
		if(event.tp.contains('可指定1名额外目标')){
			event.usesha=true;
		}
		if(event.tp.contains('需2张闪响应')){
			player.storage.XS_jianlu_a[2].push(trigger.card);
		}
		"step 3"
		if(event.changena) {
			var nt=trigger.card.nature?get.translation(trigger.card.nature):'普通';
			var tp=['普通','火','雷','冰','cancel2'].remove(nt);
			trigger.player.chooseControl(tp,true).set('ai',function(event){
				if(tp.contains('冰')) return '冰';
				return '火';    
			}).set('prompt','你可更改'+get.translation(trigger.card)+'的属性');
		}
		else event.goto(5);
		"step 4"
		if(result.control&&result.control!='cancel2') {
			var tp;
			switch(result.control){
				case '普通':tp=null;break;
				case '火':tp='fire';break;
				case '雷':tp='thunder';break;
				case '冰':tp='ice';break;
			}
			trigger.card.nature=tp;
			game.log(trigger.card,'的属性被更改为',result.control);
		}
		else event.goto(5); 
		"step 5"
		if(event.usesha) {
            trigger.player.chooseTarget('是否为'+get.translation(trigger.card)+'额外指定1个目标?',function(card,player,target){
				var trigger=_status.event.getTrigger();
                return !trigger.targets.contains(target)&&trigger.player.canUse(trigger.card,target);
            }).set('ai',function(target){
				var trigger=_status.event.getTrigger();
                var pla=trigger.player;
                return get.effect(target,trigger.card,pla,pla);
            });
		}
		else event.goto(8);
		"step 6"
        if(result.bool){
            if(!event.isMine()&&!_status.connectMode) game.delayx();
            event.target=result.targets[0];
        }
        else event.goto(8);
        "step 7"
        trigger.player.line(event.target,'green');
        trigger.targets.push(event.target);
		"step 8"
		var temp=player.storage.XS_jianlu.shift();
		player.storage.XS_jianlu.push(temp);
		player.syncStorage('XS_jianlu');
	},
	ai:{
		expose:0.5,
	},
	group:['XS_jianlu_remove1','XS_jianlu_remove2','XS_jianlu_remove3','XS_jianlu_discard','XS_jianlu_shan','XS_jianlu_count'],
	subSkill:{
		remove1:{
			trigger:{
				global:["useCardAfter","useCardCancelled"],
			},
			direct:true,
			priority:6,
			filter:function(event,player){ 
				return player.storage.XS_jianlu_a[0].indexOf(event.card)>=0;
			},
			content:function(){
    			var n=player.storage.XS_jianlu_a[0].indexOf(trigger.card);
    			player.storage.XS_jianlu_a[0].splice(n,1);
			},
			sub:true,
		},
		remove2:{
			trigger:{
				global:["useCardAfter","useCardCancelled"],
			},
			direct:true,
			priority:7,
			filter:function(event,player){ 
				return player.storage.XS_jianlu_a[1].indexOf(event.card)>=0;
			},
			content:function(){
    			var n=player.storage.XS_jianlu_a[1].indexOf(trigger.card);
    			player.storage.XS_jianlu_a[1].splice(n,1);
			},
			sub:true,
		},
		remove3:{
			trigger:{
				global:["useCardAfter","useCardCancelled"],
			},
			direct:true,
			priority:8,
			filter:function(event,player){ 
				return player.storage.XS_jianlu_a[2].indexOf(event.card)>=0;
			},
			content:function(){
    			var n=player.storage.XS_jianlu_a[2].indexOf(trigger.card);
    			player.storage.XS_jianlu_a[2].splice(n,1);
			},
			sub:true,
		},
		shan:{
			trigger:{
				global:"shaBegin",
			},
			direct:true,
			filter:function (event,player){
				if(event.directHit) return false;
				return player.storage.XS_jianlu_a[2].indexOf(event.card)>=0;
			},
			priority:-1,
			content:function (){
				if(typeof trigger.shanRequired=='number'){
					trigger.shanRequired++;
				}
				else{
					trigger.shanRequired=2;
				}
			},
			sub:true,
		},
		count:{
			trigger:{
				global:"useCardEnd",
			},
			direct:true,
			filter:function (event,player){
				return player.storage.XS_jianlu_a[0].indexOf(event.card)>=0;
			},
			priority:-2,
			content:function (){
				if(trigger.player.getStat().card.sha>0){
					trigger.player.getStat().card.sha--;
				}
			},
			sub:true,
		},
		discard:{
			trigger:{
				global:"shaBefore",
			},
			direct:true,
			filter:function (event,player){
				return player.storage.XS_jianlu_a[1].indexOf(event.card)>=0;
			},
			priority:99,
			content:function (){
				trigger.player.discardPlayerCard([1,2],'he',trigger.target,false);
			},
			sub:true,
		},
	},
},
"XS_chenlue":{
	init:function (player){
		player.storage.XS_chenlue=['可指定1名额外目标','需2张闪响应','可弃置目标至多2张牌'];
    },
	trigger:{
		player:'phaseDrawBefore',
	},
	audio:"ext:血色衣冠:2",
	direct:true,
	filter:function (event,player){
		var lt=player.storage.XS_chenlue.slice(0);
		lt.remove(player.storage.XS_jianlu);
		return lt.length;
	},
	priority:25,
	content:function(){
		"step 0"
		var lt=player.storage.XS_chenlue.slice(0);
		lt.remove(player.storage.XS_jianlu);
		var tp=lt[0];
		for(var i=1;i<lt.length;i++) {
			tp+='/'+lt[i];
		}
		lt.push('cancel2');
		player.chooseControl(lt,true).set('ai',function(event){
			if(!player.canMoveCard(false)) return 'cancel2';
			return lt[lt.length-2];
		}).set('prompt','沉略：你可跳过摸牌阶段并获得1名其他角色1张手牌，然后将1个状态置于“践戮”最后：'+tp);
		"step 1"
		if(result.control!='cancel2') {
			player.logSkill('XS_chenlue');
			player.storage.XS_jianlu.push(result.control);
			player.storage.XS_chenlue.remove(result.control);
			player.syncStorage('XS_jianlu');
			player.chooseTarget('你可获得1名其他角色1张手牌',1,true,function(card,player,target){
				return target!=player&&target.countCards('h');
			}).set('ai',function(target){
				return -get.attitude(player,target);
			});
		}
		else event.finish(); 
		"step 2"
		player.gainPlayerCard('h',result.targets[0],1);
		trigger.cancel();
	},
	group:["XS_chenlue_dis"],
	subSkill:{
		dis:{
			trigger:{
				player:'phaseDiscardBefore',
			},
			priority:15,
			direct:true,
			filter:function (event,player){
				return player.storage.XS_jianlu.length>1;
			},
			content:function(){
				"step 0"
				var lt=player.storage.XS_jianlu.slice(0);
				var tp=lt[0];
				for(var i=1;i<lt.length;i++) {
					tp+='/'+lt[i];
				}
				lt.push('cancel2');
				player.chooseControl(lt,true).set('ai',function(event){
					if(!player.canMoveCard(true)||!player.needsToDiscard()) return 'cancel2';
					if(lt.contains('可更改此杀属性')) return '可更改此杀属性';
					if(lt.contains('不计次数')) return '不计次数';
					return 'cancel2';
				}).set('prompt','沉略：你可移除“践戮”的一个状态:'+tp+'，然后跳过弃牌阶段并移动场上1张牌');
				"step 1"
				if(result.control!='cancel2') {
					player.logSkill('XS_chenlue');
					player.storage.XS_jianlu.remove(result.control);
					player.syncStorage('XS_jianlu');
				}
				else event.finish(); 
				"step 2"
				player.moveCard();
				trigger.cancel();
			},
			sub:true,
		},
    },
},
"XS_gusai":{
	mod:{
		targetEnabled:function(card,player,target,now){
			if(!target.hasSkill('XS_gusai_temp')) {
				if(target.hp<player.hp){
					if(card.name=='sha'||card.name=='juedou') return false;
				}
			}
		},
	},
	trigger:{
		global:"roundStart",
	},
	audio:"ext:血色衣冠:2",
	priority:6,
	check:function (event,player){
		if(player.isMaxHp(true)) return false;
		else {
			return player.hp==1||player.canMoveCard(true);
		}
    },
	"prompt2":function (event,player){
		return '是否令你本轮“固塞”失效？如此你可回复一点体力或移动场上一张牌。';
	},
	content:function (){
		"step 0"
		player.addSkill('XS_gusai_temp');
		"step 1"
		if(player.isDamaged()) {
			player.chooseBool('是否回复1点体力？').set('ai',function(){
				if(player.isMaxHp(false)&&!player.canMoveCard(true)) return false;
				return true;
			});
		}
		else event.goto(3);
		"step 2"
		if(result.bool) {
			player.recover();
			event.finish();
		}
		"step 3"
		if(player.canMoveCard(false)) {
			player.moveCard();
		}
	},
	group:["XS_gusai_clear"],
	subSkill:{
		clear:{
			trigger:{
				global:"roundStart",
			},
			priority:99,
			direct:true,
			filter:function (event,player){
				return player.hasSkill('XS_gusai_temp');
			},
			content:function (){
				player.removeSkill('XS_gusai_temp');
			},
			sub:true,
		},
		temp:{
			charlotte:true,
			sub:true,
		},
    },
},	
"XS_yongjian":{
	audio:"ext:血色衣冠:2",
	priority:13,
	usable:1,
	trigger:{
		player:["damageAfter"],
		source:["damageAfter"],
	},
	filter:function (event,player){
		if(event.player==player) {
			return event.source&&event.source.isAlive()&&event.source.countCards('h');
		}
		else {
			return event.player.isAlive()&&event.player.countCards('h');
		}
	},
	"prompt2":function (event,player){
		if(event.player==player) {
			return '是否令'+get.translation(event.source)+'展示手牌，并弃置其中所有基本牌？若未弃置任何牌，你失去1点体力。';
		}
		else {
			return '是否令'+get.translation(event.player)+'展示手牌，并令其弃置其中所有非基本牌？若未弃置任何牌，你失去1点体力。';
		}
	},
	check:function (event,player){
		if(event.player==player) {
			return get.attitude(player,event.source)<=0&&event.source.countCards('h')>=2;
		}
		else {
			return get.attitude(player,event.player)<=0&&event.player.countCards('h')>=2;
		}
	},
	content:function (){
		"step 0"	
		if(trigger.player==player) {
			event.tar=trigger.source;
			event.cds=event.tar.getCards('h',{type:'basic'});
		}
		else {
			event.tar=trigger.player;
			event.cds=event.tar.getCards('h',function(card){
				return get.type(card)!='basic';
			});	
		}
		event.tar.showHandcards();
		"step 1"
		if(event.cds.length>0) {
			player.chooseBool("是否令"+get.translation(event.tar)+"弃置"+get.translation(event.cds)+"？").ai=function(event,player){
				var att=get.attitude(player,event.tar);
				return att<=0;
			};
		}
		else {
			player.loseHp();
			event.finish();
		}
		"step 2"
		if(result.bool){
			event.tar.discard(event.cds);
		}
		else {
			player.loseHp();
		}
	},
	ai:{
		expose:0.3,
		maixie:true,
		"maixie_defend":true,
		effect:{
			target:function (card,player,target){
				if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
				if(!target.hasFriend()) return;
				if(get.tag(card,'damage')&&player.countCards('h',{type:'basic'})>1) return [1,1,1,-1];
			},
		},
	},
},
"XS_nigao":{
	audio:"ext:血色衣冠:2",
	zhuanhuanji:true,
	init:function (player){
        player.storage.XS_nigao=true;
		player.storage.XS_nigao_p=player;
    },
	mark:true,
	intro:{
		content:function(storage,player,skill){
			var str='(<span class="bluetext">'+get.translation(player.storage.XS_nigao_p)+'</span>)受到伤害时，你可令此数值';
			str+=player.storage.XS_nigao?'-1':'+1';
			str+='，你可改变伤害数值而未改变时，可重铸1张手牌将()替换为另1名角色并改变此技能状态。';
			return str;
		},
	},
	trigger:{
		global:"damageBegin4",
	},
	priority:-699,
	direct:true,
	filter:function (event,player){
		if(player.hasSkill('XS_nigao_temp')) return false;
		if(event.num<=0) return false;
		return event.player==player.storage.XS_nigao_p;
	},
	content:function(){
		"step 0"
		var tp=player.storage.XS_nigao?'-1':'+1';
		player.chooseBool(get.prompt('XS_nigao',trigger.player),'是否令'+get.translation(trigger.player)+'受到的伤害'+tp+'？否则你可重铸1张手牌将此技能的（）中替换为另1名角色并改变此技能状态。').set('ai',function(){
			var tri=_status.event.getTrigger();
			var eff=get.damageEffect(tri.player,tri.source,player);
			if(player.storage.XS_nigao) return eff<0;
			return eff>0;
        });
		"step 1"
		if(result.bool){
			player.logSkill('XS_nigao',trigger.player);
			player.addTempSkill('XS_nigao_temp');
			if(player.storage.XS_nigao) {
				trigger.num--;
				player.storage.XS_nigao=false;
			}
			else {
				trigger.num++;
				player.storage.XS_nigao=true;
			}
			player.syncStorage('XS_nigao');
			event.finish();
        }
		else {
			player.chooseCardTarget({
				filterCard:function(card){return true;},
				position:"h",
				selectCard:1,
				selectTarget:1,
				filterTarget:function(card,player,target){return target!=player.storage.XS_nigao_p;},
				ai1:function(card){
					return 5.5-get.value(card);
				},
				ai2:function(target){
					var player=_status.event.player;
					var att=get.attitude(player,target),tp=target.hp+0.01;
					if(player.storage.XS_nigao) return -att*tp;
					else return att/tp;
				},
				prompt:'你可重铸一张手牌，将“拟诰”中()中的角色替换为一名其他角色，并改变“拟诰”的状态'
			});
		}
		"step 2"
		if(result.bool){
			player.logSkill('XS_nigao',result.targets[0]);
			player.chongzhuCards(result.cards[0]);
			player.storage.XS_nigao_p=result.targets[0];
			if(player.storage.XS_nigao) player.storage.XS_nigao=false;
			else player.storage.XS_nigao=true;
			player.syncStorage('XS_nigao');
			player.addTempSkill('XS_nigao_temp');
		}
	},
	ai:{
		expose:0.5,
	},
	group:["XS_nigao_die"],
    subSkill:{
		temp:{
			charlotte:true,
            sub:true,
        },
		die:{
			trigger:{
				global:"dieAfter",
			},
			direct:true,
			filter:function (event,player){
				return player.storage.XS_nigao_p=event.player;
			},
			content:function (){
				"step 0"
				player.chooseTarget('请为“拟诰”重新指定一名目标',1,true).set('ai',function(target){
					var att=get.attitude(player,target),tp=target.hp+0.01;
					if(player.storage.XS_nigao) return -att*tp;
					else return att/tp;
				});
				"step 1"
				if(result.bool){
					player.storage.XS_nigao_p=result.targets[0];
					player.syncStorage('XS_nigao');
				}
			},
            sub:true,
        },
    },
},
"XS_liuzheng":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
    usable:1,
    filter:function (event,player){
		return true;
    },
	filterTarget:function (card,player,target){
        return player!=target;
    },
	selectTarget:1,
    content:function (){
		"step 0"
		if(target.countCards('h')) {
			var nm=Math.min(6,target.countCards('h'));
			player.choosePlayerCard('你可展示'+get.translation(target)+'至多'+nm+'张手牌',target,'h',[1,6],false).ai=function(){return Math.random()};
		}
		else {
			event.tp=6;
			event.hs=[];
			event.goto(2);
		}
		"step 1"
		if(result.links){
			event.hs=result.links.slice(0);
			event.tp=6-event.hs.length;
		}
		else{
			event.tp=6;
			event.hs=[];
		}
		"step 2"
		event.cds=get.cards(event.tp);
		if(!event.dialog) event.dialog=ui.create.dialog('hidden');
		if(event.hs.length){
			event.dialog.addText('选择的手牌');
			event.dialog.add(event.hs);
		}
		if(event.cds.length){
			event.dialog.addText('牌堆顶的牌');
			event.dialog.add(event.cds);
		}
		if(event.isMine()){
			event.dialog.open();
			game.pause();
			ui.create.confirm('o');
			game.log(player,'展示了',target,'手牌中的',event.hs);
			game.log(player,'展示了牌堆顶的',event.cds);
		}
		else {
			player.showCards('选择的手牌',event.hs);
			player.showCards('牌堆顶的牌',event.cds);
		}
		"step 3"
		event.dialog.close();
		var lt=[];
		for(var i=0;i<event.hs.length;i++) {
			lt.add(get.suit(event.hs[i]));
		}
		for(var j=0;j<event.cds.length;j++) {
			lt.add(get.suit(event.cds[j]));
		}
		player.chooseControl(lt).set('prompt','选择一种花色，弃置展示的手牌中此花色的牌，并获得展示的牌堆顶此花色的牌').set('ai',function(event){
			if(lt.contains('heart')) return 'heart';
			if(lt.contains('diamond')) return 'diamond';
			if(lt.contains('spade')) return 'spade';
			if(lt.contains('club')) return 'club';
		});
		"step 4"
		var st=result.control;
		var lt1=[],lt2=[];
		for(var i=0;i<event.hs.length;i++) {
			if(get.suit(event.hs[i])==st) lt1.push(event.hs[i]);
		}
		for(var j=0;j<event.cds.length;j++) {
			if(get.suit(event.cds[j])==st) lt2.push(event.cds[j]);
		}
		target.discard(lt1);
		player.gain(lt2,'gain2','log');	
    },
    ai:{
        order:9,
		expose:0.5,
		result:{
            target:-2,
        },
    },
},
"XS_guiquan":{
	audio:"ext:血色衣冠:2",
	mod:{
		"cardEnabled2":function (card,player){
			if(player.storage.XS_guiquan.length) {
				if(player.storage.XS_guiquan.contains(card)) return false;
			}
		},
	},
	init:function (player){
		player.storage.XS_guiquan=[];
	},
	trigger:{
		player:"phaseJieshuBegin",
	},
	priority:2,
	filter:function (event,player){
		if(game.hasPlayer(function(current){
			return current!=player&&get.distance(player,current)>1;
		})) return false;
		return true;
	},
	check:function (event,player){
		return true;
	},
	content:function (){
		"step 0"
		event.cds=[];
		var tars=game.filterPlayer(function(current){
			return player!=current&&current.countCards('he');
		});
		event.tars=tars.sort(lib.sort.seat);
		"step 1"
		if(event.tars.length){
			var target=event.tars.shift();
			event.current=target;
		}
		else event.goto(4);
		"step 2"
		player.gainPlayerCard('he',event.current,1,true);
		"step 3"
		if(result.bool){
			event.cds.push(result.cards[0]);
		}
		event.goto(1);
		"step 4"
		if(event.cds.length) {
			player.storage.XS_guiquan=event.cds;
		}
	},
	ai:{
		expose:0.2,
	},
	group:["XS_guiquan_clear"],
	subSkill:{
        clear:{
			trigger:{
				player:"phaseBefore",
			},
			priority:49,
			direct:true,
			content:function (){
				player.storage.XS_guiquan=[];
			},
			sub:true,
        },
    },
},
"XS_xuanshi":{
	audio:"ext:血色衣冠:2",
	init:function (player){
		player.storage.XS_xuanshi=0;
	},
	intro:{
		content:function (storage){
			return '你的进攻距离增加：'+storage;
		},
	},
	mod:{
		globalFrom:function (from,to,current){
			var num1=from.storage.XS_xuanshi;
			if(num1) return current-num1;
		},
	},
	trigger:{
		player:"useCardBegin",
	},
	filter:function(event,player){
		if(!get.tag(event.card,'damage')) return false;
		return event.targets.length;
	},
	check:function (event,player){
		var eff=0;
		for(var i=0;i<event.targets.length;i++) {
			if(event.targets[i].getEquip('baiyin')) {
				if(get.attitude(player,event.targets[i])<=0&&event.targets[i].isDamaged()) eff--;
			}
		}
		return eff>=0;
	},
	"prompt2":function (event,player){
		var lt=[];
		for(var i=0;i<event.targets.length;i++) {
			if(event.targets[i].countCards('e')) {
				lt.push(event.targets[i]);
			}
		}
		if(lt.length) {
			var tp=get.translation(lt);
		}
		else var tp='无';
		return '你可令装备区有牌的目标（'+tp+'）各自获得其装备区的所有牌，且本回合你的进攻距离+1。';
	},
	content:function (){
		for(var i=0;i<trigger.targets.length;i++) {
			if(trigger.targets[i].countCards('e')) {
				trigger.targets[i].gain(trigger.targets[i].getCards('e'),'gain2');
			}
		}
		player.storage.XS_xuanshi++;
		player.markSkill('XS_xuanshi');
	},
	ai:{
		expose:0.3,
	},
	group:["XS_xuanshi_clear"],
	subSkill:{
        clear:{
			trigger:{
				player:"phaseAfter",
			},
			priority:39,
			direct:true,
			content:function (){
				player.storage.XS_xuanshi=0;
				player.unmarkSkill('XS_xuanshi');
			},
			sub:true,
        },
    },
},
"XS_jucai":{
	trigger:{
		global:"phaseDrawBegin",
	},
	priority:2,
	filter:function (event,player){
		if(player.hasSkill('XS_jucai_temp')) return false;
		return player.countCards('h')&&event.player!=player;
	},
	logTarget:'player',
	check:function (event,player){
		var cds=player.getCards('h',function(card){
            return lib.filter.cardEnabled(card,event.player)&&get.value(card)>=3;
        });
		return cds.length<=1;
	},
	content:function (){
		"step 0"	
		event.cds=player.getCards('h',function(card){
            return lib.filter.cardEnabled(card,trigger.player);
        });
		"step 1"
		if(!event.cds.length) {
			event.goto(3);
		}
		else {
			trigger.player.chooseCardButton('你可依次使用其中任意张牌',event.cds).ai=function(button){
				var pla=_status.event.getTrigger().player;
				return pla.getUseValue(button.link);
			}
		}
		"step 2"
		if(result.bool){
			event.cd=result.links[0];
			player.lose(event.cd,ui.special);
			trigger.player.chooseUseTarget(event.cd,true);
			event.goto(0);
        }
		"step 3"	
		if(player.countCards('h')>trigger.player.countCards('h')) {
			trigger.player.draw(2);
		}
		else if(player.countCards('h')<trigger.player.countCards('h')) {
			player.draw(2);
			player.addTempSkill('XS_jucai_temp','roundStart');
		}
		trigger.cancel();
	},
	ai:{
		threaten:1.1,
		expose:0.4,
	},
	subSkill:{
        temp:{
			charlotte:true,
			sub:true,
        },
    },
},
"XS_weilue":{
	trigger:{
		player:"phaseZhunbeiBegin",
	},
	direct:true,
	priority:29,
	content:function (){
		"step 0"
		player.storage.XS_weilue=0;
		var tplt=[],hs=player.getCards('h');
		for(var i=0;i<hs.length;i++) {
			tplt.add(get.type2(hs[i]));
		}
		event.nm=tplt.length;
		player.chooseControlList(['摸你手牌中牌的种类数张牌（'+event.nm+'张）','弃置你手牌中牌的种类数张牌（'+event.nm+'张）']).set('ai',function(event,player){
			return (event.nm>=2)?0:1;
		}).set('prompt','伟略：你可选择一项，并在结束阶段开始执行另外一项');
		"step 1"
		if(result.control!='cancel2') {
			player.logSkill('XS_weilue');
			if(result.index==0) {
				player.draw(event.nm);
				player.storage.XS_weilue=2;
			}
			else {
				player.chooseToDiscard('h',event.nm,true);
				player.storage.XS_weilue=1;
			}
		}
	},
	group:["XS_weilue_o"],
	subSkill:{
        o:{
			trigger:{
				player:"phaseJieshuBegin",
			},
			priority:29,
			forced:true,
			filter:function (event,player){
				return player.storage.XS_weilue!=0;
			},
			content:function (){
				var tplt=[],hs=player.getCards('h');
				for(var i=0;i<hs.length;i++) {
					tplt.add(get.type2(hs[i]));
				}
				event.nm=tplt.length;
				if(player.storage.XS_weilue==2) {
					player.chooseToDiscard(event.nm,true,'h');
				}
				else {
					player.draw(event.nm);
				}
			},
			sub:true,
        },
    },
},
"XS_shenwei":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:["shaAfter","juedouAfter"],
	},
	filter:function(event,player){
		var evt=event.getParent(2);
		if(evt.name!='XS_shenwei'&&!player.countCards('he')) return false;
		return true;
	},
	direct:true,
	content:function (){
		"step 0"
		var evt=trigger.getParent(2);
		if(evt.name!='XS_shenwei') {
			event.tp=0;
		}
		else {
			event.tp=trigger.getParent(5).nm;
		}
		if(game.hasPlayer(function(current){
			return current!=player&&current!=trigger.target&&(current==trigger.target.next||current==trigger.target.previous);
		})) {
			event.str='神威：你可弃置1张牌，令你使用的'+get.translation(trigger.card)+'对'+get.translation(trigger.target)+'的1名相邻角色继续结算；';
			if(event.tp>0) {
				event.str+='否则，你可弃置'+get.translation(trigger.target)+'的至多'+event.tp+'张牌';
			}
			player.chooseCardTarget({
				selectCard:1,
				filterTarget:function(card,player,target){
					var tri=_status.event.getTrigger();
					return target!=player&&target!=tri.target&&(target==tri.target.next||target==tri.target.previous);
				},
				position:"he",
				selectTarget:1,
				ai1:function(card){
					return 4.5-get.value(card);
				},
				ai2:function(target){
					var player=_status.event.player;
					var tri=_status.event.getTrigger();
					var eff=get.effect(target,tri.card,player,player);
					return eff;
				},
				prompt:event.str,
			});
		}
		else event.goto(2);
		"step 1"
		if(result.bool){
			player.logSkill('XS_shenwei',result.targets[0]);
			player.discard(result.cards[0]);
			player.useCard(trigger.card,trigger.cards,result.targets[0],false);
			trigger.nm=event.tp+1;
			event.finish();
		}
		"step 2"
		if(event.tp>0) {
			player.discardPlayerCard(trigger.target,[1,event.tp],false,'he');
		}
	},
	ai:{
        expose:0.4,
    },
},
"XS_sidi":{
	audio:"ext:血色衣冠:2",
	forced:true,
	trigger:{
		player:"phaseZhunbeiBegin",
	},
	priority:29,
	content:function (){
		var tp=player.getDamagedHp();
		if(tp>=4) {
			player.loseMaxHp();
			var nm=player.maxHp-1-player.countCards('h');
			if(nm>0) player.draw(nm);
		}
		else {
			player.loseHp();
			player.chooseUseTarget({name:"sha",isCard:true},false);
		}
	},
},
"XS_tuotu":{
	audio:"ext:血色衣冠:2",
	priority:16,
	trigger:{
		target:["shaBefore","juedouBefore"],
	},
	filter:function (event,player){
		if(event.player==player) return false;
		if(event.targets.length!=1) return false;
		return game.hasPlayer(function(current){
			return current!=event.player&&!event.targets.contains(current);
		});
	},
	direct:true,
	content:function (){
		"step 0"
		player.chooseControlList(['手牌区','装备区','判定区']).set('ai',function(event,player){
			if(player.countCards('j')) return 2;
			if(player.countCards('e')<player.countCards('h')) return 1;
			if(player.countCards('h')<=1) return 0;
			return -1;
		}).set('prompt','脱兔：你可选择手牌、装备、判定区中的1项和1名其他角色，其需与你交换此区域的牌，否则代替你成为此杀目标');
		"step 1"
		if(result.control!='cancel2') {
			switch(result.index){
				case 0:
					event.sp='h';
					event.mk='手牌区';
				break;
				case 1:
					event.sp='e';
					event.mk='装备区';
				break;
				case 2:
					event.sp='j';
					event.mk='判定区';
				break;
			}
			game.log(player,'选择了',event.mk);
		}
		else event.finish();
		"step 2"
		player.chooseTarget('你可令1名不为'+get.translation(trigger.card)+'目标的其他角色，其需与你交换'+event.mk+'内的所有牌，否则其代替你成为此杀目标',1,function(card,player,target){
			var trigger=_status.event.getTrigger();
			return !trigger.targets.contains(target)&&trigger.player!=target;
		}).set('ai',function(target){
			var trigger=_status.event.getTrigger();
			var att=get.attitude(player,target);
			var eff=get.effect(target,trigger.card,player,player);
			if(eff<0) return -20;
			if(event.sp=='j') {
				return -att/(target.countCards('j')+0.1);
			}
			var tp=Math.max(0,(target.countCards(event.sp)-player.countCards(event.sp)));
			return -att*tp;
		});
		"step 3"
		if(result.bool){
			player.logSkill('XS_tuotu',result.targets[0]);
			player.line(result.targets[0],'green');
			event.tar=result.targets[0];
			event.pla=player;
			event.tar.chooseBool('与'+get.translation(player)+'交换'+event.mk+'的所有牌，否则你代替其成为'+get.translation(trigger.card)+'的目标').set('ai',function(){
				var trigger=_status.event.getTrigger();
				var eff=get.effect(event.tar,trigger.card,trigger.player,event.tar);
				var tp=event.tar.countCards(event.sp)-event.pla.countCards(event.sp);
				if(event.sp=='j') {
					return tp*2>eff;
				}
				else {
					return -tp>eff;
				}
			});
		}
		else event.finish();
		"step 4"
		if(result.bool){
			if(event.sp=='j') {
				event.cards=[player.getCards('j'),event.tar.getCards('j')];
				player.lose(event.cards[0],ui.special);
				event.tar.lose(event.cards[1],ui.special);
				if(event.cards[0].length) player.$give(event.cards[0],event.tar);
				if(event.cards[1].length) event.tar.$give(event.cards[1],player);
				for(var i=0;i<event.cards[1].length;i++){
					if(event.cards[1][i].viewAs){
						player.addJudge({name:event.cards[1][i].viewAs},[event.cards[1][i]]);
					}
					else{
						player.addJudge(event.cards[1][i]);
					}
				}
				for(var i=0;i<event.cards[0].length;i++){
					if(event.cards[0][i].viewAs){
						event.tar.addJudge({name:event.cards[0][i].viewAs},[event.cards[0][i]]);
					}
					else{
						event.tar.addJudge(event.cards[0][i]);
					}
				}  
			}
			else if(event.sp=='h') {
				player.swapHandcards(event.tar);
			}
			else {
				player.swapEquip(event.tar);
			}
		}
		else {
			trigger.targets.remove(player);
			trigger.targets.push(event.tar);
			trigger.target=event.tar;
		}
	},
	ai:{
		expose:0.4,
		effect:{
			target:function (card,player,target){
				if(card.name=='sha') return 0.5;
			},
		},
	},
},
"XS_duoqi":{
	audio:"ext:血色衣冠:2",
	zhuanhuanji:true,
	init:function (player){
        player.storage.XS_duoqi=[1,2,3];
    },
	marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"38px")+" src="+lib.assetURL+"extension/血色衣冠/icon/duoqi.png>":"夺",
	mark:true,
	intro:{
		content:function(storage,player,skill){
			var str='每回合限1次，你造成伤害后，可代替目标执行其下一个';
			switch(player.storage.XS_duoqi[0]){
				case 1:str+='摸牌阶段。';break;
				case 2:str+='出牌阶段。';break;
				case 3:str+='弃牌阶段，此弃牌阶段结束后，你可交换手牌数与已损失体力值。';break;
			}
			return str;
		},
	},
	trigger:{
		source:["damageAfter"],
	},
	usable:1,
	"prompt2":function (event,player){
		switch(player.storage.XS_duoqi[0]){
			case 1:var str='摸牌阶段？';break;
			case 2:var str='出牌阶段？';break;
			case 3:var str='弃牌阶段？此弃牌阶段结束后，你可交换手牌数与已损失体力值。';break;
		}
		return '是否代替'+get.translation(event.player)+'执行其下一个'+str;
	},
	logTarget:'player',
	check:function (event,player){
		return get.attitude(player,event.player)<0;
	},
	filter:function (event,player){
		if(!event.player.isAlive()) return false;
		return event.num>0&&event.player!=player;
	},
	content:function(){
		"step 0"
		switch(player.storage.XS_duoqi[0]){
			case 1:
				trigger.player.addSkill('XS_duoqi_a');
				trigger.player.storage.XS_duoqi_a=player;
			break;
			case 2:
				trigger.player.addSkill('XS_duoqi_b');
				trigger.player.storage.XS_duoqi_b=player;
			break;
			case 3:
				trigger.player.addSkill('XS_duoqi_c');
				trigger.player.storage.XS_duoqi_c=player;
			break;
		}
		"step 1"
		var temp=player.storage.XS_duoqi.shift();
		player.storage.XS_duoqi.push(temp);
		player.syncStorage('XS_duoqi');
	},
	ai:{
		expose:0.5,
	},
	group:["XS_duoqi_d"],
    subSkill:{
		a:{
			trigger:{
				player:"phaseDrawBefore",
			},
			intro:{
				content:function(storage,player,skill){
					return get.translation(player.storage.XS_duoqi_a)+'代替你执行你下一个摸牌阶段';
				},
			},
			marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"52px")+" src="+lib.assetURL+"extension/血色衣冠/icon/duoqi1.png>":"夺",
			mark:true,
			direct:true,
			priority:7,
			content:function (){
				"step 0"
				var next=player.storage.XS_duoqi_a.phaseDraw();
				"step 1"
				trigger.cancel();
				player.removeSkill('XS_duoqi_a');
			},
            sub:true,
        },
		b:{
			trigger:{
				player:"phaseUseBefore",
			},
			intro:{
				content:function(storage,player,skill){
					return get.translation(player.storage.XS_duoqi_b)+'代替你执行你下一个出牌阶段';
				},
			},
			marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"59px")+" src="+lib.assetURL+"extension/血色衣冠/icon/duoqi2.png>":"夺",
			mark:true,
			direct:true,
			priority:7,
			content:function (){
				"step 0"
				var next=player.storage.XS_duoqi_b.phaseUse();
				"step 1"
				trigger.cancel();
				player.removeSkill('XS_duoqi_b');
			},
            sub:true,
        },
		c:{
			trigger:{
				player:"phaseDiscardBefore",
			},
			intro:{
				content:function(storage,player,skill){
					return get.translation(player.storage.XS_duoqi_c)+'代替你执行你下一个弃牌阶段';
				},
			},
			marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"49px")+" src="+lib.assetURL+"extension/血色衣冠/icon/duoqi3.png>":"夺",
			mark:true,
			direct:true,
			priority:7,
			content:function (){
				"step 0"
				var next=player.storage.XS_duoqi_c.phaseDiscard();
				"step 1"
				trigger.cancel();
				player.removeSkill('XS_duoqi_c');
			},
            sub:true,
        },
		d:{
			trigger:{
				player:"phaseDiscardAfter",
			},
			direct:true,
			priority:99,
			filter:function (event){
				return event.getParent(2).skill=='XS_duoqi_c';
			},
			content:function (){
				"step 0"
				player.chooseBool('是否交换你的已损失体力值（'+player.getDamagedHp()+'）与你的手牌数（'+player.countCards('h')+'）？').set('ai',function(){
					return player.getDamagedHp()>player.countCards('h');
				});
				"step 1"
				if(result.bool) {
					var nm=player.getDamagedHp()-player.countCards('h');
					if(nm>0) {
						player.recover(nm);
						player.draw(nm);
					}
					else if(nm<0){
						player.loseHp(-nm);
						player.chooseToDiscard(-nm,'h',true);
					}
				}
			},
            sub:true,
        },
    },
},
"XS_xuanqi":{
	audio:"ext:血色衣冠:2",
	init:function (player){
        player.storage.XS_xuanqi=0;
    },
	priority:-2,
    trigger:{
        global:["useCardToTargeted"],
    },
	check:function (event,player){
		var eff=get.effect(event.target,event.card,event.player,player);
		if(event.target==player&&player.storage.XS_xuanqi==1) eff+=2;
		if(event.target!=player&&player.storage.XS_xuanqi==2) eff+=2;
		return eff<=0.5;
	},
	logTarget:'target',
	"prompt2":function (event,player){
		var str='是否令'+get.translation(event.player)+'对'+get.translation(event.target)+'使用的'+get.translation(event.card)+'的效果改为令其进行一次“闪电”效果的判定？';
		var tp='';
		if((event.target==player&&player.storage.XS_xuanqi==1)||(event.target!=player&&player.storage.XS_xuanqi==2)) tp='如此，你失去1点体力且本轮此技能失效。';
		return str+tp;
	},
    filter:function (event,player){
		if(event.card.name!='sha') return false;
        return !player.hasSkill('XS_xuanqi_temp');
    },
    content:function (){
        "step 0"
		trigger.getParent().excluded.add(trigger.target);
		"step 1"
		trigger.target.judge('玄骑',function(card){
			if(get.suit(card)=='spade'&&get.number(card)>1&&get.number(card)<10) return -6;
			return 0;
		});
		"step 2"
		if(result.bool==false){
			trigger.target.damage(3,'thunder','nosource');
		}
		"step 3"
		if((trigger.target==player&&player.storage.XS_xuanqi==1)||(trigger.target!=player&&player.storage.XS_xuanqi==2)) {
			player.loseHp();
			player.addTempSkill('XS_xuanqi_temp','roundStart');
			player.storage.XS_xuanqi=0;
		}
		else {
			if(trigger.target==player) player.storage.XS_xuanqi=1;
			else player.storage.XS_xuanqi=2;	
		}
    },
	ai:{
		expose:0.4,
	},
	subSkill:{
        temp:{
			sub:true,
			charlotte:true,
        },
    },
},
"XS_tongding":{
	audio:"ext:血色衣冠:2",
	trigger:{
        global:"judge",
    },
	priority:4,
    filter:function (event,player){
        return player.countCards('h')>0;
    },
    direct:true,
    content:function (){
        "step 0"
        player.chooseCard(get.translation(trigger.player)+'的'+(trigger.judgestr||'')+'判定为'+
        get.translation(trigger.player.judging[0])+'，'+get.prompt('XS_tongding'),'h',function(card){
            return true;
        }).set('ai',function(card){
            var trigger=_status.event.getTrigger();
            var judging=_status.event.judging;
			var res=trigger.judge(judging),att=get.attitude(player,trigger.player);
			if(res>=0) {
				if(att>=0) return -1;
				else return 4.5-get.value(card);
			}
			else {
				if(att>=0) return 5.5-get.value(card);
				else return -1;
			}
        }).set('judging',trigger.player.judging[0]);
        "step 1"
        if(result.bool){
            player.respond(result.cards,'highlight','XS_tongding');
        }
        else event.finish();
        "step 2"
        if(result.bool){
			event.cd=result.cards[0];
			player.chooseControl('花色','点数',function(){
				return ['花色','点数'].randomGet();
			}).set('prompt','令判定结果的一项变为与'+get.translation(event.cd)+'相同');
        }
        "step 3"
		if(result.control=='花色'){
			trigger.player.judging[0].suit=get.suit(event.cd);
			game.log(trigger.player,'的判定结果的花色改为',get.suit(event.cd));
		}
		else {
			trigger.player.judging[0].number=event.cd.number;
			game.log(trigger.player,'的判定结果的点数改为',get.number(event.cd));
		}
		"step 4"
		player.chongzhuCards(event.cd);
		"step 5"
        game.delay();
    },
    ai:{
		expose:0.5,
        tag:{
            rejudge:1,
        },
    },
	group:["XS_tongding_start"],
	subSkill:{
        start:{
			trigger:{
				global:"roundStart",
			},
			priority:9,
			filter:function (event,player){
				var hs=player.getCards('h');
				var sts=[],nums=[];
				for(var i=0;i<hs.length;i++) {
					sts.add(get.suit(hs[i]));
					nums.add(get.number(hs[i]));
				}
				if(sts.length==hs.length&&nums.length==hs.length) return true;
				return false;
			},
			direct:true,
			content:function (){
				"step 0"
				var basiclist=[];
				basiclist.push(['基本','','sha']);
				basiclist.push(['基本','','jiu']);
				basiclist.push(['基本','','tao']);
				player.chooseButton(['统定：你可视为使用1张基本牌',[basiclist,'vcard']],false).set('ai',function(button){
					if(player.isDamaged()) {
						if(button.link[2]=='tao') return 9;
					}
					else if(button.link[2]=='sha') return 4;
					return 1;
				});
				"step 1"
				if(result&&result.bool&&result.links[0]){
					player.logSkill('XS_tongding');
					player.chooseUseTarget({name:result.links[0][2],isCard:true},false);
				}
			},
			sub:true,
        },
    },
},
"XS_fuman":{
	trigger:{
        player:"gainEnd",
    },
	filter:function(event,player){	
		return event.cards.length>1;
	},
	check:function (event,player){
		return player.countCards('h')>=player.h&&player.countCards('h')>1;
	},
	"prompt2":function (event,player){
		return '是否将'+get.translation(event.cards)+'分配给你以外的任意角色？因此获得至少2张红色/黑色牌的角色回复/失去1点体力。';
	},
    content:function (){
		"step 0"
		event.cds=trigger.cards;
		player.showCards('抚蛮',trigger.cards);
		event.lt=[];
		"step 1"
		if(event.cds.length>0){
			player.chooseTarget('将牌分配给你以外的任意角色',1,true,function(card,player,target){
				return target!=player;
			}).ai=function(target){
				var att=get.attitude(player,target),hs=target.countCards('h')+0.1;
				if(player.countCards('du')) return -att/hs;
				return att/hs;
			}
		}
		else{
			event.goto(4);
		}
		"step 2"
		if(result.bool){
			event.cur=result.targets[0];
			player.chooseCardButton('分配给'+get.translation(event.cur)+'任意张牌',true,event.cds,[1,event.cds.length]).set('ai',function(button){
				var att=get.attitude(player,event.cur);
				var col=get.color(button.link),val=get.value(button.link);
				if(col=='black') val-=3;
				if(att>0) return val;
				else return -val;
			});
		}
		else event.goto(4);
		"step 3"
		if(result.bool){
			var nm1=0,nm2=0,tp=false;
			for(var i=0;i<result.links.length;i++){
				var col=get.color(result.links[i]);
				if(col=='red') nm1++;
				else nm2++;
				event.cds.remove(result.links[i]);
			}
			event.cur.gain(result.links,'gain2');
			player.line(event.cur,'green');
			for(var i=0;i<event.lt.length;i++) {
				if(event.lt[i].pl==event.cur) {
					tp=true;
					event.lt[i].red+=nm1;
					event.lt[i].black+=nm2;
					break;
				}
				else continue;
			}
			if(!tp) {
				var lt={
					pl:event.cur,
					red:nm1,
					black:nm2,
				}
				event.lt.add(lt);
			}
			event.goto(1);
		}
		"step 4"
		for(var i=0;i<event.lt.length;i++) {
			if(event.lt[i].red>=2) event.lt[i].pl.recover();
			if(event.lt[i].black>=2) event.lt[i].pl.loseHp();
		}
    },
	ai:{
		expose:0.5,
    },
},
"XS_shiwu":{
	zhuanhuanji:true,
	init:function (player){
        player.storage.XS_shiwu=['sha','tao','jiu'];
    },
	mark:true,
	intro:{
		content:function(storage,player,skill){
			return '每名角色出牌阶段限1次，其可视为使用1张 <span class="bluetext">'+get.translation(player.storage.XS_shiwu[0])+' </span> ，若不为你，其需先交给你2张牌';
		},
	},
	global:'XS_shiwu1',	
	enable:"phaseUse",
    usable:1,
    filter:function (event,player){
		var tp=player.storage.XS_shiwu[0];
		if(event.filterCard({name:'sha'},player,event)&&tp=='sha') return true;
		if(event.filterCard({name:'jiu'},player,event)&&tp=='jiu') return true;
		if(event.filterCard({name:'tao'},player,event)&&tp=='tao') return true;
		return false;
    },
	content:function (){
		"step 0"
		var basiclist=[],tp=player.storage.XS_shiwu[0];
		basiclist.push(['基本','',tp]);
        player.chooseButton(['你可视为使用1张'+get.translation(tp),[basiclist,'vcard']],false).set('ai',function(button){
			return 1;
        });
        "step 1"   
        if(result&&result.bool&&result.links[0]){
			player.chooseUseTarget({name:result.links[0][2],isCard:true},true,true);
			var temp=player.storage.XS_shiwu.shift();
			player.storage.XS_shiwu.push(temp);
			player.syncStorage('XS_shiwu');
        }
    },
    ai:{
		order:9,
		result:{
			player:1,
        },
    },	
},
"XS_shiwu1":{
	zhuanhuanji:true,
	enable:"phaseUse",
    usable:1,
	filterTarget:function (card,player,target){
        return target.hasSkill('XS_shiwu');
    },
	selectTarget:1,
    filter:function (event,player){
		if(player.hasSkill('XS_shiwu')) return false;
		if(player.countCards('he')<2) return false;
		var pla=game.filterPlayer(function(current){
			return player!=current&&current.hasSkill('XS_shiwu')&&current.storage.XS_shiwu;
		});
		if(!pla.length) return false;
		else {
			var tp=pla[0].storage.XS_shiwu[0];
			if(event.filterCard({name:'sha'},player,event)&&tp=='sha') return true;
			if(event.filterCard({name:'jiu'},player,event)&&tp=='jiu') return true;
			if(event.filterCard({name:'tao'},player,event)&&tp=='tao') return true;
		}
		return false;
    },
	selectCard:2,
	position:'he',
	filterCard:function (card,player){
		return true;
	},
	check:function (card){
		var player=_status.event.player;
		var pla=game.filterPlayer(function(current){
			return player!=current&&current.hasSkill('XS_shiwu')&&current.storage.XS_shiwu;
		});
		var tp=pla[0].storage.XS_shiwu[0];
		if(tp=='sha'&&player.hasUsableCard('sha')) return -1;
		if(tp=='jiu'&&!player.hasUsableCard('sha')) return -1;
		if(tp=='tao'&&!player.isDamaged()) return -1;
		if(player.countCards('he')<3) return -1;
		return 4.5-get.value(card);
	},
	prompt:'将两张牌交给一名拥有【识务】的角色，视为使用一张基本牌',
	content:function (){
		"step 0"
		var basiclist=[],tp=target.storage.XS_shiwu[0];
		basiclist.push(['基本','',tp]);
        player.chooseButton(['将'+get.translation(cards)+'交给'+get.translation(target)+'，视为使用一张'+get.translation(tp),[basiclist,'vcard']],true).set('ai',function(button){
			return 1;
        });
        "step 1"   
        if(result&&result.bool&&result.links[0]){
			target.gain(cards,player,'giveAuto');
			player.chooseUseTarget({name:result.links[0][2],isCard:true},true,true);
			var temp=target.storage.XS_shiwu.shift();
			target.storage.XS_shiwu.push(temp);
			target.syncStorage('XS_shiwu');
        }
    },
    ai:{
		order:9,
		expose:0.4,
		result:{
			target:2,
        },
    },	
},
"XS_changlue":{
	trigger:{
		player:"recoverBegin",
	},
	priority:-999,
	filter:function (event,player){
		if(event.getParent().name=='XS_changlue') return false;
        return event.num>0;
    },
	direct:true,
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt2('XS_changlue'),[1,trigger.num],function(card,player,target){
			return target.isDamaged();
		}).ai=function(target){
			var eff=get.recoverEffect(target,player,player),tp=target.hp;
			return eff/tp;
		}
		"step 1"
		if(result.bool) {
			player.logSkill('XS_changlue',result.targets);
			event.tars=result.targets.splice(0);
			event.nm=trigger.num;
		}
		else event.finish();
		"step 2"
		if(event.tars.length==event.nm) {
			for(var i=0;i<event.tars.length;i++) {
				event.tars[i].recover();
			}
			event.goto(5);
		}
		else if(event.tars.length==1) {
			event.tars[0].recover(event.nm);
			event.goto(5);
		}
		else {
			var target=event.tars.shift();
			event.current=target;
		}
		"step 3"
		if(event.current){
			var lt=[];
			for(var i=1;i<=event.nm-event.tars.length;i++) {
				lt.push(i.toString());
			}
			player.chooseControl(lt,true).set('ai',function(event){
				var tp=event.current.getDamagedHp();
				if(tp>2) return '2';
				return '1';
			}).set('prompt','为'+get.translation(event.current)+'分配几点回复数值？');
		}
		"step 4"
		event.current.recover(parseInt(result.control));
		event.nm-=parseInt(result.control);
		event.goto(2);
		"step 5"
		trigger.num=0;
    },
	ai:{
		expose:0.5,
    },
},
"XS_congliu":{
	trigger:{
		global:"damageBegin4",
	},
	filter:function (event,player){
		if(event.player==player) return false;
		if(event.num<1) return false;
		var dis=get.distance(player,event.player);
		return dis<=1||event.player.hp==1;
    },
	priority:-996,
	logTarget:'player',
	check:function (event,player){
		var nm=player.hp-event.num;
		if(nm>0) return true;
		else if(nm<-1) return false;
		else {
			return player.hasSkillTag('save');
		}
	},
	"prompt2":function (event,player){
		return '是否失去'+event.num+'点体力？若你未因此死亡，你回复等量体力并摸等量的牌。';
	},
	content:function (){
		player.storage.XS_congliu=trigger.num;
		player.loseHp(trigger.num);
    },
	group:["XS_congliu_end"],
	subSkill:{
		end:{
			trigger:{
				player:["loseHpEnd"],
			},
			filter:function (event,player){
				if(!player.isAlive()) return false;
				if(event.getParent().name!='XS_congliu') return false;
				return player.storage.XS_congliu;
			},
			direct:true,
			content:function (){
				var tp=player.storage.XS_congliu;
				player.recover(tp);
				player.draw(tp);
				delete player.storage.XS_congliu;
			},
            sub:true,
        },
    },
},
"XS_guyong":{
	trigger:{
		source:"damageBegin4",
	},
	filter:function (event,player){
		if(event.getParent().name=='XS_guyong') return false;
		if(!event.notLink()) return false;
        return event.num>1;
    },
	direct:true,
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt2('XS_guyong'),[1,trigger.num-1],function(card,player,target){
			var trigger=_status.event.getTrigger();
			return target!=trigger.player&&target!=player;
		}).ai=function(target){
			var nu=_status.event.getTrigger().nature;
			var eff=get.damageEffect(target,player,player,nu);
			return eff;
		}
		"step 1"
		if(result.bool) {
			player.logSkill('XS_guyong',result.targets);
			event.tars=result.targets.splice(0);
			event.nm=trigger.num;
		}
		else event.finish();
		"step 2"
		if(event.tars.length==event.nm-1) {
			trigger.num=1;
			for(var i=0;i<event.tars.length;i++) {
				event.tars[i].damage(player,1,trigger.nature,'nocard');
			}
			event.finish();
		}
		else {
			var lt=[];
			for(var i=1;i<=event.nm-event.tars.length;i++) {
				lt.push(i.toString());
			}
			player.chooseControl(lt,true).set('ai',function(event){
				var att=get.attitude(player,_status.event.getTrigger.player);
				if(att>0) return '1';
				return '2';
			}).set('prompt','为'+get.translation(trigger.player)+'分配几点伤害？');
		}
		"step 3"
		trigger.num=parseInt(result.control);
		event.nm-=parseInt(result.control);
		"step 4"
		if(event.tars.length==event.nm) {
			for(var i=0;i<event.tars.length;i++) {
				event.tars[i].damage(player,1,trigger.nature,'nocard');
			}
			event.finish();
		}
		else if(event.tars.length==1) {
			event.tars[0].damage(player,event.nm,trigger.nature,'nocard');
			event.finish();
		}
		else {
			var target=event.tars.shift();
			event.current=target;
		}
		"step 5"
		if(event.current){
			var lt=[];
			for(var i=1;i<=event.nm-event.tars.length;i++) {
				lt.push(i.toString());
			}
			player.chooseControl(lt,true).set('ai',function(event){
				if(event.current.hp==1||lt.length<=1) return '1';
				return '2';
			}).set('prompt','为'+get.translation(event.current)+'分配几点伤害？');
		}
		"step 6"
		event.current.damage(player,parseInt(result.control),trigger.nature,'nocard');
		event.nm-=parseInt(result.control);
		event.goto(4);
    },
},
"XS_qianzhen":{
	init:function(player,skill){
		player.storage.XS_qianzhen_a=[];
		player.storage.XS_qianzhen_b=[];
	},
	enable:"phaseUse",
    usable:1,
	position:"h",
    filter:function (event,player){
		if(player.getCardUsable('sha')==0) return false;
		if(player.countCards('h',{color:'red'})&&!player.hasJudge('lebu')) return true;
		if(player.countCards('h',{color:'black'})&&!player.hasJudge('bingliang')) return true;
		return false;
    },
	selectCard:1,
	filterCard:function (card,player){
		if(player.hasJudge('bingliang')) return get.color(card)=='red';
		if(player.hasJudge('lebu')) return get.color(card)=='black';
		return get.color(card)=='red'||get.color(card)=='black';	
	},
	check:function (card){
		return 4.5-get.value(card);
	},
    content:function (){
		if(get.color(cards[0])=='red') {
			var na='lebu';
		}
		else {
			var na='bingliang';
		}
		player.useCard({name:na},cards,player);
		event.Cardcolor=get.color(cards[0]);
		player.chooseUseTarget({name:"sha",isCard:true},true,true);
    },
    ai:{
        order:9,
		result:{
            player:2,
        },
    },
	group:["XS_qianzhen_ex"],
	subSkill:{
		ex:{
			trigger:{
				player:"shaBegin",
			},
			direct:true,
			filter:function (event,player){
				return event.getParent(3).name=='XS_qianzhen'&&event.getParent(3).Cardcolor;
			},
			content:function (){
				"step 0"
				trigger.baseDamage++;
				event.col=trigger.getParent(3).Cardcolor;
				"step 1"
				var nm=trigger.target.countCards('h',function(card){
					return get.color(card)!=event.col;
				});
				if(!nm) {
					event.goto(3);
				}
				else {
					trigger.target.chooseCard('将一张颜色不为'+get.translation(event.col)+'的手牌置于你的判定区（红色：乐不思蜀，黑色：兵粮寸断），否则无法闪避'+get.translation(player)+'对你使用的'+get.translation(trigger.card),function(card){
						return get.color(card)!=event.col;
					}).set('ai',function(card){
						var tar=_status.event.getTrigger().target;
						if(!tar.hasUsableCard('shan')) return -1;
						return 4.5-get.value(card);
					});
				}
				"step 2"
				if(result.bool){
					if(get.color(result.cards[0])=='red') {
						var na='lebu';
					}
					else {
						var na='bingliang';
					}
					trigger.target.useCard({name:na},result.cards,trigger.target);
					event.finish();
				}
				else event.goto(3);
				"step 3"
				trigger.directHit=true;
			},
			sub:true,
        },
    },	
},
"XS_jueji":{
	intro:{
		content:function(storage,player,skill){
			var str='本轮你与'+get.translation(player.storage.XS_jueji_a)+'使用的：</br>';
			str+='“杀”效果基数为：'+player.storage.XS_jueji[0]+'</br>';
			str+='“桃”效果基数为：'+player.storage.XS_jueji[1]+'</br>';
			str+='“酒”效果基数为：'+player.storage.XS_jueji[2];
			return str;
		},
	},
	init:function (player){
		player.storage.XS_jueji=[1,1,1];
	},
	trigger:{
		global:"roundStart",
	},
	direct:true,
	priority:7,
	content:function (){
		"step 0"
		player.storage.XS_jueji=[1,1,1];
		player.unmarkSkill('XS_jueji');
		"step 1"
		player.chooseTarget(get.prompt2('XS_jueji'),1,function(card,player,target){
			return player!=target;
		},function(target){
			return get.attitude(player,target);
		});
		"step 2"
		if(result.bool){
			player.logSkill('XS_jueji');
			player.storage.XS_jueji_a=result.targets[0];
			event.nm=3;
		}  
		else event.finish();
		"step 3"
		var lt=[];
		for(var i=0;i<=event.nm;i++) {
			lt.push(i.toString());
		}
		player.chooseControl(lt,true).set('ai',function(event){
			if(player.hp==1) return '0';
			if(player.hasUsableCard('sha')) return '2';
			return '1';
		}).set('prompt','为你和'+get.translation(player.storage.XS_jueji_a)+'本轮使用的杀的效果基数分配一个数值');
		"step 4"
		if(result.control!=0) {
			player.storage.XS_jueji[0]=parseInt(result.control);
			event.nm-=parseInt(result.control);
		}
		else player.storage.XS_jueji[0]=0;
		"step 5"
		if(event.nm>0) {
			var lt=[];
			for(var i=0;i<=event.nm;i++) {
				lt.push(i.toString());
			}
			player.chooseControl(lt,true).set('ai',function(event){
				if(player.isHealthy()) return '0';
				if(player.getDamagedHp()>=2&&event.nm>=2) return '2';
				return '1';
			}).set('prompt','为你和'+get.translation(player.storage.XS_jueji_a)+'本轮使用的桃的效果基数分配一个数值');
		}
		else {
			player.storage.XS_jueji[1]=0;
			player.storage.XS_jueji[2]=0;
			event.goto(7);
		}
		"step 6"
		if(result.control!=0) {
			player.storage.XS_jueji[1]=parseInt(result.control);
			event.nm-=parseInt(result.control);
		}
		else player.storage.XS_jueji[1]=0;
		"step 7"
		player.storage.XS_jueji[2]=event.nm;
		player.markSkill('XS_jueji');
		game.delay(0.5);
	},
	group:["XS_jueji_change","XS_jueji_t"],
    subSkill:{
		change:{
			trigger:{
				global:["taoBefore","jiuBefore","shaBefore"],
			},
			filter:function (event,player){
				if(event.player==player||event.player==player.storage.XS_jueji_a) return true;
				return false;
			},
			firstDo:true,
			priority:999,
			direct:true,
			content:function (){
				if(trigger.name=='sha'){
					var nm=player.storage.XS_jueji[0]-1;
					trigger.baseDamage+=nm;
				}
				else if(trigger.name=='tao'){
					var nm=player.storage.XS_jueji[1]-1;
					trigger.baseDamage+=nm;
				}
				else if(trigger.name=='jiu'){
					var nm=player.storage.XS_jueji[2]-1;
					trigger.baseDamage+=nm;
				}
			},
			sub:true,
		},
		t:{
			trigger:{
				global:["recoverBegin"],
			},
			filter:function (event,player){
				if(event.player!=player&&event.player!=player.storage.XS_jueji_a) return false;
				var evt=event.getParent()
				if(evt.name!='tao') return false;
				return evt.baseDamage==0;
			},
			firstDo:999,
			direct:true,
			content:function (){
				trigger.num=0;
			},
			sub:true,
		},
    },
},
"XS_mixia":{
	init:function (player){
		player.storage.XS_mixia=['sha','shan'];
	},
	mark:true,
	intro:{
		content:function(storage,player,skill){
			var str='出牌阶段限1次，你可与1名其他角色各展示1张基本牌，若你展示的是（<span class="bluetext">'+get.translation(player.storage.XS_mixia[0])+'</span>）而其未展示或展示的不为（<span class="bluetext">'+get.translation(player.storage.XS_mixia[1])+'</span>），你摸2张牌，你可替换一个()为另外一张基本牌名。';
			return str;
		},
	},
	enable:'phaseUse',
	usable:1,
	filter:function(event,player){
		return player.countCards('h',{type:'basic'})>0;
	},
	filterTarget:function(card,player,target){
		return target!=player&&target.countCards('h')>0;
	},
	content:function(){
		"step 0"
		event.tp1=true;
		event.tp2=true;
		player.chooseCard(true,'h',function(card){
			return get.type(card)=='basic';
		}).ai=function(card){
			var nam=player.storage.XS_mixia[0];
			if(player.countCards(nam)>0&&card.name==nam) return 1;
			return Math.random();
		};
		"step 1"
		if(result.bool) {
			player.showCards('觅峡',result.cards[0]);
			if(result.cards[0].name!=player.storage.XS_mixia[0]) {
				event.tp1=false;
			}
			if(!target.countCards('h',{type:'basic'})) {
				event.goto(3);
			}
			else {
				target.chooseCard(true,'h',function(card){
					return get.type(card)=='basic';
				}).ai=function(card){
					var att=get.attitude(target,player);
					var nam=player.storage.XS_mixia[1];
					if(card.name==nam) {
						return -att;
					}
					return Math.random();
				};
			}
		}
		else {
			event.tp1=false;
			event.goto(3);
		}
		"step 2"
		if(result.bool) {
			target.showCards('觅峡',result.cards[0]);
			if(result.cards[0].name==player.storage.XS_mixia[1]) {
				event.tp2=false;
			}
		}
		"step 3"
		if(event.tp1&&event.tp2) {
			player.draw(2);
			event.finish();
		}
		else {
			var str='“出牌阶段限1次，你可与1名其他角色各展示1张基本牌，若你展示的是（<span class="bluetext">'+get.translation(player.storage.XS_mixia[0])+'</span>）而其未展示或展示的不为（<span class="bluetext">'+get.translation(player.storage.XS_mixia[1])+'</span>），你摸2张牌，否则，你可替换一个()为另外一张基本牌名。”';
			var lt=['第一个','第二个','取消'];
			player.chooseControl(lt,function(){
				return '取消';
			}).set('prompt','你可将'+str+'中一个（）内的内容替换为另外一张基本牌名。');
		}
		"step 4"
		if(result.control&&result.control!='取消'){
			if(result.control=='第一个') event.mark=0;
			else event.mark=1;
			var lt=['杀','闪','酒','桃'].remove(get.translation(player.storage.XS_mixia[event.mark]));
			player.chooseControl(lt,function(){
				return lt.randomGet();
			}).set('prompt','选择一张基本牌名');
        }
		else event.finish();
		"step 5"
		if(result.control){
			var tp;
			switch(result.control){
				case '杀':tp='sha';break;
				case '闪':tp='shan';break;
				case '酒':tp='jiu';break;
				case '桃':tp='tao';break;
			}
			player.storage.XS_mixia[event.mark]=tp;
			player.syncStorage('XS_mixia');
        }
	},
	ai:{
		order:6,
		result:{
			target:-1,
		}
	},
},
"XS_renyong":{
	trigger:{
		player:'loseAfter',
		global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter'],
	},
	direct:true,
	audio:2,
	filter:function(event,player){
		if(player.hasSkill('XS_renyong_temp')) return false;
		if(event.name=='gain'&&event.player==player) return false;
		var evt=event.getl(player);
		if(!evt) return false;
		var mk=false;
		if(evt.hs&&evt.hs.length) {
			if(!player.countCards('h')) mk=true;;
		}
		if(evt.es&&evt.es.length) {
			if(!player.countCards('e')) mk=true;;
		}
		if(evt.js&&evt.js.length) {
			if(!player.countCards('j')) mk=true;;
		}
		return mk;
	},
	content:function(){
		"step 0"
		event.lt=[];
		var evt=trigger.getl(player);
		if(evt.hs&&evt.hs.length&&!player.countCards('h')) {
			event.lt.push('h');
		}
		if(evt.es&&evt.es.length&&!player.countCards('e')) {
			event.lt.push('e');
		}
		if(evt.js&&evt.js.length&&!player.countCards('j')) {
			event.lt.push('j');
		}
		if(!event.lt.length) event.finish();
		else event.nm=0;
		"step 1"
		switch(event.lt[event.nm]){
			case 'h':var str='手牌区';break;
			case 'e':var str='装备区';break;
			case 'j':var str='判定区';break;
		}
		player.chooseTarget(get.prompt('XS_renyong'),'你可将一名其他角色'+str+'的一张牌置于你对应的区域。',function(card,player,target){
            return player!=target&&target.countCards(event.lt[event.nm]);
        }).ai=function(target){
			var att=get.attitude(player,target);
			if(event.lt[event.nm]=='h') return -att;
			if(event.lt[event.nm]=='e') {
				if(target.getEquip('baiyin')) return att;
				else return -att;
			}
			if(event.lt[event.nm]=='j') {
				if(target.hasJudge('XS_mantian')) return -att;
				else return att;
			}
			return -1;
        }
		"step 2"
		if(result.bool){
			var tar=result.targets[0];
			player.addTempSkill('XS_renyong_temp');
			player.logSkill('XS_renyong',tar);
			player.gainPlayerCard(event.lt[event.nm],tar,1,true);
		}
		else event.goto(4);
		"step 3"
		if(result.bool){
			var cd=result.cards[0];
			if(event.lt[event.nm]=='e'&&get.type(cd)=='equip') player.equip(cd);
			if(event.lt[event.nm]=='j'&&get.type(cd)=='delay') player.addJudge(cd);
		}
		"step 4"
		if(event.nm<event.lt.length-1) {
			event.nm++;
			event.goto(1);
		}
		else event.finish();
	},
	ai:{
		expose:0.4,
	},
	subSkill:{
		temp:{
			charlotte:true,
			sub:true,
        },
    },
},
"XS_weibang":{
	trigger:{
		global:"discardBefore",
	},
	direct:true,
	filter:function(event,player){
		if(event.player==player) return false;
		return player.countCards('he')>=event.cards.length&&event.player.isAlive();
	},
    content:function (){
		"step 0"
		player.chooseCard(get.prompt('XS_weibang',trigger.player),'是否代替'+get.translation(trigger.player)+'弃置'+trigger.cards.length+'张牌？','he',trigger.cards.length,false).ai=function(card){
			var att=get.attitude(player,_status.event.getTrigger().player);
			if(att<=0) return -1;
			return 6-get.value(card);
		}
		"step 1"
        if(result.bool){
			player.logSkill('XS_weibang',trigger.player);
			game.log(player,'代替',trigger.player,'弃置了',trigger.cards.length,'张牌');
			player.discard(result.cards);
			trigger.cancel();
        }
    },
	ai:{
		expose:0.5,
    },
},
"XS_shenlue":{
	enable:"phaseUse",
	usable:1,
	filter:function (event,player){
		if(!player.countCards('h')) return false;
		return game.hasPlayer(function(current){
			return current!=player&&current.countCards('h');
		});
    },
	filterTarget:function (card,player,target){
        return player!=target&&target.countCards('h');
    },
	selectTarget:1,
	content:function (){
        "step 0"
		event.pla=player;
		player.chooseCardButton('请重铸一张手牌，若你所重铸的是闪，令'+get.translation(target)+'获得之',player.getCards('h'),1,true).ai=function(button){
			var att=get.attitude(event.pla,target);
			if(att>0) {
				if(button.link.name=='shan') return 20;
			}
			return 6-get.value(button.link);
		} 
		"step 1"
		event.cd1=result.links[0];
		player.chongzhuCards(event.cd1);
		"step 2"
		target.chooseCardButton('请重铸一张手牌，若你所重铸的是杀，令'+get.translation(player)+'获得之',target.getCards('h'),1,true).ai=function(button){
			var att=get.attitude(target,event.pla);
			if(att>0) {
				if(button.link.name=='sha') return 20;
			}
			else {
				if(button.link.name=='sha') return -1;
			}
			return 6-get.value(button.link);
		} 
		"step 3"	
		event.cd2=result.links[0];
		target.chongzhuCards(event.cd2);
		"step 4"
		if(event.cd1.name=='shan') {
			target.gain(event.cd1,'gain2');
		}	
		if(event.cd2.name=='sha') {
			player.gain(event.cd2,'gain2');
		}
    },
	ai:{
		expose:0.3,
		result:{
			target:1,
		},
		order:1,
	},
},
"XS_jiangjie":{
	mod:{
		globalFrom:function (from,to,current){
			if(from.storage.XS_jiangjie_a) {
				return current-from.storage.XS_jiangjie_a;
			}
		},
		globalTo:function (from,to,current){
			if(to.storage.XS_jiangjie_a) {
				return current+to.storage.XS_jiangjie_a;
			}
		},
		cardUsable:function (card,player,num){
			if(player.storage.XS_jiangjie_b) {
				if(card.name=='sha') return num+player.storage.XS_jiangjie_b;
			}
		},
	},
	intro:{
		content:function(storage,player,skill){
			var str='';
			if(player.storage.XS_jiangjie_a) {
				str+='你的进攻、防御距离 + '+player.storage.XS_jiangjie_a+ '</br>';
			}
			if(player.storage.XS_jiangjie_b) {
				str+='你使用杀的次数 + '+player.storage.XS_jiangjie_b;
			}
			return str;
		},
	},
	init:function(player,skill){
		player.storage.XS_jiangjie_a=0;
		player.storage.XS_jiangjie_b=0;
	},
	trigger:{global:['loseAfter','cardsDiscardAfter']},
	forced:true,
	filter:function(event,player){
		if(!player.isPhaseUsing()) return false;
		if(event.name=='lose'&&event.position!=ui.discardPile) return false;
		var list=[];
		for(var i=0;i<event.cards.length;i++){
			if(['diamond','club'].contains(get.suit(event.cards[i]))) list.push(event.cards[i]);
		}
		game.getGlobalHistory('cardMove',function(evt){
			if(evt==event||(evt.name!='lose'&&evt.name!='cardsDiscard')) return false;
			if(evt.name=='lose'&&evt.position!=ui.discardPile) return false;
			for(var i=0;i<evt.cards.length;i++){
				var card=evt.cards[i];
				list.remove(card);
			}
		},event);
		return list.length>0;
	},
	content:function(){
		"step 0"
		var list1=[];
		var list2=[];
		for(var i=0;i<trigger.cards.length;i++){
			var st=get.suit(trigger.cards[i]);
			if(st=='diamond') {
				list1.push(trigger.cards[i]);
			}
			else if(st=='club') {
				list2.push(trigger.cards[i]);
			}
		}
		game.getGlobalHistory('cardMove',function(evt){
			if(evt==trigger||(evt.name!='lose'&&evt.name!='cardsDiscard')) return false;
			if(evt.name=='lose'&&evt.position!=ui.discardPile) return false;
			for(var i=0;i<evt.cards.length;i++){
				var card=evt.cards[i];
				list1.remove(card);
				list2.remove(card);
			}
		},trigger);
		player.storage.XS_jiangjie_a+=list1.length;
		player.storage.XS_jiangjie_b+=list2.length;
		"step 1"
		if(player.storage.XS_jiangjie_a!=0||player.storage.XS_jiangjie_b!=0) {
			player.markSkill('XS_jiangjie');
		}
	},
	group:["XS_jiangjie_clear"],
    subSkill:{
		clear:{
			trigger:{player:['phaseBefore']},
			priority:8,
			direct:true,
			content:function(){
				player.storage.XS_jiangjie_a=0;
				player.storage.XS_jiangjie_b=0;
				player.unmarkSkill('XS_jiangjie');
			},
            sub:true,
        },
    },
},
"XS_lingrui":{
	filter:function (event,player){
		return player.countCards('e')==1;
	},
	trigger:{
		player:["equipAfter"],
	},
	forced:true,
	content:function (){
		player.draw(2);
	},
	ai:{
		noe:true,
		reverseEquip:true,
		effect:{
			target:function(card,player,target,current){
				if(get.type(card)=='equip'&&!get.cardtag(card,'gifts')) {
					if(target.countCards('e')) {
						var sub=get.subtype(card);
						if(target.getEquip(sub)) return [1,3];
						else return [1,-1]
					}
					return [1,3];
				}
			},
		},
	},
},
"XS_binglie":{
	group:["XS_binglie_1","XS_binglie_2","XS_binglie_3","XS_binglie_4"],
	subSkill:{
		1:{
			enable:["chooseToUse","chooseToRespond"],
			filterCard:function (){return true},
			selectCard:-1,
			viewAsFilter:function (player){
				return player.countCards('h')>0;
			},
			viewAs:{
				name:"shan",
			},
			prompt:"将全部手牌当作闪使用或打出",
			check:function (){
				var player=_status.event.player;
				return get.value(player.getCards('h'))<=7.5;
			},
			onuse:function(result,player){
				if((_status.currentPhase!=player&&_status.currentPhase.countCards('e'))||player.countCards('e')) {
					player.gainPlayerEquip(_status.currentPhase,true);
				}
				else game.delay();
			},
			onrespond:function(result,player){
				if((_status.currentPhase!=player&&_status.currentPhase.countCards('e'))||player.countCards('e')) {
					player.gainPlayerEquip(_status.currentPhase,true);
				}
				else game.delay();
			},
			ai:{
				respondShan:true,
				skillTagFilter:function(player){
					if(!player.countCards('h')) return false;
				},
				effect:{
					target:function(card,player,target,current){
						if(get.tag(card,'respondShan')&&current<0) return 0.8;
					}
				}
			},
            sub:true,
        },
		2:{
			enable:["chooseToRespond"],
			filter:function (event,player){
				return player.countCards('h');
			},
			filterCard:function (){return true},
			selectCard:-1,
			viewAs:{
				name:"sha",
			},
			prompt:"将全部手牌当杀打出",
			check:function (){
				var player=_status.event.player;
				return get.value(player.getCards('h'))<=5.5;
			},
			onrespond:function(result,player){
				if((_status.currentPhase!=player&&_status.currentPhase.countCards('e'))||player.countCards('e')) {
					player.gainPlayerEquip(_status.currentPhase,true);
				}
				else game.delay();
			},
			ai:{
				skillTagFilter:function(player){
					if(!player.countCards('h')) return false;
				},
				respondSha:true,
			},
            sub:true,
        },
		3:{
			enable:["chooseToUse"],
			filter:function (event,player){
				return player.countCards('h');
			},
			filterCard:function (){return true},
			selectCard:-1,
			viewAs:{
				name:"sha",
			},
			prompt:"将全部手牌当杀使用",
			check:function (){
				var player=_status.event.player;
				return get.value(player.getCards('h'))<=5.5;
			},
            sub:true,
        },
		4:{
			trigger:{
				player:"useCardBefore",
			},
			priority:15,
			filter:function (event,player){
				return event.card.name=='sha'&&event.skill=='XS_binglie_3';
			},
			direct:true,
			content:function (){
				var tgs=trigger.targets;
				for(var i=0;i<tgs.length;i++) {
					if((tgs[i]!=player&&tgs[i].countCards('e'))||player.countCards('e')) {
						player.gainPlayerEquip(tgs[i],true);
					}
				}
			},
            sub:true,
        },
    },
},
"XS_bishi1":{
	trigger:{
		player:"phaseAfter",
	},
	priority:9,
	filter:function (event,player){
		return player.countCards('h');
	},
	frequent:true,
	content:function(){
		"step 0"
		player.chooseCardButton('你可选择保留任意张颜色/花色/点数不同的手牌，并弃置其余的牌，如此，你摸3/2/1张牌。',[1,Infinity],trigger.player.getCards('h')).set('filterButton',function(button){
			var col=get.color(button.link),st=get.suit(button.link),nm=button.link.number;
			if(!ui.selected.buttons.length) return true;
			else if(ui.selected.buttons.length==1) {
				return get.suit(ui.selected.buttons[0])!=st||get.color(ui.selected.buttons[0])!=col||ui.selected.buttons[0].number!=nm;
			}
			else if(ui.selected.buttons.length==2) {
				if(ui.selected.buttons[0].number==ui.selected.buttons[1].number) {
					for(var i=0;i<ui.selected.buttons.length;i++){
						if(get.suit(ui.selected.buttons[i])==st) return false;
					}
				}
				else if(get.suit(ui.selected.buttons[0])==get.suit(ui.selected.buttons[1])) {
					for(var i=0;i<ui.selected.buttons.length;i++){
						if(ui.selected.buttons[i].number==nm) return false;
					}
				}
				else if(get.color(ui.selected.buttons[0])==get.color(ui.selected.buttons[1])) {
					return (ui.selected.buttons[0].number!=nm&&ui.selected.buttons[1].number!=nm)||(get.suit(ui.selected.buttons[0])!=st||get.suit(ui.selected.buttons[1])!=st)
				}
				return true;
			}
			else if(ui.selected.buttons.length==3) {
				var st0=get.suit(ui.selected.buttons[0]),st1=get.suit(ui.selected.buttons[1]),st2=get.suit(ui.selected.buttons[2]);
				var nm0=ui.selected.buttons[0].number,nm1=ui.selected.buttons[1].number,nm2=ui.selected.buttons[2].number;
				if(st2==st0||st2==st1) {
					return nm!=nm0&&nm!=nm1&&nm!=nm2;
				}
				else if(nm2==nm0||nm2==nm1) {
					return st!=st0&&st!=st1&&st!=st2;
				}
				else return (nm!=nm0&&nm!=nm1&&nm!=nm2)||(st!=st0&&st!=st1&&st!=st2);
			}
			else {
				for(var i=0;i<ui.selected.buttons.length;i++){
					if(ui.selected.buttons[i].number==nm) return false;
				}
				return true;
			}
		}).set('ai',function(button){
			var pl=_status.event.getTrigger().player;
			if(pl.countCards('h')>5) return -1;
			return get.value(button.link)-4.5;
		});
		"step 1"
		if(result.bool){
			var cds=player.getCards('h'),lks=result.links;
			cds.remove(lks);
			var scol=false,sst=false,snm=false;
			for(var i=0;i<lks.length;i++) {
				for(var j=i+1;j<lks.length;j++) {
					if(get.color(lks[i])==get.color(lks[j])) scol=true;
					if(get.suit(lks[i])==get.suit(lks[j])) sst=true;
					if(lks[i].number==lks[j].number) snm=true;
				}
			}
			trigger.player.discard(cds);
			if(scol==false) {
				player.draw(3);
			}
			else if(sst==false) {
				player.draw(2);
			}
			else if(snm==false) {
				player.draw();
			}
		}
	},
},
"XS_cihui":{
	trigger:{
		global:"useCardAfter",
	},
	filter:function(event,player){
		if(event.player==player) return false;
		if(player.hasSkill('XS_cihui_temp')) return false;
		if(!player.countCards('h')) return false;
		if(event.getParent(2).skill!=undefined) return false;
		if(get.type(event.card)!='basic') return false;
		if(!get.suit(event.card)&&!event.card.number&&!get.color(event.card)) return false;
		return event.targets.length==1&&event.targets[0].isAlive();
	},
	direct:true,
	content:function (){
		"step 0"
		var tp=get.type(trigger.card),st=get.suit(trigger.card),nm=trigger.card.number;
		player.chooseToDiscard('h',get.prompt('XS_cihui',trigger.player),'你可弃置一张与'+get.translation(trigger.card)+'同类型/花色/点数的手牌，使此牌额外结算1/2/3次。',1,function(card){
			return get.type(card)==tp||get.suit(card)==st||card.number==nm;
		}).set('ai',function(card){
			var pla=_status.event.getTrigger().player;
			var att=get.attitude(player,pla);
			if(att<=0) return -1;
			else {
				if(card.number==nm) {
					return 10-get.value(card);
				}
				else if(get.suit(card)==st) {
					return 8-get.value(card);
				}
				else if(get.type(card)==tp) {
					return 6-get.value(card);
				}
			}
			return -1;
		});
		"step 1"
		if(result.bool){
			player.addTempSkill('XS_cihui_temp','roundStart');
			var tp=get.type(trigger.card),st=get.suit(trigger.card),nm=trigger.card.number,temp=0; 
			var tp1=get.type(result.cards[0]),st1=get.suit(result.cards[0]),nm1=result.cards[0].number; 
			player.logSkill('XS_cihui',trigger.player);
			if(nm1==nm) {
				temp=3;
			}
			else if(st1==st) {
				temp=2;
			}
			else if(tp1==tp) {
				temp=1;
			}
			for(var i=0;i<temp;i++) {
				trigger.player.useCard(trigger.card,trigger.cards,trigger.targets,false);
			}
		}
	},
	subSkill:{
		temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_qinwang1":{
	charlotte:true,
	init:function(player){
		player.storage.XS_qinwang1=false;
	},
	filter:function (event,player){
		return !player.storage.XS_qinwang1&&(player.identity=='zhong'||player.identity=='nei');
	},
	prompt:'忠臣/内奸每局游戏限一次，出牌阶段，你可亮出你的忠臣身份牌，令主公摸1张牌',
	skillAnimation:true,
	animationColor:"metal",
	enable:"phaseUse",
	selectTarget:1,
	filterTarget:function (card,player,target){
		var zhu=false;
		switch(get.mode()){
			case 'identity':{
				zhu=target.identity=='zhu';
				break;
			}
			case 'versus':{
				zhu=target.identity=='zhu';
				break;
			}
		}
		return zhu;
	},
	content:function (){
		if(player.sex=='male') {
			game.playAudio('..','extension','血色衣冠','XS_qinwang1_male');
		}
		player.setIdentity('zhong');
		game.log(player,'的身份是“忠臣”');
		target.draw();
		player.storage.XS_qinwang1=true;
	},
	ai:{
		order:9,
		result:{
			target:1,
		},
	},
},
"XS_shenwu":{
	skillAnimation:true,
	animationColor:"soil",
	forced:true,
	unique:true,
	juexingji:true,
	init:function(player){
		player.storage.XS_shenwu=false;
		player.storage.XS_shenwu_mk=false;
	},
	trigger:{
		player:"phaseZhunbeiBegin",
	},
	priority:12,
	filter:function (event,player){
		if(!player.storage.XS_shenwu_mk) return false;
		return !player.storage.XS_shenwu;
	},
	content:function (){
		player.awakenSkill('XS_shenwu');
		player.storage.XS_shenwu=true;
		player.loseMaxHp();
	},
	ai:{
		combo:'XS_danli',
	},
	group:["XS_shenwu_rec"],
    subSkill:{
		rec:{
			trigger:{global:'dyingBegin'},
			filter:function(event,player){
				if(player.storage.XS_shenwu_mk) return false;
				if(event.player==player) return true;
				else {
					if(event.source&&event.source==player) return true;
				}
			},
			priority:-3,
			direct:true,
			content:function(){
				game.log('死了');
				player.storage.XS_shenwu_mk=true;
			},
            sub:true,
        },
    },
},
"XS_danli":{
	trigger:{
		player:"phaseUseAfter",
	},
	direct:true,
	content:function (){
		"step 0"
		var hs1=game.filterPlayer(function(current){
			return current.getHistory('damage').length>0;
		});
		var tgs=game.filterPlayer(function(current){
			return current.hasSkill('XS_danli_mark')&&current.storage.XS_danli_mark&&current.storage.XS_danli_mark>0;
		});
		if(!player.storage.XS_shenwu) {
			tgs.remove(hs1);
		}
		if(tgs.length) {
			var func=function(tar,his){
				var nm=0;
				for(var i=0;i<his.length;i++) {
					for(var j=0;i<his[i].targets.length;j++) {
						if(tar==his[i].targets[j]) nm++;
					}
				}
				return nm;
			}
			var str='你可对1名此阶段未受伤害的其他角色造成X点伤害，X为你于此阶段对其使用牌的次数。';
			if(player.storage.XS_shenwu) str='你可对1名其他角色造成X点伤害，X为你于此阶段对其使用牌的次数。';
			player.chooseTarget(get.prompt('XS_danli'),str,function(card,player,target){
				return tgs.contains(target);
			}).set('ai',function(target){
				var eff=get.damageEffect(target,player,player);
				return eff;
			});
		}
		else event.finish();
        "step 1"
		if(result.bool) {
			var tar=result.targets[0];
			player.logSkill('XS_danli',tar);
			var nm=tar.storage.XS_danli_mark;
			tar.damage(player,nm,'nocard');
		}
	},
	ai:{
		damage:true,
		expose:0.5,
	},
	group:["XS_danli_rec"],
    subSkill:{
		rec:{
			trigger:{player:'useCardToTargeted'},
			filter:function(event,player){
				if(!player.isPhaseUsing()) return false;
				if(!event.target) return false;
				return event.target!=player;
			},
			priority:-12,
			direct:true,
			content:function(){
				if(!trigger.target.hasSkill('XS_danli_mark')) {
					trigger.target.addTempSkill('XS_danli_mark');
					trigger.target.storage.XS_danli_mark=0;
					trigger.target.storage.XS_danli_mark1=player;
				}
				trigger.target.storage.XS_danli_mark++;
				trigger.target.markSkill('XS_danli_mark');
			},
            sub:true,
        },
		mark:{
			mark:true,
			onremove:function(player){
				player.unmarkSkill('XS_danli_mark');
				delete player.storage.XS_danli_mark;
			},
			intro:{
				content:function(storage,player,skill){
					var pla=player.storage.XS_danli_mark1;
					var nm=player.storage.XS_danli_mark;
					return '你已成为'+get.translation(pla)+'使用牌目标的次数： '+nm;
				},
			},
            sub:true,
        },
    },
},
"XS_chuangzhen":{
	audio:"ext:血色衣冠:2",
	skillAnimation:true,
	animationColor:"soil",
	forced:true,
	unique:true,
	juexingji:true,
	init:function(player){
		player.storage.XS_chuangzhen=false;
	},
	trigger:{
		player:"phaseZhunbeiBegin",
	},
	priority:12,
	filter:function (event,player){
		if(player.hp<=2) return false;
		if(!player.storage.XS_xiuluo) return false;
		var tp=player.storage.XS_xiuluo;
		for(var i=0;i<tp.length;i++) {
			if(tp[i]>=0) return false;
		}
		return !player.storage.XS_chuangzhen;
	},
	content:function (){
		"step 0"
		player.awakenSkill('XS_chuangzhen');
		player.storage.XS_chuangzhen=true;
		"step 1"
		player.loseHp();
		event.lt=['1','2','3'];
		player.chooseControl(event.lt,true).set('ai',function(event){
			return '3';
		}).set('prompt','令你的攻击距离增加一个数值');
		"step 2"
		player.storage.XS_xiuluo[0]=parseInt(result.control);
		event.lt.remove(result.control);
		"step 3"
		player.chooseControl(event.lt,true).set('ai',function(event){
			return '1';
		}).set('prompt','令你的手牌上限增加一个数值');
		"step 4"
		player.storage.XS_xiuluo[1]=parseInt(result.control);
		event.lt.remove(result.control);
		"step 5"
		player.storage.XS_xiuluo[2]=parseInt(event.lt[0]);
		player.syncStorage('XS_xiuluo');
	},
	ai:{
		combo:'XS_xiuluo',
	},
},
"XS_xiuluo":{
	init:function (player){
        player.storage.XS_xiuluo=[3,2,1];
    },
	mark:true,
	intro:{
		content:function(storage,player,skill){
			if(player.storage.XS_xiuluo) {
				var str='';
				if(player.storage.XS_xiuluo[0]>0) {
					str+='你的攻击距离 + '+player.storage.XS_xiuluo[0]+ '</br>';
				}
				if(player.storage.XS_xiuluo[1]>0) {
					str+='你的手牌上限 + '+player.storage.XS_xiuluo[1]+ '</br>';
				}
				if(player.storage.XS_xiuluo[2]>0) {
					str+='你使用杀的次数 + '+player.storage.XS_xiuluo[2];
				}
				return str;
			}
			return '“修罗”已无生效项';
		},
	},
	mod:{
		attackFrom:function (from,to,distance){
			if(from.storage.XS_xiuluo&&from.storage.XS_xiuluo[0]>0) {
				var nm=from.storage.XS_xiuluo[0];
				return distance-nm;
			}
		},
		maxHandcard:function(player,num){
			if(player.storage.XS_xiuluo&&player.storage.XS_xiuluo[1]>0) {
				var nm=player.storage.XS_xiuluo[1];
				return num+nm;
			}
		},
		cardUsable:function (card,player,num){
			if(player.storage.XS_xiuluo&&player.storage.XS_xiuluo[2]>0) {
				var nm=player.storage.XS_xiuluo[2];
				if(card.name=='sha') return num+nm;
			}
		},
	},
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"phaseJieshuBegin",
	},
	filter:function (event,player){
		if(!player.storage.XS_xiuluo) return false;
		var tp=player.storage.XS_xiuluo;
		for(var i=0;i<tp.length;i++) {
			if(tp[i]>=0) return true;
		}
    },
	frequent:true,
	content:function (){
		"step 0"
		event.lt=[];
		if(player.storage.XS_xiuluo[0]>=0) event.lt.push('攻击距离+'+player.storage.XS_xiuluo[0]);
		if(player.storage.XS_xiuluo[1]>=0) event.lt.push('手牌上限+'+player.storage.XS_xiuluo[1]);
		if(player.storage.XS_xiuluo[2]>=0) event.lt.push('使用杀的次数+'+player.storage.XS_xiuluo[2]);
		player.chooseControlList(event.lt).set('ai',function(event,player){
			return 0;
		}).set('prompt','你可移除一项效果，并摸(4-对应数值)张牌');
		"step 1"
		if(result.control!='cancel2') {
			var tp=event.lt[result.index];
			if(tp=='攻击距离+'+player.storage.XS_xiuluo[0]) {
				var nm=4-player.storage.XS_xiuluo[0];
				player.storage.XS_xiuluo[0]=-1;
			}
			else if(tp=='手牌上限+'+player.storage.XS_xiuluo[1]) {
				var nm=4-player.storage.XS_xiuluo[1];
				player.storage.XS_xiuluo[1]=-1;
			}
			else if(tp=='使用杀的次数+'+player.storage.XS_xiuluo[2]) {
				var nm=4-player.storage.XS_xiuluo[2];
				player.storage.XS_xiuluo[2]=-1;
			}
			player.draw(nm);
			player.syncStorage('XS_xiuluo');
		}
	},
},
"XS_zhengguo":{
	init:function (player){
        player.storage.XS_zhengguo=0;
    },
	enable:"phaseUse",
    usable:1,
	selectTarget:1,
	filterTarget:function (card,player,target){
		if(!player.storage.XS_lingnue) {
			return player==target;
		}
		else return player!=target;
    },
	content:function (){
		"step 0"
		if(!player.storage.XS_lingnue) {
			player.storage.XS_zhengguo++;
		}
		"step 1"
		if(!player.storage.XS_lingnue) {
			var nm=player.storage.XS_zhengguo;
			target.draw(nm);
			target.chooseToDiscard(2,'he',true);
		}
		else {
			var nm=player.storage.XS_zhengguo;
			target.draw(2);
			target.chooseToDiscard(nm,'he',true);
		}
    },
    ai:{
		order:1,
		expose:0.2,
		result:{
			target:function (player,target){
				if(!player.storage.XS_lingnue) return 1;
				else {
					var nm=2-player.storage.XS_zhengguo;
					return nm;
				}
            },
        },
    },
},
"XS_lingnue":{
	skillAnimation:true,
	animationColor:"soil",
	forced:true,
	unique:true,
	juexingji:true,
	init:function(player){
		player.storage.XS_lingnue=false;
	},
	trigger:{
		global:"roundStart",
	},
	priority:12,
	filter:function (event,player){
		if(!player.storage.XS_zhengguo) return false;
		var nm=game.countPlayer();
		return !player.storage.XS_lingnue&&player.storage.XS_zhengguo>=nm;
	},
	content:function (){
		player.awakenSkill('XS_lingnue');
		player.storage.XS_lingnue=true;
		player.draw(player.storage.XS_zhengguo);
	},	
	ai:{
		combo:'XS_yushi',
	},
},
"XS_yushi":{
	zhuanhuanji:true,
	init:function (player){
        player.storage.XS_yushi=[['sha'],['shan'],['tao']];
		player.storage.XS_yushi_use=0;
    },
	mark:true,
	intro:{
		content:function(storage,player,skill){
			return '每回合限1次，其他角色使用或打出的 <span class="bluetext">'+get.translation(player.storage.XS_yushi[0])+' </span> 进入弃牌堆时，你可获得之';
		},
	},
	trigger:{
		global:["useCardAfter","respondAfter"],
	},
	usable:1,
	frequent:true,
	filter:function (event,player){
		if(event.player==player) return false;
		if(player.storage.XS_yushi[0].contains(event.card.name)) {
			return get.itemtype(event.cards)=='cards'&&get.position(event.cards[0],true)=='o';
		}
		return false;
	},
	content:function(){
		"step 0"
		player.gain(trigger.cards,'gain2');
		player.storage.XS_yushi_use++;
		"step 1"
		var temp=player.storage.XS_yushi.shift();
		player.storage.XS_yushi.push(temp);
		player.syncStorage('XS_yushi');
	},
	ai:{
		threaten:function (player,target){
			if(player.storage.XS_moubian) return 1.5;
        },
	},
},
"XS_moubian":{
	skillAnimation:true,
	animationColor:"soil",
	trigger:{
		player:"phaseZhunbeiBegin",
	},
	forced:true,
	unique:true,
	juexingji:true,
	init:function(player){
		player.storage.XS_moubian=false;
	},
	filter:function (event,player){
		if(!player.storage.XS_yushi_use||player.storage.XS_yushi_use<4) return false;
		return !player.storage.XS_moubian;
	},
	content:function (){
		"step 0"
		player.awakenSkill('XS_moubian');
		player.storage.XS_moubian=true;
		player.recover();
		player.loseMaxHp();
		"step 1"
		var lt=['杀','闪','桃'];
		player.chooseControl(lt,true).set('ai',function(event,player){
			return '桃';
		}).set('prompt','将“酒”加入到“驭师”的任意一个状态中');
		"step 2"
		if(result.control) {
			for(var i=0;i<player.storage.XS_yushi.length;i++) {
				switch(result.control){
					case '杀':
						if(player.storage.XS_yushi[i][0]=='sha') player.storage.XS_yushi[i].push('jiu');
					break;
					case '闪':
						if(player.storage.XS_yushi[i][0]=='shan') player.storage.XS_yushi[i].push('jiu');
					break;
					case '桃':
						if(player.storage.XS_yushi[i][0]=='tao') player.storage.XS_yushi[i].push('jiu');
					break;
				}
			}
			player.syncStorage('XS_yushi');
		}
	},
	ai:{
		combo:'XS_yushi',
	},
},
"XS_lancai":{
	unique:true,
	zhuSkill:true,
	audio:2,
    enable:"phaseUse",
    usable:1,
    filterTarget:function (card,player,target){
        return target!=player&&target.group==player.group;
    },
	filter:function (event,player){
		if(!player.hasZhuSkill('XS_lancai')) return false;	
        return player.countCards('h');
    },
	filterCard:function (card){
        return true;
    },
	check:function (card){        
        return card.name=='sha';
    },
	position:'h',
	discard:false,
	prepare:"give2",
    selectTarget:1,
    content:function (){
        "step 0"
		target.gain(cards,player); 
		"step 1"
		if(lib.filter.cardEnabled(cards[0],target)) {
			target.chooseUseTarget(cards[0],true);
		}
    },
    ai:{
		order:9,
		expose:0.2,
		result:{
			target:1,
		},
    },
},
"XS_xidi":{
	trigger:{
		player:"phaseDrawBegin",
	},
	priority:2,
	filter:function (event,player){
		return !player.isMaxEquip(true)&&player.canMoveCard(false);
	},
	check:function (event,player){
		return player.countCards('h')>1&&player.canMoveCard(true);
	},
	"prompt2":function (event,player){
		return '是否跳过摸牌阶段并移动场上一张牌？';
	},
	content:function (){
		player.moveCard();
		trigger.cancel();
	},
	ai:{
		threaten:1.2,
		expose:0.2,
	},
	group:["XS_xidi_draw"],
    subSkill:{
		draw:{
			trigger:{
				player:"phaseUseBegin",
			},
			priority:2,
			filter:function (event,player){
				return !player.isMaxEquip(true)&&player.canMoveCard(false);
			},
			check:function (event,player){
				return !player.needsToDiscard()&&player.canMoveCard(true);
			},
			"prompt2":function (event,player){
				return '是否跳过出牌阶段并移动场上一张牌？';
			},
			content:function (){
				player.moveCard();
				trigger.cancel();
			},
			sub:true,
        },
    },
},
"XS_zuoyou":{
	trigger:{
		player:"phaseAfter",
	},
	priority:9,
	filter:function (event,player){
		if(!player.countCards('e')) return false;
		return player.isMaxEquip(true);
	},
	direct:true,
	content:function (){
		"step 0"
		player.chooseCardTarget({
			filterCard:function(card){
				return get.type(card)=='equip';
			},
			position:"e",
			selectCard:[1,2],
			selectTarget:function (card){
				return ui.selected.cards.length;
			},
			filterTarget:function(card,player,target){
				return true;
			},
			ai1:function(card){
				return 6.5-get.value(card);
			},
			ai2:function(target){
				var pla=_status.event.player
				return get.attitude(pla,target);
			},
			prompt:'是否发动【佐佑】？</br></br>你可弃置装备区中至多2张牌，令等量角色各获得1个不同的主要阶段。',
		});
		"step 1"
		if(result.bool){
			player.discard(result.cards);
			event.lt=['判定阶段','摸牌阶段','出牌阶段','弃牌阶段'];
			event.tars=result.targets;
			player.logSkill('XS_zuoyou',event.tars);
		}
		else event.finish();
		"step 2"
		if(event.tars.length){
			var target=event.tars.shift();
			event.current=target;
		}
		else event.finish();
		"step 3"
		if(event.current){
			player.chooseControl(event.lt,true).set('prompt','佐佑：令'+get.translation(event.current)+'获得一个主要阶段。').set('ai',function(){
				var att=get.attitude(player,event.current);
				if(att>0) {
					if(event.lt.contains('摸牌阶段')) return '摸牌阶段';
					if(event.lt.contains('出牌阶段')) return '出牌阶段';
				}
				else {
					if(event.lt.contains('弃牌阶段')) return '弃牌阶段';
				}
				return '判定阶段';
			});
		}
		else event.finish();
		"step 4"
		event.lt.remove(result.control);
		switch(result.control){
			case '判定阶段':
				event.current.phaseJudge();
			break;
			case '摸牌阶段':
				event.current.phaseDraw();
			break;
			case '出牌阶段':
				event.current.stat.push({card:{},skill:{}});
				event.current.phaseUse();
			break;
			case '弃牌阶段':
				event.current.phaseDiscard();
			break;
		}
		"step 5"
		event.goto(2);
	},
	ai:{
		expose:0.3,
	},
},
"XS_qice":{
	priority:13,
	trigger:{
		player:["damageAfter"],
		source:["damageAfter"],
	},
	filter:function (event,player){
		if(event.player==player) {
			return player.countCards('h')!=player.getDamagedHp();
		}
		else {
			return player.countCards('h')!=player.hp;
		}
	},
	"prompt2":function (event,player){
		if(event.player==player) {
			var nm=player.countCards('h')-player.getDamagedHp();
			if(nm<0) return '是否摸'+(-nm)+'张牌？';
			else return '是否弃置'+nm+'张牌，并对'+get.translation(event.source)+'造成1点伤害？';
		}
		else {
			var nm=player.countCards('h')-player.hp;
			if(nm<0) return '是否摸'+(-nm)+'张牌？';
			else return '是否弃置'+nm+'张牌，并对'+get.translation(event.player)+'造成1点伤害？';
		}
	},
	check:function (event,player){
		if(event.player==player) {
			var nm=player.countCards('h')-player.getDamagedHp();
			if(nm==-1||nm>0) return true;
		}
		else {
			var nm=player.countCards('h')-player.hp;
			if(nm==-1||nm>0) return true;
		}
	},
	content:function (){
		if(trigger.player==player) {
			var nm=player.countCards('h')-player.getDamagedHp();
			if(nm<0) {
				player.draw(-nm);
			}
			else {
				player.chooseToDiscard('h',nm,true);
				trigger.source.damage(1,player,'nocard');
			}
		}
		else {
			var nm=player.countCards('h')-player.hp;
			if(nm<0) {
				player.draw(-nm);
			}
			else {
				player.chooseToDiscard('h',nm,true);
				trigger.player.damage(1,player,'nocard');
			}
		}
	},
},
"XS_fusao":{
	audio:"ext:血色衣冠:2",
	init:function (player){
		player.storage.XS_fusao=['sha','shan','jiu','tao'];
		player.markSkill('XS_fusao');
	},
	intro:{
		content:function (storage){
			if(!storage.length) return '没有可以使用的牌';
			else {
				var str='剩余可使用的牌有：'+get.translation(storage);
				return str;
			}
		},
	},
	onremove:function(player){
		delete player.storage.XS_fusao;
		player.unmarkSkill("XS_fusao");
	},
	enable:"chooseToUse",
	filter:function (event,player){
		if(player.storage.XS_fusao.length<=0) return false;
		if(event.filterCard({name:'sha'},player,event)&&player.storage.XS_fusao.contains('sha')) return true;
		if(event.filterCard({name:'jiu'},player,event)&&player.storage.XS_fusao.contains('jiu')) return true;
		if(event.filterCard({name:'tao'},player,event)&&player.storage.XS_fusao.contains('tao')) return true;
		if(event.filterCard({name:'shan'},player,event)&&player.storage.XS_fusao.contains('shan')) return true;
		return false;
	},
	chooseButton:{
		dialog:function (event,player){
			var list=[];
			if(event.filterCard({name:'sha'},player,event)&&player.storage.XS_fusao.contains('sha')){
				list.push(['基本','','sha']);}
			if(event.filterCard({name:'tao'},player,event)&&player.storage.XS_fusao.contains('tao')) {
				list.push(['基本','','tao']);}
			if(event.filterCard({name:'jiu'},player,event)&&player.storage.XS_fusao.contains('jiu')) {
				list.push(['基本','','jiu']);}
			if(event.filterCard({name:'shan'},player,event)&&player.storage.XS_fusao.contains('shan')) {
				list.push(['基本','','shan']);}
			return ui.create.dialog("赋骚",[list,"vcard"],"hidden");
		},
		check:function (button){
			var player=get.player();
			var card={name:button.link[2]};
			if(card.name=='jiu') {
				if(player.hp<=0) return 2.5;
			}
			if(card.name=='shan') {
				return 3;
			}
			if(game.hasPlayer(function(current){
				return player.canUse(card,current)&&get.effect(current,card,player,player)>0;
			})){
				if(card.name=='sha'){
					return 2.9;
				}
				else if(card.name=='tao'||card.name=='shan'){
					return 4;
				}
			}
			return 0;
		},
		backup:function (links,player){
			return {
				filterCard:function (card){return false;},
				popname:true,
				selectCard:-1,
				viewAs:{
					name:links[0][2],
				}, 
				onuse:function(result,player){
					player.logSkill('XS_fusao');
					player.storage.XS_fusao.remove(links[0][2]);
					player.syncStorage('XS_fusao');
					if(player.storage.XS_fusao.length==0) {
						player.unmarkSkill('XS_fusao');
					}
				}  
			}
		},
		prompt:function (links,player){
			return '视为使用1张'+get.translation(links[0][2]);
		},
	},
	ai:{
		order:function (){
			var player=get.player();
			var event=_status.event;
			if(event.type=='dying'){
				if(event.filterCard({name:'tao'},player,event))return 0.5;
			}
			else{
				if(event.filterCard({name:'tao'},player,event)||event.filterCard({name:'shan'},player,event))return 4;
				if(event.filterCard({name:'sha'},player,event))return 2.9;
			}
			return 0;
		},
		save:true,
		respondSha:true,
		respondShan:true,
		skillTagFilter:function (player,tag,arg){
			if(tag=='save'&&!player.storage.XS_fusao.contains('tao')&&!player.storage.XS_fusao.contains('jiu')){
				return false;
			}
			if(tag=='respondSha'&&!player.storage.XS_fusao.contains('sha')){
				return false;
			}
			if(tag=='respondShan'&&!player.storage.XS_fusao.contains('shan')){
				return false;
			}
		},
		result:{
			player:function (player){
				if(_status.event.type=='dying')return get.attitude(player,_status.event.dying);
				else return 1;
			},
		},
	},
	group:["XS_fusao_re"],
    subSkill:{
		re:{
			"prompt2":function (event,player){
				return '是否失去1点体力上限，重置“赋骚”的使用次数？';
			},
			trigger:{
				global:"roundStart",
			},
			check:function (event,player){
				return player.isDamaged()&&player.maxHp>2;
			},
			priority:8,
			filter:function(event,player){
				return player.storage.XS_fusao.length==0&&player.maxHp>1;
			},
			content:function (){
				player.loseMaxHp();
				player.storage.XS_fusao=['sha','shan','jiu','tao'];
				player.markSkill('XS_fusao');
			},
			ai:{
				useShan:true,
				skillTagFilter:function (player,tag,arg){
					if(player.storage.XS_fusao!=['shan']||player.maxHp<2) return false; 
				},
			},
            sub:true,
        },
    },
},
"XS_youfen":{
	audio:"ext:血色衣冠:2",
trigger:{
		player:'phaseUseBefore'
	},
	filter:function (event,player){
		return player.countCards('he',{type:'equip'});
	},
	direct:true,
	content:function(){
		"step 0"
		if(player.isMinHp(true)) {
			player.chooseBool(get.prompt('XS_youfen'),'是否使“忧愤”的效果改为“令你和任意名其他角色视为使用X张五谷丰登，然后失去此技能，X为所选其他角色数。”？').set('ai',function(){
				var plas=game.filterPlayer(function(current){
					return player!=current&&get.attitude(player,current)>=0;
				});
				return plas.length>2;
			});
		}
		else event.goto(3);
		"step 1"
		if(result.bool) {
			player.chooseTarget(get.prompt('XS_youfen'),'令你和任意名其他角色视为使用X张五谷丰登。',[1,Infinity],false,function(card,player,target){
				return target!=player;
			}).set('ai',function(target){
				var att=get.attitude(player,target);
				return att+0.01;
			});
		}
		else event.goto(3);
		"step 2"
		if(result.bool){
			player.logSkill('XS_youfen',result.targets);
			var nm=result.targets.length;
			var tars=result.targets.concat(player);
			for(var i=0;i<nm;i++) {
				player.useCard({name:'wugu',isCard:true},tars);
			}
			player.removeSkill('XS_youfen');
			event.finish();
		}
		else event.finish();
		"step 3"
		player.chooseCardTarget({
			filterCard:function(card){
				return get.type(card)=='equip';
			},
			position:"he",
			selectCard:1,
			selectTarget:1,
			filterTarget:function(card,player,target){
				return true;
			},
			ai1:function(card){
				return 5.1-get.value(card);
			},
			ai2:function(target){
				var att=get.attitude(_status.event.player,target);
				var hs=target.countCards('h')+0.01;
				return att/hs;
			},
			prompt:'是否发动【忧愤】？</br></br>你可重铸1张装备牌令1名角色视为使用1张无中生有。'
		});
		"step 4"
		if(result.bool){
			player.logSkill('XS_youfen',result.targets[0]);
			player.chongzhuCards(result.cards);
			result.targets[0].useCard({name:'wuzhong'},result.targets[0],false);
		}
		else event.finish();
	},
},
"XS_benxi":{
	audio:"ext:血色衣冠:2",
	mod:{
		globalFrom:function (from,to,current){
			if(!from.countCards('e')) return current-1;
		},
	},
	trigger:{
		player:"phaseUseBegin",
	},
	filter:function (event,player){
		return game.hasPlayer(function(current){
			return current!=player&&player.inRange(current)&&current.countCards('e');
		});
	},
	priority:3,
	direct:true,
	content:function (){
		"step 0"
		var targetprompt=['移走','得到'];
		player.chooseTarget(get.prompt('XS_benxi'),2,'是否移动攻击范围内1名其他角色装备区的1张牌？',function(card,player,target){
			if(!ui.selected.targets.length) {
				return target.countCards('e')&&player.inRange(target);
			}
			else return target!=ui.selected.targets[0];
        }).set('ai',function(target){
			var att=get.attitude(player,target);
			if(!ui.selected.targets.length) {
				if(target.getEquip('baiyin')) return att;
				return -att;
			}
			else {
				var eqs=ui.selected.targets[0].getCards('e');
				for(var i=0;i<eqs.length;i++) {
					if(!target.isEmpty(get.subtype(eqs[i]))) att/=5;
				}
				if(target==player) att*=3;
				return att;
			}
			return -1;
        }).set('targetprompt',targetprompt);
		"step 1"
		if(result.bool){
			event.tar1=result.targets[0];
			event.tar2=result.targets[1];
			player.chooseCardButton('移动'+get.translation(event.tar1)+'场上一张装备牌至'+get.translation(event.tar2)+'的对应区域',event.tar1.getCards('e'),1,false).ai=function(button){
				var att=get.attitude(player,event.tar1);
				if(att>0) {
					if(button.link.name=='baiyin') return 20;
					else return 6-get.value(button.link);
				}
				else {
					if(button.link.name=='baiyin') return 1;
					else return get.value(button.link)-1;
				}
			}
        }
		else event.finish();
		"step 2"
		if(result.bool){
			player.logSkill('XS_benxi',result.targets);
			var eq=result.links[0];
			event.tar1.$give(eq,event.tar2);
			event.tar2.equip(eq);
		}	
	},
	ai:{
		expose:0.3,
	},
},
"XS_baijiang":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:["phaseAfter"],
	},
	priority:5,
	check:function (event,player){
		return true;
	},
	"prompt2":function (event,player){
		return '是否进行3次判定？若结果为红的次数为0/1/2/3，你：失去1点体力/摸1张牌/获得1名其他角色1张牌/获得4个主要阶段。你可弃置装备区的牌，使之计入次数。';
	},
	content:function (){
		"step 0"
		event.nm1=3;
		event.nm2=0;
		"step 1"
		if(event.nm1>0){
			event.nm1--;
			player.judge('拜将',function(card){
				if(get.color(card)=='red') return 3;
				return -3;
			});
		}
		else event.goto(3);
		"step 2"
		if(result.bool){
			event.nm2++;
		}
		event.goto(1);
		"step 3"
		if(event.nm2<3&&player.countCards('e')) {
			var tp=3-event.nm2;
			player.chooseCardButton('是否弃置装备区的牌，使之计入【拜将】的数量？（已有：'+event.nm2+'）',player.getCards('e'),[1,tp],false).ai=function(button){
				if(event.nm2==0||event.nm2==2) {
					return 8-get.value(button.link);
				}
				return 4-get.value(button.link);
			}
		}
		else event.goto(5);
		"step 4"
		if(result.bool){
			event.nm2+=result.links.length;
			player.discard(result.links);
		}
		"step 5"
		if(event.nm2==0) {
			player.loseHp();
			event.finish();
		}
		else if(event.nm2==1) {
			player.draw();
			event.finish();
		}
		else if(event.nm2==2) {
			player.chooseTarget('你可获得1名其他角色1张牌',1,function(card,player,target){
				return target.countCards('he')&&target.countGainableCards(player,'he')>0;
			}).ai=function(target){
				var att=get.attitude(player,target);
				return -att;
			}
		}
		else if(event.nm2==3) {
			player.phaseJudge();
			player.phaseDraw();
			player.phaseUse();
			player.phaseDiscard();
			event.finish();
		}
		"step 6"
		if(result.bool) {
			player.gainPlayerCard('he',result.targets[0],1,false);
		}
	},
},
"XS_yisheng":{
	trigger:{
		player:["taoBegin"],
	},	
	audio:"ext:血色衣冠:2",
	priority:90,
	forced:true,
	filter:function (event,player){
		var nm=0;
		if(!player.countCards('e')) nm++;
		if(player.isMinHp(false)) nm++;
		if(!player.hasSkill('XS_yisheng_temp')) nm++;
		return nm>0;
	},
	content:function (){
		var nm=0;
		if(!player.countCards('e')) nm++;
		if(player.isMinHp(false)) nm++;
		if(!player.hasSkill('XS_yisheng_temp')) nm++;
		trigger.baseDamage+=nm;
	},
	ai:{
		threaten:1.4,
	},
	group:["XS_yisheng_mark"],
    subSkill:{
		mark:{
			trigger:{
				global:"useCardEnd",
			},
			direct:true,
			filter:function (event,player){
				if(event.card.name!='tao') return false;
				return !player.hasSkill('XS_yisheng_temp');
			},
			priority:-1,
			content:function (){
				player.addTempSkill('XS_yisheng_temp','roundStart');
			},
			sub:true,
        },
		temp:{
			charlotte:true,
			sub:true,
        },
    },
},
"XS_binglun":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:1,
	filter:function (event,player){
		return game.hasPlayer(function(current){
			return current!=player&&current.isDamaged();
		});
	},
	filterCard:true,
	selectCard:1,
	position:"he",
	discard:false,
	filterTarget:function (card,player,target){
		return player!=target&&target.isDamaged();
	},
	selectTarget:1,
	content:function (){
		player.useCard({name:'tao'},cards,target);
		target.addTempSkill('XS_binglun_mark',{player:'phaseJieshuEnd'});
		target.storage.XS_binglun_mark=player;
		target.markSkillCharacter('XS_binglun_mark',player,'病论','下个摸牌阶段改为：'+get.translation(player)+'摸2张牌并交给你2张牌');
	},
	ai:{
		order:9,
		result:{
			target:2,
		},
		expose:0.3,
	},
	subSkill:{
		mark:{
			onremove:function(player){
				player.unmarkSkill('XS_binglun_mark');
			},
			trigger:{
				player:"phaseDrawBefore",
			},
			forced:true,
			filter:function (event,player){
				return player.storage.XS_binglun_mark;
			},
			charlotte:true,
			content:function (){
				"step 0"
				player.storage.XS_binglun_mark.draw(2);
				"step 1"
				player.storage.XS_binglun_mark.chooseCard('病论：交给'+get.translation(player)+'2张牌','he',2,true).ai=function(card){
					if(get.position(card)=='e') return get.value(card);
					return get.value(card)-4;
				}
				"step 2"
				if(result.bool){
					player.gain(result.cards,player.storage.XS_binglun_mark,'giveAuto');
				}
				"step 3"
				player.removeSkill('XS_binglun_mark');
				trigger.cancel();
			},
			sub:true,
        },
    },
},	
"XS_wangqing":{
	init:function (player){
		player.storage.XS_wangqing=0;
	},
	filter:function (event,player){
        return player.countCards('h');
    },
    trigger:{
        player:"phaseBefore",
    },
    direct:true,
    content:function (){
		"step 0"
		player.chooseToDiscard(get.prompt2('XS_wangqing'),[1,player.hp]).set('ai',function(card){
			return 5-get.value(card);
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_wangqing');
			player.storage.XS_wangqing=result.cards.length;
		}
    },
	group:["XS_wangqing_draw"],
    subSkill:{
		draw:{
			trigger:{
				player:"phaseAfter",
			},
			filter:function (event,player){
				return player.storage.XS_wangqing>0;
			},
			forced:true,
			content:function (){
				player.draw(player.storage.XS_wangqing);
				player.storage.XS_wangqing=0;
			},
            sub:true,
        },
    },
},
"XS_doucai":{
	trigger:{
		global:'phaseDrawBegin2'
	},
	direct:true,
	filter:function(event,player){
		return event.player!=player&&event.player.isDamaged()&&!event.numFixed;
	},
	content:function(){
		'step 0'
		event.bl=0;
		var str='令'+get.translation(player)+'摸1张牌？如此你回复1点体力。';
		if(trigger.player.hp<player.hp) {
			event.bl=1;
			str='于摸牌阶段少摸1张牌，并'+str;
		}
		event.pla=player;
		trigger.player.chooseBool(get.prompt('XS_doucai'),'是否'+str).ai=function(event,player){
			if(event.bl==0) return true;
			else {
				var tri=_status.event.getTrigger();
				return get.attitude(tri.player,event.pla)>0;
			}
		};
        'step 1'
		if(result.bool){
			player.logSkill('XS_doucai',trigger.player);
			if(event.bl==0) {
				player.draw();
				trigger.player.recover();
			}
			else {
				player.draw();
				trigger.player.recover();
				trigger.num--;
			}
        }
	},
},
"XS_guolun":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:'phaseBefore'
	},
	priority:22,
	check:function (event,player){
		if(player.countCards('h',{color:'black'})<=1) return true;
		if(player.countCards('h',{color:'red'})<=1) return true;
		return false;
	},
	content:function(){
		"step 0"
		player.showCards(player.getCards('h'));
		"step 1"
		if(!player.countCards('h')) {
			player.chooseControl(['shunshou','wuzhong','cancel2']).set('ai',function(event){
				return 'wuzhong';
			}).set('prompt','选择视为使用一种');
		}
		else event.goto(3);
		"step 2"
		if(result.control&&result.control!='cancel2'){
			player.chooseUseTarget({name:result.control,isCard:true},true);
        }
		event.finish();
		"step 3"
		var suits=[];
		if(player.countCards('h',{color:'black'})) suits.push('shunshou');
		if(player.countCards('h',{color:'red'})) suits.push('wuzhong');
		suits.push('cancel2');
		player.chooseControl(suits).set('ai',function(event){
			if(player.countCards('h',{color:'black'})==1) return 'shunshou';
			if(player.countCards('h',{color:'red'})==1) return 'wuzhong';
			return 'cancel2';
        }).set('prompt','你可将全部黑色手牌当作顺手牵羊使用，或将全部红色手牌当作无中生有使用');
		"step 4"
		if(result.control&&result.control!='cancel2'){
			if(result.control=='shunshou') var cards=player.getCards('h',{color:'black'});
			else var cards=player.getCards('h',{color:'red'});
			player.chooseUseTarget({name:result.control},cards,true,false).viewAs=true;
        }
	},
},
"XS_zhiyong":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"damageBefore",
	},
	filter:function (event,player){
		if(event.num<1) return false;
        return player.countCards('h')>0||event.source.countCards('h')>0;
    },
	logTarget:'source',
	priority:-1,
	check:function(event,player){
		return true;
	},
	content:function (){
        "step 0"
		player.chooseCard('是否交给'+get.translation(trigger.source)+'1张手牌？若你手牌花色因此减少，此伤害-1。','h').ai=function(card){
			var suit1=get.suit(card);
			if(player.countCards('h',{suit:suit1})==1) {
				return 3-get.value(card);
			}
			return;
		}
		"step 1"
		if(result.bool) {
			trigger.source.gain(result.cards[0],player,'giveAuto');
			if(player.countCards('h',{suit:get.suit(result.cards[0])})==1) trigger.cancel();
			event.finish();
		}
		else event.goto(2);
		"step 2"
		if(trigger.source.countCards('h')) {
			player.gainPlayerCard(1,trigger.source,'h');
		}
    },
	ai:{
		effect:{
			target:function(card,player,target){
				if(player.countCards('h')>1&&get.tag(card,'damage')){
					if(!target.hasFriend()) return;
					if(player.hasSkillTag('jueqing',false,target)) return [1,-1.5];
					if(get.attitude(target,player)<0) return [1,1];
				}
			}
		}
	},
},
"XS_xionghao":{
	audio:"ext:血色衣冠:2",
	init:function (player){
		player.storage.XS_xionghao=['a','b','c'];
		player.storage.XS_xionghao_phase=[];
	},
	mark:true,
	marktext:"豪",
	intro:{
		content:function (storage,player,skill){
			var str=[];
			var getStr=function(num1){
				switch(num1){
					case 'a':return '小于';
					case 'b':return '等于';
					case 'c':return '大于';
				}
				return num1;
			};
			var temp=player.storage.XS_xionghao;
			for(var i=0;i<temp.length;i++) {
				str.push(getStr(temp[i]));
			}
			return '其他角色回合结束时，若其：体力值 <span class="bluetext">'+str[0]+'</span> 你，你获得一个判定阶段；体力值 <span class="bluetext">'+str[1]+'</span> 你，你获得一个摸牌阶段；体力值 <span class="bluetext">'+str[2]+'</span> 你，你获得一个出牌阶段';
		},
	},
	trigger:{
		global:"phaseAfter",
	},
	forced:true,
	filter:function (event,player){
        return event.player!=player;
    },
	content:function (){
		"step 0"
		var temp=player.storage.XS_xionghao;
		switch(temp[0]){
			case 'a':if(trigger.player.hp<player.hp) player.phaseJudge();
			break;
			case 'b':if(trigger.player.hp==player.hp) player.phaseJudge();
			break;
			case 'c':if(trigger.player.hp>player.hp) player.phaseJudge();
			break;
		}
		switch(temp[1]){
			case 'a':if(trigger.player.hp<player.hp) player.phaseDraw();
			break;
			case 'b':if(trigger.player.hp==player.hp) player.phaseDraw();
			break;
			case 'c':if(trigger.player.hp>player.hp) player.phaseDraw();
			break;
		}
		switch(temp[2]){
			case 'a':if(trigger.player.hp<player.hp) player.phaseUse();
			break;
			case 'b':if(trigger.player.hp==player.hp) player.phaseUse();
			break;
			case 'c':if(trigger.player.hp>player.hp) player.phaseUse();
			break;
		}
	},
	group:["XS_xionghao_skip","XS_xionghao_rec"],
    subSkill:{
        skip:{
			trigger:{
				player:"phaseBefore",
			},
			priority:12,
			firstDo:true,
			direct:true,
			content:function (){
				trigger.cancel();
			},
            sub:true,
        },
		rec:{
			trigger:{
				player:["phaseJudgeBefore","phaseDrawBefore","phaseUseBefore"],
			},
			priority:11,
			firstDo:true,
			direct:true,
			content:function (){
				if(trigger.name=="phaseJudge") player.storage.XS_xionghao_phase.remove('phaseJudge');
				if(trigger.name=="phaseDraw") player.storage.XS_xionghao_phase.remove('phaseDraw');
				if(trigger.name=="phaseUse") player.storage.XS_xionghao_phase.remove('phaseUse');
			},
            sub:true,
        },
    },
},
"XS_zhuanghuai":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:["roundStart"],
	},
	forced:true,
	priority:6,
	content:function (){
		"step 0"
		if(player.storage.XS_xionghao_phase.length) {
			var ps=player.storage.XS_xionghao_phase;
			for(var i=0;i<ps.length;i++) {
				switch(ps[i]){
					case 'phaseJudge':player.phaseJudge();break;
					case 'phaseDraw':player.phaseDraw();break;
					case 'phaseUse':player.phaseUse();break;
				}
			}
			event.goto(6);
		}
		else {
			event.choices=['小于','等于','大于'];
			event.getNum=function(str){
				switch(str){
					case '小于':return 'a';
					case '等于':return 'b';
					case '大于':return 'c';
				}
				return str;
			};
		}
		"step 1"
		player.chooseControl(event.choices,true).set('ai',function(){
			var tp=event.choices.randomGet();
			return tp;
		}).set('prompt','雄豪：体力（）你的其他角色回合结束时，你获得一个判定阶段');
		"step 2"
		if(result.control){
			event.choices.remove(result.control);
			player.storage.XS_xionghao[0]=event.getNum(result.control);
		}
		"step 3"
		player.chooseControl(event.choices,true).set('ai',function(){
			var tp=event.choices.randomGet();
			return tp;
		}).set('prompt','雄豪：体力（）你的其他角色回合结束时，你获得一个摸牌阶段');
		"step 4"
		if(result.control){
			event.choices.remove(result.control);
			player.storage.XS_xionghao[1]=event.getNum(result.control);
		}
		"step 5"
		player.storage.XS_xionghao[2]=event.getNum(event.choices[0]);
		player.syncStorage('XS_xionghao');
		"step 6"
		player.phaseDiscard();
		player.storage.XS_xionghao_phase=['phaseJudge','phaseDraw','phaseUse'];
	},
	ai:{
		combo:'XS_xionghao'
	},
},
"XS_chendun":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:["loseEnd"],
	},
	logTarget:"player",
	usable:1,
	check:function (event,player){
		var att=get.attitude(player,event.player);
		return att>0;
	},
	filter:function (event,player){
		var card1=event.cards;
		return card1&&card1.length>1&&event.player.isDamaged()&&event.player.isAlive();;
	},
	content:function (){
		trigger.player.recover();
	},
	ai:{
		threaten:1.2,
		expose:0.2,
	},	
},
"XS_moshi":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:["phaseAfter"],
	},
	priority:9,
	filter:function (player){
		return game.hasPlayer(function(current){
			return current.countCards('he');
		});
    },
	direct:true,
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt2('XS_moshi'),function(card,player,target){
			return target.countCards('he')&&target!=player;
		}).ai=function(target){
			if(target.hasSkill('XS_xionghao')) return 0;
			var att=get.attitude(player,target);
			return att;
		}
		"step 1"
		if(result.bool) {
			event.target1=result.targets[0];
			player.logSkill('XS_moshi',event.target1);
			var str='弃置至少1张牌，如此你获得一个额外的回合且于该回合至多使用等量的牌。';
			var next=event.target1.chooseToDiscard('he',[1,Infinity],true);
			next.prompt2=str;
			next.ai=function(card){
				return 4-get.value(card);
			}
			next.autodelay=true;
		}
		"step 2"
        if(result.bool){
			game.log(event.target1,'获得了一个额外的回合');
			event.target1.storage.XS_moshi1=result.cards.length;
			event.target1.addTempSkill('XS_moshi1');
			event.target1.insertPhase();
        }
	},
	ai:{
		expose:0.3,
	},	
},
"XS_moshi1":{
	mark:true,
	charlotte:true,
	marktext:"墨",
	intro:{
		content:function(storage,player,skill){
			return '本回合至多可以使用'+player.storage.XS_moshi1+'张牌';
		},
	},
	mod:{
		cardEnabled:function(card,player){
			var num1=player.countUsed(null,true);
			if(num1>=player.storage.XS_moshi1) return false;
		}		
	},
	ai:{presha:true,pretao:true,nokeep:true},	
},
"XS_baishou":{
	trigger:{global:'phaseJieshuBegin'},
	filter:function(event,player){
		return event.player!=player&&player.countUsed()>0;
	},
	frequent:true,
	content:function(){
		player.draw();
		player.stat.push({card:{},skill:{}});
		player.phaseUse();
	},		
},
"XS_xuanjing":{
	enable:["chooseToUse"],
	filterCard:function (){return true},
	selectCard:1,
	position:'he',
	viewAsFilter:function (player){
		return player.isHealthy()&&player.countCards('he');
	},
	viewAs:{
		name:"shan",
	},
	onuse:function (result,player){
		player.loseHp();
	},
	prompt:"将一张牌当作闪使用并失去1点体力",
	check:function (card){
		var player=_status.event.player;
		return 5.5-get.value(card);
	},
	ai:{
		respondShan:true,
		skillTagFilter:function(player){
			if(!player.countCards('he')||!player.isHealthy()) return false;
		},
		effect:{
			target:function(card,player,target,current){
				if(get.tag(card,'respondShan')&&target.countCards('he')&&target.isHealthy()) return 0.7;
			}
		}
	},
	group:["XS_xuanjing_wu"],
	subSkill:{
        wu:{
			enable:["chooseToUse"],
			filterCard:function (){return true},
			selectCard:1,
			position:'he',
			viewAsFilter:function (player){
				return player.hp==1&&player.countCards('he');
			},
			viewAs:{
				name:"wuxie",
			},
			onuse:function (result,player){
				player.recover();
			},
			prompt:"将一张牌当作无懈可击并回复1点体力",
			check:function (card){
				var player=_status.event.player;
				return 8-get.value(card);
			},
			ai:{
				basic:{
					useful:[6,4],
					value:[6,4],
				},
				result:{
					player:1,
				},
				expose:0.2,
			},
			sub:true,
        },
    },
},
"XS_guiyin":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:1,
	selectCard:[1,Infinity],
	position:"he",
    filterCard:function (card){
        return true;
    },
	check:function (card){
		if(get.tag(card,'damage')) return 5-get.value(card);
		return 4-get.value(card);
	},
	selectTarget:function (){
        return ui.selected.cards.length;
    },
	filterTarget:function (card,player,target){
		if(target==player) return false;
		return target.countCards('hej');
    },
	filter:function (event,player){
        return player.countCards("he");
    },
	multitarget:true,
	multiline:true,
	content:function (){
		for(var i=0;i<targets.length;i++) {
			player.discardPlayerCard(targets[i],'hej',true);
		}
    },
	ai:{
		order:1,
		result:{
			target:function (player,target){
				var att=get.attitude(player,target);
				if(target.countCards('j')) {
					if(target.hasSkill('XS_xianji')||target.hasSkill('XS_zhisheng')) return -1.5;
					else return 2;
				}
				else return -1;
            },
		},
	},
},
"XS_youran":{
	audio:"ext:血色衣冠:2",
	enable:'chooseToUse',
	filter:function(event,player){
		return player.countCards('h','sha');
	},
	filterCard:function(card){
		return card.name=='sha';
	},
	position:'h',
	viewAs:{name:'tao'},
	prompt:'将一张杀当桃使用',
	check:function(card){return 9-get.value(card)},
	ai:{
		skillTagFilter:function(player){
			return player.countCards('h','sha')>0;
		},
		threaten:1.3,
		save:true,
		respondTao:true,
	},
	group:["XS_youran_draw"],
	subSkill:{
        draw:{
			trigger:{
				player:["loseAfter"],
			},
			usable:1,
			forced:true,
			filter:function (event,player){
				if(!event.cards||event.cards.length<1) return false;
				for(var i=0;i<event.cards.length;i++) {
					if(get.tag(event.cards[i],'damage')) return true;
				}
				return false;
			},
			priority:3,
			content:function (){
				var num1=0;
				for(var i=0;i<trigger.cards.length;i++) {
					if(get.tag(trigger.cards[i],'damage')) num1++;
				}
				player.draw(num1);
			},
            sub:true,
        },
    },
},
"XS_bocai":{
	audio:"ext:血色衣冠:2",
	init:function (player){
		player.storage.XS_bocai=['a','b','c'];
	},
	mark:true,
	marktext:"博",
	intro:{
		content:function (storage,player,skill){
			var str=[];
			var getStr=function(num1){
				switch(num1){
					case 'a':return '不多于';
					case 'b':return '不等于';
					case 'c':return '不少于';
				}
				return num1;
			};
			var temp=player.storage.XS_bocai;
			for(var i=0;i<temp.length;i++) {
				str.push(getStr(temp[i]));
			}
			return '你：受到体力 <span class="bluetext">'+str[0]+'</span> 你的角色锦囊牌造成的伤害-1；对体力 <span class="bluetext">'+str[1]+'</span> 你的角色进攻、防御距离+1；对体力 <span class="bluetext">'+str[2]+'</span> 你的角色使用卡牌造成的伤害+1。';
		},
	},
	mod:{
		globalTo:function (from,to,current){
			var num1=to.storage.XS_bocai[1];
			if(num1=='a'&&to.hp>=from.hp) return current+1;
			if(num1=='b'&&to.hp!=from.hp) return current+1;
			if(num1=='c'&&to.hp<=from.hp) return current+1;
        },
        globalFrom:function (from,to,current){
			var num1=from.storage.XS_bocai[1];
			if(num1=='a'&&from.hp>=to.hp) return current-1;
			if(num1=='b'&&from.hp!=to.hp) return current-1;
			if(num1=='c'&&from.hp<=to.hp) return current-1;
        },
    },
	trigger:{
		source:"damageBegin3",
	},
	filter:function (event,player){
		if(!event.notLink()) return false;
		if(!event.card) return false;
		if(event.num<=0) return false;
		var num1=player.storage.XS_bocai[2];
		if(num1=='a'&&player.hp>=event.player.hp) return true;
		if(num1=='b'&&player.hp!=event.player.hp) return true;
		if(num1=='c'&&player.hp<=event.player.hp) return true;
        return false;
    },
	forced:true,
	content:function (){
        trigger.num++;
    },
	ai:{
		damageBonus:true,
	},
	group:["XS_bocai_no"],
	subSkill:{
        no:{
			trigger:{
				player:"damageBegin4",
			},
			forced:true,
			filter:function (event,player){
				if(!event.card||get.type(event.card,'trick')!='trick') return false;
				if(event.num<=0) return false;
				var num1=player.storage.XS_bocai[0];
				if(num1=='a'&&player.hp>=event.player.hp) return true;
				if(num1=='b'&&player.hp!=event.player.hp) return true;
				if(num1=='c'&&player.hp<=event.player.hp) return true;
				return false;
			},
			content:function (){
				game.playXSAudio('XS_bocai',2);
				trigger.num--;
			},
			ai:{
				notrick:true,
				effect:{
					target:function (card,player,target,current){
						var num1=target.storage.XS_bocai[0];
						if(num1=='a'&&target.hp<player.hp) return;
						if(num1=='b'&&target.hp==player.hp) return;
						if(num1=='c'&&target.hp>player.hp) return;
						if(get.type(card)=='trick'&&get.tag(card,'damage')){
							return 'zeroplayertarget';
						}
					},
				},
			},
        },
    },
},
"XS_tongda":{
	trigger:{
		player:["damageEnd","loseHpEnd"],
	},
	usable:1,
	audio:"ext:血色衣冠:2",
	priority:7,
	filter:function (event){
		return event.num>0;
	},
	check:function (event,player){
		return true;
	},
	content:function (){
		"step 0"
		event.choices=['不多于','不等于','不少于'];
		event.getNum=function(str){
			switch(str){
				case '不多于':return 'a';
				case '不等于':return 'b';
				case '不少于':return 'c';
			}
			return str;
		};
		"step 1"
		player.chooseControl(event.choices,true).set('ai',function(){
			var tp=event.choices.randomGet();
			return tp;
		}).set('prompt','你受到体力（）你的角色锦囊牌造成的伤害-1');
		"step 2"
		if(result.control){
			event.choices.remove(result.control);
			player.storage.XS_bocai[0]=event.getNum(result.control);
		}
		"step 3"
		player.chooseControl(event.choices,true).set('ai',function(){
			var tp=event.choices.randomGet();
			return tp;
		}).set('prompt','你对体力（）你的角色进攻、防御距离+1');
		"step 4"
		if(result.control){
			event.choices.remove(result.control);
			player.storage.XS_bocai[1]=event.getNum(result.control);
		}
		"step 5"
		player.storage.XS_bocai[2]=event.getNum(event.choices[0]);
		player.syncStorage('XS_tongda');
		player.markSkill('XS_tongda');
	},
	ai:{
		combo:'XS_bocai'
	},
},
"XS_zhexian":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"phaseBefore",
	},
	priority:2,
	filter:function (event,player){
		return player.countCards('h')>0;
	},
	check:function (event,player){
		return (player.countCards('h')-player.hp)<=1;
	},
	content:function (){
		"step 0"
		player.discard(player.getCards('h'));
		"step 1"
		player.draw(player.getHandcardLimit());
		"step 2"
		player.addTempSkill('XS_zhexian_change',{player:['phaseAfter']});
	},
	subSkill:{
		change:{
			mod:{
				cardEnabled2:function(card,player){
					if(get.position(card)=='h'&&card.name=='sha') return false;
				},
				cardUsable:function (card,player,num){
					if(card.name=='sha') return 0;
				},
			},
			trigger:{
				player:["gainAfter","loseAfter"],
			},
			filter:function (event,player){	
				if(player.countCards('h')!=player.hp) return false;
				if(event.name=='lose') {
					return event.hs.length>0;
				}
				else {
					for(var i=0;i<event.cards.length;i++) {
						if(get.position(event.cards[i])=='h') return true;
 					}
				}
				return false;
			},
			forced:true,
			content:function (){
				player.chooseUseTarget({name:'sha',isCard:true});
			},
            sub:true,
        },
    },
},
"XS_jiushi":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"useCardAfter",
	},
	filter:function (event,player){
		return event.card.name=='jiu'&&player.countCards('he')>0;
	},
	forced:true,
	content:function (){
		"step 0"
		var num1=player.countCards('he');
		player.chooseCard('你需弃置至少一张牌，并摸等量的牌',[1,num1],'he',true).set('ai',function(card){
			return 6-get.value(card);
		});
		"step 1"
		if(result.bool){
			var num1=result.cards.length;
			player.discard(result.cards);
			player.draw(num1);
		}
	},
},
"XS_dingzhi":{
	zhuanhuanji:true,
 	init:function (player){
        player.storage.XS_dingzhi=[1,2,3];
		player.storage.XS_dingzhi_a=0;
		player.storage.XS_dingzhi_b=3;
    },
	mark:true,
	intro:{
		content:function(storage,player,skill){
			var num1=player.storage.XS_dingzhi_b;
			if(player.storage.XS_dingzhi[0]==1) return '你可展示牌堆顶'+num1+'张牌，并依次使用其中的基本牌，然后弃置其余的牌';
			else if(player.storage.XS_dingzhi[0]==2) return '你可展示牌堆顶'+num1+'张牌，并依次使用其中的锦囊牌，然后弃置其余的牌';
			else if(player.storage.XS_dingzhi[0]==3) return '你可展示牌堆顶'+num1+'张牌，并依次使用其中的装备牌，然后弃置其余的牌';
		},
	},
	trigger:{
		global:"dieAfter",
		player:"phaseZhunbei",
	},
	filter:function(event,player){
		if(event.name=="phaseZhunbei") return true;
		return event.player.hp<=0&&event.player!=player;
	},
	"prompt2":function (event,player){
		var num1=player.storage.XS_dingzhi_b;
        if(player.storage.XS_dingzhi[0]==1){
			return '是否展示牌堆顶'+num1+'张牌，并依次使用其中的基本牌，然后弃置其余的牌？';
        }
        else if(player.storage.XS_dingzhi[0]==2){
			return '是否展示牌堆顶'+num1+'张牌，并依次使用其中的锦囊牌，然后弃置其余的牌？';
        }
		else if(player.storage.XS_dingzhi[0]==3){
			return '是否展示牌堆顶'+num1+'张牌，并依次使用其中的装备牌，然后弃置其余的牌？';
        }
    },
	check:function (event,player){
		return true;
	},
	content:function(){
		"step 0"
		event.num=player.storage.XS_dingzhi_b;
		"step 1"
		event.cars=get.cards(event.num);
		player.showCards(event.cars);
		"step 2"
		var typ='basic';
		if(player.storage.XS_dingzhi[0]==2) typ='trick';
		else if(player.storage.XS_dingzhi[0]==3) typ='equip';
		var temp=[];
		for(var i=0;i<event.cars.length;i++){
			if(get.type2(event.cars[i])!=typ){
				temp.push(event.cars[i]);
				event.cars.splice(i--,1);
			}
		}
		game.cardsDiscard(temp);
		"step 3"
		if(event.cars.length>=0) {
			for(var i=0;i<event.cars.length;i++) {
				player.chooseUseTarget(event.cars[i],false);
			}
		}
		"step 4"
		player.storage.XS_dingzhi_a++;
		var temp=player.storage.XS_dingzhi.shift();
		player.storage.XS_dingzhi.push(temp);
		player.syncStorage('XS_dingzhi');
		"step 5"
		if(player.storage.XS_dingzhi_a>=3&&player.hasSkill('XS_tiaohe')) {
			player.storage.XS_dingzhi_a-=3;
			player.chooseControl().set('choiceList',['对1名角色造成1点伤害','令1名角色增加1点体力上限并摸1张牌','失去1点体力上限并令“鼎治”展示的牌数+1']).set('ai',function(event,player){
				return 2;
			}).set('prompt','调和：你可选择一项');
		}
		else event.finish();
         "step 6"
		if(result.control!='cancel2') {
			player.logSkill('XS_tiaohe');
			if(result.index==2){
				player.loseMaxHp();
				player.storage.XS_dingzhi_b++;
				event.finish();
			}
			else {
				event.ind=result.index;
				if(event.ind==0) var str='对1名角色造成1点伤害';
				else var str='令1名角色增加1点体力上限并摸1张牌';
				player.chooseTarget(str,1,function(card,player,target){
					return true;
				}).ai=function(target){
					var player=_status.event.player;
					var att=get.attitude(player,target);
					if(event.ind==0) return -att;
					return att;
				}	
			}
		}
		else event.finish();
		"step 7"
		if(result.bool) {
			if(event.ind==0) {
				result.targets[0].damage(player);
			}
			else if(event.ind==1){
				result.targets[0].gainMaxHp();
				result.targets[0].draw();
			}
		}	
	},
},
"XS_tiaohe":{
 	ai:{
		combo:'XS_dingzhi'
	},
},
"XS_shiren":{
	trigger:{
		global:"damage",
	},
	priority:-1,
	direct:true,
	filter:function (event,player){
		if(player.hasSkill('XS_shiren_temp1')) return false;
		if(event.player==player) return false;
		return player.countCards('he');
	},
	ai:{
		expose:0.1,
	},
	content:function (){
		"step 0"
        player.chooseCard(get.prompt('XS_shiren',trigger.player),'是否交给'+get.translation(trigger.player)+'1张牌？若其未死亡，你摸1张牌。',1,'he').ai=function(card){
			var trigger=_status.event.getTrigger();
			var att=get.attitude(player,trigger.player);
			if(att>0) return 7-get.value(card);
			else {
				if(trigger.player.hp>trigger.num) {
					return 3-get.value(card);
				}
				return -get.value(card);
			}
        }
        "step 1"
        if(result.bool){
			player.addTempSkill('XS_shiren_temp1');
			player.logSkill('XS_shiren',trigger.player);
			trigger.player.gain(result.cards,player,'giveAuto');
			trigger.player.addTempSkill('XS_shiren_temp',{player:'damageAfter'});
			trigger.player.storage.XS_shiren_temp=player;
        }
	},
	subSkill:{
        temp:{
			trigger:{
				player:"damageEnd",
			},
			filter:function (event,player){
				return player.isAlive();
			},
			onremove:function(player){
				delete player.storage.XS_shiren_temp;
			},
			direct:true,
			content:function (){
				player.storage.XS_shiren_temp.draw();
			},
			sub:true,
        },
		temp1:{
			charlotte:true,
			sub:true,
        },
    },
},
"XS_jianyu":{
    trigger:{
        global:"dieAfter",
    },
	filter:function (event,player){
		return player.countCards('he');
	},
    direct:true,
    content:function (){
        'step 0'
		event.num1=Math.min(5,trigger.player.maxHp);
		player.chooseToDiscard(get.prompt('XS_jianyu'),'是否弃置1张牌并摸'+event.num1+'张牌？','he',1).set('ai',function(card){
			return event.num1*2-get.value(card);
		});
		"step 1"
		if(result.bool){
			player.draw(event.num1);
			player.logSkill('XS_jianyu');
		}
    },	
},
"XS_zhili":{
 	trigger:{
		player:"phaseJieshuBegin",
	},
	filter:function (event,player){
		return player.countCards('h');
    },
	check:function (event,player){
		return player.countCards('h')>=2;
    },
	"prompt2":function (event,player){
		var num1=player.countCards('h');
		return '是否摸'+num1+'张牌？如此，若你下回合开始时手牌数不大于'+num1+'，你回复1点体力，否则弃置'+num1+'张手牌。';
    },
	content:function (){
		var num1=player.countCards('h');
		player.draw(num1);
		player.storage.XS_zhili_begin=num1;
		player.addTempSkill('XS_zhili_begin',{player:'phaseZhunbeiAfter'});
	},
	subSkill:{
        begin:{
			onremove:function (player,skill){
				delete player.storage.XS_zhili_begin;
			},
			trigger:{
				player:"phaseZhunbeiBegin",
			},
			filter:function (event,player){
				return player.storage.XS_zhili_begin;
			},
			forced:true,
			content:function (){
				var num1=player.countCards('h');
				if(num1<=player.storage.XS_zhili_begin) player.recover();
				else {
					player.chooseToDiscard(player.storage.XS_zhili_begin,'h',true);
				}
			},
			sub:true,
        },
    },	
},
"XS_buding":{
 	trigger:{
		global:"phaseBefore",
	},
	filter:function (event,player){
		if(event.player==player) return false;
		if(!event.player.countCards('hej')) return false;
		return player.countCards('h')&&player.countCards('h')!=event.player.countCards('h');
    },
	direct:true,
	content:function (){
		"step 0"
		player.chooseToDiscard(get.prompt('XS_buding',trigger.player),'你可弃置1张手牌并弃置'+get.translation(trigger.player)+'任意区域1张牌，若其此回合未造成伤害，结束阶段其摸2张牌。',1).set('ai',function(card){
			var trigger=_status.event.getTrigger();
			var att=get.attitude(player,trigger.player);
			if(att>0) {
				if(trigger.player.countCards('j')&&!trigger.player.hasJudge('XS_mantian')) return 6-get.value(card);		
			}
			else {
				if(player.countCards('h')>player.storage.XS_zhili) return 8-get.value(card);	
			}
			return -1;
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_buding',trigger.player);
			player.discardPlayerCard(trigger.player,'hej',1,true);
			trigger.player.addTempSkill('XS_buding_temp');
		}
	},
	subSkill:{
        temp:{
			charlotte:true,
			trigger:{
				player:"phaseJieshuBegin",
			},
			filter:function (event,player){
				return !player.getStat('damage')||player.getStat('damage')<=0;
			},
			forced:true,
			content:function (){
				player.draw(2);
			},
			sub:true,
        },
    },	
},
"XS_guanbing":{
	audio:"ext:血色衣冠:2",
 	enable:"phaseUse",
	filterTarget:function (card,player,target){
		if(target.hasSkill('XS_guanbing_temp')) return false;
        return target!=player&&target.countCards('h');
    },
	filter:function(event,player){
		return game.hasPlayer(function(current){
			return current!=player&&!current.hasSkill('XS_guanbing_temp')&&current.countCards('h');
		});
	},
	content:function (){
		"step 0"
		target.chooseToDiscard('h',1,true);
		target.addTempSkill('XS_guanbing_temp');
		"step 1"
		var num1=target.countCards('h')-player.countCards('h');
		if(num1>0) {
			player.draw(num1);
			var evt=_status.event.getParent('phaseUse');
			if(evt&&evt.name=='phaseUse'){
				evt.skipped=true;
			}
		}
		else if(num1<0) {
			player.chooseToDiscard('h',true,-num1);
		}
    },
	subSkill:{
        temp:{
			sub:true,
        },
    },
	ai:{
		order:1,
		expose:0.4,
		result:{
			target:function (player,target){
				var num1=target.countCards('h')-1-player.countCards('h');
				if(num1==0) return -1;
				if(num1<0) {
					if(get.attitude(player,target)>=0) return -10;
					return -1-num1;
				}
				else {
					if(get.attitude(player,target)>=0) return -1+num1;
					return -10;
				}
            },
		},
	},
},
"XS_zhengtao":{
	audio:"ext:血色衣冠:2",
 	trigger:{
		global:"phaseAfter",
	},
	filter:function (event,player){
		if(player.hasSkill('XS_zhengtao_temp')) return false;
		if(event.player==player) return false;
        return event.player.countCards('h')>player.countCards('h');
    },
	check:function (event,player){
		if(get.attitude(player,event.player)>0) return false;
		var num1=event.player.countCards('h')-player.countCards('h');
		return num1>=2;
    },
	"prompt2":function (event,player){
		var num1=event.player.countCards('h')-player.countCards('h');
		return '是否令'+get.translation(event.player)+'弃置'+num1+'张牌？';
    },
	content:function (){
		var num1=trigger.player.countCards('h')-player.countCards('h');
		trigger.player.chooseToDiscard('h',num1,true);
		player.addTempSkill('XS_zhengtao_temp','roundStart');
	},
	subSkill:{
        temp:{
			charlotte:true,
			sub:true,
        },
    },
},
"XS_erxian":{
	trigger:{
        player:"phaseBefore",
    },
	priority:8,
	direct:true,
    content:function (){
		"step 0"
		player.chooseControl('打出杀','打出闪','cancel2').set('ai',function(event){
			return '打出杀';
        }).set('prompt',get.prompt2('XS_erxian'));
		"step 1"
        if(result.control&&result.control!='cancel2'){
			if(result.control=='打出杀') event.a='sha';
			else event.a='shan';
			game.log(player,'令所有其他角色',result.control);
        }
		else event.finish();
		"step 2"
		var tars=game.filterPlayer(function(current){
			return current!=player;
		});
		event.tars=tars.sort(lib.sort.seat);
		player.logSkill('XS_erxian',event.tars);
		"step 3"
		if(event.tars.length){
			var target=event.tars.shift();
			event.current=target;
		}
		else event.finish();
		"step 4"
		if(event.current){
			var next=event.current.chooseToRespond({name:event.a},'是否打出一张'+get.translation(event.a)+'？');
			next.set('ai',function(card){
				var att=get.attitude(player,event.current);
				if(att>0) return -1;
				return Math.random()>0.3;
			});
		}
		else event.goto(3);
		"step 5"
		if(!result.bool){
			event.current.addTempSkill('XS_erxian_temp');
			event.current.markSkill('XS_erxian_temp');
			game.log(event.current,'没有打出牌');
		}
		event.goto(3);
    },
	group:["XS_erxian_use"],
    subSkill:{
        use:{
			trigger:{
				player:"useCardBegin",
			},
			filter:function(event,player){
				if(get.type(event.card)!='basic'&&get.type(event.card)!='trick') return false;
				if(!event.targets||event.targets.length!=1) return false;
				if(event.targets.contains(player)) return false;
				return game.hasPlayer(function(current){
					return current!=player&&current.hasSkill('XS_erxian_temp')&&!event.targets.contains(current);
				});
			},
			direct:true,
			content:function (){
				"step 0"
				player.chooseTarget(get.prompt('XS_erxian'),'你可为你使用的'+get.translation(trigger.card)+'指定至多2名额外目标。',[1,2],function(card,player,target){
					var trigger=_status.event.getTrigger();
					if(trigger.targets.contains(target)) return false;
					if(!target.hasSkill('XS_erxian_temp')) return false;
					return lib.filter.targetEnabled(trigger.card,player,target);
				}).ai=function(target){
					var trigger=_status.event.getTrigger();
					var eff=get.effect(target,trigger.card,player,player);
					return eff;
				}
				"step 1"
				if(result.bool) {
					player.logSkill('XS_erxian');
					trigger.targets.addArray(result.targets);
					game.log(result.targets,'成为了',trigger.card,'的额外目标。');
				}
			},
            sub:true,
        },
		temp:{
			intro:{
				content:function(storage,player,skill){
					return '你未打出牌响应'+get.translation(player)+'的“饵贤”';
				},
			},
			marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"40px")+" src="+lib.assetURL+"extension/血色衣冠/icon/erxian.png>":"饵",
			onremove:function (player){
				player.unmarkSkill('XS_erxian_temp');
			},
			charlotte:true,
            sub:true,
        },
    },
},
"XS_yanyi":{
	trigger:{
        player:"phaseAfter",
    },
	intro:{
		content:function (storage){
			var str='本回合成为过你使用牌目标的角色：'+get.translation(storage);
			return str;
		},
	},
	marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"40px")+" src="+lib.assetURL+"extension/血色衣冠/icon/yanyi.png>":"易",
	init:function (player){
        player.storage.XS_yanyi=[];
    },
	direct:true,
    content:function (){
		"step 0"
		if(player.storage.XS_yanyi.length==game.players.length-1) {
			var str='是否视为使用1张南蛮入侵/万箭齐发？';
			event.mk=true;
		}
		else {
			var str='是否摸1张牌？';
			event.mk=false;
		}
		player.chooseBool(get.prompt('XS_yanyi'),str).ai=function(event,player){
			return true;
		};
		"step 1"
		if(result.bool){
			player.logSkill('XS_yanyi');
			if(!event.mk) {
				player.draw();
				event.goto(3);
			}
			else {
				player.chooseControl('南蛮入侵','万箭齐发').set('ai',function(event){
					var val1=player.getUseValue({name:'nanman'});
					var val2=player.getUseValue({name:'wanjian'});
					if(val1>val2) return '南蛮入侵';
					return '万箭齐发';
				}).set('prompt','视为使用1张牌');
			}
		}
		else event.finish();
		"step 2"
        if(result.control){
			if(result.control=='南蛮入侵') var na='nanman';
			else var na='wanjian';
			player.chooseUseTarget({name:na,isCard:true},true);
        }
		"step 3"
		player.storage.XS_yanyi=[];
		player.unmarkSkill('XS_yanyi');
    },
	group:["XS_yanyi_rec","XS_yanyi_die"],
    subSkill:{
        rec:{
			trigger:{
				player:"useCardToPlayered",
			},
			filter:function(event,player){
				if(event.target==player) return false;
				if(!player.isPhaseUsing()) return false;
				return !player.storage.XS_yanyi.contains(event.target);
			},
			direct:true,
			content:function (){
				player.storage.XS_yanyi.push(trigger.target);
				player.markSkill('XS_yanyi');
			},
            sub:true,
        },
		die:{
			trigger:{
				global:"dieAfter",
			},
			filter:function(event,player){
				return player.storage.XS_yanyi.contains(event.player);
			},
			direct:true,
			priority:7,
			content:function (){
				player.storage.XS_yanyi.remove(trigger.player);
				player.syncStorage('XS_yanyi');
			},
            sub:true,
        },
    },
},
"XS_duwu":{
	trigger:{
		player:["phaseDrawBefore"],
	},
	audio:"ext:血色衣冠:2",
	intro:{
		content:function (content,player){
			var temp1=player.storage.XS_duwu;
			if(!temp1.length){
				return '未使用过任何牌';
			}
			else{
				var str='已使用：'+get.translation(temp1);
				return str;
			}
		},
	},
	init:function (player){
        player.storage.XS_duwu=[];
		player.storage.XS_duwu_a=0;
    },
	check:function (event,player){
		if(player.storage.XS_duwu.contains('nanman')&&player.storage.XS_duwu.contains('wanjian')&&player.storage.XS_duwu.contains('sha')) return false;
		return true;
	},
	content:function(){
		"step 0"
		var list=[];
		for(var i=0;i<lib.inpile.length;i++){
			if(get.type(lib.inpile[i])!='basic'&&get.type(lib.inpile[i])!='trick') continue;
			var card={name:lib.inpile[i]};
			if(get.tag(card,'damage')&&!player.storage.XS_duwu.contains(lib.inpile[i])) {
				if(lib.filter.cardEnabled(card,player)){
					list.push(['卡牌','',lib.inpile[i]]);
				}		
			}
		}
		if(list.length){
			player.chooseButton(['视为使用1张未以此法使用过的带有伤害标签的基本牌或普通锦囊牌，此牌结算后你摸X张牌，X为此牌造成的伤害数',[list,'vcard']]).set('ai',function(button){
				if(button.link[2]=='nanman') return 9.5;
				if(button.link[2]=='wanjian') return 9;
				return player.getUseValue({name:button.link[2]})-2;
			});
		}
		else event.finish();
		"step 1"
		if(result&&result.bool&&result.links[0]){
			player.storage.XS_duwu.push(result.links[0][2]);
			player.markSkill('XS_duwu');
			player.chooseUseTarget({name:result.links[0][2],isCard:true},true);
		}
		"step 2"
		trigger.cancel();
	},
	group:["XS_duwu_damage","XS_duwu_clear"],
	subSkill:{
		damage:{
			trigger:{
				source:"damageEnd",
			},
			filter:function (event,player){
				return event.getParent(4).name=='XS_duwu';
			},
			priority:24,
			direct:true,
			content:function (){
				player.storage.XS_duwu_a+=trigger.num;
			},
            sub:true,
        },
		clear:{
			trigger:{
				player:["useCardAfter","useCardCancelled"],
			},
			filter:function (event,player){
				return event.getParent(2).name=='XS_duwu'&&player.storage.XS_duwu_a>0;
			},
			direct:true,
			content:function (){
				player.draw(player.storage.XS_duwu_a);
				player.storage.XS_duwu_a=0;
			},
            sub:true,
        },
    },
},
"XS_feide":{
	trigger:{
		player:["phaseDiscardBefore"],
	},
	audio:"ext:血色衣冠:2",
	intro:{
		content:function (content,player){
			var temp1=player.storage.XS_feide;
			if(!temp1.length){
				return '未使用过任何牌';
			}
			else{
				var str='已使用：'+get.translation(temp1);
				return str;
			}
		},
	},
	init:function (player){
        player.storage.XS_feide=[];
    },
	frequent:true,
	content:function(){
		"step 0"
		var list=[];
		for(var i=0;i<lib.inpile.length;i++){
			if(get.type(lib.inpile[i])!='basic'&&get.type(lib.inpile[i])!='trick') continue;
			var card={name:lib.inpile[i]};
			if(!get.tag(card,'damage')&&!player.storage.XS_feide.contains(lib.inpile[i])) {
				if(lib.filter.cardEnabled(card,player)){
					list.push(['卡牌','',lib.inpile[i]]);
				}	
			}
		}
		if(list.length){
			player.chooseButton(['你可跳过弃牌阶段并视为使用1张未以此法使用过的没有伤害标签的基本牌或普通锦囊牌',[list,'vcard']]).set('ai',function(button){
				return player.getUseValue({name:button.link[2]});
			});
		}
		else event.finish();
		"step 1"
		if(result&&result.bool&&result.links[0]){
			trigger.cancel();
			player.storage.XS_feide.push(result.links[0][2]);
			player.markSkill('XS_feide');
			player.chooseUseTarget({name:result.links[0][2],isCard:true},true);
		}
	},
	group:["XS_feide_draw"],
	subSkill:{
		draw:{
			trigger:{
				player:["useCardAfter","useCardCancelled"],
			},
			filter:function (event,player){
				return event.getParent(2).name=='XS_feide';
			},
			direct:true,
			content:function (){
				player.chooseToDiscard(trigger.targets.length,'he',true);
			},
            sub:true,
        },
    },
},
"XS_zhixiao1":{
	trigger:{
		global:'phaseUseBegin'
	},
	filter:function(event,player){
		if(event.player==player) return false;
		return event.player.countCards('h');
	},
	init:function (player){
        player.storage.XS_zhixiao1='';
    },
	priority:8,
	direct:true,
	content:function(){
		"step 0"
		player.storage.XS_zhixiao1='';
		"step 1"
        var list=['basic','trick','equip','cancel2'];
        player.chooseControl(list).set('ai',function(event){
			return 'equip';
        }).set('prompt','志枭：你可声明一种类型的牌，若'+get.translation(trigger.player)+'于此阶段使用的第1张牌类型与你声明相同，你可重铸1张牌');
        "step 2"
        if(result.control){
			trigger.player.addTempSkill('XS_zhixiao1_use',{player:'phaseUseAfter'});
			trigger.player.storage.XS_zhixiao1_use=player;
			player.storage.XS_zhixiao1=result.control;
			player.logSkill('XS_zhixiao1',trigger.player);
			game.log(player,'声明了【',result.control,'】牌');
        }
	},
    subSkill:{
        use:{
			charlotte:true,
			onremove:function (player){
				delete player.storage.XS_zhixiao1_use;
			},
			filter:function(event,player){
				var evt=_status.event.getParent('phaseUse');
				if(evt&&evt.name=='phaseUse'&&player.getHistory('useCard',function(evt2){
					return evt2.getParent('phaseUse')==evt
				}).length==1) return true;
				return false;
			},
			trigger:{
				player:"useCardEnd",
			},
			direct:true,
			content:function (){
				"step 0"
				event.pla=player.storage.XS_zhixiao1_use;
				var type=event.pla.storage.XS_zhixiao1;
				var temp=get.type2(trigger.card);
				if(type==temp) {
					event.pla.logSkill('XS_zhixiao',player);
					event.pla.chooseCard(get.prompt('XS_zhixiao1'),'he','是否重铸1张牌？').ai=function(card){
						return 6.5-get.value(card);
					}
				}
				else event.finish();
				"step 1"
				if(result.bool){
					event.pla.chongzhuCards(result.cards);
				}
				else event.finish();
			},
            sub:true,
        },
    },
},
"XS_daidan":{
	charlotte:true,
    trigger:{
        player:"drawBegin",
    },
	priority:99,
    filter:function (event,player){
		if(_status.currentPhase==player) return false;
		if(player.storage.XS_daidan>=3) return false;
        return true;
    },
	init:function (player){
        player.storage.XS_daidan=0;
    },
    frequent:true,
    content:function (){
		trigger.num++;
		player.storage.XS_daidan++;
    },
	group:["XS_daidan_clear"],
    subSkill:{
        clear:{
			trigger:{
				global:"roundStart",
			},
			priority:20,
			direct:true,
			content:function (){
				player.storage.XS_daidan=0;
			},
			sub:true,
        },
    },
},
"XS_lianzheng":{
	init:function (player){
		player.storage.XS_lianzheng=[];
	},
	trigger:{
		player:["equipAfter","recoverAfter"],
		source:["damageAfter"],
	},
	filter:function (event,player){
		return player.isPhaseUsing();
	},
	forced:true,
	content:function (){
		"step 0"
		if(trigger.name=='equip') {
			if(!player.storage.XS_lianzheng.contains('equip')) player.storage.XS_lianzheng.push('equip');
		}
		if(trigger.name=='recover') {
			if(!player.storage.XS_lianzheng.contains('recover')) player.storage.XS_lianzheng.push('recover');
		}
		if(trigger.name=='damage') {
			if(!player.storage.XS_lianzheng.contains('damage')) player.storage.XS_lianzheng.push('damage');
		}
		"step 1"
		player.chooseCardButton('连征：是否重铸1张牌？',player.getCards('he'),false).ai=function(button){
			return 5-get.value(button.link);
		}
		"step 2"
		if(result.bool){
			player.chongzhuCards(result.links);
		}
	},
	group:["XS_lianzheng_clear"],
	subSkill:{
		clear:{
			trigger:{
				player:"phaseBefore",
			},
			filter:function (event,player){
				return player.storage.XS_lianzheng!=[];
			},
			priority:23,
			direct:true,
			content:function (){
				player.storage.XS_lianzheng=[];
			},
            sub:true,
        },
    },	
},
"XS_kuiding":{
	charlotte:true,
	trigger:{
        player:"phaseDiscardBefore",
    },
    direct:true,
	filter:function (event,player){
		if(!player.countCards('he')) return false;
		return player.storage.XS_lianzheng&&player.storage.XS_lianzheng.length>0;
    },
    content:function (){
		"step 0"
		player.chooseCardTarget({
            filterCard:function(card){
                return true;
            },
            position:"he",
			selectCard:function (){
				var player=_status.event.player;
				var num1=player.storage.XS_lianzheng.length;
				return [1,num1];
			},
            selectTarget:function (){
				var num1=ui.selected.cards.length;
				return num1;
			},
            filterTarget:function(card,player,target){
                return player!=target;
            },
            ai1:function(card){
                return 5-get.value(card);
            },
            ai2:function(target){
				var eff=get.damageEffect(target,player,player);
                return eff;
            },
            prompt:'是否发动【窥鼎】？</br></br>你可弃置至多X张牌对等量角色各造成1点伤害，X为你达成“连征”的项数。'
        });
        "step 1"
        if(result.bool){
			player.logSkill('XS_kuiding',result.targets);
			player.discard(result.cards);
			event.tars=result.targets;
        }
		else event.finish();
		"step 2"
		if(event.tars.length){
			var target=event.tars.shift();
			event.current=target;
		}
		else event.finish();
		"step 3"
		event.current.damage(player,'nocard');
		event.goto(2);
    },	
},
"XS_tiche":{
	zhuanhuanji:true,
	init:function (player){
        player.storage.XS_tiche=[1,2,3];
    },
	mark:true,
	intro:{
		content:function(storage,player,skill){
			if(player.storage.XS_tiche[0]==1) return '你可重铸2种颜色的牌各1张，如此你令1名角色摸1张牌';
			else if(player.storage.XS_tiche[0]==2) return '你可重铸3种类型的牌各1张，如此你令1名角色摸2张牌';
			else if(player.storage.XS_tiche[0]==3) return '你可重铸4种花色的牌各1张，如此你令1名角色摸3张牌';
		},
	},
	enable:"phaseUse",
	usable:1,
	selectCard:function (){
        var player=_status.event.player;
		if(player.storage.XS_tiche[0]==1) return 2;
		else if(player.storage.XS_tiche[0]==2) return 3;
		else if(player.storage.XS_tiche[0]==3) return 4;
    },
	position:"he",
    filterCard:function (card,player){
		if(player.storage.XS_tiche[0]==1) {
			var color=get.color(card);
			for(var i=0;i<ui.selected.cards.length;i++){
				if(get.color(ui.selected.cards[i])==color) return false;
			}
			return true;
		}
		else if(player.storage.XS_tiche[0]==2) {
			var type=get.type2(card);		
			for(var i=0;i<ui.selected.cards.length;i++){
				var temp=get.type2(ui.selected.cards[i]);	
				if(temp==type) return false;
			}
			return true;
		}
		else if(player.storage.XS_tiche[0]==3) {
			var suit=get.suit(card);
			for(var i=0;i<ui.selected.cards.length;i++){
				if(get.suit(ui.selected.cards[i])==suit) return false;
			}
			return true;
		}
    },
	discard:false,
	check:function (card){return 6-get.value(card)},
	filter:function (event,player){
        return player.countCards('h')>1;
    },
	content:function(){
		"step 0"
		if(cards.length){
			player.chongzhuCards(cards);
		} 
		"step 1"
		player.chooseTarget('令1名角色摸'+player.storage.XS_tiche[0]+'张牌',1,true,function(card,player,target){
            return true;
        }).ai=function(target){
            var att=get.attitude(player,target),hs=target.countCards('h')+0.5;
            return att/hs;
        }
        "step 2"
        if(result.bool){
			var temp=player.storage.XS_tiche[0];
			result.targets[0].draw(temp);
        }
		"step 3"
		var temp=player.storage.XS_tiche.shift();
		player.storage.XS_tiche.push(temp);
		player.syncStorage('XS_tiche');
	},
	ai:{
		order:9,
		result:{
			player:1,
		},
        expose:0.3,
    },
},
"XS_chouwang":{
   trigger:{
        global:"phaseBefore",
    },
	priority:-2,
	direct:true,
	filter:function (event,player){
		if(event.player==player) return false;
        return event.player.isMaxHandcard(true);
    },
    content:function (){
		"step 0"
		event.att=get.attitude(trigger.player,player);
		trigger.player.chooseBool(get.prompt('XS_chouwang'),'是否令'+get.translation(player)+'回复1点体力，并使“提掣”变为下一个状态？').set('ai',function(){
            return event.att>=0;
        });
        "step 1"
        if(result.bool){
			player.logSkill('XS_chouwang',trigger.player);
			player.recover();
			var temp=player.storage.XS_tiche.shift();
			player.storage.XS_tiche.push(temp);
			player.syncStorage('XS_tiche');
			game.log(player,'的“提掣”变至下一个状态')
        }
    },
},
"XS_nandu":{
	trigger:{
        player:"discardBefore",
    },
	filter:function(event,player){
		return !player.isMaxHandcard(false);
	},
	direct:true,
    content:function (){
		"step 0"
		var num=trigger.cards.length;
		var pos1='',pos2='',pos3='';
		for(var i=0;i<num;i++) {
			if(get.position(trigger.cards[i])=='h') pos1='h';
			if(get.position(trigger.cards[i])=='e') pos1='e';
			if(get.position(trigger.cards[i])=='j') pos1='j';
		}
		var pos=pos1+pos2+pos3;
        player.chooseCard(get.prompt2('XS_nandu'),num,pos).ai=function(card){
			return 6-get.value(card);
        }
		"step 1"
        if(result.bool){
			player.logSkill('XS_nandu');
			player.chongzhuCards(result.cards);
        }
		else event.finish();
		"step 2"
		trigger.cancel();
    },
},
"XS_bingsheng":{
	enable:"phaseUse",
	usable:1,
	selectCard:[1,2],
	position:"h",
    filterCard:function (card){return true;},
	check:function (card){return 6-get.value(card)},
	selectTarget:function (){
        return ui.selected.cards.length;
    },
	filterTarget:function (card,player,target){return true;},
	filter:function (event,player){
        return player.countCards("h");
    },
	discard:false,
	multitarget:true,
	targetprompt:function (target){
        return get.translation(ui.selected.cards[ui.selected.targets.indexOf(target)]);
    },
	content:function (){
        "step 0"
		event.tar=targets.shift();
		event.cd=cards.shift();
		"step 1"
		if(!event.tar.hasSkill('XS_bingsheng_mk')) {
			event.tar.addSkill('XS_bingsheng_mk');
			event.tar.storage['XS_bingsheng_mk']=[];
		}
		player.lose(event.cd,ui.special,'toStorage');
		event.tar.storage['XS_bingsheng_mk'].push(event.cd);
		event.tar.markSkill('XS_bingsheng_mk');
		"step 2"
		if(targets.length) event.goto(0);
    },
	ai:{
		order:9,
		result:{
			target:function (player,target){
				var tp=Math.max(0,5-target.countCards('h'));
				return tp*2;
            },
		},
	},
	subSkill:{
		mk:{
			charlotte:true,
			trigger:{
				player:"drawBegin",
			},
			marktext:'圣',
			filter:function (event,player){
				return player.storage['XS_bingsheng_mk'].length;
			},
			intro:{
				content:'cards',
			},
			priority:39,
			check:function (event,player){
				return true;
			},
			"prompt2":function (event,player){
				return '是否移除你武将牌上的所有“圣”，使你此次摸牌数+'+player.storage['XS_bingsheng_mk'].length*2+'？';
			},
			content:function (){
				trigger.num+=player.storage['XS_bingsheng_mk'].length*2;
				delete player.storage['XS_bingsheng_mk'];
				game.cardsDiscard(player.storage['XS_bingsheng_mk']);
				player.removeSkill('XS_bingsheng_mk');
			},
            sub:true,
        },
    },
},
"XS_pianyu":{
	mod:{
		globalTo:function (from,to,current){
			if(to.hasZhuSkill('XS_pianyu')) {
				var nm=game.countPlayer(function(current){
					return current!=to&&current.group==to.group;
				});
				return current+nm;
			}
		},
	},
	global:"XS_pianyu_from",
},
"XS_pianyu_from":{
	mod:{
		globalFrom:function (from,to,current){
			for(var i=0;i<game.players.length;i++) {
				if(game.players[i].hasZhuSkill('XS_pianyu')&&game.players[i].group==from.group) {
					return current+1;
					break;
				}
			}
		},
	},
},
"XS_huaizhi":{
	trigger:{
        player:"phaseBefore",
    },
	priority:99,
	check:function (event,player){return true;},
	filter:function (event,player){
		return player.countCards('h');
	},
    content:function (){
		"step 0"
		var cards=player.getCards('h');
		if(cards.length){
			player.chongzhuCards(cards);
		} 
		"step 1"
		player.addTempSkill('XS_huaizhi_change',{player:'phaseAfter'});
    },
    subSkill:{
        change:{
			trigger:{
				player:["phaseJudgeBefore","phaseDrawBefore","phaseUseBefore","phaseDiscardBefore"],
			},
			forced:true,
			filter:function (event,player){
				return (player.isMinHandcard(true)&&event.name!='phaseDraw')||(player.isMaxHandcard(true)&&event.name!='phaseUse');
			},
			charlotte:true,
			content:function (){
				if(player.isMinHandcard(true)) {
					player.phaseDraw();
					trigger.cancel();
				}
				else {
					player.phaseUse();
					trigger.cancel();
				}
			},
            sub:true,
        },
    },
},
"XS_qiwu":{
	trigger:{
		global:"roundStart",
	},
	direct:true,
	priority:55,
	content:function (){
		"step 0"
		var lt=['失去1点体力并摸2张牌'];
		if(player.hasUsableCard('sha')) lt.push('使用1张杀');
		lt.push('cancel2');
		player.chooseControl(lt).set('ai',function(event){
			if(player.hp>2) return '失去1点体力并摸2张牌';
			return 'cancel2';
        }).set('prompt','是否发动【起舞】？</br></br>你可使用1张杀，或失去1点体力并摸2张牌。');
		"step 1"
		if(result.control!='cancel2') {
			if(result.control=='失去1点体力并摸2张牌') {
				player.loseHp();
				player.draw(2);
			}
			else {
				player.chooseToUse('你可使用1张杀',function(card){
					if(get.name(card)!='sha') return false;
					return lib.filter.filterCard.apply(this,arguments)
				},function(card,player,target){
					if(player==target) return false;
					var dist=get.distance(player,target);
					if(dist>1){
						if(game.hasPlayer(function(current){
							return current!=player&&get.distance(player,current)<dist;
						})){
							return false;
						}
					}
					return lib.filter.filterTarget.apply(this,arguments)
				}).set('ai2',function(){
					return get.effect_use.apply(this,arguments)+0.01;
				});
			}
		}
	},
},
"XS_bachu":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:["phaseDrawBefore"],
	},
	init:function (player){
        player.storage.XS_bachu=2;
    },
	check:function (event,player){
		return true;
	},
	filter:function (event,player){
		if(!player.storage.XS_bachu) return false;
		return true;
	},
	content:function(){
		"step 0"
		event.temp=get.cards(player.storage.XS_bachu);
		player.showCards(event.temp);
		"step 1"
		for(var i=0;i<event.temp.length;i++){
			if(game.hasPlayer(function(current){
				return player.canUse(event.temp[i],current);
			})) {
				player.chooseUseTarget(event.temp[i],true,true);
				event.temp.splice(i--,1);
			}
		}
		player.gain(event.temp);
		"step 2"
		player.storage.XS_bachu++;
		trigger.cancel();
	},
},
"XS_duzun":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:["phaseUseBefore"],
	},
	direct:true,
	filter:function (event,player){
		return player.countCards('h');
	},
	content:function(){
		"step 0"
		var temp=[];
		var hs=player.getCards('h');
		for(var i=0;i<hs.length;i++){
			if(!game.hasPlayer(function(current){
				return player.canUse(hs[i],current);
			})) {
				temp.push(hs[i]);
			}
		}
		if(!temp.length) event.finish();
		else {
			event.cradx=temp;
			var nh=player.countCards('h')-temp.length;
			event.bl=true;
			for(var i=0;i<game.players.length;i++){
				if(game.players[i].isOut()||game.players[i]==player) continue;
				if(game.players[i].countCards('h')<nh) event.bl=false;
			}	
			player.chooseTarget(get.prompt('XS_duzun'),'你可将'+get.translation(temp)+'交给1名其他角色，如此若你的手牌数因此成为全场最少，你摸2张牌。',function(card,player,target){
				return player!=target;
			}).ai=function(target){
				if(!event.bl) return -1;
				var att=get.attitude(player,target);
				if(target.hasSkill('XS_xiongcai')) att*=2;
				return att;
			}
		}
		"step 1"
		if(result.bool) {
			player.showHandcards();
			player.logSkill('XS_duzun',result.targets[0]);
			result.targets[0].gain(event.cradx,player,'giveAuto');
		}
		else event.finish();
		"step 2"
		if(player.isMinHandcard(false)) player.draw(2);
		"step 3"
		trigger.cancel();
	},
},
"XS_zaokong":{
	trigger:{
		global:"phaseAfter",
	},
	filter:function(event,player){
		if(event.player==player) return false;
		if(player.maxHp==event.player.hp) return true;
		return false;
	},
	check:function (event,player){
		if(player.maxHp<3) return false;
		return true;
	},
	content:function (){
		"step 0"
		player.loseMaxHp();
		"step 1"
		player.insertPhase();
	},
},
"XS_chijie":{
	trigger:{
		global:"roundStart",
	},
	priority:9,
	forced:true,
	content:function (){
		if(player.isHealthy()) {
			player.gainMaxHp();
			player.draw();
		}
		else {
			player.recover();
		}
	},
},
"XS_juemo":{
	trigger:{
		player:"useCardBegin",
	},
	init:function (player){
        player.storage.XS_juemo=[];
    },
	logTarget:'targets',
	filter:function(event,player){
		if(event.targets.length!=1) return false;
		if(!get.color(event.card)||get.color(event.card)!='black') return false;
		if(event.card.name!='sha'&&get.type(event.card)!='trick') return false;
		return get.itemtype(event.cards)=='cards';
	},
	check:function (event,player){
		var tar=event.targets[0];
		var att=get.attitude(player,tar);
		if(event.cards[0].name=='sha') return att<0;
		if(!tar.countCards('e')&&tar.countCards('j')) return att>0;
		if(!tar.countCards('j')&&tar.countCards('e')) return att<0;
		return false;
	},
	content:function (){
		"step 0"
		var num=0;
		if(trigger.targets[0].countCards('h')) num++;
		if(trigger.targets[0].countCards('e')) num++;
		if(trigger.targets[0].countCards('j')) num++;
		if(num){
			player.discardPlayerCard(trigger.targets[0],num,'hej').set('filterButton',function(button){
				for(var i=0;i<ui.selected.buttons.length;i++){
					if(get.position(button.link)==get.position(ui.selected.buttons[i].link)) return false;
				}
				return true;
			}).set('ai',function(button){
				var tar=_status.event.getTrigger().targets[0];
				var att=get.attitude(player,tar);
				if(att>0) {
					if(get.type(button.link)=='delay'&&button.link.name!='XS_mantian') return 10;
					return -1;
				}
				else {
					if(get.type(button.link)=='delay'&&button.link.name!='XS_mantian') return -1;
					return 1+get.value(button.link);
				}
			});
		}
		"step 1"
		if(result.bool) {
			player.storage.XS_juemo.push(trigger.cards);
		}
	},
	ai:{
		expose:0.1,
	},
	group:["XS_juemo_gain"],
    subSkill:{
    	gain:{
    		trigger:{
    			player:["useCardAfter","useCardCancelled"],
    		},
    		direct:true,
    		filter:function(event,player){
				if(!player.storage.XS_juemo) return false;
				return player.storage.XS_juemo.indexOf(event.cards)>=0;
    		},
    		content:function(){
    			"step 0"
    			var n=player.storage.XS_juemo.indexOf(trigger.cards);
				player.storage.XS_juemo.splice(n,1);
				trigger.targets[0].gain(trigger.cards,player,'giveAuto');
    		},
			sub:true,
    	},
    },
},
"XS_zhaxiang":{
	trigger:{
		player:"phaseUseAfter",
	},
	direct:true,
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt2('XS_zhaxiang'),function(card,player,target){
            return player!=target&&target.countCards('h');
        }).ai=function(target){
			var att=get.attitude(player,target);
			var hs=target.countCards('h');
			return -att*hs;
        }
        "step 1"
		if(result.bool) {
			var tar=result.targets[0];
			player.logSkill('XS_zhaxiang',tar);
			player.viewHandcards(tar);
			var num1=tar.countCards('h','sha');
			if(num1!=0) {
				tar.damage(num1,player,'nocard');
				if(num1>=2) {
					player.loseHp();
				}
			}
		}
	},
	ai:{
		damage:true,
		expose:0.5,
	},
},
"XS_qinyin":{
	audio:"ext:血色衣冠:2",
 	trigger:{
		player:["useCardAfter","respondAfter"],
	},
	init:function (player){
        player.storage.XS_qinyin=0;
    },
	direct:true,
	priority:19,
	intro:{
		content:function (storage){
			return '已使用或打出：<span class="bluetext">'+storage+'</span> 张牌';
		},
	},
	marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"50px")+" src="+lib.assetURL+"extension/血色衣冠/icon/qinyin.png>":"琴",
	content:function (){
		"step 0"
		player.storage.XS_qinyin++;
		"step 1"
		if(player.storage.XS_qinyin>=3) {
			player.logSkill('XS_qinyin');
			player.storage.XS_qinyin-=3;
			player.draw();
			player.getStat().card={};	
		}
		player.markSkill('XS_qinyin');
	},
},
"XS_zhongchang":{
	audio:"ext:血色衣冠:2",
 	trigger:{
		global:["useCardAfter"],
	},
	usable:1,
	frequent:true,
	priority:17,
	filter:function (event,player){
		if(!player.storage.XS_qinyin) return false;
		if(_status.currentPhase==player) return false;
		if(event.player==player) return false;
		var tp=get.type(event.card);
		var hs=player.getCards('h');
		for(var i=0;i<hs.length;i++) {
			if(get.type(hs[i])==tp) return false;
		}
		return true;
	},
	content:function (){
		"step 0"
		player.showHandcards();
		player.storage.XS_qinyin++;
		"step 1"
		if(player.storage.XS_qinyin>=3) {
			player.logSkill('XS_qinyin');
			player.storage.XS_qinyin-=3;
			player.draw();
			player.getStat().card={};
		}
		player.markSkill('XS_qinyin');
	},
	ai:{
		combo:'XS_zhongchang',
	},
},
"XS_xianfu":{
	audio:"ext:血色衣冠:2",
	init:function (player){
		player.storage.XS_xianfu=[];
		player.storage.XS_xianfu_a='';
	},
	marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"50px")+" src="+lib.assetURL+"extension/血色衣冠/icon/xianfu.png>":"赋",
	intro:{
		content:function (content,player){
			var temp=player.storage.XS_xianfu,temp1=player.storage.XS_xianfu_a;
			var str='';
			if(temp=='') str='当前未声明任何牌';
			else str='当前声明牌：'+get.translation(temp);
			if(!temp1.length) str+='</br>【笑傲】无记录的牌';
			else str+='</br>“献赋”已记录的牌：'+get.translation(temp1);
			var temp2=player.storage.XS_qiuhuang;
			if(temp2&&temp2.length) {
				str+='</br>“求凰”已获得的牌：'+get.translation(temp2);
			}
			return str;
		},
	},
	trigger:{
		player:"phaseZhunbeiBegin",
	},
	priority:7,
	direct:true,
	content:function (){
		'step 0'
		var list=[];
		for(var i=0;i<lib.inpile.length;i++){
			if(get.type(lib.inpile[i])=='trick'&&!player.storage.XS_xianfu.contains(lib.inpile[i])) {
				list.push(['锦囊','',lib.inpile[i]]);
			}
		}
		if(list.length){
			player.chooseButton(['声明并记录一张普通锦囊牌',[list,'vcard']]).set('ai',function(button){
				var card={name:button.link[2]};
				if(player.countCards('h',{name:card.name})) {
					return get.value(card);
				}
				return get.value(card)/3;
			});
		}
		else event.finish();
		'step 1'
		if(result.bool&&result.links[0]){
			player.logSkill('XS_xianfu');
			var name=result.links[0][2];
			game.log(player,'声明并记录了',name);
			player.storage.XS_xianfu.push(name);
			player.storage.XS_xianfu_a=name;
			player.addTempSkill('XS_xianfu_use',{player:'phaseBefore'});
			player.markSkill('XS_xianfu');
			player.syncStorage('XS_xianfu');
		}
	},
	subSkill:{
		use:{
			charlotte:true,
			onremove:function (player,skill){
				player.storage.XS_xianfu_a='';
			},
			trigger:{
				global:"useCardAfter",
			},
			filter:function(event,player){
				if(event.getParent(2).skill=='XS_xianfu_use') return false;
				if(player.storage.XS_xianfu_a!=event.card.name) return false;
				return true;
			},
			check:function (event,player){
				var eff=0;
				for(var i=0;i<event.targets.length;i++){
					eff+=get.effect(event.targets[i],event.card,event.player,player);
				}
				return eff>0;
			},
			"prompt2":function (event,player){
				return '是否令'+get.translation(event.player)+'对'+get.translation(event.targets)+'使用的'+get.translation(event.card)+'额外结算一次?';
			},
			logTarget:'player',
			content:function (){
				game.playXSAudio('XS_xianfu',2);
				trigger.player.useCard(trigger.card,trigger.targets,false);
			},
			ai:{
				expose:0.4,
			},
			sub:true,
        },
	},
},
"XS_qiuhuang":{
	audio:"ext:血色衣冠:2",
	init:function (player){
		player.storage.XS_qiuhuang=[];
	},
	trigger:{
		global:"useCardAfter",
	},
	priority:99,
	check:function (event,player){
		var val=0;
		for(var i=0;i<event.cards.length;i++){
			val+=get.value(event.cards[i]);
		}
		return val>2;
	},
	"prompt2":function (event,player){
		return '是否移除“献赋”中的记录，获得'+get.translation(event.cards)+'?';
	},
	filter:function (event,player){
		if(event.getParent(2).skill=='XS_xianfu_use') return false;
		if(event.player==player) return false;
		if(player.storage.XS_qiuhuang.contains(event.card.name)) return false;
		if(!player.storage.XS_xianfu||!player.storage.XS_xianfu.contains(event.card.name)) return false;
		if(event.card) {
			return get.itemtype(event.cards)=='cards'&&get.position(event.cards[0],true)=='o';
		}
		return false;
	},
	content:function (){
		player.gain(trigger.cards,'gain2');
		player.storage.XS_qiuhuang.push(trigger.card.name);
		player.storage.XS_xianfu.remove(trigger.card.name);
		if(player.storage.XS_xianfu_a==trigger.card.name) {
			player.storage.XS_xianfu_a='';
		}
		player.syncStorage('XS_xianfu');
	},
	ai:{
		combo:'XS_xianfu',
	},
},
"XS_cifu":{
	intro:{
		content:function (storage){
			if(!storage.length){
				return '本轮未有角色使用过基本牌';
			}
			else{
				var str='本轮已被使用过的类型的基本牌有：'+get.translation(storage);
				return str;
			}
		},
	},
	ai:{
		expose:0.3,
	},
	init:function(player){
		player.storage.XS_cifu=[];
	},
	trigger:{
		global:"useCard",
	},
	direct:true,
	filter:function (event,player){
		if(get.type(event.card)!='basic') return false;
		return !player.storage.XS_cifu.contains(event.card.name);
	},
	priority:-1,
	content:function (){
		"step 0"
		player.storage.XS_cifu.push(trigger.card.name);
		player.markSkill('XS_cifu');
		"step 1"
		player.chooseBool(get.prompt('XS_cifu'),'是否令'+get.translation(trigger.player)+'摸1张牌？').set('ai',function(){
			return get.attitude(player,_status.event.getTrigger().player)>0;
		});
		"step 2"
		if(result.bool) {
			player.logSkill('XS_cifu',trigger.player);
			trigger.player.draw();
		}
		"step 3"
		var str=['sha','shan','jiu','tao'];
		var bool=true;
		for(var i=0;i<str.length;i++) {
			if(!player.storage.XS_cifu.contains(str[i])) bool=false;
		}
		if(bool&&str.contains(trigger.card.name)) {
			player.chooseTarget(get.prompt('XS_cifu'),'令1名角色回复或失去1点体力。',function(card,player,target){
				return true;
			}).ai=function(target){
				var att=get.attitude(player,target);
				if(target.isDamaged()) return att;
				return -att;
			}
		}
		else event.finish();
		"step 4"
		if(result.bool) {
			player.logSkill('XS_cifu',result.targets[0]);
			event.tar=result.targets[0];
			player.chooseControl(['回复1点体力','失去1点体力']).set('ai',function(event){
				var att=get.attitude(player,event.tar);
				if(att>0) return '回复1点体力';
				return '失去1点体力';
			}).set('prompt','令'+get.translation(event.tar)+'获得一项效果');
		}
		else event.finish();
		"step 5"
		if(result.control=='回复1点体力') {
			event.tar.recover();
		}
		else {
			event.tar.loseHp();
		}
	},
	group:["XS_cifu_clear"],
    subSkill:{
		clear:{
			trigger:{
				global:"roundStart",
			},
			priority:20,
			direct:true,
			content:function (){
				player.storage.XS_cifu=[];
				player.unmarkSkill('XS_cifu');
			},
			sub:true,
        },
    },
},
"XS_huixie":{
    enable:"phaseUse",
    usable:1,
    filterTarget:function (card,player,target){
        return target.countCards('h')!=target.hp;
    },
	selectTarget:1,
    content:function (){
		"step 0"
		if(target.countCards('h')>target.hp) {
			target.recover();
		}
		else {
			target.loseHp();
		}
		"step 1"
		var num1=target.countCards('h')-target.hp;
		if(num1>0) {
			if(num1>4) num1=4;
			target.chooseToDiscard('h',num1,true);
		}
		else if(num1<0) {
			if(num1<-4) num1=-4;
			target.draw(-num1);
		}
    },
    ai:{
        order:1,
		result:{
            target:function (player,target){
				var num1=0;
				if(target.countCards('h')>target.hp&&target.isDamaged()) {
					num1+=2;
					var temp=target.hp+1-target.countCards('h');
					num1+=temp;
				}  
				else {
					num1-=2;
					var temp=target.hp-1-target.countCards('h');
					num1+=temp;
				}
				return num1;
            },
        },
        expose:0.3,
    },
},
"XS_tuien":{
	audio:"ext:血色衣冠:2",
	selectTarget:1,
	filterTarget:function (card,player,target){
        return target!=player;
    },
	complexCard:true,
	position:"h",
	selectCard:[1,Infinity],
	filterCard:function (card,player){
		var col=get.color(card);
		for(var i=0;i<ui.selected.cards.length;i++){
			if(get.color(ui.selected.cards[i])!=col) return false;
		}
		return true;
    },
	check:function (card){
        return 5.5-get.value(card);
    },
	discard:false,
	prepare:"give2",
    enable:"phaseUse",
    usable:1,
    content:function (){
		"step 0"
		target.gain(cards,player);
		event.col=get.color(cards[0]);
		event.nm=cards.length;
		"step 1"
		if(target.next) {
			var tp=event.nm+1;
			target.chooseCard('交给'+get.translation(target.next)+tp+'张'+get.translation(event.col)+'色手牌，否则受到'+get.translation(player)+'造成的'+event.nm+'点伤害。',tp,{color:event.col},false).ai=function(card){
				if(event.nm<2) {
					return 6-get.value(card);
				}
				return 7.5-get.value(card);
			}
		}
		else event.finish();
		"step 2"
		game.delay(0.5);
		"step 3"
		if(result.bool){
			target.next.gain(result.cards,target,'giveAuto');
		}
		else {
			target.damage(player,event.nm,'nocard');
			event.finish();
		}
		"step 4"
		if(player.hasSkill('XS_lianshu_temp')&&player.storage.XS_lianshu_temp) {
			event.nm++;
			var tp=event.nm+1;
			event.pla=target.next;
			if(player.storage.XS_lianshu_temp=='previous') {
				event.tar=event.pla.previous;
			}
			else {
				event.tar=event.pla.next;
			}
			event.pla.chooseCard('交给'+get.translation(event.tar)+tp+'张'+get.translation(event.col)+'色手牌，否则受到'+get.translation(player)+'造成的'+event.nm+'点伤害。',tp,{color:event.col},false).ai=function(card){
				if(event.nm<2) {
					return 6-get.value(card);
				}
				return 7.5-get.value(card);
			}
		}
		else event.finish();
		"step 5"
		game.delay(0.5);
		"step 6"
		if(result.bool){
			event.tar.gain(result.cards,event.pla,'giveAuto');
		}
		else {
			event.pla.damage(player,event.nm,'nocard');
		}
    },
    ai:{
		damage:true,
        order:1,
		result:{
            target:function (player,target){
				var att1=get.attitude(player,target.next);
				if(!player.hasSkill('XS_lianshu_temp')||!player.storage.XS_lianshu_temp) {
					if(att1>0) return -2;
				}
				else {
					if(player.storage.XS_lianshu_temp=='next') {
						var att2=get.attitude(player,target.next.next);
						if(att2>0) return -2;
					}
					else {
						if(target.countCards('h')>3) return 2;
					}
				}
				return 0;
            },
        },
        expose:0.3,
    },
},
"XS_lianshu":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:["phaseUseBefore"],
	},
	priority:7,
	frequent:true,
	content:function(){
		'step 0'
		player.chooseControlList(['摸1张牌，如此本回合“推恩”目标的下家继续对其上家执行“推恩”效果','弃置1张牌并回复1点体力，如此本回合“推恩”目标的下家继续对其下家执行“推恩”效果']).set('ai',function(event,player){
			if(player.isDamaged()&&player.countCards('h')>2) return 1;
			return 0;
		}).set('prompt','请选择1项');
		'step 1'
		if(result.control!='cancel2') {
			if(result.index==0) {
				player.draw();
				player.storage.XS_lianshu_temp='previous';
			}
			else {
				player.chooseToDiscard('h',1,true);
				player.recover();
				player.storage.XS_lianshu_temp='next';
			};
			player.addTempSkill('XS_lianshu_temp');
		}
	},
	subSkill:{
		temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_mifeng":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:["phaseDrawEnd","phaseDiscardEnd"],
	},
	direct:true,
	filter:function (event,player){
		if(event.player==player) return false;
		if(event.name=='phaseDraw') {
			return player.countCards('h',{type:'basic'});
		}
		else if(event.name=='phaseDiscard') {
			return player.countCards('h',function(card){
				return get.type(card)!='basic';
			});
		}
		return false;
	},
	priority:-2,
	content:function (){
		"step 0"
		if(trigger.name=='phaseDraw'){
			var str='是否弃置1张基本牌，令'+get.translation(trigger.player)+'摸2张牌？';
		}
		else if(trigger.name=='phaseDiscard') {
			var str='是否弃置1张非基本牌，令'+get.translation(trigger.player)+'弃置2张牌？';
		}
		player.chooseCard(get.prompt('XS_mifeng'),str,'h',false,function(card){
			var trigger=_status.event.getTrigger();
			if(trigger.name=='phaseDraw') {
				return get.type(card)=='basic';
			}
			else {
				return get.type(card)!='basic';
			} 
		}).set('ai',function(card){
			var trigger=_status.event.getTrigger();
			var att=get.attitude(player,trigger.player);
			if(trigger.name=='phaseDraw') {
				if(att>0) return 4-get.value(card);
			}
			else {
				if(att<0&&trigger.player.countCards('he')>1) return 4-get.value(card);
			}
			return -1;
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_mifeng',trigger.player);
			player.discard(result.cards[0]);
			if(trigger.name=='phaseDraw'){
				trigger.player.draw(2);
			}
			else if(trigger.name=='phaseDiscard') {
				trigger.player.chooseToDiscard('he',2,true);
			}
		}
	},
	ai:{
		expose:0.3,
    },	
},
"XS_chengliang":{
	audio:"ext:血色衣冠:2",
	trigger:{
        player:"phaseBefore",
    },
    forced:true,
    content:function (){
		"step 0"
		var m=0,e=0,l=0;
		var players=game.players;
		for(var i=0;i<players.length;i++) {
			if(player[i]!=player) {
				if(players[i].countCards('h')>player.countCards('h')) m++;
				if(players[i].countCards('h')==player.countCards('h')) e++;
				if(players[i].countCards('h')<player.countCards('h')) l++;
			}
		}
		if(m>e&&m>l) player.addTempSkill('XS_qushen',{player:'phaseBefore'});
		else if(l>e&&l>m) player.addTempSkill('XS_caisi',{player:'phaseBefore'});
		else player.addTempSkill('XS_meizhuang',{player:'phaseBefore'});
    },
},
"XS_meizhuang":{
	audio:"ext:血色衣冠:2",
	trigger:{
        player:"phaseDiscardAfter",
    },
    direct:true,
	filter:function (event,player){
		return player.countCards('he');
	},
	priority:13,
    content:function (){
		"step 0"
		player.chooseTarget(get.prompt2('XS_meizhuang'),function(card,player,target){
            return player!=target;
        }).ai=function(target){
			if(!player.countCards('he',{color:'black'})&&!player.countCards('he',{type:'basic'})&&!player.countCards('he',{suit:'club'})) return -1;
			var att=get.attitude(player,target);
			if(target.countCards('j')) return att*=10;
			return -att;
        }
        "step 1"
		if(result.bool) {
			player.logSkill('XS_meizhuang',result.targets[0]);
			event.tar=result.targets[0];
			event.tar.discardPlayerCard(player,'he','请弃置'+get.translation(player)+'的一张牌，若此牌为：黑色，其可弃置你任意区域1张牌；基本牌，其可视为使用1张基本牌；梅花牌，其摸2张牌。',true).set('ai',function(button){
				var val=get.value(button.link);
				if(get.color(button.link)=='black'&&event.tar.countCards('j')) val-=3;
				if(get.type(button.link)=='basic') val-=3.5;
				if(get.suit(button.link)=='club') val-=4;
				if(_status.event.att) {
					return 1-val;
				}
				else {
					return val;
				}
			}).set('att',get.attitude(event.tar,player)>0);
		}
		else event.finish();
		"step 2"
		event.cd=result.links[0];
		if(get.color(event.cd)=='black') {
			player.discardPlayerCard(event.tar,'hej');
		}
		"step 3"
		if(get.suit(event.cd)=='club') {
			player.draw(2);
		}
		"step 4"
		if(get.type(event.cd)=='basic') {
			var list=[];
			list.push(['基本','','sha']);
			if(lib.filter.cardUsable({name:'tao'},player)&&game.hasPlayer(function(current){
				return player.canUse('tao',current);
			})){
				list.push(['基本','','tao']);
			}
			if(lib.filter.cardUsable({name:'jiu'},player)&&game.hasPlayer(function(current){
				return player.canUse('jiu',current);
			})){
				list.push(['基本','','jiu']);
			}
			if(list.length){
				player.chooseButton(['视为使用一张基本牌',[list,'vcard']]).set('ai',function(button){
					var card={name:button.link[2],nature:button.link[3]};
					if(card.name=='tao'){
						if(player.hp==1||(player.hp==2&&!player.hasShan())||player.needsToDiscard()){
							return 5;
						}return 1;}
					if(card.name=='sha'){
						if(game.hasPlayer(function(current){
							return player.canUse(card,current)&&get.effect(current,card,player,player)>0
						})){
							return 2.9;
						}return 0;
					}if(card.name=='jiu'){return 0.5;}
					return 0;
				});
			}
		}
		else event.finish();
		"step 5"
		if(result&&result.bool&&result.links[0]){
			player.chooseUseTarget({name:result.links[0][2],isCard:true},false);
		}
    },
},
"XS_congzheng":{
	init:function (player){
		player.storage.XS_congzheng=[];
	},
	intro:{
		content:"cards",
	},
	mod:{
		attackFrom:function (from,to,distance){
			if(from.isEmpty(1)) return distance-1;
		},
	},
	"prompt2":function (event,player){
		return '当你使用杀指定一名异性的目标角色后，你可令其选择一项：1.弃置一张手牌；2.令你摸一张牌。';
	},
	logTarget:'target',
	equipSkill:false,
	derivation:["cixiong_skill"],
	noHidden:true,
	inherit:["cixiong_skill"],
	filter:function(event,player){
		if(!lib.skill.cixiong_skill.filter(event,player)) return false;
		if(!player.storage.XS_congzheng||!player.storage.XS_congzheng.length) return false;
		return true;
	},
	global:'XS_congzheng2',
},
"XS_congzheng2":{
	usable:1,
	//enable:['chooseToUse'],
	enable:"phaseUse",
	filter:function(event,player){
		if(!event.filterCard({name:'sha'},player,event)) return false;
		if(event.XS_congzheng2) return false;
		return game.hasPlayer(function(current){
			return current!=player&&current.hasSkill('XS_congzheng')&&current.countCards('h');
		});
	},
	silent:true,
	delay:false,
	content:function(){
		'step 0'
		var evt=event.getParent(2);
		evt.set('XS_congzheng2',true);
		'step 1'
		player.chooseTarget('你可选择1名有“从征”技能的角色，其可将手牌中的一张杀置于其武将牌上，如此你视为使用一张杀',1,false,function(card,player,target){
			return target.hasSkill('XS_congzheng')&&target.countCards('h');
		}).set('ai',function(target){
			var att=get.attitude(player,target);
			return att;
		});
		'step 2'
		if(result.bool){
			event.pla=result.targets[0];
			event.player=player;
			var next=event.pla.chooseCardButton(event.pla.getCards('h'),'是否对'+get.translation(player)+'发动【从征】？</br></br>你可将手牌中的一张杀置于武将牌上，如此'+get.translation(player)+'视为使用一张杀。',false).set('filterButton',function(button){
				return button.link.name=='sha';
			}).set('ai',function(button){
				if(get.attitude(event.pla,event.player)>0) return 8-get.value(button.link);
				return -1;
			});
		}
		else event.finish();
		'step 3'
		if(result.bool&&result.links&&result.links.length){
			var evt=event.getParent(2);
			var cds=result.links[0];
			event.pla.lose(cds,ui.special,'toStorage');
			if(!event.pla.storage.XS_congzheng) {
				event.pla.storage.XS_congzheng=[];
			}
			event.pla.storage.XS_congzheng.push(cds);
			event.pla.markSkill('XS_congzheng');
			game.broadcastAll(function(result){
				lib.skill.XS_congzheng2_backup.viewAs={name:'sha',isCard:true};
				lib.skill.XS_congzheng2_backup.prompt='选择使用杀的目标';
			});
			evt.set('_backupevent','XS_congzheng2_backup');
			evt.backup('XS_congzheng2_backup');
			game.playXSAudio('XS_congzheng',2);
			evt.goto(0);
		}
		else event.finish();
	},
	ai:{
		order:11,
		result:{
			player:1,
		}
	},
},
"XS_congzheng2_backup":{
	direct:true,
	sourceSkill:'XS_congzheng2',
	precontent:function(){
		delete event.result.skill;
		event.result.cards=[];
		event.result.card=get.autoViewAs({name:'sha',isCard:true})
	},
	filterCard:function(){return false},
	selectCard:-1,
},
"XS_pushuo":{
	audio:"ext:血色衣冠:2",
 	trigger:{
		player:["discardEnd","damageEnd"],
	},
	filter:function (event,player){
		if(!player.storage.XS_congzheng||!player.storage.XS_congzheng.length) return false;
		if(event.name=='discard') {
			for(var i=0;i<event.cards.length;i++) {
				if(event.cards[i].original=='e'||event.cards[i].original=='h') return true;
			}
			return false;
		}
		else return event.num>0;
	},	
	priority:19,
	frequent:true,
	content:function (){
		"step 0"
		var cdx=player.storage.XS_congzheng;
		if(cdx.length) {
			player.chooseCardButton('扑朔：你可使用武将牌上的一张杀，且根据其颜色更改你的性别为：黑色，男；红色，女。',1,cdx,false).ai=function(button){
				return get.value(button.link);
			}
		}
		else event.finish();
		"step 1"
		if(result.links){
			event.cd=result.links[0];
			var col=get.color(result.links[0]);
			if(col=='red') player.sex='female';
			else player.sex='male';
			player.chooseUseTarget(result.links[0]);
		}
		else event.finish();
		"step 2"
		if(event.cd) {
			player.storage.XS_congzheng.remove(event.cd);
			player.syncStorage('XS_congzheng');
			if(player.storage.XS_congzheng.length==0) player.unmarkSkill('XS_congzheng');
		}
	},
	ai:{
		combo:'XS_congzheng',
		nodiscard:true,
		expose:0.3,
	},
},
"XS_caisi":{
	mark:true,
	intro:{
		content:function (storage){
			if(!storage.length){
				return '本轮未有角色使用过基本牌';
			}
			else{
				var str='本轮已被使用过的类型的基本牌有：'+get.translation(storage);
				return str;
			}
		},
	},
	init:function(player){
		player.storage.XS_caisi=[];
		player.storage.XS_caisi_a=0;
	},
	enable:"chooseToUse",
	filter:function (event,player){
        if(player.storage.XS_caisi_a>=2)return false;
		if(event.filterCard({name:'sha'},player,event)&&player.storage.XS_caisi.contains('sha')) return true;
		if(event.filterCard({name:'jiu'},player,event)&&player.storage.XS_caisi.contains('jiu')) return true;
		if(event.filterCard({name:'tao'},player,event)&&player.storage.XS_caisi.contains('tao')) return true;
		if(event.filterCard({name:'shan'},player,event)&&player.storage.XS_caisi.contains('shan')) return true;
        return false;
    },
	chooseButton:{
		dialog:function (event,player){
            var list=[];
            if(event.filterCard({name:'sha'},player,event)&&player.storage.XS_caisi.contains('sha')){
                list.push(['基本','','sha']);}
            if(event.filterCard({name:'tao'},player,event)&&player.storage.XS_caisi.contains('tao')) {
				list.push(['基本','','tao']);}
			if(event.filterCard({name:'jiu'},player,event)&&player.storage.XS_caisi.contains('jiu')) {
				list.push(['基本','','jiu']);}
			if(event.filterCard({name:'shan'},player,event)&&player.storage.XS_caisi.contains('shan')) {
				list.push(['基本','','shan']);}
            return ui.create.dialog("才思",[list,"vcard"],"hidden");
        },
		check:function (button){
			var player=get.player();
			var card={name:button.link[2]};
			if(card.name=='shan') return 3;
			if(game.hasPlayer(function(current){
				return player.canUse({name:'sha'},current)&&get.effect(current,{name:'sha'},player,player)>0;
			})){
				if(card.name=='sha'){
					return 2.9;
				}
				else if(card.name=='jiu'){
					if(player.storage.XS_caisi.contains('sha')||player.hasUsableCard('sha')) return 4;
					if(player.hp<=0) return 3.5;
					else return0;
				}
			}
			if(game.hasPlayer(function(current){
				return player.canUse({name:'tao'},current)&&get.effect(current,{name:'tao'},player,player)>0;
			})&&card.name=='tao'){
				return 4;
			}
			return 0;	
        },
		backup:function (links,player){
            return {
				filterCard:function (card){return false;},
                popname:true,
                selectCard:-1,
                viewAs:{
                    name:links[0][2],
                }, 
                onuse:function(result,player){
					player.storage.XS_caisi_a++;
                    player.logSkill('XS_caisi');
                }  
            }
        },
		prompt:function (links,player){
            return '视为使用1张'+get.translation(links[0][2]);
        },
	},
	ai:{
		order:function (){
            var player=get.player();
            var event=_status.event;
            if(event.type=='dying'){
                if(event.filterCard({name:'tao'},player,event))return 0.5;
            }
            else{
                if(event.filterCard({name:'tao'},player,event)||event.filterCard({name:'shan'},player,event))return 4;
                if(event.filterCard({name:'sha'},player,event))return 2.9;
            }
            return 0;
        },
		save:true,
		respondSha:true,
		respondShan:true,
		skillTagFilter:function (player,tag,arg){
            if(!player.storage.XS_caisi) return false;
        },
		result:{
			player:function (player){
                if(_status.event.type=='dying')return get.attitude(player,_status.event.dying);
                else return 1;
            },
		},
	},
	group:["XS_caisi_record","XS_caisi_clear"],
    subSkill:{
        record:{
            trigger:{
                global:"useCardEnd",
            },
            direct:true,
            filter:function (event,player){
				if(!player.storage.XS_caisi) return false;
				if(get.type(event.card)!='basic') return false;
                return !player.storage.XS_caisi.contains(event.card.name);
            },
            priority:-1,
            content:function (){
				player.storage.XS_caisi.push(trigger.card.name);
				player.syncStorage('XS_caisi');
            },
            sub:true,
        },
		clear:{
			trigger:{
				global:"roundStart",
			},
			priority:20,
			direct:true,
			content:function (){
				player.storage.XS_caisi=[];
				player.storage.XS_caisi_a=0;
				player.syncStorage('XS_caisi');
			},
			sub:true,
        },
    },
},
"XS_xushu":{
	trigger:{
		global:"useCardEnd",
	},
	direct:true,
	filter:function (event,player){
		if(player.hasSkill('XS_xushu_temp')) return false;
		if(!player.countCards('h')) return false;
		if(event.card.isCard) {
			if(get.type(event.card)!='trick') return false;
			if(get.itemtype(event.cards)=='cards'&&get.position(event.cards[0],true)=='o') return true;
		}
		return false;
	},
	init:function(player){
		player.storage.XS_xushu=[];
	},
	content:function (){
		"step 0"
		player.chooseCard(get.prompt('XS_xushu',trigger.player),'h',[1,2],'是否交弃置1至2张手牌，令'+get.translation(trigger.player)+'获得'+get.translation(trigger.card)+'，若你弃置了2张牌，其使用此牌时可使你也成为目标。').ai=function(card){
			var trigger=_status.event.getTrigger();
			if(get.attitude(player,trigger.player)<=0) return false; 
			if(trigger.card.name=='zengbin') return 6-get.value(card);
			if(get.value(trigger.card)>5&&ui.selected.cards.length==0) return 4-get.value(card);
			return -1;
		}
		"step 1"
        if(result.bool){
			player.addTempSkill('XS_xushu_temp');
			player.logSkill('XS_xushu',trigger.player);
			if(result.cards.length==2) {
				player.storage.XS_xushu.push(trigger.cards[0]);
			}	
			player.discard(result.cards);
			trigger.player.gain(trigger.cards[0],'gain2');
        }
	},
	ai:{
		expose:0.3,
		effect:{
			target:function (card,player,target){
				if(get.type(card)=='trick'){
					if(!target.hasFriend()) return;
					if(!target.storage.XS_xushu||!target.storage.XS_xushu.contains(card)) return;
					return 0.5;
				}
			},
		},
	},
	group:["XS_xushu_use","XS_xushu_lose"],
    subSkill:{
        use:{
            trigger:{
                global:"useCardBegin",
            },
            forced:true,
            filter:function (event,player){
				if(!event.card.isCard) return false;
				if(event.targets.contains(player)) return false;
                return player.storage.XS_xushu.contains(event.cards[0]);
            },
            priority:-2,
            content:function (){
				"step 0"
				event.pla=player;
				trigger.player.chooseBool(get.prompt('XS_xushu'),'是否令'+get.translation(player)+'也成为你使用的'+get.translation(trigger.card)+'的目标？').set('ai',function(){
					var trigger=_status.event.getTrigger();
					var eff=get.effect(event.pla,trigger.card,trigger.player,trigger.player);
					return eff>0;
				});
				"step 1"
				if(result.bool){
					trigger.targets.add(player);
					player.storage.XS_xushu.remove(trigger.cards[0]);
				}
            },
            sub:true,
        },
		lose:{
            trigger:{
                global:"loseAfter",
            },
            direct:true,
            filter:function (event,player){
				return player.storage.XS_xushu&&player.storage.XS_xushu.length>0;
            },
            priority:-2,
            content:function (){
				for(var i=0;i<trigger.cards.length;i++) {
					if(player.storage.XS_xushu.contains(trigger.cards[i])) {
						player.storage.XS_xushu.remove(trigger.cards[i]);
					} 
				}
            },
            sub:true,
        },
		temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_enshi":{
	init:function(player){
		player.storage.XS_enshi_sha=[];
		player.storage.XS_enshi_trick=[];
	},
	intro:{
		content:function (content,player){
			var str='';
			if(player.storage.XS_enshi_sha.length) {
				str+='成为过你使用杀的目标的角色：';
				str+=get.translation(player.storage.XS_enshi_sha);
				str+='</br>'
			}
			if(player.storage.XS_enshi_trick.length) {
				str+='成为过你使用普通锦囊牌的目标的角色：';
				str+=get.translation(player.storage.XS_enshi_trick);
			}
			if(str=='') {
				str+='未层使用杀或普通锦囊牌指定其他角色为目标';
			}
			return str;
		},
	},
    trigger:{
        player:"useCardBefore",
    },
    filter:function (event,player){
		//if(event.getParent().name=='XS_xingmie') return false;
		if(event.card.name!='sha'&&get.type(event.card)!='trick') return false;
		if(event.targets.length!=1) return false;
		return game.hasPlayer(function(current){
			if(event.targets.contains(current)) return false;
			if(event.card.name=='sha') return player.storage.XS_enshi_sha.contains(current);
			if(get.type(event.card)=='trick') return player.storage.XS_enshi_trick.contains(current);
			return false;
		});
    },
	priority:899,
	direct:true,
    content:function (){
		"step 0"
		event.extars=game.filterPlayer(function(current){
			if(trigger.targets.contains(current)) return false;
			if(trigger.card.name=='sha'&&player.storage.XS_enshi_sha.contains(current)) {
				return true;
			}
			else if(get.type(trigger.card)=='trick'&&player.storage.XS_enshi_trick.contains(current)) {
				return true;
			}
			return false;
		}).slice(0);
		player.chooseBool(get.prompt('XS_enshi'),'是否使'+get.translation(event.extars)+'也成为你使用的'+get.translation(trigger.card)+'的目标？').ai=function(event,player){
			var eff=0,tri=_status.event.getTrigger();
			for(var i=0;i<event.extars.length;i++) {
				eff+=get.effect(event.extars[i],tri.card,player,player);
			}
			return eff>0;
		};
		"step 1"
		if(result.bool){
			player.logSkill('XS_enshi',event.extars);
			trigger.targets.addArray(event.extars);
		}
    },
	ai:{
		expose:0.3,
		effect:{
			player:function(card,player,target){
				if(player!=target) {
					if(card.name=='sha') {
						if(!player.storage.XS_enshi_sha.contains(target)) return [1,2];
					}
					if(get.type(card)=='trick') {
						if(!player.storage.XS_enshi_trick.contains(target)) return [1,2];
					}
				}
			},
		},
	},
	group:["XS_enshi_rec"],
	subSkill:{
    	rec:{
			trigger:{
				global:"useCardToEnd",
			},
			direct:true,
			filter:function (event,player){
				if(!event.card) return false;
				if(event.player!=player) return false;
				if(event.target==player) return false;
				if(event.card.name=='sha') {
					return !player.storage.XS_enshi_sha.contains(event.target);
				}
				if(get.type(event.card)=='trick') {
					return !player.storage.XS_enshi_trick.contains(event.target);
				}
				return false;
			},
			content:function (){
				if(trigger.card.name=='sha') {
					player.storage.XS_enshi_sha.push(trigger.target);
				}
				if(get.type(trigger.card)=='trick') {
					player.storage.XS_enshi_trick.push(trigger.target);
				}
				player.markSkill('XS_enshi');
			},
			sub:true,
    	},
    },
},
"XS_xingmie":{
	mark:true,
    unique:true,
	limited:true,
    skillAnimation:true,
    animationColor:"fire",
	trigger:{player:"useCardBegin",},
	priority:-10,
	filter:function(event,player){
		var info=get.info(event.card);
		return !player.storage.XS_xingmie&&!info.multitarget&&event.targets.length>1;
	},
	init:function(player){
		player.storage.XS_xingmie=false;
	},
	check:function (event,player){
		if(event.targets.length<4) return false;
		for(var i=0;i<event.targets.length;i++) {
			if(get.effect(event.targets[i],event.card,player,player)>=1) return true;
		}
		return false;
	},
	content:function(){
		'step 0'
		player.awakenSkill('XS_xingmie');
        player.storage.XS_xingmie=true;
		'step 1'
		event.nm=Math.min(4,trigger.targets.length);
		player.chooseTarget('令你使用的'+get.translation(trigger.card)+'仅对其中一名目标结算'+event.nm+'次',true,function(card,player,target){
			var trigger=_status.event.getTrigger();
            return trigger.targets.contains(target);
        }).ai=function(target){
			var trigger=_status.event.getTrigger();
			var eff=get.effect(target,trigger.card,player,player);
			return eff;
        }
        'step 2'
		if(result.bool) {
			event.tar=result.targets[0];
			trigger.targets=[];
			trigger.targets.push(event.tar);
			for(var i=0;i<event.nm-1;i++) {
				player.useCard(trigger.card,event.tar,false);
			}
		}
		else event.finish();
	},
	ai:{
		expose:0.3,
    },
	intro:{
		content:'limited'
	}
},
"XS_qingwu":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
    usable:1,
    position:"he",
    filter:function (event,player){
        return player.countCards('he')>0;
    },
	init:function (player){
		player.storage.XS_qingwu=[0,0,0];
	},
    filterCard:function (card){
        var suit=get.suit(card);
        for(var i=0;i<ui.selected.cards.length;i++){
            if(get.suit(ui.selected.cards[i])==suit) return false;
        }
        return true;
    },
	complexCard:true,
    check:function (card){
        return 6-get.value(card);
    },
    selectCard:[2,4],
    content:function (){
		"step 0"
		event.num1=cards.length;
		player.chongzhuCards(cards);
		"step 1"
		if(event.num1==2&&player.storage.XS_qingwu[0]!=0) event.finish();
		else if(event.num1==3&&player.storage.XS_qingwu[1]!=0) event.finish();
		else if(event.num1==4&&player.storage.XS_qingwu[2]!=0) event.finish();
		"step 2"
		var list=[];
		if(event.num1==2&&player.storage.XS_qingwu[0]==0) {
			player.storage.XS_qingwu[0]=1;
			var str='基本牌';
			if(lib.filter.cardUsable({name:'sha'},player,event.getParent('chooseToUse'))&&game.hasPlayer(function(current){
				return player.canUse('sha',current);
			})){
				list.push(['基本','','sha']);
				list.push(['基本','','sha','fire']);
				list.push(['基本','','sha','thunder']);
			}
			if(lib.filter.cardUsable({name:'tao'},player,event.getParent('chooseToUse'))&&game.hasPlayer(function(current){
				return player.canUse('tao',current);
			})){
				list.push(['基本','','tao']);
			}
			if(lib.filter.cardUsable({name:'jiu'},player,event.getParent('chooseToUse'))&&game.hasPlayer(function(current){
				return player.canUse('jiu',current);
			})){
				list.push(['基本','','jiu']);
			}
		}
		if(event.num1==3&&player.storage.XS_qingwu[1]==0) {
			player.storage.XS_qingwu[1]=1;
			var str='装备牌';
			var list1=get.inpile('equip');
			for(var i=0;i<list1.length;i++){
				var card={name:list1[i]};
				var info=get.info(card);
				if(info.subtype!='equip5'){
					list.push(list1[i]);
				}
			}
			for(var i=0;i<list.length;i++){
				list[i]=['装备','',list[i]];
			}
		}
		if(event.num1==4&&player.storage.XS_qingwu[2]==0) {
			player.storage.XS_qingwu[2]=1;
			var str='普通锦囊牌';
			for(var i=0;i<lib.inpile.length;i++){
				if(get.type(lib.inpile[i])=='trick') list.push(['锦囊','',lib.inpile[i]]);
			}
		}
		if(list.length){
			player.chooseButton(['你可视为使用一张'+str,[list,'vcard']]).set('ai',function(button){
				var player=_status.event.player;
				var card={name:button.link[2],nature:button.link[3]};
				if(event.num1==2) {
					if(card.name=='tao'){
						if(player.hp==1||(player.hp==2&&!player.hasShan())||player.needsToDiscard()){
							return 5;
						}return 1;}
					if(card.name=='sha'){
						if(game.hasPlayer(function(current){
							return player.canUse(card,current)&&get.effect(current,card,player,player)>0
						})){
							if(card.nature=='fire') return 2.95;
							if(card.nature=='thunder') return 2.92;
							return 2.9;
						}return 0;
					}if(card.name=='jiu'){return 0.5;}
				}
				if(event.num1==3) {
					if(!player.getEquip(1)) {
						if(card.name=='XS_chiyoufu'){return 10;}}
					if(!player.getEquip(2)) {
						if(card.name=='bagua'){return 10;}}
					if(!player.getEquip(3)) {
						if(card.name=='XS_saluzi'){return 10;}}
					if(!player.getEquip(4)) {
						if(card.name=='XS_wuzhui'){return 10;}}
				}
				if(event.num1==4) {
					var recover=0,lose=1,players=game.filterPlayer();
					for(var i=0;i<players.length;i++){
						if(players[i].hp==1&&get.damageEffect(players[i],player,player)>0&&!players[i].hasSha()){
							return (card.name=='juedou')?2:-1;
						}
						if(!players[i].isOut()){
							if(players[i].hp<players[i].maxHp){
								if(get.attitude(player,players[i])>0){
									if(players[i].hp<2){
										lose--;
										recover+=0.5;}
									lose--;
									recover++;}
								else if(get.attitude(player,players[i])<0){
									if(players[i].hp<2){
										lose++;
										recover-=0.5;}
									lose++;
									recover--;}
							}
							else{
								if(get.attitude(player,players[i])>0){lose--;}
								else if(get.attitude(player,players[i])<0){lose++;}
							}
						}
					}
					if(lose>recover&&lose>0) return (card.name=='nanman')?1:-1;
					if(lose<recover&&recover>0) return (card.name=='taoyuan')?1:-1;
					return (card.name=='wuzhong')?1:-1;
				}
				return 0;
			});
		}
		else event.finish();
		"step 3"
		if(result&&result.bool&&result.links[0]){
			if(event.num1==2||event.num1==4) {
				var card={name:result.links[0][2],nature:result.links[0][3]};
			}
			else {
				var name=result.links[0][2];
				var card=game.createCard(name);
				card._destroy="true";
			}
			player.chooseUseTarget(card,true);
		}
		"step 4"
		if(player.storage.XS_jubu) {
			if(event.num1==2&&!player.storage.XS_jubu.contains('弃置手牌数最多的角色1张牌')) {
				var str='弃置手牌数最多的角色1张牌';
			}
			if(event.num1==3&&!player.storage.XS_jubu.contains('摸1张牌')) {
				var str='摸1张牌';
			}
			if(event.num1==4&&!player.storage.XS_jubu.contains('令1名角色回复1点体力')) {
				var str='令1名角色回复1点体力';
			}
			if(str) {
				player.storage.XS_jubu.push(str);
			}	
		}
    },
    ai:{
        order:1,
        result:{
            player:1,
        },
    },
},
"XS_jubu":{
	audio:"ext:血色衣冠:2",
    trigger:{
        player:["phaseZhunbeiBegin","phaseJieshuBegin"],
    },
	init:function (player){
		player.storage.XS_jubu=['交给1名其他角色1张牌'];
		player.storage.XS_jubu_a=[];
	},
    direct:true,
    content:function (){
		"step 0"
		var list=[];
		list=list.concat(player.storage.XS_jubu);
		list.remove(player.storage.XS_jubu_a);
		list.push('取消');
        player.chooseControl(list).set('ai',function(event){
			if(list.contains('令1名角色回复1点体力')) {
				if(game.hasPlayer(function(current){
					return current.isDamaged()&&get.attitude(player,current)>0;
				})) return '令1名角色回复1点体力';
			}
			if(list.contains('摸1张牌')) return '摸1张牌';
			if(list.contains('弃置手牌数最多的角色1张牌')) {
				if(game.hasPlayer(function(current){
					return current.isMaxHandcard()&&get.attitude(player,current)<0;
				})) return '弃置手牌数最多的角色1张牌';
			}
			if(player.countCards('h','du')) return '交给1名其他角色1张牌';
			return '取消';
        }).set('prompt','踽步：请选择1项发动');
        "step 1"
		if(result.control=='摸1张牌') {
			player.storage.XS_jubu_a.push(result.control);
			player.draw();
			event.finish();
		}
		else if(result.control!='取消') {
			player.storage.XS_jubu_a.push(result.control);
			event.con=result.control;
			if(event.con=='交给1名其他角色1张牌') {
				player.chooseCardTarget({
					filterCard:function(card){return true;},
					position:"he",
					selectCard:1,
					selectTarget:1,
					filterTarget:function(card,player,target){return player!=target;},
					ai1:function(card){
						return card.name=='du';
					},
					ai2:function(target){
						var att=get.attitude(_status.event.player,target);
						return -att;
					},
					prompt:'交给1名其他角色1张牌'
				});
			}
			else event.goto(3);
		}
		else event.finish();
		"step 2"
		if(result.bool){
			player.logSkill('XS_jubu',result.targets[0]);
			result.targets[0].gain(result.cards[0],player,'giveAuto');
			event.finish();
		}
		else event.finish();
		"step 3"
		player.chooseTarget(event.con,function(card,player,target){
			if(event.con=='弃置手牌数最多的角色1张牌') return target.isMaxHandcard();
			if(event.con=='令1名角色回复1点体力') return target.isDamaged();
            return false;
        }).ai=function(target){
			var att=get.attitude(player,target);
			if(event.con=='弃置手牌数最多的角色1张牌') return -att;
			if(event.con=='令1名角色回复1点体力') return att;
			return -1;
        }
        "step 4"
		if(result.bool) {
			player.logSkill('XS_jubu',result.targets[0]);
			if(event.con=='弃置手牌数最多的角色1张牌') {
				player.discardPlayerCard(result.targets[0],'he',true);
			}
			if(event.con=='令1名角色回复1点体力') {
				result.targets[0].recover();
			}
		}
    },
	group:["XS_jubu_clear"],
	subSkill:{
		clear:{
			trigger:{
				player:["phaseBefore"],
			},
			direct:true,
			priority:9,
			content:function (){
				player.storage.XS_jubu_a=[];
			},
			sub:true,
		},
	},
},
"XS_huiyan":{
	init:function (player){
		player.storage.XS_huiyan=3;
	},
	mark:true,
	intro:{
		content:function (storage){
			return '魏势力技，1名角色判定牌生效前，你可展示牌堆顶(<span class="bluetext">'+storage+'</span>)张牌，将其中1张作为判定结果，获得其余并翻面，然后使()内-1，若()内为0，重置()且本轮此技能失效';
		},
	},
	priority:9995,
	trigger:{global:'judge'},
	filter:function(event,player){
		return !player.hasSkill("XS_huiyan_temp")&&player.group=='wei'&&player.storage.XS_huiyan>0;
	},
	logTarget:'player',
	check:function (event,player){
		var res=event.judge(event.player.judging[0]);
		var att=get.attitude(player,event.player);
		if(att>0){
			return res<0;
		}
		else{
			return res>=0;
		}	
    },
	audio:"ext:血色衣冠:2",
	content:function(){
		"step 0"
		event.cds=get.cards(player.storage.XS_huiyan);
		player.showCards(event.cds);
		"step 1"
		if(event.cds.length) {
			player.chooseCardButton('将其中一张作为'+get.translation(trigger.player)+'的'+(trigger.judgestr||'')+'判定结果，获得其余并翻面',event.cds,1,true).ai=function(button){
				var trigger=_status.event.getTrigger();
				var player=_status.event.player;
				var judging=trigger.player.judging[0];		
				var result=trigger.judge(button.link)-trigger.judge(judging);
				var attitude=get.attitude(player,trigger.player);
				if(attitude>0) return result;
				else return -result;
			}
		}
		else event.finish();
		"step 2"
		event.cd=result.links;
		player.respond(result.links,'XS_huiyan','highlight','noOrdering');
		"step 3"
		event.cds.remove(event.cd[0]);
		if(event.cds.length) player.gain(event.cds,'gain2','log');
		trigger.player.judging[0]=event.cd[0];
		trigger.orderingCards.addArray(event.cd);
		game.log(trigger.player,'的判定牌改为',event.cd[0]);
		player.storage.XS_huiyan--;
		player.turnOver();
		"step 4"
		if(player.storage.XS_huiyan==0) {
			player.storage.XS_huiyan=3;
			player.addTempSkill('XS_huiyan_temp','roundStart');
		}
		player.syncStorage('XS_huiyan');
	},
	ai:{
		rejudge:true,
		tag:{
			rejudge:1,
		}
	},
	subSkill:{
		temp:{
			charlotte:true,
			sub:true,
		},
	},
},
"XS_chuchen":{
	group:["XS_chuchen1","XS_chuchen2"],
},
"XS_chuchen1":{
	audio:true,
	trigger:{
		global:"shaBegin",
	},
	filter:function (event,player){
		return !player.isTurnedOver()&&player.group=='qun';
	},
	logTarget:'player',
	check:function (event,player){
		var eff=0;
		for(var i=0;i<event.targets.length;i++) {
			eff+=get.effect(event.targets[i],event.card,event.player,player);
		} 
		return eff>0;
	},
	"prompt2":function (event,player){
		return '是否翻面，以令'+get.translation(event.player)+'使用的'+get.translation(event.card)+'伤害基数+1？';
	},
	content:function (){
		game.playXSAudio('XS_chuchen',2);
		player.turnOver();
		trigger.baseDamage++;
	},
},
"XS_chuchen2":{
	trigger:{
		global:"shanBegin",
	},
	filter:function (event,player){
		return !player.isTurnedOver();
	},
	logTarget:'player',
	check:function (event,player){
		return get.attitude(player,event.player)<0;
	},
	"prompt2":function (event,player){
		return '是否翻面，以令'+get.translation(event.player)+'的'+get.translation(event.card)+'无效？';
	},
	content:function (){
		game.playXSAudio('XS_chuchen',2);
		player.turnOver();
		trigger.cancel();
	},
},
"XS_hongfu":{
	init:function (player){
		player.storage.XS_hongfu=['你失去装备区1张牌后','你受到伤害后','1名角色濒死时'];
	},
	mark:true,
	intro:{
		content:function (storage){
			var str=storage[0];
			for(var i=1;i<storage.length;i++) {
				str+=('/'+storage[i]);
			}
			return '当：'+str+'，你可移除对应选项并翻面';
		},
	},
	trigger:{
		player:'loseAfter',
		global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter'],
	},
	priority:56,
	frequent:true,
	filter:function(event,player){
		if(!player.isTurnedOver()||!player.storage.XS_hongfu.contains('你失去装备区1张牌后')) return false;
		var evt=event.getl(player);
		return evt&&evt.player==player&&evt.es&&evt.es.length>0;
	},
	"prompt2":function (event,player){
		return '是否移除“红拂”中的“你失去装备区1张牌后”选项，将你的武将牌翻面？';
	},
	content:function(){
		game.playXSAudio('XS_hongfu',2);
		player.turnOver();
		player.storage.XS_hongfu.remove('你失去装备区1张牌后');
		player.syncStorage('XS_hongfu');
		if(!player.storage.XS_hongfu.length) player.unmarkSkill('XS_hongfu');
	},
	ai:{
		noe:true,
		reverseEquip:true,
		skillTagFilter:function (player,tag,arg){
			return player.isTurnedOver()&&player.storage.XS_hongfu.contains('你失去装备区1张牌后');
		},
		effect:{
			target:function(card,player,target,current){
				if(get.type(card)=='equip'&&!get.cardtag(card,'gifts')) {
					if(player.isTurnedOver()&&player.storage.XS_hongfu.contains('你失去装备区1张牌后')) return [1,3];
				}
				if(get.tag(card,'damage')){
					if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
					if(!target.hasFriend()) return;
					if(target.isTurnedOver()&&target.hasSkill('XS_hongfu')&&target.storage.XS_hongfu.contains('你受到伤害后')) return [1,3];
					return;
				}
			}
		}
	},
	subSkill:{
		dam:{
			trigger:{
				player:"damageAfter",
				global:"dyingBegin",
			},
			filter:function (event,player){
				if(!player.isTurnedOver()) return false;
				return event.name=='damage'?player.storage.XS_hongfu.contains('你受到伤害后'):player.storage.XS_hongfu.contains('1名角色濒死时');
			},
			priority:34,
			frequent:true,
			"prompt2":function (event,player){
				return event.name=='damage'?'是否移除“红拂”中的“你受到伤害后”选项，将你的武将牌翻面？':'是否移除“红拂”中的“1名角色濒死时”选项，将你的武将牌翻面？';
			},
			content:function (){
				game.playXSAudio('XS_hongfu',2);
				player.turnOver();
				if(trigger.name=='damage') player.storage.XS_hongfu.remove('你受到伤害后');
				else player.storage.XS_hongfu.remove('1名角色濒死时');
				player.syncStorage('XS_hongfu');
				if(!player.storage.XS_hongfu.length) player.unmarkSkill('XS_hongfu');
			},
		},
		rec:{
			trigger:{
				global:"roundStart",
			},
			priority:82,
			filter:function (event,player){
				return !player.storage.XS_hongfu.length;
			},
			content:function (){
				player.storage.XS_hongfu=['你失去装备区1张牌后','你受到伤害后','1名角色濒死时'];
				player.markSkill('XS_hongfu');
				player.recover();
			},	
		},		
	},
	group:["XS_hongfu_dam","XS_hongfu_rec"],
},
"XS_luanxing":{
	audio:"ext:血色衣冠:2",
	trigger:{
        source:"damageBegin4",
    },
	priority:4,
    filter:function (event){
		if(event.player.hasJudge('lebu')) return false;
        if(!event.card||event.card.name!='sha'||!event.notLink()) return false;
		return get.itemtype(event.cards)=='cards'&&event.cards.length==1;
    },
	check:function (event,player){
		if(event.num>1||event.num>=event.player.hp) return false;
		return get.attitude(player,event.player)<0;
	},
	logTarget:'player',
    content:function (){
		"step 0"
		player.useCard({name:'lebu'},trigger.cards,trigger.player,'noai').animate=false;
		player.discardPlayerCard(trigger.player,'he',true);
		"step 1"
		trigger.cancel();
    },
    ai:{
        expose:0.3,
    },
},
"XS_humei":{
    marktext:"媚",
    init:function (player){
        player.storage.XS_humei=0;
    },
    intro:{
        content:function (storage){
            return '当前值：'+storage;
        },
    },
	trigger:{
		global:"recoverBegin",
	},
	filter:function (event,player){
		if(event.player==player) return false;
		if(player.hasSkill('XS_humei_temp')) return false;
		if(event.num<=0) return false;
		return true;
	},
	check:function (event,player){
		return get.attitude(player,event.player)<0;
	},
	logTarget:'player',
	content:function (){
        "step 0"
		game.playAudio('..','extension','血色衣冠','XS_humei1');
		trigger.num--;
		player.storage.XS_humei++;
		if(player.storage.XS_humei!=0) {
			player.markSkill('XS_humei');
		}
		player.syncStorage('XS_humei');
		"step 1"
		if(!player.hasSkill('XS_humei_temp')){
			player.addTempSkill('XS_humei_temp','roundStart');
		}
    },
	ai:{
        expose:0.3,
    },
	group:["XS_humei_dam"],
    subSkill:{
		temp:{
			charlotte:true,
			sub:true,
		},
        dam:{
			trigger:{
				player:"damageBegin",
			},
			filter:function (event,player){
				if(event.nature) return false;
				if(!player.storage.XS_humei||player.storage.XS_humei<=0) return false;
				return get.itemtype(event.cards)=='cards'&&get.position(event.cards[0],true)=='o';
			},
			check:function (event,player){
				if(event.num>=player.hp) return	true;
				if(event.card.name=='sha') return true;
				return false;
			},
			"prompt2":function (event,player){
				return '是否令你受到'+get.translation(event.source)+'造成的伤害-1，并获得'+get.translation(event.cards)+'?';
			},
			content:function (){
				"step 0"
				game.playAudio('..','extension','血色衣冠','XS_humei2');
				trigger.num--;
				"step 1"
				player.storage.XS_humei--;
				if(player.storage.XS_humei==0) {
					player.unmarkSkill('XS_humei');
				}
				player.syncStorage('XS_humei');
				game.log(trigger.source,'对',player,'造成的伤害-1');
				"step 2"
				player.gain(trigger.cards,'gain2');
			},
        },
    },
},
"XS_choosegroup":{
	trigger:{
		global:'gameStart',
		player:'enterGame',
	},
	forced:true,
	charlotte:true,
	firstDo:true,
	popup:false,
	filter:function(event,player){
		return get.mode()!='guozhan'&&!player._groupChosen;
	},
	content:function(){
		'step 0'
		player._groupChosen=true;
		player.chooseControl(['wei','qun']).set('ai',function(event){
			return ['wei','qun'].randomGet();
		}).set('prompt','请选择你的势力');
		'step 1'
		player.changeGroup(result.control);
		if(result.control=='wei') player.removeSkill('XS_chuchen');
		else player.removeSkill('XS_huiyan');
	},
},
"XS_jilun":{
	init:function (player){
        player.storage.XS_jilun=['攻击距离','手牌上限','使用杀的次数'];
		player.storage.XS_jilun_a=0;
    },
	trigger:{
		player:"phaseBefore",
	},
	check:function (event,player){
		return true;
	},
	priority:99,
	filter:function (event,player){
		return player.storage.XS_jilun.length;
	},
	content:function(){
		"step 0"
        var list=player.storage.XS_jilun;
        player.chooseControl(list).set('ai',function(event){
			var hs=player.countCards('h');
			var ran=Math.min(5,player.getAttackRange());
			var lit=Math.min(5,player.getHandcardLimit());
			var sh=Math.min(5,player.getCardUsable('sha'));
			if(list.contains('攻击距离')) {
				if(ran>hs) return '攻击距离';
			}
			if(list.contains('手牌上限')) {
				if(lit>hs) return '手牌上限';
			}
			if(list.contains('使用杀的次数')) {
				if(sh>hs) return '使用杀的次数';
			}
			return -1;
        }).set('prompt','际论：你可将其中1项数值与手牌数交换');
        "step 1"
        if(result.control){
			var temp=0;
			var num1=player.countCards('h');
			player.storage.XS_jilun_a=num1;
			if(result.control=='攻击距离') {
				temp=num1-Math.min(5,player.getAttackRange());
				player.addTempSkill('XS_jilun_ran');
			}
			if(result.control=='手牌上限') {
				temp=num1-Math.min(5,player.getHandcardLimit());
				player.addTempSkill('XS_jilun_lit');
			}
			if(result.control=='使用杀的次数') {
				temp=num1-Math.min(5,player.getCardUsable('sha'));
				player.addTempSkill('XS_jilun_sh');	
			}
			if(temp<0) {player.draw(-temp);}
			else if(temp>0) {player.chooseToDiscard(temp,'h',true);}
			event.str=result.control;
			event.num2=temp;
        }
        else event.finish();
		"step 2"
		if(event.num2!=0) {
			var st='“将手牌数与'+event.str+'交换的效果”';
			player.chooseTarget('你可令1名其他角色获得'+st,1,function(card,player,target){
				return player!=target;
			}).ai=function(target){
				var att=get.attitude(player,target);
				var hs=target.countCards('h');
				if(event.str=='攻击距离') {
					var ran=Math.min(5,target.getAttackRange());
					if(ran<hs) return -att;
				}
				if(event.str=='手牌上限') {
					var ran=Math.min(5,target.getHandcardLimit());
					if(ran<hs) return -att;
				}
				if(event.str=='使用杀的次数') {
					var ran=Math.min(5,target.getCardUsable('sha'));
					if(ran<hs) return -att;
				}
				return att;		
			}
		}
		else event.finish();
        "step 3"
		if(result.bool) {
			player.line(result.targets[0],'green');
			var tar=result.targets[0];
			var num1=tar.countCards('h');
			switch(event.str){
				case '攻击距离':
					var temp=num1-Math.min(5,tar.getAttackRange());
					tar.storage.XS_jilun_a=player.storage.XS_jilun_a;
					tar.addTempSkill('XS_jilun_ran',{player:'phaseAfter'});
				break;
				case '手牌上限':
					var temp=num1-Math.min(5,tar.getHandcardLimit());
					tar.storage.XS_jilun_a=player.storage.XS_jilun_a;
					tar.addTempSkill('XS_jilun_lit',{player:'phaseAfter'});
				break;
				case '使用杀的次数':
					var temp=num1-Math.min(5,tar.getCardUsable('sha'));
					tar.storage.XS_jilun_a=player.storage.XS_jilun_a;
					tar.addTempSkill('XS_jilun_sh',{player:'phaseAfter'});
				break;
			}
			if(temp<0) tar.draw(-temp);
			else if(temp>0) tar.chooseToDiscard(temp,'h',true);
		}
	},
	subSkill:{
        ran:{
			charlotte:true,
			mod:{
				attackFrom:function (from,to,distance){
					var num1=from.storage.XS_jilun_a-1;
					return distance-num1;
				},
			},
			sub:true,
        },
		sh:{
			charlotte:true,
			mod:{
				cardUsable:function (card,player,num){
					var num1=player.storage.XS_jilun_a;
					if(card.name=='sha') return num1;
				},
			},
			sub:true,
        },
        lit:{
			charlotte:true,
			mod:{
				maxHandcard:function (player,num){
					var num1=player.storage.XS_jilun_a;
					return num1;
				},
			},
			sub:true,
        },
    },
},
"XS_tiandie":{
	mod:{
		globalFrom:function (from,to,current){
			if(from.storage.XS_tiandie) return current-from.storage.XS_tiandie[1];
		},
	},
	init:function (player){
		player.storage.XS_tiandie=[0,0];
    },
	enable:"phaseUse",
	usable:1,
	filter:function (event,player){
		return player.storage.XS_jilun&&player.storage.XS_jilun.length>0;
	},
	content:function (){
		"step 0"
		var list=player.storage.XS_jilun;
        player.chooseControl(list).set('ai',function(event){
			if(list.contains('攻击距离')) return '攻击距离';
			if(list.contains('手牌上限')) return '手牌上限';
			return -1;
        }).set('prompt','天牒：你可移除“际论”的一项效果，令其中两项+1：摸牌阶段摸牌数，体力上限，进攻距离。');
		"step 1"
        if(result.control){
			game.log(player,'移除了“际论”的一项效果');
			player.storage.XS_jilun.remove(result.control);
			var func=function(player){
				var list=[
					'令你于摸牌阶段的摸牌数+1',
					'令你的体力上限+1',
					'令你的进攻距离+1',
				];
				var choiceList=ui.create.dialog('天牒：请选择2项','forcebutton');
				for(var i=0;i<list.length;i++){
					var str='<div class="popup text" style="width:calc(100% - 10px);display:inline-block">';
					if(i==0) str+='<div>';
					str+=list[i];
					if(i==0) str+='</div>';
					str+='</div>';
					var next=choiceList.add(str);
					next.firstChild.addEventListener(lib.config.touchscreen?'touchend':'click',ui.click.button);
					next.firstChild.link=i;
					for(var j in lib.element.button){
						next[j]=lib.element.button[i];
					}
					choiceList.buttons.add(next.firstChild);
				}
				return choiceList;
			};
			if(player.isOnline2()){
				player.send(func);
			}
			event.dialog=func(get.translation(player));
			if(player!=game.me||_status.auto){
				event.dialog.style.display='none';
			}
			var next=player.chooseButton();
			next.set('forced',true);
			next.set('selectButton',2);
			next.set('filterButton',function(button){
				return true;
			});
			next.set('ai',function(button){
				switch(button.link){
					case 0:{
						return 1;
					}
					case 1:{
						return 1;
					}
					case 2:{
						return 0;
					}
				}
			});
        }
		else event.finish();
		"step 2"
		event.dialog.close();
		var map=[
			function(trigger,player,event){
				player.storage.XS_tiandie[0]++;
			},
			function(trigger,player,event){
				player.gainMaxHp();
			},
			function(trigger,player,event){
				player.storage.XS_tiandie[1]++;
			},
		];
		for(var i=0;i<result.links.length;i++){
			game.log(player,'选择了','#g“天牒”','的','#y选项'+get.cnNumber(result.links[i]+1,true));
			map[result.links[i]](trigger,player,event);
		}
    },
	ai:{
		order:8,
		result:{
            player:function (player){
				if(player.storage.XS_jilun&&player.storage.XS_jilun.length>1) return 2;
				return -1;
            },
		},
	},
	group:["XS_tiandie_draw"],
    subSkill:{
        draw:{
			trigger:{
				player:"phaseDrawBegin",
			},
			filter:function (event,player){
				return player.storage.XS_tiandie&&player.storage.XS_tiandie[0]>0;
			},
			direct:true,
			content:function (){
				trigger.num+=player.storage.XS_tiandie[0];
			},
        },
    },
},
"XS_shucai":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
    filter:function (event,player){
        if(!player.countCards('h')) return false;
		return game.hasPlayer(function(current){
			return current!=player&&!current.hasSkill('XS_shucai_temp')&&current.countCards('h');
		});
    },
    filterTarget:function (card,player,target){
        return player!=target&&!target.hasSkill('XS_shucai_temp')&&target.countCards('h');
    },
    content:function (){
        "step 0"
		//target.addTempSkill('XS_mantianskill','roundStart');
		target.addTempSkill('XS_shucai_temp');
		target.chooseCard('是否展示2张手牌？若展示，'+get.translation(player)+'可交给你1张与这些牌类别均不同的牌，令你回复1点体力。','h',2).ai=function(card){
			if(target.isHealthy()) return -1;
			if(get.attitude(player,target)<=0) return -1;
			if(ui.selected.cards.length==1) {
				if(get.type(card)!=get.type(ui.selected.cards[0])) return 3-get.value(card);
				return 8-get.value(card);
			}
			else return 6-get.value(card);
        }
        "step 1"
        if(result.bool){
			event.cars=result.cards;
			target.showCards('疏财',event.cars);
			player.chooseCardButton('是否交给'+get.translation(target)+'1张与'+get.translation(event.cars)+'类型均不相同的手牌，令其回复1点体力？',1,player.getCards('h')).set('filterButton',function(button){
				var type=get.type(button.link);
				for(var i=0;i<event.cars.length;i++){
					if(get.type(event.cars[i])==type) return false;
				}
				return true;
			}).set('ai',function(button){
				if(target.isHealthy()) return -1;
				var att=get.attitude(player,target);
				if(att>0) return 6-get.value(button.link);
				return -1;
			});
        }
		else {
			game.log(target,'拒绝展示手牌');
			event.finish();
		}
		"step 2"
		if(result.bool){
			target.gain(result.links,player,'giveAuto');
			target.recover();
		}
    },
    ai:{
        order:9,
		result:{
            target:function (player,target){
				var att=get.attitude(player,target);
				if(target.isHealthy()) return 0;
				if(att<=0) return 0;
				return 3;
            },
        },
        expose:0.3,
    },
	subSkill:{
        temp:{
			charlotte:true,
			sub:true,
        },
    },
},
"XS_juyi":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:"recoverEnd",
	},
	filter:function (event,player){
		if(event.player==player) return false;
		if(event.num<=0) return false;
		if((player.isLinked()&&!event.player.isLinked())||(!player.isLinked()&&event.player.isLinked())) return true;
		if((player.isTurnedOver()&&!event.player.isTurnedOver())||(!player.isTurnedOver()&&event.player.isTurnedOver())) return true;
		return false;
	},
	check:function (event,player){
		var att=get.attitude(player,event.player);
		if(player.isLinked()||player.isTurnedOver()) return att<=0;
		if(event.player.isLinked()||event.player.isTurnedOver()) return att>0;
	},
	logTarget:'player',
	content:function (){
        "step 0"
		if(player.isLinked()||trigger.player.isLinked()) trigger.player.link();
		if(player.isTurnedOver()||trigger.player.isTurnedOver()) trigger.player.turnOver();
		player.draw(2);
    },
},
"XS_mengchuang":{
	priority:9,
	trigger:{
		global:"useCardAfter",
	},
	firstDo:true,
	priority:99,
	filter:function (event,player){
		if(!event.card||event.card.name!='sha') return false;
		if(event.player==player) return !event.targets.contains(player);
		else return event.targets.contains(player);
	},
	usable:1,
	frequent:true,
	content:function (){
		"step 0"
		event.cars=get.cards(2);
		player.showCards(event.cars);
		"step 1"
		event.cardx=[];
		for(var i=0;i<event.cars.length;i++) {
			if(get.type(event.cars[i])=='basic'&&lib.filter.cardEnabled(event.cars[i],player)) {
				event.cardx.push(event.cars[i]);
				event.cars.splice(i--,1);
			}
		}
		game.cardsDiscard(event.cars);
		if(!event.cardx.length) {
			event.finish();
		}
		else {
			player.chooseCardButton(get.prompt2('XS_mengchuang'),event.cardx,false).ai=function(button){
				return get.value(button.link);
			}
		}
		"step 2"
		if(result.links){
			player.chooseUseTarget(result.links[0],false,false);
		}
	},
	ai:{
		effect:{
			target:function (card,player,target){
				if(card.name=='sha') {
					if(!target.hasFriend()) return;
					else return 0.8;
				}
            },
		},
    },
},
"XS_juntian":{
	zhuanhuanji:true,
	init:function (player){
        player.storage.XS_juntian=true;
    },
	mark:true,
	intro:{
		content:function(storage,player,skill){
			if(player.storage.XS_juntian==true) return  '你受到伤害后，可令来源将手牌数调整至与你相同。';
			else if(player.storage.XS_juntian==false) return  '你造成伤害后，可令目标将手牌数调整至与你相同。';
		},
	},
	trigger:{
		global:"damageEnd",
	},
	"prompt2":function (event,player){
        if(player.storage.XS_juntian==true){
			return '是否令'+get.translation(event.source)+'将手牌数调整至与你相同？';
        }
        else if(player.storage.XS_juntian==false){
			return '是否令'+get.translation(event.player)+'将手牌数调整至与你相同？';
        }
    },
	filter:function (event,player){
		if(!event.source||event.source.isDead()) return false;
		if(event.player.countCards('h')==event.source.countCards('h')) return false;
		if(!event.notLink()) return false;
		if(event.source==player&&event.player!=player) {
			return player.storage.XS_juntian==false;
		}
		if(event.source!=player&&event.player==player) {
			return player.storage.XS_juntian==true;
		}
		return false;
	},
	check:function (event,player){
		if(player.storage.XS_juntian==true) {
			if(get.attitude(player,event.source)>0) return player.countCards('h')>event.source.countCards('h');
			else return player.countCards('h')<event.source.countCards('h');
		}
		else if(player.storage.XS_juntian==false) {
			if(get.attitude(player,event.player)>0) return player.countCards('h')>event.player.countCards('h');
			else return player.countCards('h')<event.player.countCards('h');
		}
		return false;
	},
    logTarget:function (event,player){
		if(player.storage.XS_juntian==true) {
			return event.source;
		}
		else if(player.storage.XS_juntian==false) {
			return event.player;
		}
    },
	content:function(){
		"step 0"
		if(player.storage.XS_juntian==true){
			var num1=player.countCards('h')-trigger.source.countCards('h');
			if(num1<0) trigger.source.chooseToDiscard(-num1,'h',true);
			else trigger.source.draw(num1);
			player.storage.XS_juntian=false;
		}
		else if(player.storage.XS_juntian==false){
			var num1=player.countCards('h')-trigger.player.countCards('h');
			if(num1<0) trigger.player.chooseToDiscard(-num1,'h',true);
			else trigger.player.draw(num1);
			player.storage.XS_juntian=true;
		}
		player.syncStorage('XS_juntian');
	},
	ai:{
		expose:0.3,
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')) {
					if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
					if(!target.hasFriend()) return;
					if(target.hp<2) return;
					if(target.storage.XS_juntian) {
						var num1=player.countCards('h')-target.countCards('h');
						if(num1==0) return;
						if(num1>0) return [1,0,1,-num1];
						else {
							if(get.attitude(target,player)>0) return [1,0,1,-num1];
							else return [1,0,1,num1];
						}
					}
				}
            },
		},
    },
},
"XS_baihua":{
	position:"h",
	selectCard:1,
	filterCard:function (card){
        return true;
    },
	check:function (card){
        return 6-get.value(card);
    },
	discard:false,
    enable:"phaseUse",
    usable:1,
    content:function (){
		"step 0"
		player.lose(cards[0],ui.special);
		player.$throw(cards[0],1000,'nobroadcast');
		cards[0].fix();
		ui.cardPile.insertBefore(cards[0],ui.cardPile.firstChild);
		game.log(player,'将1张牌置于牌堆顶');
		"step 1"
		var tp=get.type2(cards[0]);
		var lt=['basic','trick','equip'].remove(tp);
		for(var i=0;i<lt.length;i++) {
			var card=get.cardPile(function(card){
				return get.type2(card)==lt[i];
			});
			if(card) {
				player.gain(card,'gain2');
			}
		}
    },
    ai:{
        order:9,
		result:{
            player:1,
        },
    },
},
"XS_dufang":{
	init:function (player){
		player.storage.XS_dufang=0;
	},
	trigger:{
		global:"useCardBegin",
	},
	priority:-99,
	filter:function (event,player){
		if(!event.targets.contains(player)) return false;
		if(event.targets.length==1) return false;
		if(get.type(event.card)!='basic'&&get.type(event.card)!='trick') return false;
		return true;
	},
	check:function(event,player){
		var eff=0;
		for(var i=0;i<event.targets.length;i++) {
			if(event.targets[i]!=player) {
				eff+=get.effect(event.targets[i],event.card,event.player,player);
			}
		}
		var nm=player.storage.XS_dufang+1+eff;
		return nm>=0;
	},
	"prompt2":function (event,player){
		var lt=[];
		for(var i=0;i<event.targets.length;i++) {
			if(event.targets[i]!=player) lt.push(event.targets[i]);
		}
		var nm=player.storage.XS_dufang+1;
		return '是否防止'+get.translation(lt)+'成为'+get.translation(event.card)+'的目标，并令你摸'+nm+'张牌？';
	},
	content:function (){
		"step 0"
		var lt=[];
		for(var i=0;i<trigger.targets.length;i++) {
			if(trigger.targets[i]!=player) lt.push(trigger.targets[i]);
		}
		trigger.targets.remove(lt);
		player.storage.XS_dufang++;
		"step 1"
		player.draw(player.storage.XS_dufang);
	},
	ai:{
		expose:0.3,
    },
	group:["XS_dufang_clear"],
    subSkill:{
        clear:{
			trigger:{
				global:"roundStart",
			},
			priority:15,
			direct:true,
			content:function (){
				player.storage.XS_dufang=0;
			},
			sub:true,
        },
    },
},
"XS_yongwang":{
	audio:"ext:血色衣冠:2",
 	trigger:{
		player:["drawEnd"],
	},
	direct:true,
	priority:7,
	filter:function (event,player){
		return event.num>0;
	},
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt2('XS_yongwang'),function(card,player,target){
			return player!=target;
		}).ai=function(target){
			var att=get.attitude(player,target);
			var hs=target.countCards('h');
			if(hs<=0) hs=0.5;
			return att/hs;
		}
        "step 1"
		if(result.bool) {
			var tar=result.targets[0];
			player.logSkill('XS_yongwang',tar);
			tar.draw();
		}
	},
    ai:{
		expose:0.3,
    },
},
"XS_juji":{
	marktext:"举",
	intro:{
		content:function (storage){
			if(!storage.length){
				return '本回合未使用过任何类型的牌';
			}
			else{
				var str='本回合使用过的类型有：'+get.translation(storage[0]);
				for(var i=1;i<storage.length;i++){
					var temp=get.translation(storage[i]);
					if(storage[i]=='trick') temp='锦囊';
					str+='、'+get.translation(storage[i]);
				}
				return str;
			}
		},
	},
	audio:"ext:血色衣冠:2",
 	init:function (player){
		player.storage.XS_juji=[];
	},
	"prompt2":function (event,player){
		if(player.storage.XS_juji.length==1){
			return '是否跳过弃牌阶段？';
		}
		else if(player.storage.XS_juji.length==3){
			return '是否于本回合结束后进行一个额外的回合？';
		}
	},
	direct:true,
	trigger:{
		player:["phaseUseEnd","phaseBefore"],
	},
	filter:function (event,player){
		if(!player.storage.XS_juji) return false;
		return player.storage.XS_juji.length!=0;
	},
	content:function(){
		"step 0"
		if(trigger.name=='phaseUse'){
			var str='';
			if(player.storage.XS_juji.length==3&&!player.hasSkill('XS_juji_temp')){
				str='是否于本回合结束后进行一个额外的回合？';			
			}
			else if(player.storage.XS_juji.length==1){
				str='是否跳过弃牌阶段？';
			}
			if(str!='') {
				player.chooseBool(get.prompt('XS_juji'),str).set('ai',function(){
					return true;
				});
			}
			else event.goto(2);
		}
		else event.goto(2);
		"step 1"
		if(result.bool){
			player.logSkill('XS_juji');
			if(player.storage.XS_juji.length==1) {
				player.skip('phaseDiscard');
			}
			else if(player.storage.XS_juji.length==3&&!player.hasSkill('XS_juji_temp')) {
				player.insertPhase();
				player.addTempSkill('XS_juji_temp','roundStart');
			}	
		}
		"step 2"
		player.storage.XS_juji=[];
		player.unmarkSkill('XS_juji');
	},
	group:["XS_juji_end"],
    subSkill:{
		temp:{
			charlotte:true,
			sub:true,
        },
        end:{
			trigger:{
				player:"useCardEnd",
			},
			filter:function (event,player){
				if(!player.isPhaseUsing()) return false;
				var type=get.type2(event.card);
				return !player.storage.XS_juji.contains(type);
			},
			direct:true,
			content:function (){
				var type=get.type2(trigger.card);
				player.storage.XS_juji.add(type);
				player.markSkill('XS_juji');
			},
			sub:true,
        },
    },
},
"XS_shouyi":{
	zhuanhuanji:true,
	audio:"ext:血色衣冠:2",
	init:function (player){
        player.storage.XS_shouyi=1;
		player.storage.XS_shouyi_a=true;
    },
	mark:true,
	marktext:'义',
	intro:{
		content:function(storage,player,skill){
			if(player.storage.XS_shouyi==1) return  '你每使用1张牌，需要摸1张牌';
			else if(player.storage.XS_shouyi==2) return  '你每使用1张牌，需要重铸1张牌';
			else if(player.storage.XS_shouyi==3) return '你每使用1张牌，需要弃置1张牌';
		},
	},
	trigger:{
		player:"useCard",
	},
	forced:true,
	filter:function (event,player){
		if(player.storage.XS_shouyi!=1&&!player.countCards('he')) return false;
		return event.card;
	},
	content:function(){
		"step 0"
		if(player.storage.XS_shouyi==1){
			player.draw();
			event.goto(2);
		}
		else if(player.storage.XS_shouyi==2){
			player.chooseCardButton('重铸1张牌',player.getCards('he'),true).ai=function(button){
                return 6-get.value(button.link);
            }
		}
		else if(player.storage.XS_shouyi==3){
			player.chooseToDiscard('he',1,true);
			event.goto(2);
		}
		"step 1"
		var cards=result.links;
		player.chongzhuCards(cards);
		"step 2"
		if(player.storage.XS_shouyi_a) {
			if(player.storage.XS_shouyi==3) {
				player.storage.XS_shouyi=1;
			}
			else player.storage.XS_shouyi++;
			player.syncStorage('XS_shouyi');
		}
		else {
			player.removeSkill('XS_shouyi');
		}
	},
},
"XS_liaoyuan":{
	audio:"ext:血色衣冠:2",
 	charlotte:true,
	trigger:{
		player:["changeHp","phaseBefore"],
	},
	direct:true,
	priority:7,
	filter:function (event,player){
		if(!player.storage.XS_shouyi) return false;
		return event.num!=0;
	},
	content:function (){
		"step 0"
		event.str='';
		switch(player.storage.XS_shouyi){
			case 1:event.str='“你每使用1张牌，需要摸1张牌”';break;
			case 2:event.str='“你每使用1张牌，需要重铸1张牌”';break;
			case 3:event.str='“你每使用1张牌，需要弃置1张牌”';break;
		}
		player.chooseControlList(['令“首义”跳至下一个状态','令1名其他角色获得'+event.str+'状态的【首义】直至其发动1次']).set('ai',function(event,player){
			var tri=_status.event.getTrigger().name;
			if(trigger.name=="phase"&&player.storage.XS_shouyi==3) return 0;
			if(player.storage.XS_shouyi!=3&&!player.hasFriend()) return -1;
			return 1;
        }).set('prompt','燎原：你可以选择1项');
        "step 1"
        if(result.index==0){
			player.logSkill('XS_liaoyuan');
			if(player.storage.XS_shouyi==3) {
				player.storage.XS_shouyi=1;
			}
			else player.storage.XS_shouyi++;
			event.finish();
        }
        else if(result.index==1){
			player.chooseTarget('燎原：令1名其他角色获得'+event.str+'的【首义】直到其发动1次',function(card,player,target){
				return player!=target&&!target.hasSkill('XS_shouyi');
			}).ai=function(target){
				var att=get.attitude(player,target);
				if(player.storage.XS_shouyi==3) return -att;
				return att;
			}
        }
		else event.finish();
        "step 2"
		if(result.bool) {
			var tar=result.targets[0];
			player.logSkill('XS_liaoyuan',tar);
			player.line(tar);
			tar.addSkill('XS_shouyi');
			tar.storage.XS_shouyi=player.storage.XS_shouyi;
			tar.storage.XS_shouyi_a=false;
			tar.syncStorage('XS_shouyi');
		}
	},
    ai:{
		expose:0.3,
    },
},
"XS_zhenghe1":{
	enable:['chooseToUse'],
	filterCard:function(card,player){
		return card.name!='sha';
	},
	selectCard:1,
	position:'h',
	viewAs:{name:'sha'},
	viewAsFilter:function(player){
		if(!player.countCards('h')) return false;
		return player.isPhaseUsing();
	},
	prompt:'将一张手牌当杀使用',
	check:function(card){return 6-get.value(card)}, 
	ai:{
		order:9,
		skillTagFilter:function(player){
			if(!player.countCards('h')) return false;
			if(!player.isPhaseUsing()) return false;
		},
		respondSha:true,
	},
	group:["XS_zhenghe1_col"],
    subSkill:{
        col:{
			trigger:{
				player:"shaBegin",
			},
			filter:function (event){
				return event.skill=='XS_zhenghe1';
			},
			direct:true,
			content:function (){
				if(!player.storage.XS_zhenghe1) {
					player.storage.XS_zhenghe1=get.color(trigger.cards[0]);
					event.finish();
				}
				else {
					var col=get.color(trigger.cards[0]);
					if(player.storage.XS_zhenghe1==col) {
						trigger.baseDamage++;
					}
					else {
						if(player.stat[player.stat.length-1].card.sha>0){
							player.stat[player.stat.length-1].card.sha--;
						}
					}
					player.storage.XS_zhenghe1=col;
				}
			},
			ai:{
				damageBonus:true,
			},
			sub:true,
        },
    },
},
"XS_qisheng":{
	trigger:{
		player:["phaseUseEnd"],
	},
	priority:7,
	filter:function (event,player){
		return game.hasPlayer(function(current){
			return player!=current&&current.countCards('h');
		});
	},
	direct:true,
	content:function (){
		"step 0"
		if(player.isMinHandcard(false)) {
			event.mark=true;
			var str='你可获得手牌数不少于你的1名其他角色的1张手牌';
		}
		else {
			event.mark=false;
			var str='你可弃置手牌数少于你的1名其他角色的1张手牌';
		}
		player.chooseTarget(get.prompt('XS_qisheng'),str,1,false,function(card,player,target){
			if(event.mark) {
				return target!=player&&target.countCards('h')>=player.countCards('h');
			}
			else {
				return target!=player&&target.countCards('h')<player.countCards('h')&&target.countCards('h');
			}
		}).set('ai',function(target){
			var att=get.attitude(player,target);
			return -att;
		});
		"step 1"
		if(result.bool) {
			player.logSkill('XS_qisheng',result.targets[0]);
			if(event.mark) {
				player.gainPlayerCard('h',result.targets[0],1,false);
			}
			else {
				player.discardPlayerCard(result.targets[0],'h',1,false);
			}
		}
	},
	ai:{
		expose:0.3,
	},
},
"XS_zaizao":{
    mark:true,
    marktext:"再",
    limited:true,
    skillAnimation:true,
    animationColor:"water",
    unique:true,
	init:function (player){
        player.storage.XS_zaizao=false;
    },
	intro:{
        content:"limited",
    },
	logTarget:'target',
	check:function(event,player){
		return get.attitude(player,event.target);
	},
	trigger:{
		player:["taoBegin"],
	},
    filter:function (event,player){
        if(player.storage.XS_zaizao) return false;
        return event.target!=player;
    },
    content:function (){
		"step 0"
        player.awakenSkill('XS_zaizao');
        player.storage.XS_zaizao=true;
		"step 1"
		var nm=trigger.target.maxHp-trigger.target.hp;
		trigger.baseDamage=nm;
		trigger.target.addSkill('XS_zaizao1');
		trigger.target.storage.XS_zaizao1=player;
		trigger.target.markSkillCharacter('XS_zaizao1',player,'再造','你对'+get.translation(player)+'下一次使用桃时，使其体力回复至上限');
    },
	ai:{
        order:9,
    },
},
"XS_zaizao1":{
	animationColor:"water",
	forced:true,
	trigger:{
		player:["taoBegin"],
	},
    filter:function (event,player){
        if(!player.storage.XS_zaizao1||player.storage.XS_zaizao1!=event.target) return false;
        return true;
    },
    content:function (){
		var nm=trigger.target.maxHp-trigger.target.hp;
		trigger.baseDamage=nm;
		player.removeSkill('XS_zaizao1');
		player.unmarkSkill('XS_zaizao1');
    },
	ai:{
        order:9,
    },
},
"XS_zhechong":{
	enable:"phaseUse",
	usable:1,
	position:"h",
	filter:function (event,player){
		return player.countCards('h')&&game.hasPlayer(function(current){
			return current!=player&&player.inRange(current)&&current.countCards('h');
		});
	},
	filterCard:function (card){
		return true;
	},
	check:function (card){
		return 5.5-get.value(card);
	},
	selectCard:1,
	content:function (){
		"step 0"
		event.cds=[];
		event.cds.push(cards[0]);
		var tars=game.filterPlayer(function(current){
			return player!=current&&player.inRange(current)&&current.countCards('h');
		});
		event.tars=tars.sort(lib.sort.seat);
		"step 1"
		if(event.tars.length){
			var target=event.tars.shift();
			event.current=target;
		}
		else event.goto(4);
		"step 2"
		event.current.chooseToDiscard(1,'h',true);
		"step 3"
		event.cds.push(result.cards[0]);
		event.goto(1);
		"step 4"
		var nm=get.number(event.cds[0]);
		event.lt=[]
		for(var i=1;i<event.cds.length;i++) {
			if(get.number(event.cds[i])>nm) nm=get.number(event.cds[i]);
		}
		for(var j=0;j<event.cds.length;j++) {
			if(get.number(event.cds[j])==nm) event.lt.push(event.cds[j]);
		}
		"step 5"
		if(event.lt.length==1) {
			event.cd=event.lt[0];
			event.goto(7);
		}
		else {
			player.chooseCardButton('你可令场上一名未受伤的角色获得其中一张牌',event.lt,1,false).ai=function(button){
				return get.value(button.link);
			}
		}
		"step 6"
		if(result.bool) event.cd=result.links[0];
		else event.finish();
		"step 7"
		player.chooseTarget('你可令场上一名未受伤的角色获得'+get.translation(event.cd),1,false,function(card,player,target){
			return target.isHealthy();
		}).ai=function(target){
			var att=get.attitude(player,target);
			return att;
		}
		"step 8"
		if(result.bool){
			result.targets[0].gain(event.cd,'gain2');
		}
	},
	ai:{
		order:1,
		result:{
			player:function (player){
				var nm=game.countPlayer(function(current){
					return current!=player&&player.inRange(current)&&current.countCards('h')&&get.attitude(player,current)<=0;
				});
				return nm-1;
			},
		},
	},
},
"XS_hanhu":{
 	mod:{
		selectTarget:function (card,player,range){
			if(card.name=='sha') {
				if(player.storage.XS_hanhu>0) {
					range[1]+=player.storage.XS_hanhu;
				}
			}
		},
		attackFrom:function (from,to,distance){
			if(from.storage.XS_hanhu>0) {
				return distance-from.storage.XS_hanhu;
			}
		},
	},
	init:function (player){
        player.storage.XS_hanhu=0;
    },
    trigger:{
        player:"useCardAfter",
    },
	direct:true,
	filter:function (event,player){
		return event.card&&event.card.name=='sha';
	},
    content:function (){
		player.storage.XS_hanhu++;
    },
	group:["XS_hanhu_clear"],
    subSkill:{
        clear:{
			trigger:{
				global:"roundStart",
			},
			priority:20,
			direct:true,
			content:function (){
				player.storage.XS_hanhu=0;
			},
			sub:true,
        },
    },
},
"XS_niluan":{
 	enable:['chooseToUse'],
	filterCard:true,
	selectCard:function (){
		var player=_status.event.player;
		if(!player.getStat().skill.XS_niluan) var num1=1;
		else var num1=player.getStat().skill.XS_niluan+1;
		return num1;
    },
	position:'he',
	viewAs:{name:'sha'},
	filter:function(event,player){
		var num1=player.getStat().skill.XS_niluan+1;
		if(player.countCards('he')<num1) return false;
		return true;
	},
	prompt:'将X张牌当作1张不计次数的杀使用，X为你本回合发动此技能的次数+1。',
	check:function(card){
		return 6-get.useful(card);
	},
	ai:{
		order:9,
		respondSha:true,
		skillTagFilter:function(player){
			return player.getStat().skill.XS_niluan+1<player.countCards('he');
		},
	},
	group:["XS_niluan_give"],
    subSkill:{
        give:{
			trigger:{
				player:"useCard",
			},
			filter:function(event,player){
				if(event.skill!='XS_niluan') return false;
				return get.itemtype(event.cards)=='cards';
			},
			priority:20,
			direct:true,
			content:function (){
				"step 0"
				if(player.stat[player.stat.length-1].card.sha>0){
					player.stat[player.stat.length-1].card.sha--;
				}
				"step 1"
				player.chooseTarget(get.prompt('XS_niluan'),'你可弃置1名目标所有区域各1张牌，并令其获得'+get.translation(trigger.cards)+'。',function(card,player,target){
					var trigger=_status.event.getTrigger();
					return trigger.targets.contains(target);
				}).ai=function(target){
					var trigger=_status.event.getTrigger();
					var att=get.attitude(player,target);
					if(att>0) var num1=trigger.cards.length;
					else num1=-trigger.cards.length;
					if(target.countDiscardableCards(player,'j')&&target.countCards('j')) {
						if(att>0) num1++;
						num1--;
					}
					if(target.countDiscardableCards(player,'h')&&target.countCards('h')) {
						if(att>0) num1--;
						num1++;
					}
					if(target.countDiscardableCards(player,'e')&&target.countCards('e')) {
						if(att>0) num1--;
						num1++;
					}
					return num1;
				}
				"step 2"
				if(result.bool) {
					event.tar=result.targets[0];
					player.logSkill('XS_niluan',event.tar);
					var num=0;
					if(event.tar.countCards('h')) num++;
					if(event.tar.countCards('e')) num++;
					if(event.tar.countCards('j')) num++;
					if(num){
						player.discardPlayerCard(event.tar,num,'hej').set('filterButton',function(button){
							for(var i=0;i<ui.selected.buttons.length;i++){
								if(get.position(button.link)==get.position(ui.selected.buttons[i].link)) return false;
							}
							return true;
						}).set('ai',function(button){
							var att=get.attitude(player,event.tar);
							if(att>0) {
								if(get.type(button.link)=='delay'&&button.link.name!='XS_mantian') return 10;
								return -1;
							}
							else {
								if(get.type(button.link)=='delay'&&button.link.name!='XS_mantian') return -1;
								return 1+get.value(button.link);
							}
						});
					}
				}
				else event.finish();
				"step 3"
				if(result.bool) {
					event.tar.gain(trigger.cards,player,'giveAuto');
				}
			},
			ai:{
				expose:0.2,
			},
			sub:true,
        },
    },
},
"XS_zuijiu":{
	audio:"ext:血色衣冠:2",
	trigger:{
        global:"useCardBegin",
    },
    filter:function (event,player){
		if(event.player==player) return false;
		if(event.card.name!='sha') return false;
		if(!event.targets.contains(player)) return false;
		return game.hasPlayer(function(current){
			return current!=player&&event.player.inRange(current)&&!event.targets.contains(current);
		});
    },
	direct:true,
    content:function (){
		"step 0"
		player.chooseTarget(get.prompt('XS_zuijiu'),'是否令'+get.translation(trigger.player)+'攻击范围内的一名其他角色代替你成为此杀的目标？否则，你可令其攻击范围内至多2名其他角色也成为此杀的目标。',function(card,player,target){
			var trigger=_status.event.getTrigger();
			if(trigger.targets.contains(target)||target==player) return false;
            return trigger.player.inRange(target)&&lib.filter.targetEnabled(trigger.card,trigger.player,target);
        }).ai=function(target){
			var trigger=_status.event.getTrigger();
			var num=game.countPlayer(function(current){
				return !trigger.targets.contains(current)&&current!=player&&trigger.player.inRange(current)&&get.effect(current,trigger.card,trigger.player,player)>0;
			});
			if(num>2) return -1;
			var eff=get.effect(target,trigger.card,trigger.player,player);
			return eff;
        }
        "step 1"
		if(result.bool) {
			player.logSkill('XS_zuijiu',result.targets[0]);
			trigger.targets.add(result.targets[0]);
			trigger.targets.remove(player);
			game.log(result.targets[0],'代替',player,'成为了',trigger.card,'的目标。');
			event.finish();
		}
		"step 2"
		player.chooseTarget(get.prompt('XS_zuijiu'),'是否令'+get.translation(trigger.player)+'攻击范围内至多2名其他角色也成为此杀的目标？',[1,2],function(card,player,target){
			var trigger=_status.event.getTrigger();
			if(trigger.targets.contains(target)||target==player) return false;
            return trigger.player.inRange(target)&&lib.filter.targetEnabled(trigger.card,trigger.player,target);
        }).ai=function(target){
			var trigger=_status.event.getTrigger();
			var eff=get.effect(target,trigger.card,trigger.player,player);
			return eff;
        }
		"step 3"
		if(result.bool) {
			player.logSkill('XS_zuijiu',result.targets);
			trigger.targets.addArray(result.targets);
			game.log(result.targets,'成为了',trigger.card,'的目标。');
		}
    },
	ai:{
		effect:{
			target:function (card,player,target,current){
				if(card.name=='sha') {
					var nm=game.countPlayer(function(current){
						return current!=player&&current!=target&&player.inRange(current)&&get.attitude(target,current)<=0;
					});
					return [1,nm*1.5];
				}
			},
		},
		expose:0.3,
	},
},
"XS_boxing":{
	audio:"ext:血色衣冠:2",
	global:'XS_boxing1',
	enable:"phaseUse",
    usable:1,
	selectTarget:1,
	filterTarget:function (card,player,target){
        return target.countCards('e');
    },
    filter:function (event,player){
		return game.hasPlayer(function(current){
			return current.countCards('e')&&current!=player;
		});
    },
	content:function (){
		"step 0"
		var cards=target.getCards('e');
		player.chooseCardButton('令'+get.translation(target)+'将其装备区内一张牌当作杀对你使用',cards).ai=function(button){
			var att=get.attitude(player,target);
			if(att>0) {
				return 5-get.value(button.link);
			}
			return get.value(button.link);
		}
        "step 1"
        if(result.bool){
			target.useCard({name:'sha'},result.links,player);
        }
    },
    ai:{
		order:1,
		expose:0.2,
		result:{
			target:function (player,target){
				var nm=game.countPlayer(function(current){
					if(current!=player&&current!=target&&target.inRange(current)) {
						if(get.effect(current,{name:'sha'},target,player)>0) return 1;
					}
				});
				if(target.hasSkill('XS_tianwei')) nm*=2;
				var att=get.attitude(player,target);
				if(att>0) return nm-1;
                return -nm-1;
            },
        },
    },
},
"XS_boxing1":{
	enable:"phaseUse",
    usable:1,
	filterTarget:function (card,player,target){
        return target.hasSkill('XS_boxing')&&lib.filter.targetEnabled({name:'sha'},target,player);
    },
	selectTarget:1,
    filter:function (event,player){
		if(!game.hasPlayer(function(current){
			return player!=current&&current.hasSkill('XS_boxing');
		})) return false;
		if(player.getCardUsable('sha')<=0) return false;
		return player.countCards('e');
    },
	selectCard:1,
	position:'e',
	filterCard:function (card,player){
		return true;
	},
	check:function (card){
		return 6-get.value(card);
	},
	prompt:'将你装备区1张牌当作杀对一名有“薄幸”技能的角色使用',
	content:function (){
		game.playXSAudio('XS_boxing',2);
		player.useCard({name:'sha'},cards,target);
    },
    ai:{
		order:1,
		expose:0.1,
		result:{
			player:-1,
			target:function (player,target){
				var nm=game.countPlayer(function(current){
					if(current!=player&&current!=target&&player.inRange(current)) {
						if(get.attitude(target,current)<=0) return 1;
					}
				});
				return nm-1;
            },
        },
    },
},
"XS_chixiao":{
 	trigger:{
        player:"shaMiss",
    },
    direct:true,
    filter:function (event,player){
        return player.countCards('he')&&event.target.isAlive();
    },
    content:function (){
        "step 0"
		var next=player.chooseToDiscard(get.prompt2('XS_chixiao'),[1,player.countCards('he')],'he');
        next.logSkill='XS_chixiao';
        next.set('ai',function(card){
            var evt=_status.event.getParent();
            if(get.attitude(evt.player,evt._trigger.target)<0){
                if(evt.player.hasSkill('jiu')||
                evt.player.hasSkill('tianxianjiu')||
                evt._trigger.target.hp==1){
                    return 6-get.value(card)
                }
                return 4-get.value(card)
            }
            return -1;
        });
        "step 1"
        if(result.bool){
			var num1=result.cards.length+1;
			trigger.target.chooseToDiscard('弃置'+num1+'张牌，否则'+get.translation(player)+'使用的'+get.translation(trigger.card)+'将仍对你生效','he',num1).set('ai',function(card){
				var tri=_status.event.getTrigger();
				if(tri.player.hasSkill('jiu')||
                tri.player.hasSkill('tianxianjiu')||
                tri.target.hp==1){
                    return 6-get.value(card)
                }
                return -1;
			});
        }
		else event.finish();
		"step 2"
        if(!result.bool){
            trigger.untrigger();
            trigger.trigger('shaHit');
            trigger._result.bool=false;
		}
    },
	ai:{
		expose:0.3,
	},
},
"XS_hanni":{
	trigger:{
        player:"phaseUseBefore",
    },
	check:function (event,player){
		if(player.getEquip(2)) return true;
		if(player.hasSkill('XS_mantianskill')||player.hasSkill('XS_tiandao_yang')) return true;
		return (player.countCards('h','shan')>1&&player.hasUsableCard('sha'))||player.hasUsableCard('nanman')||player.hasUsableCard('wanjian');
	},
    content:function (){
		game.countPlayer(function(current){
			current.chooseUseTarget({name:'jiu',isCard:true},true,'noTargetDelay','nodelayx');
		});
    },
	group:["XS_hanni_jiu"],
    subSkill:{
        jiu:{
			trigger:{
				source:"damageEnd",
			},
			filter:function (event){
				return event.player.hasSkill('jiu')&&event.player.countCards('he');
			},
			forced:true,
			content:function (){
				"step 0"
				var pla=trigger.player;
				game.broadcastAll(function(pla){
					pla.removeSkill('jiu');
				},pla);
				if(pla.node.jiu){
					pla.node.jiu.delete();
					pla.node.jiu2.delete();
					delete pla.node.jiu;
					delete pla.node.jiu2;
				}
				delete pla.storage.jiu;
				"step 1"
				player.gainPlayerCard('he',trigger.player,1);
			},
            sub:true,
        },
    },
},
"XS_yuhe":{
    trigger:{
        player:"phaseUseAfter",
    },
	forced:true,
    content:function (){
		"step 0"
		var tars=game.filterPlayer(function(current){
			return current!=player&&current.hasSkill('jiu');
		});
		event.tars=tars.sort(lib.sort.seat);
		"step 1"
		if(event.tars.length){
			var target=event.tars.shift();
			event.current=target;
		}
		else event.finish();
		"step 2"
		if(event.current&&lib.filter.targetEnabled({name:'sha'},event.current,player)){
			event.current.chooseToUse({name:'sha'},player,-1,'你可对'+get.translation(player)+'使用1张无距离限制的杀').set('targetRequired',true);
		}
		"step 3"
		game.delay(0.3);
		event.goto(1);
    },
},
"XS_jishe":{
    trigger:{
        source:"damageBegin4",
    },
	priority:-79,
	forced:true,
    filter:function (event){
		if(!event.card) return false;
        return event.notLink()&&event.num>0;
    },
    content:function (){
		"step 0"
		player.chooseToDiscard('极奢：你需弃置装备区的1张牌，使你对'+get.translation(trigger.player)+'造成的伤害+1，否则此伤害-1。',1,false,'e').set('ai',function(card){
			var att=get.attitude(player,_status.event.getTrigger().player);
			if(att>0) return -1;
			return 12-get.value(card);
		});
		"step 1"
		if(result.bool){
			trigger.num++;
		}
		else {
			trigger.num--;
		}
    },
	ai:{		
		effect:{
			player:function(card,player,target){
				if(get.tag(card,'damage')){
					if(!player.countCards('e')) return 0;
					return [1,2];
				}
			}
		},
		damageBonus:true,
	},
},
"XS_tianwei":{
	init:function (player){
		player.storage.XS_tianwei=[0,2];
	},
	trigger:{
		source:"damageBegin4",
	},
	priority:-39,
	forced:true,
	filter:function (event,player){
		if(!event.card||!event.notLink()) return false;
		return player.storage.XS_tianwei&&player.storage.XS_tianwei.length>0;
	},
	content:function (){
		"step 0"
		var lt=[];
		for(var i=0;i<player.storage.XS_tianwei.length;i++) {
			lt.push(player.storage.XS_tianwei[i].toString());
		}
		player.chooseControl(lt,true).set('ai',function(event){
			var tp=[];
			for(var i=0;i<lt.length;i++) {
				tp.push(parseInt(lt[i]));
			}
			var att=get.attitude(player,_status.event.getTrigger().player);
			if(att>0) var nm=Math.min(...tp);  //拓展运算符
			else var nm=Math.max(...tp);
			return nm.toString();    
		}).set('prompt','天威：令你对'+get.translation(trigger.player)+'造成的伤害变为其中一个数值');
		"step 1"
		var nm=parseInt(result.control);
		trigger.num=nm;
		player.storage.XS_tianwei.remove(nm);
	},
	group:["XS_tianwei_rec"],
    subSkill:{
		rec:{
			trigger:{
				player:['equipAfter','loseAfter'],
				global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter'],
			},
			direct:true,
			filter:function(event,player){
				if(player.equiping) return false;
				if(event.name=='equip') return true;
				var evt=event.getl(player);
				return evt&&evt.player==player&&evt.es&&evt.es.length>0;
			},
			content:function(){	
				var nm=Math.max(0,player.countCards('e'));
				if(!player.storage.XS_tianwei.contains(nm)) {
					player.storage.XS_tianwei.push(nm);
				}
			},
            sub:true,
        },
    },
},
"XS_shengshuai":{
	skillAnimation:true,
	animationColor:"water",
	trigger:{
		player:"phaseZhunbeiBegin",
	},
	forced:true,
	unique:true,
	juexingji:true,
	init:function(player){
		player.storage.XS_shengshuai=false;
	},
	filter:function (event,player){
		return player.isMaxEquip(true)&&!player.storage.XS_shengshuai;
	},
	content:function (){
		player.awakenSkill('XS_shengshuai');
		player.storage.XS_shengshuai=true;
		for(var i=1;i<6;i++){
			if(!player.isDisabled(i)&&player.isEmpty(i)) player.disableEquip('equip'+i);
		}
		player.addSkill('XS_jishe');
	},
},
"XS_xiachang":{
	trigger:{
        global:"phaseUseBegin",
    },
	filter:function (event,player){
		if(event.player==player) return false;
		return event.player.countCards('he');
	},
    direct:true,
    content:function (){
        "step 0"
		player.gainPlayerCard(get.prompt2('XS_xiachang',trigger.player),'he',trigger.player,1,false);
		"step 1"
		if(result.bool){
			player.logSkill('XS_xiachang',trigger.player);
			trigger.player.addTempSkill('XS_xiachang_temp',{player:'phaseUseAfter'});
        }  
    },
	ai:{
		expose:0.2,
	},
	group:["XS_xiachang_give"],
	subSkill:{
		give:{
			trigger:{
				global:"phaseUseEnd",
			},
			filter:function (event,player){
				return player.countCards('he')&&event.player.hasSkill('XS_xiachang_temp');
			},
			forced:true,
			content:function (){
				"step 0"
				player.chooseCard('he',[1,Infinity],'交给'+get.translation(trigger.player)+'至少1张牌',true).set('ai',function(card){
					var val=get.value(card);
					return 3.5-val;
				});
				"step 1"
				if(result.bool){
					trigger.player.gain(result.cards,player,'giveAuto');
				}  
			},
			sub:true,
        },
		temp:{
			charlotte:true,
			sub:true,
		},
    },
},
"XS_sijie":{
 	trigger:{
		global:"gainEnd",
	},
	check:function (event,player){
		var val=0;
		for(var i=0;i<event.cards.length;i++) {
			val+=get.value(event.cards[i]);
		}
        return get.attitude(player,event.player)<0&&val>=6;
    },
	"prompt2":function (event,player){
		return '是否令'+get.translation(event.player)+'弃置'+get.translation(event.cards)+'，并弃置'+event.cards.length+'张牌？';
	},
	logTarget:'player',
	filter:function (event,player){
		if(player.hasSkill('XS_sijie_temp')) return false;
		if(!event.source||event.source!=player||event.source.isDead()) return false;
		if(event.player==player) return false;
		return event.cards&&event.cards.length>0;
	},
	content:function (){
		"step 0"
		event.nm=trigger.cards.length;
		trigger.player.discard(trigger.cards);
		player.addTempSkill('XS_sijie_temp','roundStart')
		"step 1"
		if(player.isMinHp(false)) {
			player.chooseBool('是否使“死节”的效果改为：视为对'+get.translation(trigger.player)+'使用'+event.nm+'张杀？').set('ai',function(){
				var tri=_status.event.getTrigger();
				var eff=get.effect(tri.player,{name:'sha'},player,player);
				return eff>1;
			});
		}
		"step 2"
		if(result.bool) {}
		else {
			trigger.player.chooseToDiscard('he',event.nm,true);
			event.finish();
		}
		"step 3"
		if(event.nm>0) {
			player.useCard({name:'sha',isCard:true},trigger.player);
			game.delay(0.4);
		}
		else event.finish();
		"step 4"
		event.nm--;
		event.goto(3);
	},
	group:["XS_sijie_remove"],
	subSkill:{
		remove:{
			trigger:{
				player:"damageEnd",
			},
			filter:function (event,player){
				return event.num>0&&player.hasSkill('XS_sijie_temp');
			},
			priority:22,
			forced:true,
			content:function (){
				player.removeSkill('XS_sijie_temp');
			},
			sub:true,
		},
		temp:{
			charlotte:true,
			sub:true,
		},
	},
	ai:{
		expose:0.3,
		effect:{
			target:function (card,player,target){
                if(card.name=='shunshou'&&!target.hasSkill('XS_sijie_temp')) return [0.5,0,1,-1];
            },
		},
	},
},
"XS_tongyi1":{
 	init:function (player){
        player.storage.XS_tongyi1=0;
    },
    trigger:{
        player:"phaseBefore",
    },
    direct:true,
    content:function (){
		"step 0"
		player.chooseBool(get.prompt('XS_tongyi1'),'是否摸1张牌？').set('ai',function(){
			return true;
		}); 
        "step 1"
		if(result.bool){
			player.draw();
			player.storage.XS_tongyi1++;
        } 
		else event.goto(8);
		"step 2"	
		player.chooseBool(get.prompt('XS_tongyi1'),'是否令你本回合攻击距离+1？').set('ai',function(){
			return true;
		}); 
        "step 3"
		if(result.bool){
			player.addTempSkill('XS_tongyi1_dis');
			player.storage.XS_tongyi1++;
        } 
		else event.goto(8);
		"step 4"
		player.chooseToDiscard(get.prompt('XS_tongyi1'),'是否弃置1张锦囊牌？',1,'he',function(card){
			return get.type2(card)=='trick';
		}).set('ai',function(card){
			return 4.5-get.value(card);
		});
		"step 5"
		if(result.bool){
			player.storage.XS_tongyi1++;
		} 
		else event.goto(8);
		"step 6"
		player.chooseBool(get.prompt('XS_tongyi1'),'是否失去1点体力？').set('ai',function(){
			if(player.hp<2) return false;
			return player.hasUsableCard('sha');
		}); 
        "step 7"
		if(result.bool){
			player.loseHp();
			player.storage.XS_tongyi1++;
        }
		"step 8"
		var num=player.storage.XS_tongyi1;
		if(num!=0) {
			player.logSkill('XS_tongyi1');
			game.log(player,'发动了“同义”的',num,'项效果');
		}
    },
	group:["XS_tongyi1_remove"],
    subSkill:{
        remove:{
            trigger:{
                player:["phaseAfter","dieBegin"],
            },
			direct:true,
            content:function (){
				player.storage.XS_tongyi1=0;
            },
            sub:true,
        },
		dis:{
			charlotte:true,
			mod:{
				attackFrom:function(from,to,distance){
					return distance-1;
				},
			},
			sub:true,
        },
    },
},
"XS_guanri":{
  	mod:{
		cardUsable:function (card,player,num){
			if(card.name=='sha') {
				return num+player.storage.XS_guanri[0];
			}
		},
		selectTarget:function (card,player,range){
			if(card.name=='sha') {
				range[1]+=player.storage.XS_guanri[1];
				return range[1];
			}
		},
	},
	init:function (player){
        player.storage.XS_guanri=[0,0];
    },
    trigger:{
        player:"phaseUseBefore",
    },
	filter:function (event,player){
		return player.storage.XS_tongyi1&&player.storage.XS_tongyi1>0;
	},
    frequent:true,
    content:function (){
		"step 0"
		var controls=['零'];
		if(player.storage.XS_tongyi1>=1) controls.push('一');
		if(player.storage.XS_tongyi1>=2) controls.push('二');
		if(player.storage.XS_tongyi1>=3) controls.push('三');
		if(player.storage.XS_tongyi1>=4) controls.push('四');
        var str='贯日：令你本回合使用杀的次数增加一项数值';
        var dialog=ui.create.dialog(str,'hidden');
        player.chooseControl(controls,dialog).ai=function(){
			var num1=player.countCards('h','sha');
			if(num1>1) return '一';
			return '零';
        };
        "step 1"
        var num;
        switch(result.control){
			case '零':num=0;break;
            case '一':num=1;break;
            case '二':num=2;break;
            case '三':num=3;break;
            case '四':num=4;break;
        }
		player.storage.XS_guanri[0]=num;
		player.storage.XS_guanri[1]=player.storage.XS_tongyi1-num;
    },
	group:["XS_guanri_remove"],
    subSkill:{
        remove:{
            trigger:{
                player:["phaseAfter","dieBegin"],
            },
			direct:true,
			priority:99,
            content:function (){
				player.storage.XS_guanri=[0,0];
            },
            sub:true,
        },
    },
	ai:{
		threaten:1.2,
		combo:'XS_tongyi1',
	},
},
"XS_xiantu":{
	init:function (player){
		player.storage.XS_xiantu=0;
	},
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"phaseZhunbeiBegin",
	},
	priority:13,
	filter:function (event,player){
		return player.countCards('h');
	},
	direct:true,
	content:function (){
		"step 0"
		player.chooseCardTarget({
			filterCard:function(card){
				return true;
			},
			position:"h",
			selectCard:1,
			selectTarget:1,
			filterTarget:function(card,player,target){
				return player!=target;
			},
			ai1:function(card){
				return 7.5-get.value(card);
			},
			ai2:function(target){
				var cd=get.value(ui.selected.cards[0]);
				var pla=_status.event.player;
				if(cd<=4.5) return -get.attitude(pla,target);
				return get.attitude(pla,target)*target.getDamagedHp();
			},
			prompt:'是否发动【献图】？</br></br>你可交给1名其他角色1张手牌，如此你可以移动场上1张牌或令其回复1点体力。',
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_xiantu',event.tar);
			player.storage.XS_xiantu++;
			event.tar=result.targets[0];
			event.tar.gain(result.cards[0],player,'giveAuto');
			player.chooseControl().set('choiceList',['移动场上的1张牌','令'+get.translation(event.tar)+'回复1点体力']).set('ai',function(event,player){
				if(player.canMoveCard(true)) return 0;		
				return 1;
			}).set('prompt','请选择1项');
		}
		else event.finish();
		"step 2"
		if(result.index==1&&event.tar.isDamaged()){
			event.tar.recover();
		}
		else if(result.index==0&&player.canMoveCard(false)) {
			player.moveCard();
		}
	},
	ai:{
		expose:0.3,
	},
},
"XS_juebi":{
	init:function (player){
		player.storage.XS_juebi=[];
	},
	marktext:"匕",
	intro:{
		content:function (storage,player){
			if(!storage.length) return '没有角色成为过获得过你的牌';
			else {
				return '已获得过你的牌的角色：'+get.translation(storage);
			}
		},
	},
	trigger:{
		player:"phaseJieshuBegin",
	},
	priority:5,
	filter:function (event,player){
		if(!player.storage.XS_xiantu||player.storage.XS_xiantu<=0) return false;
		if(player.storage.XS_juebi.length<=0) return false;
		var tp=player.storage.XS_juebi;
		for(var i=0;i<tp.length;i++) {
			if(tp[i].isAlive()) return true;
		}
		return false;
	},
	"prompt2":function (event,player){
		var tp=player.storage.XS_juebi,lt=[];
		for(var i=0;i<tp.length;i++) {
			if(tp[i].isAlive()) lt.push(tp[i]);
		}
		return '是否视为对'+get.translation(lt)+'使用共计'+player.storage.XS_xiantu+'张杀？';
	},		
	check:function (event,player){
		var tp=player.storage.XS_juebi;
		for(var i=0;i<tp.length;i++) {
			if(get.effect(tp[i],{name:'sha'},player,player)>0) return true;
		}
		return false; 
	},
	audio:"ext:血色衣冠:2",
	content:function (){
		"step 0"
		var tp=player.storage.XS_juebi;
		event.lt=[];
		event.nm=0;
		for(var i=0;i<tp.length;i++) {
			if(tp[i].isAlive()) event.lt.push(tp[i]);
		}
		"step 1"
		if(event.nm<player.storage.XS_xiantu) {
			player.chooseTarget(get.prompt('XS_juebi'),'视为对1名获得过你牌的角色使用1张杀',1,function(card,player,target){
				return event.lt.contains(target);
			},false).set('ai',function(target){
				var eff=get.effect(target,{name:'sha'},player,player);
				return eff;
			});
		}
		else event.finish();
		"step 2"
		if(result.bool){
			player.useCard({name:'sha',isCard:true},result.targets[0],false);
			event.nm++;
			game.delay(0.5);
			event.goto(1);
		}
		else event.finish();
	},
	ai:{
		expose:0.3,
		combo:'XS_xiantu',
	},
	group:["XS_juebi_gain"],
	subSkill:{
		gain:{
			trigger:{
				global:"gainEnd",
			},
			forced:true,
			silent:true,
			filter:function (event,player){
				return event.source==player&&event.player!=player;
			},
			content:function (){
				if(!player.storage.XS_juebi.contains(trigger.player)) {
					player.storage.XS_juebi.push(trigger.player);
				}
				player.markSkill('XS_juebi');
			},
			sub:true,
        },
    },
},
"XS_sizhi":{
 	audio:2,
	group:['XS_sizhi_draw','XS_sizhi_use','XS_sizhi_discard'],
	subfrequent:['discard'],
	subSkill:{
		draw:{
			trigger:{player:'phaseDrawBefore'},
			"prompt2":function (event,player){
				return '是否跳过摸牌阶段？';
			},
			filter:function(event,player){
				return player.isMinHandcard(false);
			},
			check:function(event,player){
				if(!player.hasFriend()) return false;
				if(player.getHistory('skipped').length>0) return true;
				return player.isMinHp(false)||player.isMinEquip(false);
			},
			content:function(){
				game.log(player,'跳过了摸牌阶段');
				trigger.cancel();
			},
			sub:true,
		},
		use:{
			trigger:{player:'phaseUseBefore'},
			"prompt2":function (event,player){
				return '是否跳过出牌阶段？';
			},
			filter:function(event,player){
				return player.isMinEquip(false);
			},
			check:function(event,player){
				if(!player.hasFriend()) return false;
				if(player.getHistory('skipped').length>0) return true;
				return player.isMinHp(false);
			},
			content:function(){
				game.log(player,'跳过了出牌阶段');
				trigger.cancel();
			},
			sub:true,
		},
		discard:{
			trigger:{player:'phaseDiscardBefore'},
			"prompt2":function (event,player){
				return '是否跳过弃牌阶段？';
			},
			frequent:true,
			filter:function(event,player){
				return player.isMinHp(false);
			},
			content:function(){
				game.log(player,'跳过了弃牌阶段');
				trigger.cancel();
			},
			sub:true,
		}
	},
	ai:{
		combo:'XS_zhuge'
	},
},		
"XS_zhuge":{
	audio:2,
	trigger:{player:'phaseAfter'},
	direct:true,
	filter:function(event,player){
		return player.getHistory('skipped').length>0;
	},
	content:function(){
		'step 0'
		event.list=[];
        var skiplist=player.getHistory('skipped').slice(0);
        var str=''
        for(var i=0;i<skiplist.length;i++) {
            var str='';
            switch(skiplist[i]){
                case "phaseJudge":str='判定阶段';break;
                case "phaseDraw":str='摸牌阶段';break;
                case "phaseUse":str='出牌阶段';break;
                case "phaseDiscard":str='弃牌阶段';break;
            }
            event.list.push(str);
        }
		if(!event.list.length) event.finish();
		'step 1'
		if(event.list.length){
			event.current=event.list.shift();
			player.chooseTarget(get.prompt('XS_zhuge'),'是否令1名其他角色获得一个额外的'+event.current+'？',function(card,player,target){
				return target!=player&&!target.hasSkill('XS_zhuge_temp');
			}).set('ai',function(target){
				var att=get.attitude(player,target);
				if(event.current!='弃牌阶段') return att;
				else {
					var num1=target.countCards('h')-target.getHandcardLimit();
					if(num1<0) num1=0;
					return -att*num1;
				}
			});
		}
		else event.goto(3);
		'step 2'
		if(result.bool){
			player.logSkill('XS_zhuge',result.targets[0]);
			var tar=result.targets[0];  
            switch(event.current){
                case '判定阶段':
                    tar.phaseJudge();
                break;
                case '摸牌阶段':
                    tar.phaseDraw();
                break;
                case '出牌阶段':
                    tar.phaseUse();
                break;
                case '弃牌阶段':
                    tar.phaseDiscard();
                break;
            }
			tar.addTempSkill('XS_zhuge_temp');
			game.log(tar,'获得了一个额外的',event.current);
        }
		event.goto(1);
		'step 3'
		var num=player.getHistory('skipped').length;
		player.logSkill('XS_zhuge_temp');
		if(num>=1) {
			if(player.isLinked()) player.link();
			if(player.isTurnedOver()) player.turnOver();
		}
		if(num>=2) {
			player.recover();	
		}
		if(num>=3) {
			player.draw(3);
		}
	},
	subSkill:{
		temp:{
			charlotte:true,
			sub:true,
		},
	},
	ai:{
		combo:'XS_sizhi',
		effect:{
			target:function (card,player,target){
				if(card.name=='lebu'||card.name=='bingliang') return 0.5;
			},
		},
	},
},
"XS_baolian":{
	zhuanhuanji:true,
	audio:"ext:血色衣冠:2",
 	init:function (player){
        player.storage.XS_baolian=true;
		player.storage.XS_baolian_temp=[];
    },
	marktext:'敛',
	intro:{
		content:function(storage,player,skill){
			if(player.storage.XS_baolian==true) return  '你本回合使用的下一张牌点数需小于上一张牌，出牌阶段结束你获得本回合因使用而进入弃牌堆的黑色牌';
			else return '你本回合使用的下一张牌点数需小于上一张牌，出牌阶段结束你获得本回合因使用而进入弃牌堆的红色牌';
		},
	},
	"prompt2":function (event,player){
        if(player.storage.XS_baolian==true){
			return '是否令你本回合使用的下一张牌点数需小于上一张牌，如此出牌阶段结束你获得本回合因使用而进入弃牌堆的红色牌？';
        }
        else {
			return '是否令你本回合使用的下一张牌点数需小于上一张牌，如此出牌阶段结束你获得本回合因使用而进入弃牌堆的黑色牌？';
        }
    },
	trigger:{
		player:"phaseUseBefore",
	},
	check:function (event,player){
		return true;
	},
	content:function(){
		"step 0"
		player.addTempSkill('XS_baolian_temp',{player:'phaseUseAfter'});
		player.storage.XS_baolian_temp=[];
		if(player.storage.XS_baolian==true){
			player.storage.XS_baolian=false;
        }
        else {
			player.storage.XS_baolian=true;
        }
		player.markSkill('XS_baolian');
	},
	subSkill:{
		temp:{
			charlotte:true,
			onremove:function(player){
				if(player.storage.XS_baolian_temp&&player.storage.XS_baolian_temp.length) {
					player.gain(player.storage.XS_baolian_temp,'gain2');
				}		
				player.storage.XS_baolian_temp=[];
				player.unmarkSkill('XS_baolian');
			},
			mod:{
				cardEnabled:function(card,player){
					var evt=player.getLastUsed();
					if(evt&&evt.card) {
						var card1=evt.card;
						return get.number(card1)>get.number(card);
					}
				}		
			},
			trigger:{
				player:"useCardAfter",
			},
			direct:true,
			filter:function (event,player){
				if(!player.isPhaseUsing()) return false;
				return get.itemtype(event.cards)=='cards'&&get.position(event.cards[0],true)=='o';
			},
			priority:-991,
			content:function (){
				if(player.storage.XS_baolian==true) var col='black';
				else if(player.storage.XS_baolian==false) var col='red';	
				for(var i=0;i<trigger.cards.length;i++){
					if(get.color(trigger.cards[i])==col){
						player.storage.XS_baolian_temp.push(trigger.cards[i]);
					}
				}
			},
			sub:true,
        },	
    },
},
"XS_qiongyu":{
	audio:"ext:血色衣冠:2",
 	trigger:{
		player:"phaseDiscardEnd",
	},
	filter:function (event,player){
		return event.cards;
	},
	direct:true,
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt2('XS_qiongyu'),1,function(card,player,target){
			if(target==player) return false;
			var tri=_status.event.getTrigger();
			for(var i=0;i<tri.cards.length;i++) {
				var info=get.info(tri.cards[i]);
				if(info.selectTarget&&info.selectTarget==2) continue;
				if(info.notarget) continue;
				if(player.canUse(tri.cards[i],target,false)) return true;
			} 
			return false;
        }).ai=function(target){
			var tri=_status.event.getTrigger();
			var eff=0;
			for(var i=0;i<tri.cards.length;i++) {
				var info=get.info(tri.cards[i]);
				if(info.selectTarget&&info.selectTarget==2) continue;
				if(info.notarget) continue;
				if(player.canUse(tri.cards[i],target,false)) {
					eff+=get.effect(target,tri.cards[i],player,player);
				}
			} 
			return eff;
        }
        "step 1"
		if(result.bool) {
			event.tar=result.targets[0];
			event.cardx=[];
			for(var i=0;i<trigger.cards.length;i++) {
				var info=get.info(trigger.cards[i]);
				if(info.selectTarget&&info.selectTarget==2) continue;
				if(info.notarget) continue;
				if(player.canUse(trigger.cards[i],event.tar,false)) {
					event.cardx.push(trigger.cards[i]);
				}
			} 
			if(!event.cardx.length) event.finish();
			player.chooseBool('是否对'+get.translation(event.tar)+'使用'+get.translation(event.cardx)+'？').set('ai',function(){    
				return true;
			}); 
		}
		else event.finish();
		"step 2"
		if(result.bool){
			player.logSkill('XS_qiongyu',event.tar);
			for(var i=0;i<event.cardx.length;i++) {
				if(event.tar.isAlive()) {
					player.useCard(event.cardx[i],event.tar);
					game.delay(0.7);
				}
			} 
		}  	
	},
	ai:{
		expose:0.3,
	},
},
"XS_zisui":{
	audio:"ext:血色衣冠:2",
	trigger:{
        target:"useCardToTarget",
    },
    direct:true,
    filter:function (event,player,name){
		if(event.player==player) return false;
        if(event.targets.length>1)return false;
        return event.card.name=="sha"||get.type(event.card)=="trick";
    },
    content:function (){
        'step 0'
        var info=get.info(trigger.card);
        var bool=true;
        if(info.multitarget||info.allowMultiple===false) bool=false;
        else{
            var list=game.filterPlayer(function(current){
                return !trigger.targets.contains(current)&&lib.filter.targetEnabled2(trigger.card,trigger.player,current);
            })
            if(!list.length) bool=false;
        }
        if(bool) player.chooseTarget(get.prompt2("XS_zisui"),function(card,player,target){
            return _status.event.tarlist.contains(target)&&player.inRange(target);
        }).set('tarlist',list).set('ai',function(target){
            var evt=_status.event;
            return get.effect(target,evt.candy,evt.source,evt.player);
        }).set('candy',trigger.card).set('',trigger.player);
        else event._result={bool:false};
        'step 1'
        if(result.bool){
			var tar=result.targets[0];
            trigger.targets.unshift(tar);
            var evt=trigger.getParent("useCard");
            evt.fixedSeat=true;
            player.logSkill("XS_zisui",tar);
            player.storage.XS_zisui_a_p.push([player,tar]);
            player.storage.XS_zisui_a_c.push(trigger.card);
            game.log(tar,'成为',trigger.player,'使用的',trigger.card,'的额外目标');
        }
    },
	ai:{
		expose:0.3,
		effect:{
			target:function (card,player,target,current){
				if(card.name=='sha'||get.type(card)=='trick'){
					if(get.tag(card,'damage')||card.name=='guohe'||card.name=='shunshou'||card.name=='XS_hunshui') return 0.5;
					return 2;
				}
			},
		},
	},
    group:["XS_zisui_a","XS_zisui_b"],
    subSkill:{
    	a:{
    		init:function(player,skill){
    			player.storage[skill+"_p"]=[];
    			player.storage[skill+"_c"]=[];
    		},
    		trigger:{
                global:["respond","useCard"],
            },
            silent:true,
            filter:function (event,player){
        		var eve=event.getParent(3);
        		if(event.card.name=="wuxie")var evt=eve.getParent(2);
        		else var evt=eve;
        		if(evt.name=='useCard'&&evt.card) return player.storage.XS_zisui_a_c.indexOf(evt.card)>=0;
        		return false;
    		},
    		content:function(){
    			"step 0"
    			var eve=trigger.getParent(3);
        		if(trigger.card.name=="wuxie")var evt=eve.getParent(2);
        		else var evt=eve;
        		var n=player.storage.XS_zisui_a_c.indexOf(evt.card);
        		evt.excluded.addArray(player.storage.XS_zisui_a_p[n]);
        		game.log(player.storage.XS_zisui_a_p,'取消成为',evt.card,'的目标');
        		player.storage.XS_zisui_a_p.splice(n,1);
            	player.storage.XS_zisui_a_c.splice(n,1);
    		},
    	},
    	b:{
    		trigger:{
    			global:["useCardAfter","useCardCancelled"],
				//使用卡被取消的时机
    		},
    		silent:true,
    		filter:function(event,player){
				return player.storage.XS_zisui_a_c.indexOf(event.card)>=0;
    		},
    		content:function(){
    			"step 0"
    			var n=player.storage.XS_zisui_a_c.indexOf(trigger.card);
    			player.storage.XS_zisui_a_p.splice(n,1);
            	player.storage.XS_zisui_a_c.splice(n,1);
    		},
    	},
    },
},
"XS_haogong":{
	audio:"ext:血色衣冠:2",
 	usable:1,
    trigger:{
        global:"damageAfter",
    },
	check:function (event,player){
		return get.attitude(player,event.player)<=0;
	},
	filter:function (event,player){
		if(event.player==player) return false;
		if(!player.inRange(event.player)) return false;
		if(!event.player.countCards('h')) return false;
		return event.card;
	},
	logTarget:'player',
	content:function (){
		"step 0"
		event.cardx=trigger.player.getCards('h').randomGets(2);
		trigger.player.showCards(event.cardx);
		"step 1"
		var list=[];
		for(var i=0;i<event.cardx.length;i++) {
			if(get.type(event.cardx[i])==get.type(trigger.card)&&lib.filter.cardEnabled(event.cardx[i],player)) {
				list.push(event.cardx[i]);
			}
		}
		if(list.length<=0) event.finish();
		else if(list.length==1) event.cd=list[0];
		else {
			var next=player.chooseButton();
			next.set('createDialog',['你可使用其中1张牌',list]);
			next.set('ai',function(button){
				return get.buttonValue(button);
			});
		}
		"step 2"
        if(result.bool){
			event.cd=result.links[0];
        }
		"step 3"
		if(event.cd) {
			trigger.player.lose(event.cd,ui.special);
			player.chooseUseTarget(event.cd);
		}
    },
},
"XS_zhilu":{
	zhuanhuanji:true,
	init:function (player){
        player.storage.XS_zhilu=[1,2,3];
    },
	audio:"ext:血色衣冠:2",
	mark:true,
	marktext:'指',
	intro:{
		content:function(storage,player,skill){
			if(player.storage.XS_zhilu[0]==1) return  '1名角色使用基本牌或锦囊牌指定1名目标时，你可弃置1张牌并用1张手牌替换此牌';
			else if(player.storage.XS_zhilu[0]==2) return  '1名角色使用基本牌或锦囊牌指定1名目标时，你可弃置1张牌为此牌重新指定目标';
			else if(player.storage.XS_zhilu[0]==3) return '1名角色使用牌基本牌或锦囊牌定1名目标时，你可弃置1张牌视为对所有成为过“指鹿”目标的角色使用1张杀';
		},
	},
	trigger:{
		global:"useCardBefore",
	},
	filter:function (event,player){
		if(player.hasSkill('XS_zhilu_temp')) return false;
		if(event.getParent().name=='XS_zhilu') return false;
		if(!event.targets) return false;
		if(event.targets.length!=1) return false;
		if(get.type(event.card)!='basic'&&get.type2(event.card)!='trick') return false;
		return player.countCards('he');
	},
	direct:true,
	content:function(){
		"step 0"
		var str='';
		if(player.storage.XS_zhilu[0]==1){
			str='指鹿：是否弃置1张牌，用1张手牌替换'+get.translation(trigger.player)+'对'+get.translation(trigger.targets[0])+'使用的'+get.translation(trigger.card)+'？';
		}
		if(player.storage.XS_zhilu[0]==2){
			str='指鹿：是否弃置1张牌，为'+get.translation(trigger.player)+'对'+get.translation(trigger.targets[0])+'使用的'+get.translation(trigger.card)+'重新指定1名目标？';
		}
		if(player.storage.XS_zhilu[0]==3){
			var temp=player.storage.XS_zhilu_mark;
			event.tars=[];
			if(temp.length) {
				for(var i=0;i<temp.length;i++) {
					if(temp[i].isAlive()&&temp[i]!=player) event.tars.push(temp[i]);
				}
				if(event.tars.length) str='指鹿：是否弃置1张牌，视为对'+get.translation(event.tars)+'使用1张杀？';
			}
		}
		player.chooseCard(str,1,'he',function(card){
			var cds=_status.event.getTrigger().cards;
			return !cds.contains(card);
		}).ai=function(card){
			var tri=_status.event.getTrigger();
			if(get.attitude(player,tri.player)>0&&player.storage.XS_zhilu[0]!=3) return 0;
			var eff=get.effect(tri.targets[0],tri.card,tri.player,player);
			if(player.storage.XS_zhilu[0]==1&&eff<0) return 5-get.value(card);
			if(player.storage.XS_zhilu[0]==2&&eff<0) return 6-get.value(card);
			if(player.storage.XS_zhilu[0]==3) return 4-get.value(card);
			return 0;
		}
		"step 1"
		if(result.bool){
			event.dis=result.cards[0];
			game.delay(0.8);
		}
		else event.finish();
		"step 2"
		if(player.storage.XS_zhilu[0]==1){
			player.chooseCard('h','选择1张手牌替换'+get.translation(trigger.player)+'使用的'+get.translation(trigger.card),function(card){
				var info=get.info(card);
				if(info.selectTarget&&info.selectTarget==2) return false;
				if(info.notarget) return false;
				var tri=_status.event.getTrigger();
				return event.dis!=card;
				// tri.player.canUse(card,tri.targets[0],false)
			}).set('ai',function(card){
				var tri=_status.event.getTrigger();
				var eff=get.effect(tri.targets[0],card,tri.player,player);
				if(eff>0) {
					return get.value(tri.card)-get.value(card);
				}
				else {
					return get.value(tri.card)-get.value(card)-1;
				}
			});
		}
		else if(player.storage.XS_zhilu[0]==2){
			event.goto(4);
		}
		else if(player.storage.XS_zhilu[0]==3){
			event.goto(6);
		}
		"step 3"
        if(result.bool){
			player.logSkill('XS_zhilu',trigger.player);
			player.discard(event.dis);
            player.gain(trigger.cards);
			game.log(player,'用',result.cards[0],'替换了',trigger.player,'使用的',trigger.card);
			player.lose(result.cards[0],ui.special);
			player.$throw(result.cards[0],1000,'nobroadcast');
			trigger.card=result.cards[0];
			trigger.cards=result.cards;
			if(!player.storage.XS_zhilu_mark.contains(trigger.player)) {
				player.storage.XS_zhilu_mark.push(trigger.player);
			}
			event.goto(7);
        }
		else event.finish();
		"step 4"
        player.chooseTarget('为'+get.translation(trigger.player)+'使用的'+get.translation(trigger.card)+'重新指定1名目标',function(card,player,target){
			var tar=_status.event.getTrigger();
            //return target!=tar.targets[0]&&lib.filter.targetEnabled(trigger.card,trigger.player,target);
			return !tar.targets.contains(target);
        },function(target){
			var tri=_status.event.getTrigger();
            var eff=get.effect(target,tri.card,tri.player,player);
            return eff;
        });
        "step 5"
        if(result.bool){	
			player.logSkill('XS_zhilu',trigger.player);
			player.discard(event.dis);
			trigger.targets.remove(trigger.targets[0]);
			trigger.targets.push(result.targets[0]);
			if(!player.storage.XS_zhilu_mark.contains(trigger.player)) {
				player.storage.XS_zhilu_mark.push(trigger.player);
			}
			game.log(player,'为',trigger.player,'使用的',trigger.card,'重新指定了1名目标');
			event.goto(7);
        }
		else event.finish();
		"step 6"
		player.logSkill('XS_zhilu',trigger.player);
		player.discard(event.dis);
		player.useCard({name:'sha',isCard:true},event.tars);
		"step 7"
		player.addTempSkill('XS_zhilu_temp');
		var temp=player.storage.XS_zhilu.shift();
		player.storage.XS_zhilu.push(temp);
		player.markSkill('XS_zhilu_mark');
	},
	ai:{
        expose:0.3,
    },
	group:["XS_zhilu_mark"],
	subSkill:{
		mark:{
			init:function (player){
				player.storage.XS_zhilu_mark=[];
			},
            marktext:"鹿",
			intro:{
				content:function (storage,player){
					if(!storage.length) return '没有角色成为过“指鹿”的目标';
					else {
						return '已成为过“指鹿”的目标：'+get.translation(storage);
					}
				},
            },
			sub:true,
        },
		temp:{
			charlotte:true,
			sub:true,
        },
    },
},
"XS_gaizhao":{
	audio:"ext:血色衣冠:2",
	frequent:true,
	trigger:{
		player:["damageAfter"],
	},
	filter:function (event,player){
		if(!player.storage.XS_zhilu) return false;
		if(!player.storage.XS_zhilu_mark) return false;
		return event.num>0;
	},
	content:function (){
		"step 0"
		player.chooseControlList(['使“指鹿”变为下一个状态','移除“指鹿”中“用1张手牌替换此牌”的效果，且失去本技能',
		'移除“指鹿”中“为此牌重新指定目标”的效果，且失去本技能',
		'移除“指鹿”中“视为对所有成为过指鹿目标的角色使用1张杀”的效果，且失去本技能'],false).set('ai',function(event,player){
			if(player.storage.XS_zhilu_mark&&player.storage.XS_zhilu_mark.length>2) return 1;
			return 0;
        }).set('prompt','改诏：你可选择1项');
        "step 1"
        if(result.index==0){
			var temp=player.storage.XS_zhilu.shift();
			player.storage.XS_zhilu.push(temp);
        }
        else if(result.index==1){
			player.storage.XS_zhilu=[2,3];
			player.syncStorage('XS_zhilu');
			player.removeSkill('XS_gaizhao');
        }
		else if(result.index==2){
			player.storage.XS_zhilu=[1,3];
			player.syncStorage('XS_zhilu');
			player.removeSkill('XS_gaizhao');
        }
		else if(result.index==3){
			player.storage.XS_zhilu=[1,2];
			player.syncStorage('XS_zhilu');
			player.removeSkill('XS_gaizhao');
        }
	},
	ai:{
		combo:'XS_zhilu',
	},
},
"XS_luozhi":{
	priority:9,
	trigger:{
		player:["shaBefore"],
	},
	check:function (event,player){
		return get.attitude(player,event.target)<0;
	},
	logTarget:'target',
	content:function (){
		"step 0"
		player.addTempSkill('XS_luozhi_fan',{player:['shaAfter','shaCancelled']});
		player.addTempSkill('XS_luozhi_dam',{player:['shaAfter','shaCancelled']});
		var func=function(card,target){
			var list=[
				'令'+card+'造成的伤害为火伤害',
				'令你和'+target+'横置',
				'令'+card+'造成的伤害+1',
			];
			var choiceList=ui.create.dialog('罗织：请选择任意项','forcebutton');
			for(var i=0;i<list.length;i++){
				var str='<div class="popup text" style="width:calc(100% - 10px);display:inline-block">';
				if(i==0) str+='<div>';
				str+=list[i];
				if(i==0) str+='</div>';
				str+='</div>';
				var next=choiceList.add(str);
				next.firstChild.addEventListener(lib.config.touchscreen?'touchend':'click',ui.click.button);
				next.firstChild.link=i;
				for(var j in lib.element.button){
					next[j]=lib.element.button[i];
				}
				choiceList.buttons.add(next.firstChild);
			}
			return choiceList;
		};
		if(player.isOnline2()){
			player.send(func,get.translation(trigger.card),get.translation(trigger.target));
		}
		event.dialog=func(get.translation(trigger.card),get.translation(trigger.target));
		if(player!=game.me||_status.auto){
			event.dialog.style.display='none';
		}
		var next=player.chooseButton();
		next.set('forced',false);
		next.set('selectButton',[1,3]);
		next.set('filterButton',function(button){
			return true;
		});
		next.set('ai',function(button){
			var player=_status.event.player;
			var event=_status.event.getTrigger();
			switch(button.link){
				case 0:{
					return 1;
				}
				case 1:{
					if(event.target.countCards('h','shan')) return 0;
					return 1;
				}
				case 2:{
					if(!event.target.countCards('h','shan')||player.countCards('h','shan')) return 1;
					return 0;
				}
			}
		});
		"step 1"
		event.dialog.close();
		var map=[
			function(trigger,player,event){
				trigger.Changena=true;

			},
			function(trigger,player,event){
				if(!player.isLinked()) player.link();
				if(!trigger.target.isLinked()) trigger.target.link();
			},
			function(trigger,player,event){
				trigger.ADDdam=true;
			},
		];
		for(var i=0;i<result.links.length;i++){
			game.log(player,'选择了','#g“罗织”','的','#y选项'+get.cnNumber(result.links[i]+1,true));
			map[result.links[i]](trigger,player,event);
		}
	},
	ai:{
        expose:0.3,
    },
	subSkill:{
		dam:{
			trigger:{
				source:"damageBegin1",
			},
			filter:function (event){
                if(!event.card||event.card.name!='sha'||!event.notLink()) return false;
				if(event.getParent(6).ADDdam==true||event.getParent(6).Changena==true) return true;
                return event.getParent().ADDdam==true||event.getParent().Changena==true;
            },
			direct:true,
			content:function (){
				"step 0"
				if(trigger.getParent().Changena==true||trigger.getParent(6).Changena==true) {
					trigger.nature='fire';
				}
				"step 1"
				if(trigger.getParent().ADDdam==true||trigger.getParent(6).ADDdam==true) {
					trigger.num++;
				}

            },
			sub:true,
		},
		fan:{
			charlotte:true,
            forced:true,
            trigger:{
                player:"shaMiss",
            },
			priority:-99,
            content:function (){
				trigger.target.useCard(trigger.card,player);
				trigger.target.addTempSkill("XS_luozhi_dam",{player:'shaAfter'});
            },
            sub:true,
        },
	},
},
"XS_xingyu":{
	trigger:{
		player:"useCardAfter",
	},
	direct:true,
	filter:function (event,player){
		if(_status.currentPhase!=player) return false;
		if(get.type(event.card)!='basic') return false;
		return player.getHistory('useCard',function(evt){
			return get.type(evt.card)=='basic';
		}).length<=1;
	},
	content:function(){
		"step 0"
		player.chooseControlList(['使'+get.translation(trigger.card)+'不计入使用次数','本回合使用牌无距离限制']).set('ai',function(event,player){
			var card=_status.event.getTrigger().card;
			if(card.name=='sha'||card.name=='jiu') return 0;
			return 1;
        }).set('prompt','兴狱：请选择1项');
        "step 1"
		if(result.control!='cancel2') {
			player.logSkill('XS_xingyu');
			if(result.index==0){
				player.getStat().card={}
			}
			else if(result.index==1){
				player.addTempSkill('XS_xingyu_dis');
			}
		}
	},
	subSkill:{
		dis:{
			charlotte:true,
			mod:{
				targetInRange:function (card,player,target){
					return true;
				},
			},
            sub:true,
        },
	},
},
"XS_xuyou":{
	trigger:{
        global:["equipAfter"],
    },
	audio:"ext:血色衣冠:2",
	logTarget:'player',
	check:function (event,player){
		if(event.player.countCards('e')<2) return false;
		return get.attitude(player,event.player)<0;
	},
	filter:function (event,player){
		if(player.hasSkill('XS_xuyou_temp')) return false;
		return event.player!=player&&event.player.countCards('e');
    },
    content:function (){
		"step 0"
		trigger.player.chooseControlList(['失去1点体力','弃置装备区所有牌'],true).set('ai',function(event,player){
			var tar=_status.event.getTrigger().player;
			if(tar.hp<2) return 1;
			if(tar.countCards('e')<2) return 1;
			return 0;
        }).set('prompt','莫须：选择1项');
        "step 1"
        if(result.index==0){
			trigger.player.loseHp();
        }
        else if(result.index==1){
			trigger.player.discard(trigger.player.getCards('e'));
        }
		"step 2"
		if(!player.hasSkill('XS_xuyou_temp')){
			player.addTempSkill('XS_xuyou_temp','roundStart');
		}
    },
	ai:{
        expose:0.3,
    },
	group:["XS_xuyou_dying"],
	subSkill:{
        temp:{
			charlotte:true,
			sub:true,
        },
		dying:{
            priority:6,
            trigger:{
                global:"dying",
            },
            filter:function (event,player){
				if(event.player==player) return false;
                return player.hasSkill('XS_xuyou_temp')||player.isDamaged();
            },
			"prompt2":function (event,player){
				return '你可重置“莫须”的使用次数，并回复1点体力。';
			},
			frequent:true,
            content:function (){
				game.playXSAudio('XS_xuyou',2);
				if(player.hasSkill('XS_xuyou_temp')) {
					player.removeSkill('XS_xuyou_temp');	
				}
				if(player.isDamaged()) {
					player.recover();
				}
            },
            sub:true,
        },
    },
},
"XS_xianyi":{
	trigger:{
		global:"discardAfter",
	},
	audio:"ext:血色衣冠:2",
	filter:function (event,player){
		if(!event.player.countCards('he')) return false;
		if(event.getParent(2).name=='XS_xianyi') return false;
		if(event.player==player) return false;
		for(var i=0;i<event.cards.length;i++){
			var tp=get.type(event.cards[i]);
			if(!player.countCards('h',{type:tp})){
				return true;
			}
		}
		return false;
	},
	logTarget:'player',
	check:function (event,player){
		return get.attitude(player,event.player)<0;
	},
	content:function (){
		"step 0"
		event.num1=0;
		for(var i=0;i<trigger.cards.length;i++){
			var tp=get.type(trigger.cards[i]);
			if(!player.countCards('h',{type:tp})){
				event.num1++;
			}
		}
		if(event.num1<=0) event.finish();
		"step 1"
		player.line(trigger.player,'green');
		player.discardPlayerCard(trigger.player,[1,event.num1],'he',false);
	},
	ai:{
        expose:0.3,
    },
},
"XS_fujin":{
 	trigger:{
		player:["phaseAfter"],
	},
	audio:"ext:血色衣冠:2",
	priority:2,
	check:function (event,player){
		if(player.isTurnedOver()) return true;
		return player.countCards('h')>=player.hp||player.isDamaged();
	},
	content:function (){
		player.turnOver();
		player.recover();
	},
	group:["XS_fujin_tu"],
    subSkill:{
        tu:{
			trigger:{
				player:"turnOverEnd",
			},
			direct:true,
			filter:function (event,player){
				if(player.isTurnedOver()) return false;
				return player.countCards('h');
			},
			content:function(){
				"step 0"
				var num1=player.countCards('he');
				player.chooseCardTarget({
					filterCard:function(card){
						return true;
					},
					position:'h',
					selectCard:[1,3],
					selectTarget:function (card,player,range){
						var nm=ui.selected.cards.length;
						return 4-nm;
					},
					filterTarget:function(card,player,target){
						return player!=target;
					},
					ai1:function(card){
						return 6.5-get.value(card);
					},
					ai2:function(target){
						var eff=get.damageEffect(target,_status.event.player,player);
						return eff;
					},
					prompt:'是否发动【复进】？</br></br>你可弃置1/2/3张手牌为3/2/1名其他角色分配共计3点伤害。'
				});
				"step 1"
				if(result.bool){
					event.nm=0;
					player.discard(result.cards);
					player.logSkill('XS_fujin',result.targets);
					event.tars=result.targets;
				}
				else event.finish();
				"step 2"
				if(event.tars.length==2) event.goto(3);
				else if(event.tars.length==1) event.goto(5);
				else {
					if(event.nm<event.tars.length){
						event.tars[event.nm].damage(player,1,'nocard');
						event.nm++;
					}
					if(event.nm==event.tars.length) event.finish();
					else event.redo();
				}
				"step 3"
				player.chooseTarget('请选择受到2点伤害的角色',true,function(card,player,target){
					return event.tars.contains(target)
				}).set('ai',function(target){
					return 1;
				}).set('forceDie',true);
				"step 4"
				if(event.nm<event.tars.length){
					var dnum=1;
					if(result.bool&&result.targets&&event.tars[event.nm]==result.targets[0]) dnum=2;
					event.tars[event.nm].damage(player,dnum,'nocard');
					event.nm++;
				}
				if(event.nm==event.tars.length) event.finish();
				else event.redo();
				"step 5"
				event.tars[0].damage(player,3,'nocard');
			},
			ai:{
				damage:true,
				expose:0.5,
			},
			sub:true,
        },
    },
},
"XS_zhuanshan":{
     trigger:{
        global:"recoverBegin",
    },
	audio:"ext:血色衣冠:2",
    forced:true,
	logTarget:'player',
    filter:function (event,player){
		return !player.countCards('h');
    },
    content:function (){
		"step 0"
		player.draw(2);
		"step 1"
		trigger.cancel();
    },
	ai:{
        threaten:function (player,target){
            if(!player.countCards('h')) return 1.5;			
        },
    },
},
"XS_weiditrj":{
	audio:"ext:血色衣冠:2",
    trigger:{
        source:"damageBegin2",
    },
	logTarget:'player',
    filter:function (event){
		if(!event.player.isLinked()) return false;
		if(!event.card||!event.notLink()) return false;
        return event.card.name=='sha'||event.card.name=='juedou';
    },
	check:function (event,player){
		return get.attitude(player,event.player)<0;
	},
    content:function (){
		"step 0"
		event.num1=0;
		game.countPlayer(function(current){
			if(current.isLinked()) {
				event.num1++;
				current.link();
			}
		});
		"step 1"
        trigger.num+=event.num1;
    },
	ai:{
		damageBonus:true,
	},
},
"XS_yanfa":{
	audio:"ext:血色衣冠:2",
    trigger:{
        global:["useCardEnd","respondEnd"],
    },
	check:function (event,player){
		var tar=event.player;
		var pla=_status.currentPhase;
		var att1=get.attitude(player,tar);
		var att2=get.attitude(player,pla);
		if(pla.needsToDiscard()||pla.hp<2) {
			if(att2<=0) return true;
			return false;
		}
		if(att1<=0&&tar.isLinked()) return false;
		if(att1>0&&(tar.isTurnedOver()||tar.isLinked())) return true;
		return att1<=0;
	},
	logTarget:"player",
    filter:function (event,player){
		return event.card.name=='shan';
    },
    content:function (){
		"step 0"
		trigger.player.chooseControlList(['横置，若你已横置，令'+get.translation(player)+'摸1张牌','翻面，令'+get.translation(_status.currentPhase)+'失去1点体力并立即结束出牌阶段'],true).set('ai',function(event,player){
			var tar=_status.event.getTrigger().player;
			if(tar.isLinked()) return 0;
			if(tar.isTurnedOver()) return 1;
			var pla=_status.currentPhase;
			var att=get.attitude(tar,pla);
			if(att<=0&&(pla.hp<2||pla.needsToDiscard())) return 1;
			return 0;
        });
        "step 1"
		var pla=_status.currentPhase;
        if(result.index==0){
			if(trigger.player.isLinked()) player.draw();
			else {
				trigger.player.link();
			}
        }
        else if(result.index==1){
			trigger.player.turnOver();
			pla.loseHp();
			var evt=_status.event.getParent('phaseUse');
			if(evt&&evt.name=='phaseUse'){
				evt.skipped=true;
			}
        }
    },
	ai:{
		expose:0.3,
        threaten:1.1,
    },
},
"XS_guangji":{
	enable:"phaseUse",
    usable:1,
    filterTarget:function (card,player,target){
        return !target.isMinHandcard(false)&&target.countCards('h');
    },
    content:function (){
		"step 0"
		player.gainPlayerCard(target,'h',true);
		"step 1"
		if(result.bool) {
			var targets=game.filterPlayer(function(current){
				return player.canUse({name:'wugu'},current,false)
			});
			player.useCard({name:'wugu'},result.cards,targets,true);
		}
    },
    ai:{
        order:8,
		result:{
            target:-1,
        },
        expose:0.3,
    },
},
"XS_huanwang":{
    trigger:{
        global:"useCardBegin",
    },
    priority:5,
    filter:function (event,player){
		if(!event.targets) return false;
        if(event.targets.length<2) return false;
        if(!event.targets.contains(player)) return false;
        return true;
    },
    direct:true,
    content:function (){
        "step 0"
		var num1=Math.max(1,player.getDamagedHp());
        player.chooseTarget(get.prompt('XS_huanwang'),'你可防止至多'+num1+'名角色成为'+get.translation(trigger.card)+'的目标。',[1,num1],function(card,player,target){
            return _status.event.getTrigger().targets.contains(target);
        }).set('ai',function(target){
            var trigger=_status.event.getTrigger();
            var eff=get.effect(target,trigger.card,trigger.player,player);
            return -eff;
        });
        "step 1"
        if(result.bool){
            event.tars=result.targets;
			player.logSkill('XS_huanwang',event.tars);
            for(var i=0;i<event.tars.length;i++){
                trigger.targets.remove(event.tars[i]);
            }
            game.delayx();
        }
        else{
            event.finish();
        }
    },
    ai:{
		expose:0.4,
        effect:{
            target:function (card,player,target){
                if(get.tag(card,'multineg')){
                    return 'zerotarget';
                }
                if(get.tag(card,'multitarget')){
                    var info=get.info(card);
                    if(info.selectTarget==-1&&!info.multitarget){
                        return [1,Math.min(3,1+target.maxHp-target.hp)];
                    }
                }
            },
        },
    },
},
"XS_diding":{
	trigger:{
        global:"phaseUseBegin",
    },
	filter:function (event,player){
        return event.player!=player&&player.countCards('h');
    },
	direct:true,
	content:function(){
		"step 0"
		player.chooseCard(get.prompt2('XS_diding',trigger.player)).ai=function(card){
			var trigger=_status.event.getTrigger();
			var att=get.attitude(player,trigger.player);
			if(att>0) {
				if(get.type(card)=='basic'||get.type2(card)=='trick') return get.value(card);
			}
			else {
				if(get.type(card)=='basic'||get.type2(card)=='trick') return 3.5-get.value(card);
			}
			return -1;
		}	
		"step 1"
        if(result.bool){
			player.logSkill('XS_diding',trigger.player);
			trigger.player.gain(result.cards[0],player,'giveAuto');
			if(!trigger.player.storage.XS_diding_mark) {
				trigger.player.storage.XS_diding_mark=[];
			}
			trigger.player.storage.XS_diding_mark.push(result.cards[0].name);
			trigger.player.storage.XS_diding_mark_a=false;
			trigger.player.addTempSkill('XS_diding_mark');
        }
	},
	ai:{
		threaten:1.1,
		expose:0.3,
	},
	group:["XS_diding_use","XS_diding_gain"],
	subSkill:{
		use:{
			trigger:{
				global:"useCardBegin",
			},
			filter:function(event,player){
				if(!event.player.hasSkill('XS_diding_mark')||!event.player.storage.XS_diding_mark) return false;
				var na=event.player.storage.XS_diding_mark;
				return event.player.storage.XS_diding_mark.contains(event.card.name);
			},
			direct:true,
			content:function (){
				"step 0"
				var info=get.info(trigger.card);
				if(!info.selectTarget||info.selectTarget==-1||info.selectTarget==2) {
					event.goto(4);
				}
				else event.goto(1);
				"step 1"
				event.pla=player;
				trigger.player.chooseToDiscard('弃置1张手牌，否则'+get.translation(player)+'可以为你使用的'+get.translation(trigger.card)+'指定1名额外目标。',1,'h',function(card){
					return !_status.event.getTrigger().cards.contains(card);
				}).set('ai',function(card){
					var att=get.attitude(event.pla,event.player);
					if(att>0) return -1;
					return 4.5-get.value(card);
				});
				"step 2"
				if(result.bool){
					event.goto(4);
				}
				else {
					player.chooseTarget('你可为'+get.translation(trigger.player)+'使用的'+get.translation(trigger.card)+'指定1个额外的目标。',function(card,player,target){
						var trigger=_status.event.getTrigger();
						return trigger.player!=target&&!trigger.targets.contains(target)&&lib.filter.targetEnabled(trigger.card,trigger.player,target);
					}).ai=function(target){
						var trigger=_status.event.getTrigger();
						var eff=get.effect(target,trigger.card,trigger.player,player);
						return eff;
					}
				}		
				"step 3"
				if(result.bool) {
					trigger.targets.add(result.targets[0]);
					game.log(result.targets[0],'成为了',trigger.card,'的目标');
				}
				"step 4"
				trigger.player.storage.XS_diding_mark_a=true;
			},
			sub:true,
		},
		gain:{
			trigger:{
				global:"phaseJieshuBegin",
			},
			filter:function(event,player){
				if(!event.player.countCards('he')) return false;
				if(!event.player.hasSkill('XS_diding_mark')) return false;
				return !event.player.storage.XS_diding_mark_a;
			},
			forced:true,
			content:function (){
				player.gainPlayerCard(trigger.player,1,'h');
			},
			sub:true,
		},	
		mark:{
			charlotte:true,
			mark:true,
			intro:{
				content:function (storage){
					return '“砥定”记录的牌名：'+get.translation(storage);
				},
			},
			onremove:function(player){
				delete player.storage.XS_diding_mark;
				delete player.storage.XS_diding_mark_a;
			},
			sub:true,
		},
    },
},
"XS_qingshen":{
   trigger:{
        player:"gainEnd",
    },
	filter:function(event,player){	
		return player.countCards('h')==event.cards.length;
	},
    forced:true,
    content:function (){
		player.draw();
    },
},
"XS_buqu":{
    trigger:{
        player:"phaseBefore",
    },
	filter:function(event,player){	
		return player.countCards('h');
	},
    direct:true,
    content:function (){
        "step 0"
		player.chooseToDiscard(get.prompt('XS_buqu'),'是否弃置1张手牌，根据颜色直到你下回合开始：红色，使用牌无次数限制；黑色，防止你受到的下一次伤害。').set('ai',function(card){
			if(player.hasSkill('XS_shounuo_temp')) {
				if(get.color(card)=='black') return 7-get.value(card);
			}
			else {
				if(get.color(card)=='red') return 6-get.value(card);
			}
			return -1;
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_buqu');
			var col=get.color(result.cards[0]);
			if(col=='red') {
				player.addTempSkill('XS_buqu_mark1',{player:'phaseBefore'});
			}
			else if(col=='black') {
				player.addTempSkill('XS_buqu_mark2',{player:'phaseBefore'});
			}		
		}          
    },
	subSkill:{
		mark1:{
			charlotte:true,
			mod:{
				cardUsable:function (card,player,num){
					return Infinity;
				},
			},
			sub:true,
		},
		mark2:{
			charlotte:true,
			intro:{
				content:function (content,player){
					return '防止你受到的下一次伤害';
				},
			},
			mark:true,
			trigger:{
				player:["damageBegin"],
			},
			forced:true,
			content:function (){
				trigger.cancel();
				player.removeSkill('XS_buqu_mark2');
			},
			ai:{
				nodamage:true,
				nofire:true,
				nothunder:true,
				effect:{
					target:function (card,player,target){
						if(get.tag(card,'damage')) {
							if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
							if(!target.hasFriend()) return;
							return 0;
						}
					},
				},
			},
			sub:true,
		},
    },
},
"XS_shounuo":{
 	trigger:{
		player:"phaseAfter",
	},
	filter:function(event,player){	
		if(player.hasSkill('XS_shounuo_temp')) return false;
		return player.countCards('h');
	},
	check:function (event,player){
		return true;
	},
	content:function (){
		"step 0"
		var list=[];
		if(player.countCards('h',{color:'red'})) list.push('红色');
		if(player.countCards('h',{color:'black'})) list.push('黑色');
		if(list.length) {
			player.chooseControl(list).set('ai',function(event){
				var num1=player.countCards('h',{color:'red'});
				var num2=player.countCards('h',{color:'black'});
				if(num1>=num2) return '红色';
				else return '黑色';
			}).set('prompt','重铸1种颜色的手牌');
		}
		else event.finish();
        "step 1"    
        if(result.control){
			player.showHandcards();
            switch(result.control){
                case '红色':
					event.chongzhu='red';
					player.storage.XS_shounuo='black';
				break;
                case '黑色':
					event.chongzhu='black';
					player.storage.XS_shounuo='red';
				break;
            }
			player.addTempSkill('XS_shounuo_ex',{player:'phaseJieshuAfter'});
        }
        else event.finish();
		"step 2" 
		var cards=player.getCards('h',{color:event.chongzhu});
		player.chongzhuCards(cards);
		"step 3" 
		player.addTempSkill('XS_shounuo_temp','roundStart');
		player.insertPhase();
	},
	subSkill:{
		ex:{
			charlotte:true,
			trigger:{
				player:"phaseJieshuEnd",
			},
			filter:function(event,player){	
				if(!player.storage.XS_shounuo) return false;
				var col=player.storage.XS_shounuo
				return player.countCards('h',{color:col});
			},
			forced:true,
			content:function (){
				var col=player.storage.XS_shounuo;
				player.discard(player.getCards('h',{color:col}));
			},
			sub:true,
		},
		temp:{
			charlotte:true,
			sub:true,
		},
    },
},
"XS_xingxun":{
	enable:"phaseUse",
	filterTarget:function (card,player,target){
		return target.countCards('h');
	},
	usable:1,
	filter:function (event,player){
		return game.hasPlayer(function(current){
			return current.countCards('h');
		});
	},
	selectTarget:1,
	content:function (){
		"step 0"
		player.showCards(target.getCards('h'));
		"step 1"
		var cds=target.getCards('h',{color:'red'});
		target.discard(cds);
		target.draw(cds.length);
	},
	ai:{
		order:8,
		result:{
			target:function(player,target){
				return -2;
			},
		},
		expose:0.2,
	},
},
"XS_chenqu":{
	enable:"phaseUse",
	usable:1,
	filter:function (event,player){
		return player.countCards('h');
	},
	discard:false,
	prepare:"give2",
	filterCard:true,
	selectCard:[1,Infinity],
	position:"h",
	filterTarget:function (card,player,target){
		return player!=target;
	},
	check:function (card){
		return 3.5-get.value(card);
	},
	content:function (){
		target.gain(cards,player);
		target.addSkill('XS_chenqu_mark');
		target.storage.XS_chenqu_mark=cards.length*2;
		target.markSkillCharacter('XS_chenqu_mark',player,'陈屈','你每失去1张红色牌，令'+get.translation(player)+'摸1张牌，上限'+target.storage.XS_chenqu_mark+'张');
	},
	ai:{
		order:9,
		result:{
			target:function (player,target){
				var hs1=player.countCards('h');
				if(hs1<3) return 0;
				return 1;
			},
		},
		expose:0.2,
	},
	group:["XS_chenqu_draw","XS_chenqu_clear"],
	subSkill:{
		draw:{
			trigger:{
				global:["loseAfter"],
			},
			direct:true,
			filter:function (event,player){
				if(!event.player.hasSkill('XS_chenqu_mark')) return false;
				if(!event.cards||!event.cards.length) return false;
				for(var i=0;i<event.cards.length;i++) {
					if(get.color(event.cards[i])=='red') return true;
				}
				return false;
			},
			priority:3,
			content:function (){
				"step 0"
				var num1=0;
				for(var i=0;i<trigger.cards.length;i++) {
					if(get.color(trigger.cards[i])=='red') num1++;
				}
				event.tp=Math.min(num1,trigger.player.storage.XS_chenqu_mark);
				player.draw(event.tp);
				"step 1"
				trigger.player.storage.XS_chenqu_mark-=event.tp;
				"step 2"
				if(trigger.player.storage.XS_chenqu_mark<=0) {
					trigger.player.removeSkill('XS_chenqu_mark');
				}
			},
            sub:true,
        },
        mark:{
			onremove:function(player){
				delete player.storage.XS_chenqu_mark;
				player.unmarkSkill('XS_chenqu_mark');
			},
			charlotte:true,
            sub:true,
        },
		clear:{
            trigger:{
                player:["phaseBefore","dieBegin"],
            },
            direct:true,
            content:function (){
                for(var i=0;i<game.players.length;i++){
                    if(game.players[i].hasSkill('XS_chenqu_mark')){
                        game.players[i].removeSkill('XS_chenqu_mark');
                    }
                }
            },
			sub:true,
        },
    },
},
"XS_kuangan":{
	enable:"phaseUse",
    usable:1,
    audio:2,
    filterTarget:function (card,player,target){
        return player!=target;
    },
	selectTarget:1,
    content:function (){
		"step 0"
		var trans1=get.translation(player);
		var trans2=get.translation(target);
		player.chooseControl().set('choiceList',['令'+trans2+'摸3张牌，视为你对其使用1张杀','你摸3张牌，视为'+trans2+'对你使用1张不计次数的杀']).set('ai',function(event,player){
			return 1;
		});	
		"step 1"
		if(result.index==0){
			target.draw(3);
			player.useCard({name:'sha',isCard:true},target,false);
		}
		else{
			player.draw(3);
			target.useCard({name:'sha',isCard:true},player,false);
		}
    },
    ai:{
        order:9,
		result:{
			target:function (player,target){
				if(target.hasSkillTag('damageBonus')) return 0;
				return 1;
			},
        },
        expose:0.1,
    },
},
"XS_xiancheng":{
	trigger:{
		player:"phaseDiscardEnd",
	},
	filter:function (event,player){
		return event.cards&&event.cards.length;
	},
	direct:true,
	content:function (){
		"step 0"
		event.num1=trigger.cards.length;
		player.chooseTarget(get.prompt('XS_xiancheng'),'你可弃置1名其他角色至多'+event.num1+'张牌。',function(card,player,target){
            return player!=target&&target.countCards('he');
        }).ai=function(target){
			var att=get.attitude(player,target);
			if(target.countCards('he')<event.num1) att*=0.5;
			return -att;
        }
        "step 1"
		if(result.bool) {
			player.logSkill('XS_xiancheng',result.targets[0]);
			player.line(result.targets[0],'fire');
			player.discardPlayerCard(result.targets[0],[1,event.num1],'he',true);
		}
	},
	ai:{
        expose:0.3,
    },
},
"XS_huimao":{
	trigger:{
		player:"phaseAfter",
	},
	direct:true,
	autodelay:true,
	content:function (){
		"step 0"
		event.togain=[];
		for(var i=0;i<ui.discardPile.childNodes.length;i++){
			var current=ui.discardPile.childNodes[i];
			if(get.type(current)=='equip') event.togain.push(current);
		}
		if(!event.togain.length) event.finish();
		"step 1"
		player.chooseButton(['挥矛：是否将弃牌堆中的1张装备牌置于牌堆顶，视为使用1张无距离限制的杀？',event.togain]).ai=function(button){
			if(game.hasPlayer(function(current){
				return player.canUse({name:'sha'},current,false)&&get.effect(current,{name:'sha'},player,player)>0;
			})){
				return get.value(button.link);
			}
			return -1;
		};
		"step 2"
		if(result.bool){
			player.logSkill('XS_huimao');
			event.cd=result.links[0];
			player.showCards(event.cd);
			event.cd.fix();
		}
		else event.finish();
		"step 3"
        var controls=['零','一','二','三','四','五'];
        var str='将'+get.translation(event.cd)+'置于牌堆顶第X张(X为你选择的数字)牌下方';
        var dialog=ui.create.dialog(str,'hidden');
        player.chooseControl(controls,dialog).ai=function(){
           return '三';
        };
        "step 4"
        var num;
        switch(result.control){
			case '零':num=0;break;
            case '一':num=1;break;
            case '二':num=2;break;
            case '三':num=3;break;
            case '四':num=4;break;
            case '五':num=5;break;
        }
        event.num1=num-1;
		event.cards=get.cards(5);
        "step 5"
		if(event.num1<0) {
			ui.cardPile.insertBefore(event.cd,ui.cardPile.firstChild);
		}
		else {
			for(var i=event.cards.length-1;i>=0;i--){
				if(i==event.num1){
					ui.cardPile.insertBefore(event.cd,ui.cardPile.firstChild);
					ui.cardPile.insertBefore(event.cards[i],ui.cardPile.firstChild);
				}
				else{
					ui.cardPile.insertBefore(event.cards[i],ui.cardPile.firstChild);
				}
			}
		}
		"step 6"
		player.chooseUseTarget({name:"sha",isCard:true},'nodistance',true);
	},
},
"XS_zongqin":{
	init:function (player){
		player.storage.XS_zongqin=[];
	},
	usable:1,
	priority:19,
	trigger:{
		global:"useCardToBefore",
	},
	filter:function (event,player){
		if(event.card.name!='sha') return false;
		if(!event.target||event.target==player) return false;
		if(!event.target.inRange(player)) return false;
		return player.countCards('h');
	},
	direct:true,
	content:function (){
		"step 0"
		player.chooseCardButton('纵擒：你可交给'+get.translation(trigger.target)+'1张手牌，如此'+get.translation(trigger.card)+'结算完成后，你观看其手牌并获得其中1张。',player.getCards('h')).ai=function(button){
			var trigger=_status.event.getTrigger();
			var att=get.attitude(player,trigger.target);
			if(att>0) {
				if(button.link.name=='shan') return 10;
				return 8-get.value(button.link);
			}
			else {
				if(trigger.target.countCards('h')<=1) return -1;
				return 4.5-get.value(button.link);
			}
		}
		"step 1"
		if(result.bool) {
			player.logSkill('XS_zongqin',trigger.target);
			trigger.target.gain(result.links[0],player,'giveAuto');
			player.storage.XS_zongqin.push(trigger.card);
		}
	},
	ai:{
        threaten:1.1,
		expose:0.1,
    },
	group:["XS_zongqin_gain"],
	subSkill:{
		gain:{
			trigger:{
    			global:["shaAfter","shaCancelled"],
    		},
    		silent:true,
    		filter:function(event,player){
				return player.storage.XS_zongqin.indexOf(event.card)>=0;
    		},
    		content:function(){
				player.gainPlayerCard('h',trigger.target,1,'visible');
				var n=player.storage.XS_zongqin.indexOf(trigger.card);
            	player.storage.XS_zongqin.splice(n,1);
    		},
		},
	},
},
"XS_quanzhen":{
	trigger:{
		player:["damageAfter"],
	},
	check:function (event,player){
		return event.source.countCards('h')>player.countCards('h');
	},
	logTarget:"source",
	filter:function(event,player){
		if(!event.source) return false;
		return event.source.countCards('h')!=player.countCards('h');
	},
	content:function(){
		"step 0"
		var num1=trigger.source.countCards('h')-player.countCards('h');
		if(num1<0) player.chooseToDiscard('h',-num1,true);
		else player.draw(num1);
		"step 1"
		if(player.countCards('h','sha')){
			var num2=player.countCards('h','sha');
			player.chooseCard('你可展示手牌中任意张杀，并于当前回合结束时依次使用之。',[1,num2],{name:'sha'},false).ai=function(card){
				if(game.hasPlayer(function(current){
					return player.canUse({name:'sha'},current)&&get.effect(current,{name:'sha'},player,player)>0;
				})) return 20;
				return -1;
			}
		}
		else event.finish();
		"step 2"
		if(result.bool&&result.cards){
			player.showCards(result.cards);
			player.storage.XS_quanzhen_use=result.cards;
			player.addTempSkill('XS_quanzhen_use');
			player.markSkill('XS_quanzhen_use');
		}
	},
	ai:{
		maixie:true,
		"maixie_hp":true,
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')) {
					if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
					if(!target.hasFriend()) return;
					var num1=player.countCards('h')-target.countCards('h');
					if(num1<=0) return;
					if(target.hp>1) return [1,num1];
					else return [1,num1*0.5];
				}
			},
		},
	},
	subSkill:{
        use:{
			charlotte:true,
			onremove:function(player){
				if(player.storage.XS_quanzhen_use) {
					for(var i=0;i<player.storage.XS_quanzhen_use.length;i++){
						player.chooseUseTarget(player.storage.XS_quanzhen_use[i],true,true);
					}
				}
			},
			intro:{
				content:'cards',
			},
            sub:true,
        },
    },
},
"XS_yuping":{
	trigger:{
        player:["shaBefore"],
    },
    forced:true,
    priority:999,
    content:function (){
        "step 0"
        if(!trigger.target.hasSkill('XS_yuping_mark')) {
            trigger.target.addSkill('XS_yuping_mark');
            trigger.target.storage.XS_yuping_mark=0;
            trigger.target.markSkill('XS_yuping_mark');
        }
		trigger.target.storage.XS_yuping_mark++;
		trigger.target.syncStorage('XS_yuping_mark');
        "step 1"
        trigger.cancel();
		if(player.stat[player.stat.length-1].card.sha>0){
			player.stat[player.stat.length-1].card.sha--;
		}
    },
	ai:{
	　　effect:{
　　		player:function(card,player){
				if(player.hp>0&&card.name=='jiu') return [0,-1];
			}
		}
	},
    subSkill:{
        mark:{
            intro:{
                content:function (storage){
                    return '当前值：<span class="bluetext">'+storage+'</span>';
                },
            },
            trigger:{
                player:["damageEnd"],
            },
            forced:true,
            filter:function (event,player){
                if(event.num<=0) return false;
                return player.storage.XS_yuping_mark&&player.storage.XS_yuping_mark>0;
            },
            content:function (){
                "step 0"
                player.loseHp();
                player.storage.XS_yuping_mark--;
				player.syncStorage('XS_yuping_mark');
				"step 1"
                if(player.storage.XS_yuping_mark<=0) {
                    delete player.storage.XS_yuping_mark;
					player.unmarkSkill('XS_yuping_mark');
                    player.removeSkill('XS_yuping_mark');
                }
            },
            ai:{
                effect:{
                    target:function (card,player,target){
                        if(get.tag(card,'damage')) {
                            if(player.hasSkillTag('jueqing',false,target)) return;
                            return [1,-2];
                        }
                    },
                },
            },
            sub:true,
        },
    },
},
"XS_yaowei":{
	trigger:{
        player:"damageEnd",
    },
    priority:9,
    check:function (event,player){
        if(player.storage.XS_furen==true){
            return true;
        }
        else {
            return get.attitude(player,event.source)>0;
        }   
    },
    "prompt2":function (event,player){
        var bu="";
        switch(get.color(event.card)){
            case 'red':bu='回复1点体力';break;
            case 'black':bu='摸2张牌';break;
            case 'none':bu='回复1点体力并摸1张牌';break;
        }
        if(player.storage.XS_furen==true){
            return '是否令你'+bu+'?';
        }
        else {
            return '是否令'+get.translation(event.source)+bu+'?';
        }
    },
    filter:function (event,player){
        if(player.storage.XS_furen==true){
            return event.card&&event.notLink();
        }
		else {
			if(!event.source) return false;
			return event.card&&event.notLink();
		}
    },
    content:function (){
        "step 0"
        if(player.storage.XS_furen==true){
            event.pla=player;
        }
        else {
            event.pla=trigger.source;
        }
        "step 1"
        switch(get.color(trigger.card)){
            case 'black':
                event.pla.draw(2);
            break;
            case 'red':
                event.pla.recover();
            break;
            case 'none':
                event.pla.draw();
                event.pla.recover();
            break;
        }
    },
   ai:{
        maixie:true,
        "maixie_hp":true,
        effect:{
            target:function (card,player,target){
                if(get.tag(card,'damage')){
                    if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
                    if(!target.hasFriend()) return;
					if(target.storage.XS_furen) {
						if(target.hp>1) {
							if(get.color(card)) return [1,2];
							else return [1,3];
						}
						return [1,1];
					}
					else {
						var att=get.attitude(target,player);
						if(att>0) {
							if(target.hp>1) {
								if(get.color(card)) return [1,0,1,2];
								else return [1,0,1,3];
							}
							return [1,0,1,1];
						}
						return;
					}
                }
            },
        },
    },
},
"XS_furen":{
    mark:true,
    marktext:"任",
    limited:true,
    skillAnimation:true,
    animationColor:"water",
    unique:true,
    enable:"chooseToUse",
	priority:-10,
    init:function (player){
        player.storage.XS_furen=false;
    },
    intro:{
        content:"limited",
    },
    filter:function (event,player){
        if(player.storage.XS_furen) return false;
        if(event.type=='dying'){
            if(player!=event.dying) return false;
            return true;
        }
        return false;
    },
    content:function (){
		"step 0"
        player.awakenSkill('XS_furen');
        player.storage.XS_furen=true;
		player.loseMaxHp();
		"step 1"
		var num1=player.maxHp-player.hp;
		player.chooseToDiscard('弃置任意张牌并回复等量体力',[1,num1],'he').set('ai',function(card){
			return 8-get.value(card);
		});
		"step 2"
		if(result.bool){
			var num2=result.cards.length;
			player.recover(num2);		
		}
    },
	ai:{
        order:0.5,
        skillTagFilter:function (player){
            if(player.storage.XS_furen) return false;
            if(player.hp>1) return false;
        },
        save:true,
        result:{
            player:function (player){
                if(player.hp<=0) return 10;
                return 0;
            },
        },
        threaten:function (player,target){
            if(!target.storage.XS_furen) return 0.5;
        },
    },
},
"XS_shenduan":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
    usable:1,
	filter:function(event,player){
		return player.countCards('h');
	},
    content:function (){
		"step 0"
		player.showHandcards();
		"step 1"
		player.chooseToDiscard(get.prompt2('XS_shenduan'),1,'h',false).set('ai',function(card){
			var val=get.value(card);
			if(player.countCards('h',{color:get.color(card)})==1) val-=3;
			if(player.countCards('h',{type:get.type(card)})==1) val-=3.5;
			if(player.countCards('h',{suit:get.suit(card)})==1) val-=5;
			return val<=0;
		});
		"step 2"
		if(result.bool){
			var collist=[];
			var typelist=[];
			var suitlist=[];
			var hs=player.getCards('h');
			for(var i=0;i<hs.length;i++) {
				collist.add(get.color(hs[i]));
				typelist.add(get.type(hs[i]));
				suitlist.add(get.suit(hs[i]));
			}
			if(collist.length==1) {
				player.chooseUseTarget({name:"guohe",isCard:true},false);
			}
			if(typelist.length==1) {
				player.addTempSkill('XS_shenduan_mark');
			}
			if(suitlist.length==1) {
				player.draw(3);
			}
		} 	
    },
    ai:{
        order:1,
		result:{
            player:1,
        },
    },
	subSkill:{
        mark:{
			charlotte:true,
			mod:{
				targetInRange:function (card){
					return true;
				},
				cardUsable:function(card,player){
					return Infinity;
				},
			},
			mark:true,
			marktext:"断",
			intro:{
				content:"使用牌无距离、次数限制",
			},
            sub:true,
        },
    },
},
"XS_fupi":{
	init:function (player){
		player.storage.XS_fupi=0;
	},
	audio:"ext:血色衣冠:2",
	trigger:{
		global:"phaseAfter",
	},
	filter:function (event,player){
		if(player.hasSkill('XS_fupi_temp')) return false;
		return event.player.countCards('h')!=player.storage.XS_fupi;
	},
	logTarget:'player',
	"prompt2":function (event,player){
		return '是否令'+get.translation(event.player)+'将手牌数调整至'+player.storage.XS_fupi+'张？';
	},
	check:function (event,player){
		var att=get.attitude(player,event.player);
		var nm=event.player.countCards('h')-player.storage.XS_fupi;
		if(att>0) {
			return nm<=-3;
		}
		else if(att<0) {
			return nm>=3;
		}
		if(event.player==player) {
			return nm<=-2;
		}
		return false;
	},
	content:function (){
		player.addTempSkill('XS_fupi_temp','roundStart');
		var nm=trigger.player.countCards('h')-player.storage.XS_fupi;
		if(nm>0) {
			trigger.player.chooseToDiscard('h',nm,true);
		}
		else {
			trigger.player.draw(-nm);
		}
	},
	ai:{
		expose:0.4,
	},
	group:["XS_fupi_change"],
    subSkill:{
        change:{
			trigger:{
				global:["phaseBefore"],
			},
			priority:4,
			direct:true,
			content:function (){
				player.storage.XS_fupi=trigger.player.countCards('h');
			},
			sub:true,
        },
		temp:{
			charlotte:true,
			sub:true,
        },
    },	
},
"XS_mingcha":{	
	audio:"ext:血色衣冠:2",
	trigger:{
		global:["damageAfter"],
	},
	priority:3,
	filter:function (event,player){
		if(player.hasSkill('XS_mingcha_temp')) return false;
		if(event.player.isDead()) return false;
		if(event.player==player||event.source==player) return false;
		return get.itemtype(event.cards)=='cards'&&get.position(event.cards[0],true)=='o';
	},
	direct:true,
    content:function (){
        "step 0"
		event.pla=player;
		trigger.player.chooseBool(get.prompt('XS_mingcha'),'是否令'+get.translation(player)+'获得'+get.translation(trigger.cards)+'?').set('ai',function(){
			var trigger=_status.event.getTrigger();
			return get.attitude(trigger.player,event.pla)>0;
		});
		"step 1"
		if(result.bool){
			player.addTempSkill('XS_mingcha_temp');
			player.logSkill('XS_mingcha',trigger.player);
			player.gain(trigger.cards,"gain2");
		}
    },	
	subSkill:{
		temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_qushen":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
    usable:1,
    filter:function (event,player){
		if(player.hasSkill('XS_qushen_temp')) return false;
		if(player.hasJudge('bingliang')&&!player.countCards('h',{suit:'diamond'})) return false;
		if(player.hasJudge('lebu')&&!player.countCards('h',{suit:'spade'})) return false;
        return player.countCards('h',{suit:'diamond'})||player.countCards('h',{suit:'spade'});
    },
    content:function (){
        "step 0"
		player.chooseCard(get.prompt2('XS_qushen'),function(card){
			if(player.hasJudge('bingliang')) return get.suit(card)=='diamond';
			if(player.hasJudge('lebu')) return get.suit(card)=='spade';
			return get.suit(card)=='diamond'||get.suit(card)=='spade';
		}).set('ai',function(card){
			if(get.suit(card)=='diamond') {
				return 5-get.value(card);
			}
			else {
				return 6-get.value(card);
			}
		});
		"step 1"
		if(result.bool){
			if(get.suit(result.cards[0])=='spade') {
				var na='bingliang';
			}
			else {
				var na='lebu';
			}
			var next=player.useCard({name:na},result.cards,player);
			if(!player.hasSkill('XS_qushen_temp')){
				player.addTempSkill('XS_qushen_temp','roundStart');
			}
			player.addTempSkill('XS_qushen_buff',{player:'phaseUseAfter'});
		}
    },
    ai:{
        order:9,
		result:{
            player:2,
        },
    },
	subSkill:{
		buff:{
			charlotte:true,
			onremove:function(player){
				player.draw(3);
				player.stat.push({card:{},skill:{}});
				player.phaseUse();
			},
			sub:true,
        },
		temp:{
			charlotte:true,
			sub:true,
		},
    },		
},
"XS_bacai":{
	unique:true,
	mod:{
		maxHandcard:function(player,num){
			if(player.hasZhuSkill('XS_bacai')){
				return num+game.countPlayer(function(current){
					return player!=current&&current.group==player.group;
				});
			}
			return num;
		},
		globalTo:function (from,to,current){
			if(to.hasZhuSkill('XS_bacai')){
				return current+game.countPlayer(function(current){
					return to!=current&&current.group==to.group;
				});
			}
			return current;
		},
	},
	zhuSkill:true,	
	trigger:{
		player:"phaseDiscardBefore",
	},
	priority:299,
	audio:"ext:血色衣冠:2",
	forced:true,
	filter:function(event,player){
		if(!player.hasZhuSkill('XS_bacai')) return false;	
		return game.countPlayer(function(current){
			return player!=current&&current.group==player.group;
		})>0;
	},
	content:function (){
    },	
},
"XS_yuanxing":{
	charlotte:true,
	enable:"phaseUse",
	usable:1,
	filterCard:true,
	filterTarget:function(card,player,target){
		return true;
	},
	filter:function(event,player){
		return player.countCards("h");
	},
	discard:false,
	lose:false,
	init:function(player,skill){
		if(typeof game.storage=="undefined") game.storage={};
		game.storage[skill]=[];
		game.addGlobalSkill(skill+"_a");
	},
	content:function(){
		"step 0"
		var e="";
		var ca=cards[0];
		event.ca=[ca.name,ca.nature];
		switch(ca.suit){
			case "spade":e="guding";break;
			case "heart":e="cixiong";break;
			case "club":e="hanbing";break;
			default:e="qinggang";
		}
		ca.init(game.createCard(e,ca.suit,ca.number));
		ca.storage.orname=event.ca;
		game.storage.XS_yuanxing.push(ca);
		player.useCard(ca,target);
		player.draw(2);
	},
	check:function(card){
		return 6-get.value(card);
	},
	ai:{
		result:{
            target:function (player,target){
				if(target.getEquip(1)) return 0;
				return 2;
            },
		},
		order:9,
		expose:0.3,
	},
	subSkill:{
		a:{
			sub:true,
			trigger:{
				player:"loseAfter",
			},
			priority:15,
			silent:true,
			forceDie:true,
			filter:function(event,player){
				if(event.getParent(2).name=="XS_yuanxing")return false;
				if((event.parent&&event.parent.name!='swapEquip')&&event.type!='equip'){
					for(var i=0;i<event.cards.length;i++){
						if(game.storage.XS_yuanxing.contains(event.cards[i]))return true;
					}
				}
			},
			content:function(){
				"step 0"
				for(var i=0;i<trigger.cards.length;i++){
					if(game.storage.XS_yuanxing.contains(trigger.cards[i])){
						game.storage.XS_yuanxing.remove(trigger.cards[i]);
						trigger.cards[i].init(game.createCard(trigger.cards[i].storage.orname[0],trigger.cards[i].suit,trigger.cards[i].number,trigger.cards[i].storage.orname[1]));
					}
				}
			},
		},
	},
},
"XS_qiexue":{
	charlotte:true,
	enable:"phaseUse",
    filter:function(event,player){
    	return player.countCards("h",function(card){
    		return lib.skill.XS_qiexue.filterCard(card,player);
    	});
    },
	check:function(card){
		return 6-get.value(card);
	},
	ai:{
		result:{
			target:2,
		},
		order:8,
		expose:0.3,
	},
    discard:false,
    prepare:"throw",
    filterCard:function(card,player){
    	return game.hasPlayer(function(current){
    		if(player==current)return false;
    		var w=current.getEquip(1);
    		return w&&w.suit==card.suit;
    	});
    },
    filterTarget:function(card,player,target){
    	if(player==target)return false;
    	var w=target.getEquip(1);
    	return w&&w.suit==card.suit;
    },
    content:function(){
    	"step 0"
    	if(target.hasSkill("XS_qiexue_a")){
    		target.storage.XS_qiexue_a=target.storage.XS_qiexue_a.concat(cards);
    		target.syncStorage("XS_qiexue_a");
    	}
    	else{
    		target.storage.XS_qiexue_a=cards;
    		target.addSkill("XS_qiexue_a");
    	}
    },
    subSkill:{
    	a:{
			sub:true,
    		mark:true,
    		intro:{
    			content:"cards",
    		},
    		init:function(player,skill){
    			player.storage[skill+"_e"]=player.getEquip(1);
    		},
    		trigger:{
    			player:"loseAfter",
    		},
    		silent:true,
    		filter:function(event,player){
    			for(var i=0;i<event.cards.length;i++){
    				if(event.cards[i]==player.storage.XS_qiexue_a_e)return true;
    			}
    		},
    		content:function(){
    			"step 0"
    			if(player.isAlive()){
    				player.gain(player.storage.XS_qiexue_a,"gain2","fromStorage");
    				event.g=true;
    			}
    			else event.goto(2);
    			"step 1"
    			if(!event.g){
    				game.cardsDiscard(player.storage.XS_qiexue_a);
    				game.log(player,"弃置了",player.storage.XS_qiexue_a);
    			}
    			delete player.storage.XS_qiexue_a;
    			delete player.storage.XS_qiexue_a_e;
    			player.removeSkill("XS_qiexue_a");
    		},
    		mod:{
    			attackFrom:function (from,to,num){
    				if(!from.storage.XS_qiexue_a)return;
            		return num-from.storage.XS_qiexue_a.length;            
        		},
    			cardUsable:function (card,player,num){
    				if(!player.storage.XS_qiexue_a)return;
					if(card.name=='sha') return num+player.storage.XS_qiexue_a.length;
				},
    		},
			ai:{
			　　effect:{
		　　		player:function(card,player){
						if(player.storage.XS_qiexue_a&&get.subtype(card)=='equip1') {
							return [1,-2];
						}	
					}
				}
			},
    	},
    },
},
"XS_zongji":{
	trigger:{
		player:"damageBegin4",
	},
	filter:function (event,player){
		if(player.hasSkill('XS_zongji_temp')) return false;
        return player.countCards('he',{type:'equip'})>0&&event.num>0;
    },
	direct:true,
	priority:-79,
	content:function (){
        "step 0"
		player.chooseTarget(get.prompt('XS_zongji'),'你可将1张装备牌置于1名其他角色的装备区，如此其代替你承受'+trigger.num+'点伤害。',function(card,player,target){
			return target!=player;
        }).ai=function(target){
			var trigger=_status.event.getTrigger();
			var att=get.attitude(player,target);
			if(target.hasSkillTag('maixie')&&target.hp>trigger.num) return att;
			return -att;
        }
        "step 1"
		if(result.bool) {
			event.tar=result.targets[0];
			var cards=[];
			var es=player.getCards('he',{type:'equip'});
			player.chooseCardButton('将一张装备牌置于'+get.translation(event.tar)+'的装备区',es,false).ai=function(button){
				var nm=_status.event.getTrigger().num;
				var att=get.attitude(player,event.tar);
				if(att>0) return nm*6.5-get.equipValue(button.link);
				return nm*5-get.equipValue(button.link);
			}
		}
		else event.finish();
		"step 2"
        if(result.bool){
			player.addTempSkill('XS_zongji_temp');
			player.logSkill('XS_zongji',event.tar);
			event.tar.gain(result.links[0],player,'giveAuto');
			event.tar.equip(result.links[0]);
			trigger.player=event.tar;
        }
    },
	subSkill:{
		temp:{
			charlotte:true,
            sub:true,
        },
    },
	ai:{
		maixie:true,
		"maixie_defend":true,
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')){
					if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
					if(!target.hasFriend()) return;
					if(target.countCards('e')) return [0,1];
					return;
				}
			},
		},
	},
},
"XS_lishi":{
	trigger:{
		global:["changeHp"],
    },
    direct:true,
    filter:function (event,player){
		return event.player.hp==1&&event.num!=0;
    },
    content:function (){
		"step 0"
		player.chooseControlList(['弃置'+get.translation(trigger.player)+'1张牌','摸1张牌'],false).set('ai',function(event,player){
			var target=_status.event.getTrigger().player;
			var att=get.attitude(player,target);
			if(att>0) {
				if(target.hasSkill('XS_yuanmou')&&target.storage.XS_yuanmou.length) return 0;
				return 1;
			}
			else return 0;
        }).set('prompt','历仕：你可选择一项');
        "step 1"
        if(result.index==0&&trigger.player.countCards('he')>0){
			player.logSkill('XS_lishi',trigger.player);
			player.discardPlayerCard(trigger.player,1,'he',true);			
        }
        else if(result.index==1){
			player.logSkill('XS_lishi',trigger.player);
			player.draw();
        } 
		else event.finish();
    },
	ai:{
		expose:0.3,
    },
},
"XS_jifen":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:"phaseBefore",
	},
	logTarget:"player",
	priority:-1,
	filter:function (event,player){
		if(event.player==player) return false;
		return player.inRange(event.player);
	},
	check:function (event,player){
		var att=get.attitude(player,event.player);
		if(event.player.hp>2&&event.player.countCards('h')<4) return att>0;
		if(event.player.hp<2) return true;
		return false;
	},
	content:function(){
		trigger.player.addTempSkill('XS_jifen_mark',{player:'phaseBefore'});
	},
	ai:{
		expose:0.2,
    },
	subSkill:{
		mark:{
			mark:true,
			charlotte:true,
			intro:{
				content:function(storage,player,skill){  
					return '所有手牌均视为杀，使用杀的次数+1。';
				},
			},
			mod:{
				cardname:function (card,player,name){
					if(card.name!='sha') return 'sha';
				},
				cardnature:function (card,player,name){
					if(card.name!='sha') return null;
                },
				cardUsable:function (card,player,num){
					if(card.name=='sha') return num+1;
				},
			},
			sub:true,
		},
	},
},
"XS_fangnan":{
	audio:"ext:血色衣冠:2",
    trigger:{
        player:["loseAfter","damageAfter"],
		global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter'],
    },
	usable:1,
    priority:10,
    filter:function (event,player){
		if(!player.countCards('h')||!player.canMoveCard(false)) return false;
		if(event.name!='damage') {
			var evt=event.getl(player);
			return evt&&evt.player==player&&evt.es&&evt.es.length>0;
		}
		else {
			if(event.source) return event.source!=player;
			return true;
		} 
    },
	direct:true,
    content:function (){
		"step 0"
		if(trigger.name=='lose') {
			var evt=trigger.getl(player);
			event.nm=evt.es.length;
		}
		else event.nm=trigger.num;
		"step 1"
		player.chooseToDiscard(get.prompt('XS_fangnan'),'你可弃置1张手牌以移动场上1张牌，若有角色因此失去了区域内最后一张牌，你可对其造成1点伤害。','h',1,false,function(card){
			return true;
		}).set('ai',function(card){
			return (6-get.value(card))&&player.canMoveCard(true);
		});
		"step 2"
		if(result.bool){
			player.logSkill('XS_fangnan');
			player.moveCard();
		}
		else event.finish();
		"step 3"
		if(result.bool){
			if(!result.targets[0].countCards(result.position)) {
				event.tar=result.targets[0];
				player.chooseBool('是否对'+get.translation(result.targets[0])+'造成一点伤害？').set('ai',function(){
					return get.damageEffect(event.tar,player,player)>0;
				});
			}
			else event.goto(5);
		}
		else event.goto(5);
		"step 4"
		if(result.bool){
			event.tar.damage(1,player,'nocard');
		}
		"step 5"
		if(event.nm>1) {
			event.nm--;
			event.goto(1);
		}
    },
	ai:{
		maixie:true,
		"maixie_hp":true,
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')) {
					if(player.hasSkillTag('jueqing',false,target)) return;
					if(!target.hasFriend()) return;
					if(!target.countCards('h')) return;
					return [1,2];
				}
			},
		},
	},
},
"XS_mingjian":{
	audio:"ext:血色衣冠:2",
	trigger:{
        player:"discardBefore",
    },
	filter:function(event,player){
		return event.getParent().name=='discardPlayerCard';
	},
	direct:true,
    content:function (){
		"step 0"
		var num=trigger.cards.length;
        player.chooseCard(get.prompt('XS_mingjian'),'你可选择要弃置的牌',num,false).ai=function(card){
			if(player.storage.XS_yuanmou) {
				if(player.storage.XS_yuanmou.contains(card)) return 100;
			}
			return 6-get.value(card);
        }
		"step 1"
        if(result.bool){
			player.logSkill('XS_mingjian');
			trigger.cards=result.cards;
        }
    },
},
"XS_yuanmou":{
	audio:"ext:血色衣冠:2",
	init:function (player){
		player.storage.XS_yuanmou=[];
	},
	intro:{
		content:function (storage,player){
			if(!storage.length) return '未记录任何牌';
			else {
				if(player.isUnderControl(true))return get.translation(storage);
				else return '“远谋”记录了牌';
			}
		},
	},
	trigger:{
		global:"gameDrawAfter",
		player:["phaseJieshuBegin"],
	},
	direct:true,
	filter:function(event,player){
		return player.countCards('he');
	},
	content:function (){
		"step 0"
		player.chooseCardButton(get.prompt2('XS_yuanmou'),1,player.getCards('he')).set('filterButton',function(button){
			var lt=player.storage.XS_yuanmou;
			return !lt.contains(button.link);
		}).set('ai',function(button){
			if(button.link.name=='shan') return 20;
			if(button.link.name=='wuxie') return 19
			if(button.link.name=='tao') return 10;
			return 10-get.value(button.link);
		});
        "step 1"
        if(result.bool){
			player.storage.XS_yuanmou.push(result.links[0]);
			player.markSkill('XS_yuanmou');
			player.syncStorage('XS_yuanmou');
			game.log(player,'记录了一张牌');
        }
	},
	ai:{
		threaten:function (player,target){
			if(player.storage.XS_yuanmou&&player.storage.XS_yuanmou.length) return 0.8;
            return 1;
        },
		effect:{
			target:function (card,player,target){
				if(card.name=='guohe'&&target.storage.XS_yuanmou&&target.storage.XS_yuanmou.length){
					return [1,4];
				}
			},
		},
	},
	group:["XS_yuanmou_dis"],
    subSkill:{
		dis:{
			trigger:{
				player:"loseAfter",
			},
			direct:true,
			filter:function(event,player){
				if(!player.storage.XS_yuanmou.length) return false;
				for(var i=0;i<event.cards.length;i++) {
					if(player.storage.XS_yuanmou.contains(event.cards[i])) 
					return true;
				}
			},
			content:function (){
				"step 0"
				event.nm=0;
				for(var i=0;i<trigger.cards.length;i++) {
					if(player.storage.XS_yuanmou.contains(trigger.cards[i])) {
						player.storage.XS_yuanmou.remove(trigger.cards[i]);
						if(_status.currentPhase!=player) {
							event.nm++;
						}
					}
				}
				"step 1"
				if(event.nm>0) {
					player.chooseTarget(get.prompt('XS_yuanmou'),'你可令1名角色摸3张牌',1,false,function(card,player,target){
						return true;
					}).ai=function(target){
						var att=get.attitude(player,target),hs=target.countCards('h')+0.1;
						return att/hs;
					}
				}
				else event.goto(4);
				"step 2"
				if(result.bool) {
					player.logSkill('XS_yuanmou',result.targets[0]);
					result.targets[0].draw(3);
				}
				"step 3"
				event.nm--;
				event.goto(1);
				"step 4"
				player.syncStorage('XS_yuanmou');
				if(!player.storage.XS_yuanmou.length) {
					player.unmarkSkill('XS_yuanmou');
				}
			},
			ai:{
				expose:0.4,
			},
            sub:true,
        },
    },
},
"XS_jiandang":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"useCardBefore",
	},
	filter:function (event,player){
		if(event.card.name!='sha') return false;
		if(!player.countCards('h')) return false;
		var tars=game.filterPlayer(function(current){
			return current!=player&&!event.targets.contains(current)&&player.inRange(current)&&lib.filter.targetEnabled2(event.card,player,current);
		});
		return tars.length>0;
	},
	priority:999,
	direct:true,
	content:function (){
		"step 0"
		event.extar=game.filterPlayer(function(current){
			if(current==player) return false;
			if(trigger.targets.contains(current)) return false;
			return player.inRange(current)&&lib.filter.targetEnabled(trigger.card,player,current);
		});
		player.chooseToDiscard(get.prompt('XS_jiandang'),'是否弃置1张手牌，令'+get.translation(event.extar)+'也成为你使用的'+get.translation(trigger.card)+'的目标？',1,'h',function(card){
			var tri=_status.event.getTrigger();
			return !tri.cards.contains(card);
		}).set('ai',function(card){
			var eff=0,tri=_status.event.getTrigger();
			for(var i=0;i<event.extar.length;i++) {
				eff+=get.effect(event.extar[i],tri.card,player,player);
			}
			if(eff>=1) {
				return 6-get.value(card);
			}
			return -1;
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_jiandang');
			trigger.targets.addArray(event.extar);
		}
		"step 2"
		var num1=trigger.targets.length;
		player.chooseTarget('你可令任意名目标弃置1张牌，以防止其成为你使用的'+get.translation(trigger.card)+'的目标',[1,num1],function(card,player,target){
			var trigger=_status.event.getTrigger();
			return target.countCards('he')&&trigger.targets.contains(target);
		}).ai=function(target){
			var trigger=_status.event.getTrigger();
			var eff=get.effect(target,trigger.card,player,player);
			return -eff;
		}
		"step 3"
		if(result.bool) {
			var tars=result.targets;
			event.tars=tars.sort(lib.sort.seat);
		}
		else event.finish();
		"step 4"
		if(event.tars.length){
			var target=event.tars.shift();
			event.current=target;
		}
		else event.finish();
		"step 5"
		if(event.current){
			event.current.chooseToDiscard(true,1,'he').set('ai',function(card){
				if(event.current.hasSkill('XS_yuanmou')&&event.current.storage.XS_yuanmou.length) {
					if(event.current.storage.XS_yuanmou.contains(card)) return 20;
				}
				return 20-get.value(card);
			});
			trigger.targets.remove(event.current);
		}
		event.goto(4);
	},
},
"XS_zhufo":{
	audio:"ext:血色衣冠:2",
	trigger:{
        player:"discardAfter",
    },
	filter:function(event,player){
		return event.cards.length>0;
	},
	frequent:true,
    content:function (){
		player.chooseUseTarget({name:"guohe",isCard:true},false);
    },
	ai:{
		effect:{
			target:function(card){
				if(card.name=='guohe') return 0.5;
			}
		},
	},
},
"XS_kexing":{
	audio:"ext:血色衣冠:2",
	unique:true,
	zhuSkill:true,
	trigger:{
		player:"discardBefore",
	},
	direct:true,
	filter:function(event,player){
		if(player.hasSkill('XS_kexing_temp')) return false;
		if(!player.hasZhuSkill('XS_kexing')) return false;
		if(event.cards.length!=1) return false;
		return game.hasPlayer(function(current){
			return current!=player&&current.group==player.group;
		});
	},
    content:function (){
		"step 0"
		player.chooseTarget(get.prompt('XS_kexing'),'你可选择1名其他与你同势力角色，其可代替你弃置1张牌',1,function(card,player,target){
			return target!=player&&target.group==player.group;
		}).ai=function(target){
			var att=get.attitude(_status.event.player,target);
			if(target.hasSkill('XS_yuanmou')) att*=3;
			return att;
		}
		"step 1"
		if(result.bool) {
			event.pla=player;
			event.tar=result.targets[0];
			event.tar.chooseCard('苛刑：是否代替'+get.translation(player)+'弃置1张牌？','he',false).ai=function(card){
				var att=get.attitude(event.tar,event.pla);
				if(att>0){
					return 5-get.value(card);
				}
				return -1;
			}
		}
		else event.finish();
        "step 2"
        if(result.bool){
			player.addTempSkill('XS_kexing_temp');
			player.logSkill('XS_kexing',event.tar);
			game.log(event.tar,'代替',player,'弃置了1张牌');
			trigger.player=event.tar;
			trigger.cards=result.cards;
        }
    },
	subSkill:{
		temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_polang":{
	group:["XS_polang_end"],
	subSkill:{
		end:{
			trigger:{
				player:"phaseAfter",
			},
			direct:true,
			filter:function (event,player){
				if(!player.storage.XS_polang||!player.storage.XS_polang.length) return false;
				return true;
			},
			content:function (){
				"step 0"
				event.num1=player.storage.XS_polang.length;
				switch(event.num1){
					case 4:
						event.str='令1名其他角色将手牌补充至上限并翻面';
					break;
					case 3:
						event.str='对1名其他角色造成1点伤害';
					break;
					case 2:
						event.str='横置1名其他角色';
					break;
					case 1:
						player.draw(2);
						player.logSkill('XS_polang');
						event.goto(3);
					break;
				}
				"step 1"
				player.chooseTarget(get.prompt('XS_polang'),event.str,function(card,player,target){
					return player!=target;
				}).set('ai',function(target){
					var att=get.attitude(player,target);
					if(event.num1==4) {
						var num=target.getHandcardLimit()-target.countCards('h');
						if(target.isTurnedOver()||num>3) return att;
						return -att;
					}
					else if(event.num1==3) {
						var eff=get.damageEffect(target,player,player);
						return eff;
					}
					else {
						if(target.isLinked()) return att;
						return -att;
					}
				});
				"step 2"
				if(result.bool){
					var target=result.targets[0];
					player.logSkill('XS_polang',target);
					player.line(target,'blue');
					if(event.num1==4) {
						var num=Math.max(0,target.getHandcardLimit()-target.countCards('h'));
						target.draw(num);
						target.turnOver();
					}
					else if(event.num1==3) {
						target.damage(player,1,'nocard');
					}
					else {
						target.link();
					}
				}
				"step 3"
				player.storage.XS_polang=[];
				player.unmarkSkill('XS_polang');
				
			},
			sub:true,
		},
	},
	init:function (player){
		player.storage.XS_polang=[];
	},
	trigger:{
		player:"useCardEnd",
	},
	direct:true,
	filter:function (event,player){
		if(_status.currentPhase!=player) return false;
		for(var i=0;i<event.cards.length;i++) {
			var suit=get.suit(event.cards[i]);
			if(suit&&!player.storage.XS_polang.contains(suit)) return true;
		}
		return false;
	},
	marktext:"浪",
	intro:{
		content:function (storage){
			if(!storage.length){
				return '未使用过有花色的牌';
			}
			else{
				var str='已使用过的花色有：'+get.translation(storage);
				return str;
			}
		},
	},
	content:function (){
		for(var i=0;i<trigger.cards.length;i++) {
			var suit=get.suit(trigger.cards[i]);
			if(suit) player.storage.XS_polang.add(suit)
		}
		player.markSkill('XS_polang');
		player.syncStorage('XS_polang');
	},
},
"XS_xuanwei":{
 	trigger:{
		source:"damageBegin",
	},
	filter:function (event,player){
		return event.player.isLinked()||event.player.isTurnedOver()||event.player.countCards('j');
	},
	check:function (event,player){
		return get.attitude(player,event.player)<=0;
	},
	logTarget:"player",
	content:function (){
		"step 0"
		if(trigger.player.isLinked()) {
			player.draw();
		}
		"step 1"
		if(trigger.player.isTurnedOver()) {
			trigger.num++;
		}
		"step 2"
		if(trigger.player.countCards('j')) {
			player.discardPlayerCard(trigger.player,'he',true);
		}
	},
	ai:{
		expose:0.3,
	},
},
"XS_zhuoyan":{
	enable:'phaseUse',
	usable:1,
	filterCard:function(card){
		return get.tag(card,'damage');
	},
	position:"h",
	viewAs:{name:'huogong',nature:'fire'},
	viewAsFilter:function(player){
		var hs=player.getCards('h');
		for(var i=0;i<hs.length;i++) {
			if(get.tag(hs[i],'damage')) return true;
		}
		return false;
	},
	prompt:'将一张带有伤害标签的牌当火攻使用，且无法被无懈可击响应',
	check:function(card){return true;},
	group:["XS_zhuoyan_huo","XS_zhuoyan_no"],
	ai:{
		order:function(){
			return get.order({name:'sha'})+0.05;
		},
	},
    subSkill:{
		huo:{
			trigger:{
				player:"discardBefore",
			},
			filter:function(event,player){
				return event.getParent(2).name=='huogong';
			},
			forced:true,
			content:function (){
				"step 0"
				player.showCards(trigger.cards);
				"step 1"
				trigger.cancel();
			},
			ai:{
			　　effect:{
		　　		player:function(card,player){
						if(card.name=='huogong') {
							return [1,1];
						}
					}
				}
			},
			sub:true,
		},
		no:{
			trigger:{player:'useCard'},
			direct:true,
			filter:function(event,player){
				if(event.card.name!='huogong') return false;
				return event.skill=='XS_zhuoyan';
			},
			content:function(){
				trigger.nowuxie=true;
			},
			sub:true,
		},
    },
},
"XS_fenzi":{
	trigger:{
		source:"damageAfter",
	},
	priority:2,
	filter:function (event,player){
		if(event.player==player) return false;
        return !event.player.hasSkill('XS_fenzi1')&&event.nature=='fire'&&event.player.isAlive();
	},
	check:function (event,player){
		return get.attitude(player,event.player)<0;
	},
	logTarget:'player',
	content:function (){
		trigger.player.addSkill('XS_fenzi1');
		trigger.player.storage.XS_fenzi1=player;
		trigger.player.markSkillCharacter('XS_fenzi1',player,'焚辎','每回合只能使用1张牌，结束阶段，你可交给'+get.translation(player)+'一张手牌移除此效果');
	},
	ai:{
		threaten:1.1,
	},
},
"XS_fenzi1":{
  	mod:{
		cardEnabled:function(card,player){
			var num1=player.getHistory('useCard').length;
			if(num1>0) return false;
		}		
	},
	trigger:{
		player:"phaseJieshuBegin",
	},
	filter:function (event,player){
        return player.storage.XS_fenzi1;
	},
	priority:9,
	forced:true,
	content:function (){
		"step 0"
		event.pla=player.storage.XS_fenzi1
        player.chooseCard('你可交给'+get.translation(event.pla)+'一张手牌以移除“焚辎”的效果').ai=function(card){
			return 5.5-get.value(card);
        }
		"step 1"
        if(result.bool){
			event.pla.gain(result.cards[0],player,'giveAuto');
			player.removeSkill('XS_fenzi1');
        }
	},
},
"XS_lunbing":{
    enable:"phaseUse",
    usable:1,
    filterTarget:function (card,player,target){
		if(target.isMaxHp(false)) return true;
		if(target.isMaxHandcard(false)&&target.isDamaged()) return true;
        return false;
    },
	filter:function(event,player){
		return game.hasPlayer(function(current){
			return current.isMaxHp(false)||(current.isMaxHandcard(false)&&current.isDamaged());
		});
	},
	selectTarget:1,
    content:function (){
		"step 0"
		var lt=[];
		if(target.isMaxHp(false)) {
			lt.push('摸2张牌');
		}
		if(target.isMaxHandcard(false)&&target.isDamaged()) {
			lt.push('回复1点体力');
			
		}
		if(lt.length==1) {
			event.mk=lt[0];
			event.goto(2);
		}
		else {
			player.chooseControl(lt,true).set('ai',function(event){
				if(lt.contains('摸2张牌')) return '摸2张牌';
				return '回复1点体力';
			}).set('prompt','令'+get.translation(target)+'获得1项效果');
		}
		"step 1"
		event.mk=result.control;
		"step 2"
		if(event.mk=='摸2张牌') {
			target.draw(2);
		}
		else {
			target.recover();
		}	
    },
    ai:{
        order:9,
		result:{
			target:function(player,target){
				var num=0;
				if(target.isMaxHp(false)) num+=2;
				if(target.isMaxHandcard(false)&&target.isDamaged()) num+=2;
				return num;
			}
        },
        expose:0.3,
    },
},
"XS_zhenggong":{
	intro:{
		content:function(storage){
			if(!storage.length) return '无角色成为过“争功”目标';
			else {
				return '已成为“争功”目标：'+get.translation(storage);
			}
		},
	},
	init:function (player){
		player.storage.XS_zhenggong=[];
	},
	trigger:{
		global:"roundStart",
	},
	direct:true,
	priority:7,
	filter:function(event,player){
		return game.hasPlayer(function(current){
			return current!=player&&current.countCards('h');
		});
	},
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt('XS_zhenggong'),'你可获得任意名其他角色各1张手牌，如此，这些角色回合结束时，你需交给其1张牌。',[1,Infinity],false,function(card,player,target){
			return target!=player&&target.countCards('h');
		}).set('ai',function(target){
			return true;
		});
		"step 1"
		if(result.bool) {
			player.logSkill('XS_zhenggong',result.targets);
			var tars=result.targets.slice(0);
			event.tars=tars.sort(lib.sort.seat);
		}	
		else event.finish();
		"step 2"
		if(event.tars.length){
			var target=event.tars.shift();
			event.current=target;
		}
		else event.goto(4);
		"step 3"
		if(event.current){
			player.gainPlayerCard(event.current,'h',1,true);
			player.storage.XS_zhenggong.push(event.current);
		}
		event.goto(2);
		"step 4"
		player.markSkill('XS_zhenggong');
	},
	group:["XS_zhenggong_give"],
    subSkill:{
		give:{
			trigger:{
				global:"phaseAfter",
			},
			priority:11,
			forced:true,
			filter:function (event,player){
				if(!player.countCards('he')) return false;
				return player.storage.XS_zhenggong.contains(event.player);
			},
			content:function (){
				"step 0"
				player.chooseCard('he',1,'交给'+get.translation(trigger.player)+'1张牌',true).set('ai',function(card){
					var tar=_status.event.getTrigger().player;
					var att=get.attitude(player,tar);
					var val=get.value(card);
					if(att>0) return val-4;
					return 4-val;
				});
				"step 1"
				if(result.bool){
					trigger.player.gain(result.cards[0],player,'giveAuto');
					player.storage.XS_zhenggong.remove(trigger.player);
					player.syncStorage('XS_zhenggong');
					if(!player.storage.XS_zhenggong.length) {
						player.unmarkSkill('XS_zhenggong');
					}
				}
			},
			ai:{
				expose:0.1,
			},
			sub:true,
		},
    },
},
"XS_qiangbing":{
 	trigger:{
		player:"phaseDrawBefore",
	},
	init:function (player){
        player.storage.XS_qiangbing=[];
    },
	intro:{
		content:function (storage){
            if(storage){
                return '获得了：'+get.translation(storage)+'的效果';
            }
        },
	},
	direct:true,
	content:function (){
        'step 0'
		player.chooseControl('摸牌','弃牌').set('ai',function(event,player){
			if(!player.getEquip(1)&&!player.countCards('h',{subtype:'equip1'})&&player.countCards('h')>4) return '弃牌';
			return '摸牌';
		}).set('prompt',get.skillInfoTranslation('XS_qiangbing'));
		'step 1'
		if(result.control=='摸牌'){
			player.draw();
		}
		else if(result.control=='弃牌') {
			player.chooseToDiscard('he',1,true);
			player.addTempSkill('XS_qiangbing_dis');
		}
		else event.finish();
		'step 2'
        var list1=[];
        var list=get.inpile('equip');
        for(var i=0;i<list.length;i++){
            var card={name:list[i]};
            var info=get.info(card);
            if(info.subtype=='equip1'&&info.skills){
				list1.push(list[i]);
            }      
        }
        for(var i=0;i<list1.length;i++){
            list1[i]=['武器','',list1[i]];
        }
        if(list1.length>0){
            var dialog=ui.create.dialog('选择一张武器牌其武器技能直到下回合开始',[list1,'vcard'],'hidden');
            player.chooseButton(dialog,true).set('ai',function(button){
				var name=button.link[2];
				if(name=='fangtian') return 20;
				if(name=='XS_xuanyuanjian') return 18;
                return get.equipValue(card);
            });
        }
        else{
            event.finish();
        }
        'step 3'
        if(result.bool){
            var card={name:result.buttons[0].link[2]};
            var name=result.buttons[0].link[2];
			player.storage.XS_qiangbing.push(name); 
            var info=get.info(card);
			if(info.skills){
				game.log(player,'获得了',get.translation(name),'的技能');
				player.addAdditionalSkill('XS_qiangbing',info.skills);
				player.markSkill('XS_qiangbing');
			}
        }
    },
	group:["XS_qiangbing_clear"],
	subSkill:{
		clear:{
			trigger:{
				player:"phaseBefore",
			},
			priority:998,
			direct:true,
			content:function (){    
				player.removeAdditionalSkill('XS_qiangbing');
				player.unmarkSkill('XS_qiangbing');
				player.storage.XS_qiangbing=[];
			},
			sub:true,
		},
		dis:{
			charlotte:true,
			mod:{
				targetInRange:function (card){
					if(card.name=='sha') return true;
				},
			},
			sub:true,
        },
	},
},
"XS_qigong":{
 	group:["XS_qigong1","XS_qigong2","XS_qigong_add"],
	subSkill:{
		add:{
			trigger:{global:'dying'},
			priority:997,
			direct:true,
			filter:function(event,player){
				return event.getParent(2).skill=='XS_qigong1'||event.getParent(3).skill=='XS_qigong2_sha';
			},
			content:function(){
				player.draw();
				trigger.player.addTempSkill('XS_qigong_dis',{player:'recoverAfter'});
			},
			sub:true,
        },
		dis:{
			charlotte:true,
            mod:{
                cardEnabled:function (card,player,now){
                    if(get.position(card)=='h') return false;
                },
            },
			sub:true,
        },
	},
},
"XS_qigong1":{
 	enable:['chooseToUse'],
	filterCard:true,
	selectCard:-1,
	position:'h',
	viewAs:{name:'sha'},
	filter:function(event,player){
		return player.countCards('h')>0;
	},
	prompt:'将全部手牌当作杀使用。',
	check:function(card){
		if(card.name=='sha') return 0;
		return 5-get.useful(card);
	},
	ai:{
		respondSha:true,
		skillTagFilter:function(player){
			return player.countCards('h')>0;
		},
	},
},
"XS_qigong2":{
 	trigger:{
		global:"gainAfter",
	},
	filter:function (event,player){
		var evt=event;
		if(!event.source||event.source.isDead()||event.source!=player) return false;
		if(event.player==player) return false;
		if(player.countCards('h')>0) {
			return event.relatedLose&&event.relatedLose.hs&&event.relatedLose.hs.length>0;
		}
		return false;
	},
	"prompt2":function (event,player){
		return '将全部手牌当作杀使用？';
	},
	check:function(card){
		var player=_status.event.player;
		return player.countCards('h')==1;
	},
	content:function (){
		"step 0"
		var next=player.chooseToUse();
		next.set('openskilldialog','奇攻：将所有手牌当杀使用');
		next.set('norestore',true);
		next.set('_backupevent','XS_qigong2_sha');
		next.backup('XS_qigong2_sha');
	},
	subSkill:{
		sha:{
			filterCard:true,
			selectCard:-1,
			popname:true,
			viewAs:{
				name:'sha',
			},
			trigger:{
				player:"phaseBefore",
			},
			sub:true,
		},
	},
},
"XS_zuozhan":{
	init:function(player,skill){
		player.storage.XS_zuozhan=[];
	},
    trigger:{
        player:"useCardBefore",
    },
    filter:function (event,player){
        if(event.card.name!='sha') return false;
        return true;
    },
	direct:true,
    content:function (){
		"step 0"
		player.chooseTarget(get.prompt('XS_zuozhan'),'你可令1名其他角色成为你的'+get.translation(trigger.card)+'的使用者，且此牌造成的伤害来源为你。',1,function(card,player,target){
			var tri=_status.event.getTrigger();
			return target!=player&&!tri.targets.contains(target);
		}).ai=function(target){
			if(target.hasSkillTag('damageBonus')) 20;
			var att=get.attitude(player,target);
			return -att;
		}
		"step 1"
		if(result.bool) {
			player.storage.XS_zuozhan.push(trigger.card);
			player.lose(trigger.cards,ui.special);
			trigger.player=result.targets[0];
		}
    },
	ai:{
		expose:0.3,
	},
	group:["XS_zuozhan_fm","XS_zuozhan_clear"],
	subSkill:{
		fm:{
			trigger:{
				global:"damageBegin4",
			},
			priority:-1999,
			filter:function (event,player){
				if(!event.card||event.card.name!='sha'||!event.notLink()) return false;
				return player.storage.XS_zuozhan.indexOf(event.card)>=0;
			},
			direct:true,
			content:function (){
				trigger.source=player;
			},
			sub:true,
        },
		clear:{
			trigger:{
				player:["useCardAfter","useCardCancelled"],
			},
			priority:13,
			direct:true,
			filter:function(event,player){ 
				return player.storage.XS_zuozhan.indexOf(event.card)>=0;
			},
			content:function(){
				var n=player.storage.XS_zuozhan.indexOf(trigger.card);
    			player.storage.XS_zuozhan.splice(n,1);
			},
			sub:true,
		},
    },
},
"XS_gongfa":{
	zhuanhuanji:true,
	marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"40px")+" src="+lib.assetURL+"extension/血色衣冠/icon/gongfa.png>":"攻",
	init:function (player){
        player.storage.XS_gongfa=true;
        player.markSkill("XS_gongfa");
    },
	intro:{
		content:function(storage,player,skill){
			if(player.storage.XS_gongfa) return '攻：你的回合内和回合外各限1次，1名角色回合开始时，你可令该角色本回合全部锦囊牌视为杀。';
			return '伐：你的回合内和回合外各限1次，1名角色回合开始时，你可令该角色本回合全部杀视为决斗。';
		},
	},
	"prompt2":function (event,player){
		if(event.player==player) {
			if(player.storage.XS_gongfa==true){
				return '是否令你本回合可将锦囊牌视为杀？';
			}
			else if(player.storage.XS_gongfa==false){
				return '是否令你本回合可将杀视为决斗？';
			}
		}
		else {
			if(player.storage.XS_gongfa==true){
				return '是否令'+get.translation(event.player)+'本回合全部锦囊牌视为杀？';
			}
			else if(player.storage.XS_gongfa==false){
				return '是否令'+get.translation(event.player)+'本回合全部杀视为决斗？';
			}
		}
    },
	trigger:{
		global:"phaseBefore",
	},
	priority:-1,
	filter:function (event,player){
		if(player.hasSkill('XS_gongfa_temp')) return false;
		return true;
	},
	check:function (event,player){
		var att=get.attitude(player,event.player);
		if(player.storage.XS_gongfa==false) {
			if(event.player.hasSkill('XS_bawang')) att*=4;
			return att>0;
		}
		else if(player.storage.XS_gongfa==true) {
			if(event.player==player) return true;
			return false;
		}
	},
	content:function(){
		"step 0"
		if(player.storage.XS_gongfa==true) {
			player.storage.XS_gongfa=false;
			if(trigger.player==player) {
				player.addTempSkill('XS_gongfa_gmark1');
				player.markSkill('XS_gongfa_gmark1');
			}
			else {
				trigger.player.addTempSkill('XS_gongfa_gmark');
				trigger.player.markSkill('XS_gongfa_gmark');
			}
		}
		else if(player.storage.XS_gongfa==false) {
			player.storage.XS_gongfa=true;
			if(trigger.player==player) {
				player.addTempSkill('XS_gongfa_fmark1');
				player.markSkill('XS_gongfa_fmark1');
			}
			else {
				trigger.player.addTempSkill('XS_gongfa_fmark');
				trigger.player.markSkill('XS_gongfa_fmark');
			}
		}
		"step 1"
		player.markSkill("XS_gongfa");
		player.addSkill('XS_gongfa_temp');
	},
	ai:{
		expose:0.1,
    },
	group:['XS_gongfa_clear'],
	subSkill:{
		gmark:{
			intro:{
				content:function(storage,player,skill){
					return '本回合全部锦囊牌视为杀';
				},
			},
			marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"38px")+" src="+lib.assetURL+"extension/血色衣冠/icon/gong1.png>":"攻",
			mod:{
				cardname:function (card,player,name){
					if(get.type2(card.name)=="trick"){
						return 'sha';
					}
				},
				cardnature:function (card,player,name){
					if(get.type2(card.name)=="trick"){
						return null;
					}
                },
			},
			sub:true,
		},
		fmark:{
			marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"38px")+" src="+lib.assetURL+"extension/血色衣冠/icon/fa1.png>":"伐",
			intro:{
				content:function(storage,player,skill){
					return '本回合全部杀视为决斗';
				},
			},
			mod:{
				cardname:function (card,player,name){
					if(card.name=="sha"){
						return 'juedou';
					}
				},
				cardnature:function (card,player,name){
					if(card.name=="sha"){
						return null;
					}
                },
			},
			sub:true,
		},
		gmark1:{
			marktext:'攻',
			intro:{
				content:function(storage,player,skill){
					return '本回合可将锦囊牌当作杀使用或打出';
				},
			},
			marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"38px")+" src="+lib.assetURL+"extension/血色衣冠/icon/gong1.png>":"攻",
			filterCard:function(card,player){
				return get.type2(card)=='trick';
			},
			enable:['chooseToRespond','chooseToUse'],
			position:'h',
			viewAs:{name:'sha'},
			viewAsFilter:function(player){
				if(!player.countCards('h',{type:'trick'})) return false;
			},
			prompt:'将一张锦囊牌当杀使用或打出',
			check:function(card){return 4-get.value(card)},
			ai:{
				skillTagFilter:function(player){
					if(!player.countCards('h',{type:'trick'})) return false;
				},
				respondSha:true,
			},
			sub:true,
		},
		fmark1:{
			marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"38px")+" src="+lib.assetURL+"extension/血色衣冠/icon/fa1.png>":"伐",
			intro:{
				content:function(storage,player,skill){
					return '本回合可将杀当作杀决斗使用';
				},
			},
			filterCard:function(card,player){
				return card.name=='sha';
			},
			enable:['chooseToUse'],
			position:'h',
			viewAs:{name:'juedou'},
			viewAsFilter:function(player){
				if(!player.countCards('h','sha')) return false;
			},
			prompt:'将一张杀当作决斗使用',
			check:function(card){return 4-get.value(card)},
			ai:{
				skillTagFilter:function(player){
					if(!player.countCards('h','sha')) return false;
				},
			},
			sub:true,
		},
		temp:{
			charlotte:true,
			sub:true,
		},
		clear:{
			trigger:{
				player:["phaseBefore","phaseJieshuBegin"],
			},
			priority:999,
			direct:true,
			content:function (){
				player.removeSkill('XS_gongfa_temp');
			},
			sub:true,
		},
	},
},
"XS_yushe":{
	intro:{
		content:function (content,player){
			if(player.storage.XS_yushe>0) var str='+'+player.storage.XS_yushe;
			else var str=player.storage.XS_yushe;
			return '你的手牌上限'+str+'，直到你下回合开始';
		},
	},
	mod:{
        maxHandcard:function (player,num){
			if(player.storage.XS_yushe) {
				var num1=player.storage.XS_yushe;
				return num+num1;
			}
        },
    },
	init:function (player){
		player.storage.XS_yushe=0;
		player.storage.XS_yushe_sk=0;
	},
	enable:"phaseUse",
	usable:2,
	content:function (){
		"step 0"
		var list=['摸2张牌并令手牌上限-1','弃置1张牌并令手牌上限+2'];
		if(player.storage.XS_yushe_sk==1) {
			list=['摸2张牌并令手牌上限-1'];
		}
		if(player.storage.XS_yushe_sk==2) {
			list=['弃置1张牌并令手牌上限+2'];
		}
		player.chooseControl(list,true).set('ai',function(event){
			if(game.countPlayer()>=6&&list.contains('弃置1张牌并令手牌上限+2')) return '弃置1张牌并令手牌上限+2';
			return '摸2张牌并令手牌上限-1';
		}).set('prompt','御射：选择1种效果发动');
		"step 1"
		player.markSkill('XS_yushe');
		if(result.control=='摸2张牌并令手牌上限-1') {
			player.draw(2);
			player.storage.XS_yushe--;
			player.storage.XS_yushe_sk=1;
		}
		else if(result.control=='弃置1张牌并令手牌上限+2') {
			player.chooseToDiscard('he',1,true);
			player.storage.XS_yushe+=2;
			player.storage.XS_yushe_sk=2;
		}
	},
	ai:{
		order:9,
		result:{
			player:1,
		},
	},
	group:["XS_yushe_clear"],
    subSkill:{
		clear:{
			trigger:{
				player:"phaseBefore",
			},
			direct:true,
			priority:999,
			content:function (){
				player.storage.XS_yushe=0;
				player.storage.XS_yushe_sk=0;
				player.unmarkSkill('XS_yushe');
			},
			sub:true,
		},
    },
},
"XS_zhiyi":{
	trigger:{
		global:"phaseBefore",
	},
	check:function (event,player){
		var tp=player.countCards('h')+1;
		return tp<player.getHandcardLimit();
	},
	filter:function (event,player){
		return event.player!=player;
	},
	priority:14,
	content:function (){
		"step 0"
		player.draw();
		"step 1"
		var tp=player.countCards('h');
		if(tp>=player.getHandcardLimit()) {
			player.loseHp();
		}	
	},
},
"XS_yujin":{
	filterTarget:function (card,player,target){
        return target!=player;
    },
	filterCard:function (card){
        return true;
    },
	check:function (card){        
        return 6-get.value(card);
    },
	position:'h',
	discard:false,
	prepare:"give2",
    enable:"phaseUse",
    usable:1,
	selectTarget:1,
    content:function (){
		target.gain(cards,player);  	
		player.addTempSkill('XS_yujin_max',{player:'phaseAfter'});
    },
    ai:{
        order:1,
		result:{
            target:function (player,target){
				if(player.countCards('h','du')) return -1;
				return 1;
            },
        },
        expose:0.3,
    },
    subSkill:{
		max:{
			mod:{
				maxHandcard:function (player,num){
					return num+2;
				},
			},
            sub:true,
        },
    },
},
"XS_muyi":{
	trigger:{
		player:"phaseJieshuBegin",
	},
	filter:function(event,player){
		return player.countCards('h')<player.getHandcardLimit();
	},
	frequent:true,
	priority:15,
	content:function (){
		"step 0"
		var num=player.getHandcardLimit()-player.countCards('h');
		player.draw(num);
		"step 1"
		if(player.isMaxHandcard(false)) {
			var nh=0,pn=0;
			for(var i=0;i<game.players.length;i++){
				if(game.players[i].isOut()||game.players[i]==player) continue;
				pn++;
				if(game.players[i].countCards('h')>nh) {
					nh=game.players[i].countCards('h');
				}
			}
			var num1=Math.max(1,player.countCards('h')-nh+1);
			var tp=Math.min(pn,num1);
			player.chooseTarget('选择至少'+tp+'名其他角色，各交给其一张手牌。',[tp,player.countCards('h')],true,function(card,player,target){
				return player!=target;
			}).ai=function(target){
				var ndu=player.countCards('h','du');
				var att=get.attitude(player,target);
				if(ui.selected.targets.length<ndu) {
					return -att+1;
				}
				else return att;
			}
		}
		else event.finish();
		"step 2"
		if(result.bool) {
			var tars=result.targets;
			event.tars=tars.sort(lib.sort.seat);
		}		
		"step 3"
		if(event.tars.length){
			var target=event.tars.shift();
			event.current=target;
		}
		else event.finish();
		"step 4"
		if(player.countCards('h')) {
			player.chooseCard('交给'+get.translation(event.current)+'一张手牌。',1,'h',true).ai=function(card){
				if(get.attitude(event.current,player)>0){
					return 7-get.value(card);
				}
				else{
					return 4-get.value(card);
				}
			}
		}
		else event.finish();
        "step 5"
        if(result.bool){
			event.current.gain(result.cards[0],player,'giveAuto');
        }
		event.goto(3);	
	},	
},
"XS_tonggu":{
	intro:{
		content:function (storage){
			if(!storage.length) return '本轮未因“律疏”使用过基本牌';
			else {
				var str='本轮因“律疏”使用过的基本牌：'+get.translation(storage);
				return str;
			}
		},
	},
	init:function (player){
		player.storage.XS_tonggu=[];
	},
	usable:1,
	enable:"chooseToUse",
	filter:function (event,player){
		if(!player.countCards('h')) return false;
		if(player.storage.XS_tonggu.length>=4) return false;
		if(event.filterCard({name:'sha'},player,event)&&!player.storage.XS_tonggu.contains('sha')) return true;
		if(event.filterCard({name:'jiu'},player,event)&&!player.storage.XS_tonggu.contains('jiu')) return true;
		if(event.filterCard({name:'tao'},player,event)&&!player.storage.XS_tonggu.contains('tao')) return true;
		if(event.filterCard({name:'shan'},player,event)&&!player.storage.XS_tonggu.contains('shan')) return true;
		return false;
	},
	chooseButton:{
		dialog:function (event,player){
			var list=[];
			if(event.filterCard({name:'sha'},player,event)&&!player.storage.XS_tonggu.contains('sha')){list.push(['基本','','sha']);}
			if(event.filterCard({name:'tao'},player,event)&&!player.storage.XS_tonggu.contains('tao')) {list.push(['基本','','tao']);}
			if(event.filterCard({name:'jiu'},player,event)&&!player.storage.XS_tonggu.contains('jiu')) {list.push(['基本','','jiu']);}
			if(event.filterCard({name:'shan'},player,event)&&!player.storage.XS_tonggu.contains('shan')) {list.push(['基本','','shan']);}
			return ui.create.dialog("将一种颜色的全部手牌交给1名其他角色，视为使用一张基本牌",[list,"vcard"],"hidden");
		},
		check:function (button){
			var player=get.player();
			var card={name:button.link[2]};
			if(card.name=='shan') return 3;
			if(game.hasPlayer(function(current){
				return player.canUse({name:'sha'},current)&&get.effect(current,{name:'sha'},player,player)>0;
			})){
				if(card.name=='sha'){
					return 2.9;
				}
				else if(card.name=='jiu'){
					if(!player.storage.XS_tonggu.contains('sha')||player.hasUsableCard('sha')) return 4;
					if(player.hp<=0) return 3.5;
					else return 0;
				}
			}
			if(game.hasPlayer(function(current){
				return player.canUse({name:'tao'},current)&&get.effect(current,{name:'tao'},player,player)>0;
			})&&card.name=='tao'){
				return 4;
			}
			return 0;
		},
		backup:function (links,player){
			return {
				filterCard:function (card){
					if(!ui.selected.cards.length) return true;
					else {
						var col=get.color(ui.selected.cards[0]);
						return get.color(card)==col;
					}
				},
				complexCard:true,
				popname:true,
				selectCard:function (){
					if(!ui.selected.cards.length) return Infinity;
					else {
						var col=get.color(ui.selected.cards[0]);
						return player.countCards('h',{color:col});
					}
				},
				check:function(card,player,target){
					if(game.hasPlayer(function(current){
						return player!=current&&get.attitude(player,current)>0;
					})) {
						return 6-get.value(card);
					}
					return 2.5-get.value(card);
				},
				viewAs:{
					name:links[0][2],
				}, 
				precontent:function(){
					'step 0'
					player.chooseTarget('将'+get.translation(event.result.cards)+'交给1名其他角色，视为使用'+get.translation(event.result.card),1,true,function(card,player,target){
						return target!=player;
					}).set('ai',function(target){
						var att=get.attitude(player,target),hs=target.countCards('h')+1;
						var tp=att/hs;
						if(target.hasSkill('XS_xuhuai')) tp*=10;
						return tp;
					});
					'step 1'
					if(result.bool){
						player.logSkill('XS_tonggu',result.targets[0]);
						player.storage.XS_tonggu.push(event.result.card.name);
						player.markSkill('XS_tonggu');
						result.targets[0].gain(event.result.cards,player,'giveAuto');
						event.result.cards=[];
					}
					else event.finish();
				},
			}
		},
		prompt:function (links,player){
			return '视为使用1张'+get.translation(links[0][2]);
		},
	},
	ai:{
		order:function (){
			var player=get.player();
			var event=_status.event;
			if(event.type=='dying'){
				if(event.filterCard({name:'tao'},player,event))return 0.5;
			}
			else{
				if(event.filterCard({name:'tao'},player,event)||event.filterCard({name:'shan'},player,event))return 4;
				if(event.filterCard({name:'sha'},player,event))return 2.9;
			}
			return 0;
		},
		save:true,
		skillTagFilter:function (player,tag,arg){
			if((tag=='save'&&player.storage.XS_tonggu.contains('tao')&&player.storage.XS_tonggu.contains('jiu'))||!player.countCards('h')){
				return false;
			}
		},
		result:{
			player:function (player){
				if(_status.event.type=='dying')return get.attitude(player,_status.event.dying);
				else return 1;
			},
		},
	},
	group:["XS_tonggu_clear"],
    subSkill:{
		clear:{
			trigger:{
				global:"roundStart",
			},
			priority:17,
			direct:true,
			content:function (){
				player.storage.XS_tonggu=[];
				player.unmarkSkill('XS_tonggu');
			},
			sub:true,
        },
    },
},
"XS_jianfa":{
   trigger:{
        global:"shaBegin",
    },
    filter:function (event,player){
		if(player.hasSkill('XS_jianfa_temp')) return false;
		if(event.targets.length!=1) return false;
        return get.color(event.card);
    },
	direct:true,
    content:function (){
		"step 0"
		player.chooseTarget(get.prompt('XS_jianfa',trigger.player),'你可令任意名角色选择弃置1张与'+get.translation(trigger.player)+'对'+get.translation(trigger.target)+'使用的'+get.translation(trigger.card)+'颜色不同/相同的牌，令此杀伤害基数+1/-1。',[1,Infinity],false,function(card,player,target){
			return target.countCards('h');
		}).set('ai',function(target){
			var tri=_status.event.getTrigger();
			var att=get.attitude(player,tri.target);
			var att1=get.attitude(player,target);
			if(att>0) return -1;
			else return -att1;
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_jianfa',trigger.player);
			if(!player.hasSkill('XS_jianfa_temp')){
				player.addTempSkill('XS_jianfa_temp','roundStart');
			}
			var tars=result.targets;
			event.nm=0;
			event.tars=tars.sort(lib.sort.seat);
			event.col=get.color(trigger.card);
		}
		else event.finish();
		"step 2"
		if(event.tars.length){
			var target=event.tars.shift();
			event.current=target;
		}
		else event.goto(5);
		"step 3"
		if(event.current){
			var str1=(event.col=='red'?'黑色':'红色');
			var str2=(event.col=='red'?'红色':'黑色');
			event.current.chooseToDiscard('弃置1张'+str1+'的手牌，令'+get.translation(trigger.player)+'对'+get.translation(trigger.target)+'使用的'+get.translation(trigger.card)+'的伤害基数+1；或弃置1张'+str2+'的手牌，令此杀伤害基数-1。',true).set('ai',function(card){
				var trigger=_status.event.getTrigger();
				var att=get.attitude(event.current,trigger.target);
				if(att>0) {
					if(get.color(card)==event.col) return 8-get.value(card);
				}
				else {
					if(get.color(card)!=event.col) return 7-get.value(card);
				}
				return 4-get.value(card);
			});
		}
		else event.goto(2);	
		"step 4"
		if(result.bool){
			if(get.color(result.cards[0])==event.col) {
				event.nm--;
			}
			else if(get.color(result.cards[0])!=event.col) {
				event.nm++;
			}
			game.delay(0.4);
		}
		event.goto(2);	
		"step 5"
		var tp=trigger.baseDamage+event.nm;
		trigger.baseDamage=Math.max(0,tp);	
    },
	ai:{
		expose:0.3,
	},
	subSkill:{
		temp:{
			charlotte:true,
            sub:true,
        },
	},
},
"XS_zhiyu":{
	trigger:{
		global:"roundStart",
	},
	priority:-99,
	filter:function (event,player){
		return game.hasPlayer(function(current){
			return current!=player&&!current.hasSkill('XS_zhiyu_mark');
		});
	},
	audio:"ext:血色衣冠:2",
	direct:true,
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt('XS_zhiyu'),'你可指定1名其他角色，本轮你受到与其等量的伤害效果，其受到与你等量的体力回复效果。',1,false,function(card,player,target){
			return target!=player;
		}).set('ai',function(target){
			var att=get.attitude(player,target);
			return att;
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_zhiyu',result.targets[0]);
			if(!player.storage.XS_zhiyu1) player.storage.XS_zhiyu1=[];
			player.storage.XS_zhiyu1.push(result.targets[0]);
			player.addTempSkill('XS_zhiyu1','roundStart');
			result.targets[0].addTempSkill('XS_zhiyu_mark','roundStart');
			result.targets[0].markSkillCharacter('XS_zhiyu_mark',player,'知遇',get.translation(player)+'受到与你等量的伤害效果；你受到于其等量的回复效果');
		}
	},
	subSkill:{
        mark:{
			onremove:function(player){
				player.unmarkSkill('XS_zhiyu_mark');
			},
			charlotte:true,
            sub:true,
        },
    },
},
"XS_zhiyu1":{
	onremove:function(player){
		delete player.storage.XS_zhiyu1;
	},
	charlotte:true,
	priority:3,
	trigger:{global:['damageEnd','recoverEnd']},
	forced:true,
	filter:function(event,player){
		if(event.player.isDead()||!player.storage.XS_zhiyu1||event.num<=0) return false;
		if(event.name=='damage') {
			return player.storage.XS_zhiyu1.contains(event.player);
		}
		else {
			if(event.player!=player) return false;
			for(var i=0;i<player.storage.XS_zhiyu1.length;i++) {
				if(player.storage.XS_zhiyu1[i].isDamaged()) return true;
			}
		}
	},
	logTarget:'player',
	content:function(){
		if(trigger.name=='damage') {
			player.damage(trigger.num,'nosource');
		}
		else {
			for(var i=0;i<player.storage.XS_zhiyu1.length;i++) {
				if(player.storage.XS_zhiyu1[i].isDamaged()) player.storage.XS_zhiyu1[i].recover(trigger.num,'nosource');
			}
		}
	},
	group:["XS_zhiyu1_clear"],
	subSkill:{
        clear:{
			trigger:{global:'dieBegin'},
			silent:true,
			filter:function(event,player){
				return event.player==player||(player.storage.XS_zhiyu1&&player.storage.XS_zhiyu1.contains(event.player));
			},
			content:function(){
				if(player==event.player) lib.skill.XS_zhiyu1.onremove(player);
				else {
					player.storage.XS_zhiyu1.remove(event.player);
					if(event.player.hasSkill('XS_zhiyu_mark')) {
						event.player.removeSkill('XS_zhiyu_mark');
					}	
				}
			},
            sub:true,
        },
    },
},
"XS_duanxing":{
	trigger:{
		player:["damageAfter"],
	},
	audio:"ext:血色衣冠:2",
	direct:true,
	filter:function(event,player){
		if(event.num<=0) return false;	
		return game.hasPlayer(function(current){
			return current!=player&&current.countCards('h');
		});
	},
	content:function(){
		"step 0"
		var num1=player.getDamagedHp();
		player.chooseTarget(get.prompt2('XS_duanxing'),[1,num1],function(card,player,target){
			return target!=player&&target.countCards('h');
		}).set('ai',function(target){
			var att=get.attitude(player,target);
			return -att;
		});
		"step 1"
		if(result.bool) {
			player.logSkill('XS_duanxing',result.targets);
			event.tars=result.targets;
		}
		else event.finish();
		"step 2"
		if(event.tars.length){
			var target=event.tars.shift();
			player.gainPlayerCard(target,'h',true);
			game.delayx();
		}
		else event.finish();
		"step 3"
		event.goto(2);	
	},
	ai:{
		maixie:true,
		"maixie_hp":true,
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')) {
					if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
					if(!target.hasFriend()) return;
					var num1=target.getDamagedHp()+1;
					if(target.hp>1) return [1,num1*2];
					return [1,num1];
				}
			},
		},
	},
},
"XS_mouji":{
	audio:"ext:血色衣冠:2",
    trigger:{
        player:"phaseDiscardAfter",
    },
    filter:function (event,player){
		if(player.hasSkill('XS_mouji_temp')) return false;
        var num1=player.getHistory('useCard').length;
        //return event.num<1&&num1<2&&event.getParent().skill!='XS_mouji';
		return event.num<1&&num1<2;
    },
	priority:-50,
    frequent:true,
    content:function (){
		player.addTempSkill('XS_mouji_temp','roundStart');
        player.insertPhase();
    },
	ai:{
	　　effect:{
　　		player:function(card,player){
				var num1=player.getHistory('useCard').length;
				if(num1==1&&!player.needsToDiscard()) return [0,-9];
			}
		}
	},
	subSkill:{
		temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_feili":{
	audio:"ext:血色衣冠:2",
    trigger:{
        global:"shaBefore",
    },
    filter:function (event,player){
		if(player.hasSkill('XS_feili_temp')) return false;
		if(!player.countCards('h')) return false;
		if(_status.currentPhase!=event.player) return false;
        return event.targets.length==1;
    },
	direct:true,
    content:function (){
		'step 0'
		player.chooseCardTarget({
			filterCard:function(card){
				return true;
			},
			position:'h',
			selectCard:1,
			selectTarget:1,
			filterTarget:function(card,player,target){
				var trigger=_status.event.getTrigger();
				return (target==trigger.target.previous||target==trigger.target.next);
			},
			ai1:function(card){
				var trigger=_status.event.getTrigger();
				var eff=get.effect(trigger.target,trigger.card,trigger.player,player);
				var eff1=0,eff2=0;
				if(trigger.target.previous) {
					eff1=get.effect(trigger.target.previous,trigger.card,trigger.player,player);
				}
				if(trigger.target.next) {
					eff1=get.effect(trigger.target.next,trigger.card,trigger.player,player);
				}
				if(eff<0) {
					if(eff1>0||eff2>0) return 5.5-get.value(card);
				}
				else {
					if(eff1>eff||eff2>eff) return 3.5-get.value(card);
				}
			},
			ai2:function(target){
				var eff=get.effect(target,trigger.card,trigger.player,player);
				return eff;
			},
			prompt:'弃置1张手牌令此杀目标成为原目标的上家或下家，且此杀无法被响应'
		});
		"step 1"
		if(result.bool){
			player.addTempSkill('XS_feili_temp');
			player.logSkill('XS_feili',result.targets[0]);
			player.line(result.targets[0]);
			player.discard(result.cards[0]);
			trigger.targets.remove(trigger.target);
			trigger.targets.push(result.targets[0]);
			trigger.target=result.targets[0];
			trigger.directHit=true;
		}
    },
	ai:{
		expose:0.3,
		effect:{
			target:function (card,player,target){
				if(card.name=='sha') {
					if(!target.countCards('h')) return;
					return 0.5;
				}
			},
		},
	},
	subSkill:{
		temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_jice":{
	audio:2,
	enable:'phaseUse',
	usable:1,
	content:function(){
		"step 0"		
		player.draw(player.hp);
		"step 1"
		var num1=player.hp;
		player.chooseCard('h',num1,'将'+num1+'张手牌按顺序置于牌堆顶（先选择的在上）。',true).set('ai',function(card){
			var val=get.value(card);
			return 6-val;
		});
		"step 2"
		if(result.bool){
			event.cardss=result.cards.slice(0);
			player.lose(event.cardss,ui.special);
			player.$throw(event.cardss,1000,'nobroadcast');
        }
		else event.finish();
		"step 3"
		for(var i=event.cardss.length-1;i>=0;i--){
			event.cardss[i].fix();
			ui.cardPile.insertBefore(event.cardss[i],ui.cardPile.firstChild);
		}
		game.log(player,'将',event.cardss.length,'张牌置于牌堆顶');
	},
	ai:{
		order:1,
		result:{
            player:function (player){
                return 1;
            },
		},
	},
},
"XS_chousha":{
	audio:2,
    trigger:{
        global:"useCardToBefore",
    },
	usable:1,
    priority:12,
    check:function (event,player){
		var eff=get.effect(event.target,event.card,event.player,player);
		return eff<0;
    },
    filter:function (event,player){
		if(event.player==player) return false;
        if(!get.tag(event.card,'damage')) return false;
		if(!event.target) return false;
        if(event.targets.length!=1) return false;
        return true;
    },
    logTarget:'player',
    content:function (){
        trigger.setContent(function(){
			var evt=_status.event;
			var cd=get.cards()[0];
			var info=get.info(cd);
			evt.player.showCards(cd);
			if(evt.player.canUse(cd,evt.target)&&info.selectTarget!=2) {
				evt.player.useCard(cd,evt.target,true);
			}
			else {
				game.cardsDiscard(cd);
			}
        });
    },
	ai:{
		threaten:1.1,
		expose:0.3,
	},
},
"XS_queyue":{
	audio:"ext:血色衣冠:2",
	priority:9,
    trigger:{
        player:["shaAfter"],
    },
	filter:function (event,player){
		if(player.hasSkill('XS_queyue_temp')) return false;
        return true;
    },
	direct:true,
    content:function (){
        "step 0"
		player.chooseTarget(get.prompt2('XS_queyue'),function(card,player,target){
            return player!=target;
        }).ai=function(target){
			var card=_status.event.getTrigger().card;
			var eff=get.effect(target,card,player,player);
			return eff;
        }
        "step 1"
		if(result.bool) {
			player.addTempSkill('XS_queyue_temp');
			player.logSkill('XS_queyue',result.targets[0]);
			player.draw();
			result.targets[0].draw();
			player.useCard(trigger.card,trigger.cards,result.targets[0],false).card.XS_queyue=true;
		}
    },
    ai:{
        expose:0.2,
		unequip:true,
		skillTagFilter:function (player,tag,arg){
			if(!arg||!arg.card||arg.card.XS_queyue!=true) return false;
		},
    },
    subSkill:{
		wushi:{
			charlotte:true,
			ai:{
				unequip:true,
				skillTagFilter:function (player,tag,arg){
					if(arg&&arg.name=='sha') return true;
					return false;
				},
			},
			sub:true,
			popup:false,
		},
		temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_qitun":{
	audio:"ext:血色衣冠:2",
	trigger:{
        source:"damageAfter",
    },
	priority:3,
    filter:function (event,player){
		if(!event.card||event.card.name!='sha'||!event.notLink()) return false;
		return game.hasPlayer(function(current){
			return current!=player&&player.inRange(current);
		});
    },
	check:function (event,player){
		var num1=0;
		game.countPlayer(function(current){
			var hs=current.countCards('he');
			var att=get.attitude(player,current);
			var tp=player.inRange(current);
			if(tp&&hs>0) {
				if(hs==1) {
					if(att>0) num1-=3;
					else num1+=3;
				}
				else {
					if(att>0) num1-=1;
					else num1+=1;
				}
			}
		});	
		return num1>0;
	},
	"prompt2":function (event,player){
		var targets=game.filterPlayer(function(current){
			return current!=player&&player.inRange(current)&&current.countCards('he');
		});
		return '是否弃置'+get.translation(targets)+'各1张牌，且对因此失去最后1张手牌的角色造成1点伤害。';
	},
    content:function (){
		"step 0"
		var tars=game.filterPlayer(function(current){
			return current!=player&&player.inRange(current)&&current.countCards('he');
		});
		event.targets=tars.sort(lib.sort.seat);
		event.num1=0;
		"step 1"
		player.discardPlayerCard(event.targets[event.num1],'he',true).set('ai',function(button){
			var tar=event.targets[event.num1];
			var att=get.attitude(player,tar);
			var pos=button.link.position;
			if(att>0) {
				var val=8-get.value(button.link);
				if(tar.countCards('h')==1&&pos=='h') val/=5;
				else if(pos=='e') val/=2;
			}
			else {
				var val=get.value(button.link);
				if(tar.countCards('h')==1&&pos=='h') val*=5;
				else if(pos=='e') val*=2;
			}
			return val;
		});
		"step 2"
		if(result.bool) {
			if(!event.targets[event.num1].countCards('h')&&result.cards[0].original=='h') {
				event.targets[event.num1].damage(player,1,'nocard');
			}
		}
		"step 3"
		event.num1++;
		if(event.num1<event.targets.length) event.goto(1);
    },
},
"XS_daixing":{
	audio:"ext:血色衣冠:2",
	unique:true,
	zhuSkill:true,
	trigger:{source:'damageAfter'},
	filter:function(event,player){
		if(event.player==player) return false;
		if(!player.hasZhuSkill('XS_daixing')) return false;
		if(event.num<1) return false;
		if(!player.countCards('he',{color:'red'})) return false;
		return event.player.group==player.group;
	},
	direct:true,
    content:function (){
		"step 0"
		player.chooseCard(get.prompt('XS_daixing'),'你可交给'+get.translation(trigger.player)+'1张红色牌，令其回复1点体力。',1,'he',false,function(card){
			return get.color(card)=='red';
		}).set('ai',function(card){
			var att=get.attitude(player,_status.event.getTrigger().player);
			if(att>0) {
				return 6-get.value(card);
			}
			else return -1;
		});
		"step 1"
		if(result.bool){     
			trigger.player.gain(result.cards,player,'giveAuto');   
			player.logSkill('XS_daixing',trigger.player);
			trigger.player.recover();
		}  
    },
},
"XS_tubian":{
	trigger:{
		global:"phaseAfter",
	},
	filter:function (event,player){
		return event.player.countCards('h');
	},
	check:function (event,player){
		var att=get.attitude(player,event.player);
		if(event.player.getStat('damage')>0) {
			return att<0;
		}
		else {
			return att>0&&event.player.countCards('h')>2;
		}
	},
	logTarget:"player",
	content:function (){
		"step 0"
		event.pla=player;
		"step 1"
		if(trigger.player.getStat('damage')>0) {
			player.discardPlayerCard(trigger.player,'你可弃置'+get.translation(trigger.player)+'1张手牌','h',1,function(button){
				var trigger=_status.event.getTrigger();
				var att=get.attitude(player,trigger.player);
				if(att>0) return 6-get.buttonValue(button);
				return get.buttonValue(button);
			},'visible',false);
			event.finish();
		}
		else {
			trigger.player.chooseCard('h',1,'你可重铸一张手牌').ai=function(card){
				return 6-get.value(card);;
			}
		}
        "step 2"
		if(result.bool) {
			var card1=result.cards[0];
			trigger.player.chongzhuCards(card1);
		}
	},
	ai:{
		expose:0.3,
	},
},
"XS_suwen":{
 	group:["XS_suwen_draw","XS_suwen_use"],
    subSkill:{
        draw:{
			trigger:{
				global:"phaseDrawEnd",
			},
			check:function (event,player){
				var att=get.attitude(player,event.player);
				if(att>0) {
					return event.player.hp>player.hp||(event.player.countCards('h')>(player.countCards('h')+1));
				}
				else {
					return event.player.hp>player.hp&&(event.player.countCards('h')>(player.countCards('h')+1));
				}
			},
			logTarget:"player",
			filter:function (event,player){
				if(event.player==player) return false;
				if(player.hasSkill('XS_suwen_temp')) return false;
				return event.player.hp!=player.hp||event.player.countCards('h')!=player.countCards('h');
			},
			"prompt2":function (event,player){
				return '你可以令'+get.translation(event.player)+'选择将你的体力和手牌数中与其不相同的一项调整至与其相同。';
			},
			content:function (){
				"step 0"	
				var list=[];
				event.pla=player;
				if(trigger.player.hp!=player.hp) list.push('体力');
				if(trigger.player.countCards('h')!=player.countCards('h')) list.push('手牌');
				if(!list.length) event.finish();
				trigger.player.chooseControl(list).set('ai',function(event,player){
					var tri=_status.event.getTrigger().player;
					var att=get.attitude(tri,event.pla);
					var num1=tri.countCards('h')-event.pla.countCards('h');
					var num2=Math.min((tri.hp-event.pla.hp),(event.pla.maxHp-event.pla.hp))*2;
					if(att>0) {
						if(num1>=num2) return list.contains('手牌')?'手牌':'体力';
						else return list.contains('体力')?'体力':'手牌';
					}
					else {
						if(num1>=num2) return list.contains('体力')?'体力':'手牌';
						else return list.contains('手牌')?'手牌':'体力';
					}
				}).set('prompt','选择1项使'+get.translation(player)+'调整值与你相同');
				"step 1"
				if(result.control) {
					if(result.control=='体力') {
						var nm=trigger.player.hp-player.hp;
						if(nm>0) player.recover(nm);
						else player.loseHp(-nm);
					}
					else if(result.control=='手牌') {
						var num=trigger.player.countCards('h')-player.countCards('h');
						if(num>0) player.draw(num);
						else player.chooseToDiscard('h',-num,true);
					}
					player.addTempSkill('XS_suwen_temp','roundStart');
				}
			},
            sub:true,
        },
		use:{		
			enable:"phaseUse",
			usable:1,
			audio:2,
			filter:function (event,player){
				if(player.hasSkill('XS_suwen_temp')) return false;
				return game.hasPlayer(function(current){
					return current!=player&&(current.hp!=player.hp||current.countCards('h')!=player.countCards('h'));
				});
			},
			filterTarget:function (card,player,target){
				if(player==target) return false;
				return target.hp!=player.hp||target.countCards('h')!=player.countCards('h');
			},
			selectTarget:1,
			content:function (){
				"step 0"	
				var list=[];
				if(target.hp!=player.hp) list.push('体力');
				if(target.countCards('h')!=player.countCards('h')) list.push('手牌');
				if(!list.length) event.finish();
				event.tar=target;
				event.pla=player;
				target.chooseControl(list).set('ai',function(event,player){
					var att=get.attitude(event.tar,event.pla);
					var num1=event.tar.countCards('h')-event.pla.countCards('h');
					var num2=(event.tar.hp-event.pla.hp)*2;
					if(att>0) {
						if(num1>=num2) return list.contains('手牌')?'手牌':'体力';
						else return list.contains('体力')?'体力':'手牌';
					}
					else {
						if(num1>=num2) return list.contains('体力')?'体力':'手牌';
						else return list.contains('手牌')?'手牌':'体力';
					}
				}).set('prompt','选择1项使'+get.translation(player)+'调整值与你相同');
				"step 1"
				if(result.control) {
					if(result.control=='体力') {
						var nm=target.hp-player.hp;
						if(nm>0) player.recover(nm);
						else player.loseHp(-nm);
					}
					else if(result.control=='手牌') {
						var num=target.countCards('h')-player.countCards('h');
						if(num>0) player.draw(num);
						else player.chooseToDiscard('h',-num,true);
					}
					player.addTempSkill('XS_suwen_temp','roundStart');
				}
			},
			ai:{
				order:1,
				result:{
					target:function (player,target){
						var att=get.attitude(player,target);
						var num1=target.countCards('h')-player.countCards('h');
						var num2=(target.hp-player.hp)*2;
						if(att>0) {
							return Math.max(num1,num2);
						}
						else {
							return -Math.min(num1,num2);
						}
					},
				},
			},
            sub:true,
        },
		temp:{
			charlotte:true,			
            sub:true,
        },
    },
},
"XS_yilv":{
 	group:["XS_yilv_miss","XS_yilv_sha"],
	audio:"ext:血色衣冠:2",
    subSkill:{
        miss:{
			trigger:{
				global:"shaMiss",
			},
			direct:true,
			filter:function (event,player){
				if(event.player==player) return false;
				if(player.hasSkill('XS_yilv_temp')) return false;
				return get.itemtype(event.cards)=='cards'&&get.position(event.cards[0],true)=='o';
			},
			content:function (){
				"step 0"
				event.pla=player;
				trigger.player.chooseBool(get.prompt('XS_yilv'),'是否令'+get.translation(player)+'获得'+get.translation(trigger.cards)+'？').set('ai',function(){ 
					var trigger=_status.event.getTrigger();
					return get.attitude(trigger.player,event.pla)>0;
				}); 
				"step 1"
				if(result.bool){
					player.gain(trigger.cards,'gain2');
					player.logSkill('XS_yilv',trigger.player);
					player.addTempSkill('XS_yilv_temp');
				}  
			},
            sub:true,
        },
		sha:{		
			trigger:{
				source:"damageAfter",
			},
			direct:true,
			filter:function (event,player){
				if(player.hasSkill('XS_yilv_temp')) return false;
				if(!event.card||event.card.name!='sha'||!event.notLink()) return false;
				return get.itemtype(event.cards)=='cards'&&get.position(event.cards[0],true)=='o';
			},
			content:function (){
				"step 0"
				player.chooseTarget(get.prompt('XS_yilv'),'你可令1名其他角色获得'+get.translation(trigger.cards),function(card,player,target){
					return player!=target;
				}).ai=function(target){
					var att=get.attitude(player,target);
					if(target.hasSkill('XS_shenjiang')) att*=2;
					return att;
				}
				"step 1"
				if(result.bool) {
					result.targets[0].gain(trigger.cards,'gain2');
					player.logSkill('XS_yilv',result.targets[0]);
					player.addTempSkill('XS_yilv_temp');
				}			
			},
            sub:true,
        },
		temp:{	
			charlotte:true,		
            sub:true,
        },
	},
},
"XS_yizhize":{
	audio:"ext:血色衣冠:2",
    skillAnimation:true,
    animationColor:"wood",
    trigger:{
        player:"phaseDiscardBefore",
    },
	derivation:['XS_shenjiang','XS_xianzhen','XS_xiaoqi'],
    forced:true,
    unique:true,
    juexingji:true,
	init:function(player){
		player.storage.XS_yizhize=false;
	},
    filter:function (event,player){
        return !player.storage.XS_yizhize&&player.countCards('h','sha')>1;
    },
    content:function (){
		"step 0"
        player.awakenSkill('XS_yizhize');
        player.storage.XS_yizhize=true;
		"step 1"
		player.chooseTarget(get.prompt('XS_yizhize'),'你可将手牌中所有杀交给1名其他角色，并摸数量*2张牌，令其获得一项技能：沉鸷，陷阵，骁骑，然后你跳过此阶段并翻面。',function(card,player,target){
            return player!=target;
        }).ai=function(target){
			var att=get.attitude(_status.event.player,target);
			if(target.hasSkill('XS_shenjiang')) att*=2;
			return att;
        }
        "step 2"
		if(result.bool) {
			event.target1=result.targets[0];
			var shas=player.getCards('h','sha');
			event.num1=shas.length;
			event.target1.gain(shas,player,'giveAuto');
		}
		else event.finish();
		"step 3"	
		var list=[];
		if(!event.target1.hasSkill('XS_shenjiang')) list.push('沉鸷');
		if(!event.target1.hasSkill('XS_xianzhen')) list.push('陷阵');
		if(!event.target1.hasSkill('XS_xiaoqi')) list.push('骁骑');
		if(!list.length) event.finish();
		player.chooseControl(list).set('ai',function(){
			if(list.contains('沉鸷')) return '沉鸷';
			if(list.contains('骁骑')) return '骁骑';
			else return '陷阵';
		}).set('prompt','令'+get.translation(event.target1)+'获得1项技能');
		"step 4"
		if(result.control){
			if(result.control=='沉鸷') event.target1.addSkill('XS_shenjiang');
			if(result.control=='骁骑') event.target1.addSkill('XS_xiaoqi');
			if(result.control=='陷阵') event.target1.addSkill('XS_xianzhen');
			game.log(event.target1,'获得了技能：',result.control);
			player.draw(event.num1*2);
			player.turnOver();
			trigger.cancel();
        }
    },
	ai:{
		effect:{
			player:function(card,player,target){
				if(player.countCards('h','sha')<3) return [1,-2];
			}
		},
	},
},
"XS_quluan":{
	trigger:{
        global:"useCardBefore",
    },
    filter:function (event,player){
		if(player.hasSkill('XS_quluan_temp')) return false;
		if(event.player==player) return false;
        if(!get.tag(event.card,'damage')) return false;
        if(event.targets.length!=1) return false;
        return true;
    },
	check:function (event,player){
		var eff=get.effect(event.targets[0],event.card,event.player,player);
		return eff<0;
	},
	"prompt2":function (event,player){
		return '是否为'+get.translation(event.player)+'指定'+get.translation(event.targets[0])+'为目标的'+get.translation(event.card)+'重新指定使用者和目标？';
    },
    content:function (){
		"step 0"
		var targetprompt=['使用','目标'];
		player.chooseTarget(2,'为'+get.translation(trigger.card)+'重新指定使用者和目标。',function(card,player,target){
			if(!ui.selected.targets.length) return true;
			else {
				var cd=_status.event.getTrigger().card;
				var tp=ui.selected.targets[0];
				return lib.filter.targetEnabled(cd,tp,target);
			}
        }).set('ai',function(target){
			var card=_status.event.getTrigger().card;
			var att=get.attitude(player,target);
			if(ui.selected.targets.length==1) {
				return -att;
			}
			else {
				if(get.type(card)=='trick') {
					if(target==player) return att*10;
				}
				else return att;
			}
        }).set('targetprompt',targetprompt);
		"step 1"
		if(result.bool){
			if(!player.hasSkill('XS_quluan_temp')){
				player.addTempSkill('XS_quluan_temp','roundStart');
			}
			trigger.player=result.targets[0];
			trigger.targets.remove(trigger.targets[0]);
			trigger.targets.push(result.targets[1]);
        }
		else event.finish();
    },
	ai:{
		expose:0.5,
	},
	group:["XS_quluan_dam"],
    subSkill:{
		dam:{
			trigger:{
				player:"damageEnd",
			},
			filter:function (event,player){
				return event.num>0&&player.hasSkill('XS_quluan_temp');
			},
			forced:true,
			content:function (){
				player.removeSkill('XS_quluan_temp');
			},
            sub:true,
        },
        temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_xueci":{
 	trigger:{
		global:"damageEnd",
	},
	usable:1,
	filter:function (event,player){
		if(event.num<=0) return false;
		if(!event.card||get.type(event.card)!='trick'||!event.notLink()) return false;
		if(!event.source) return false;
		return game.hasPlayer(function(current){
			return current!=event.source&&current.isDamaged()&&event.source.inRange(current);
		});
	},
	check:function (event,player){
		return get.attitude(player,event.source)>0;
	},
	logTarget:'source',
	content:function (){
		"step 0"
        trigger.source.chooseTarget('你可令你攻击范围内的1名其他角色回复1点体力。',1,function(card,player,target){
			var tri=_status.event.getTrigger();
            return tri.source!=target&&target.isDamaged()&&tri.source.inRange(target);
        },function(target){
			var tri=_status.event.getTrigger();
			var eff=get.recoverEffect(target,tri.source,tri.source);
            return eff;
        });
        "step 1"
        if(result.bool){
			result.targets[0].recover();
        } 
	},
	ai:{
		threaten:1.2,
		expose:0.4,
	},
},
"XS_zhulie":{
	trigger:{
        player:"damageBegin",
    },
    direct:true,
	filter:function (event,player){
		if(!player.countCards('h')) return false;
		if(event.num<=0) return false;
		return event.source&&event.source.isAlive()&&event.source.countCards('h');
	},
    content:function (){
		"step 0"
        player.chooseCard(get.prompt('XS_zhulie'),1,'h','你可弃置1张手牌并令'+get.translation(trigger.source)+'弃置1张手牌，若两张牌花色不同，此伤害-1。').ai=function(card){
			var att=get.attitude(player,_status.event.getTrigger().source);
			if(att>0) return -1;
			return 4.5-get.value(card);
        }
        "step 1"
        if(result.bool){
			player.logSkill('XS_zhulie',trigger.source);
			event.suit1=get.suit(result.cards[0]);
			player.discard(result.cards[0]);
			game.delay();
        }
		else event.finish();
		"step 2"
		trigger.source.chooseToDiscard('弃置1张手牌，若此牌花色不为'+get.translation(event.suit1)+'你对'+get.translation(player)+'的伤害-1。',true).set('ai',function(card){
			var suit=get.suit(card); 
			if(suit==event.suit1) {
				return 5-get.value(card);
			}
			else return 4-get.value(card);
		});
		"step 3"
		if(result.bool){
			var suit2=get.suit(result.cards[0]); 
			if(event.suit1!=suit2) {
				trigger.num--;
				game.log(player,'受到',trigger.source,'的伤害-1');
			}
		}
    },
	ai:{
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')) {
					if(player.countCards('h')==1) return;
					if(!target.hasFriend()) return;
					return 0.5;
				}
			},
		},
	},
},
"XS_jingnan":{
	enable:"phaseUse",
    usable:1,
    audio:2,
    filterTarget:function (card,player,target){
		return player!=target&&target.countCards('h');
    },
	filter:function (event,player){
		return player.countCards('h');
	},
	selectTarget:1,
    content:function (){
		"step 0"
		player.chooseCardButton('选择1张牌弃置之，若此牌带有伤害标签，你对'+get.translation(target)+'使用之。',target.getCards('h')).ai=function(button){
			var val=get.value(button.link);
			if(get.tag(button.link,'damage')&&player.canUse(button.link,target,false)) val*=3;
			return val;
		}
        "step 1"
        if(result.bool){
			if(player.canUse(result.links[0],target,false)&&get.tag(result.links[0],'damage')) {
				target.lose(result.links[0],ui.special);
				player.useCard(result.links[0],target,false);
			}
			else {
				target.discard(result.links[0]);
			}
        }
    },
    ai:{
        order:9,
		result:{
            target:-1.5,
        },
        expose:0.4,
    },
},
"XS_shengwei":{
	unique:true,
	zhuSkill:true,
	trigger:{
		player:"phaseBefore",
	},
	direct:true,
	filter:function (event,player){
		if(!player.hasZhuSkill('XS_shengwei')) return false;
		return true;
    },
	global:"XS_shengwei1",
	content:function (){
		"step 0"
		var suits=['heart2','spade2','diamond2','club2','cancel2'];
        player.chooseControl(suits).set('ai',function(event){
			var player=_status.event.player;
			if(player.hasJudge('bingliang')||player.hasJudge('caomu')) return 'club2';
			if(player.hasJudge('lebu')) return 'heart2';
            switch(Math.floor(Math.random()*6)){
                case 0:return 'club2';
                case 1:return 'diamond2';
                case 2:case 6:return 'spade2';
                case 3:case 4:return 'heart2';
				case 5:return 'cancel2';
            }
        }).set('prompt','盛威：你可声明1种花色，令与你同势力角色直到下个回合开始：区域内的牌均视为此花色，直至进行X次判定后，X为其当前体力值且至多为3');
		"step 1"
		if(result.control){
            var suit=result.control.slice(0,result.control.length-1);
            player.logSkill('XS_shengwei');
			game.countPlayer(function(current){
				if(current.group==player.group) {
					current.storage.XS_shengwei1=suit;
					current.addSkill('XS_shengwei_'+suit);
					current.markSkill('XS_shengwei_'+suit);
					current.storage.XS_shengwei1_rec=0;
				}
			});	
        }
	},
    group:["XS_shengwei_clear"],
	subSkill:{
        clear:{
			trigger:{
				player:["phaseBefore","dieBegin"],
			},
			priority:999,
			direct:true,	
			content:function(){
				game.countPlayer(function(current){
					if(current.storage.XS_shengwei1!=null&&current.storage.XS_shengwei1!=undefined) {
						var suit=current.storage.XS_shengwei1;
						current.removeSkill('XS_shengwei_'+suit);
						current.unmarkSkill('XS_shengwei_'+suit);
						delete current.storage.XS_shengwei1;
						delete current.storage.XS_shengwei1_rec;
					}
				});	
			},
        },
		spade:{
			marktext:'♠︎️',
			intro:{
				content:function(storage,player,skill){
					return '区域内的牌及判定牌花色均视为：♠︎</br>已判定次数：'+player.storage.XS_shengwei1_rec;
				},
			},
		},
		heart:{
			marktext:'♥︎️',
			intro:{
				content:function(storage,player,skill){
					return '区域内的牌及判定牌花色均视为：♥︎</br>已判定次数：'+player.storage.XS_shengwei1_rec;
				},
			},
		},
		club:{
			marktext:'♣︎️',
			intro:{
				content:function(storage,player,skill){
					return '区域内的牌及判定牌花色均视为：♣︎</br>已判定次数：'+player.storage.XS_shengwei1_rec;
				},
			},
		},
		diamond:{
			marktext:'♦︎',
			intro:{
				content:function(storage,player,skill){
					return '区域内的牌及判定牌花色均视为：♦︎</br>已判定次数：'+player.storage.XS_shengwei1_rec;
				},
			},
		},
    },
},
"XS_shengwei1":{
	mod:{
		suit:function (card,suit){
			var player=_status.event.player;
			if(!player||!player.storage.XS_shengwei1) return;
			if(player.storage.XS_shengwei1_rec>=Math.min(3,player.hp)) return;
			return player.storage.XS_shengwei1;
		},
	},
	trigger:{
		player:"judgeAfter",
	},
	filter:function (event,player){
		return player.storage.XS_shengwei1_rec!=null&&player.storage.XS_shengwei1_rec!=undefined;
	},
	priority:92,
	direct:true,
	content:function (){
		player.storage.XS_shengwei1_rec++;
		player.syncStorage('XS_shengwei1_rec');
	},
},
"XS_yangxing":{
	intro:{
		content:function (content,player){
			var str='';
			if(player.storage.XS_yangxing[0][0]!=0&&player.storage.XS_yangxing[0][1]!=1) {
				str+='摸牌阶段摸牌数：';
				if(player.storage.XS_yangxing[0][1]==0.5) str+='减半';
				else str+='翻倍';
			}
			if(player.storage.XS_yangxing[1][0]!=0&&player.storage.XS_yangxing[1][1]!=1) {
				str+='</br>手牌上限：';
				if(player.storage.XS_yangxing[1][1]==0.5) str+='减半';
				else str+='翻倍';
			}
			if(player.storage.XS_yangxing[2][0]!=0&&player.storage.XS_yangxing[2][1]!=1) {
				str+='</br>使用杀的次数：';
				if(player.storage.XS_yangxing[2][1]==0.5) str+='减半';
				else str+='翻倍';
			}			
			if(player.storage.XS_yangxing[3][0]!=0&&player.storage.XS_yangxing[3][1]!=1) {
				str+='</br>杀可指定的目标数：';
				if(player.storage.XS_yangxing[3][1]==0.5) str+='减半';
				else str+='翻倍';
			}
			return str;
		},
	},
	mod:{
        maxHandcard:function (player,num){
            var num1=Math.floor(num*player.storage.XS_yangxing[1][1]);
			return num1;
        },
		cardUsable:function (card,player,num){
			if(card.name=='sha') {
				var range;
				var select=get.copy(get.info(card).selectTarget);
				if(select==undefined){
					if(get.info(card).filterTarget==undefined) range=[0,0];
					else range=[1,1];
				}
				else if(typeof select=='number') range=[select,select];
				else if(get.itemtype(select)=='select') range=select;
				else if(typeof select=='function') range=select(card,player);
				game.checkMod(card,player,range,'selectTarget',player);
				var mul=player.storage.XS_yangxing[3][1];
				var tp1=range[0]*mul,tp2=range[1]*mul;				
				if(tp1<=0&&tp2<=0) return 0;
				var num1=Math.floor(num*player.storage.XS_yangxing[2][1]);
				return num1;
			}
		},
        selectTarget:function (card,player,range){
			var mul=player.storage.XS_yangxing[3][1];
			if(card.name=='sha'){
				if(mul<1) {
					var num0=Math.floor(range[0]*mul);
					var num1=Math.floor(range[1]*mul);
					range[0]=num0;
					range[1]=num1;
				}
				else if(mul>1) {
					var num1=Math.floor(range[1]*mul);
					range[1]=num1;
				}
			}
        },
    },
	init:function(player){
		player.storage.XS_yangxing=[[0,1],[0,1],[0,1],[0,1]];
	},
    trigger:{
        player:"phaseBefore",
    },
    direct:true,
    content:function (){
		"step 0"
		var func=function(){
			var list=[
				'摸牌阶段摸牌数',
				'手牌上限',
				'使用杀的次数',
				'杀可指定的目标数',
			];
			var choiceList=ui.create.dialog('佯行：你可使你本回合任意项减半（向下取整），如此下回合对应的项目翻倍。','forcebutton');
			for(var i=0;i<list.length;i++){
				var str='<div class="popup text" style="width:calc(100% - 10px);display:inline-block">';
				if(i==0) str+='<div>';
				str+=list[i];
				if(i==0) str+='</div>';
				str+='</div>';
				var next=choiceList.add(str);
				next.firstChild.addEventListener(lib.config.touchscreen?'touchend':'click',ui.click.button);
				next.firstChild.link=i;
				for(var j in lib.element.button){
					next[j]=lib.element.button[i];
				}
				choiceList.buttons.add(next.firstChild);
			}
			return choiceList;
		};
		if(player.isOnline2()){
			player.send(func);
		}
		event.dialog=func();
		if(player!=game.me||_status.auto){
			event.dialog.style.display='none';
		}
		var next=player.chooseButton();
		next.set('forced',false);
		next.set('selectButton',[1,4]);
		next.set('filterButton',function(button){
			return true;
		});
		next.set('ai',function(button){
			var player=_status.event.player;
			var idx=player.storage.XS_yangxing;		
			switch(button.link){
				case 0:{
					return (idx[0][0]==0?1:-1);
				}
				case 1:{
					return -1;
				}
				case 2:{
					return (player.countCards('h','sha')>1&&idx[2][0]==0?1:-1);
				}
				case 3:{
					return (player.countCards('h','sha')>0&&idx[3][0]==0?1:-1);
				}
			}
		});
		"step 1"
		event.dialog.close();
		var map=[
			function(trigger,player,event){
				player.storage.XS_yangxing[0][0]=1;
				player.storage.XS_yangxing[0][1]*=0.5;
			},
			function(trigger,player,event){
				player.storage.XS_yangxing[1][0]=1;
				player.storage.XS_yangxing[1][1]*=0.5;
			},
			function(trigger,player,event){
				player.storage.XS_yangxing[2][0]=1;
				player.storage.XS_yangxing[2][1]*=0.5;
			},
			function(trigger,player,event){
				player.storage.XS_yangxing[3][0]=1;
				player.storage.XS_yangxing[3][1]*=0.5;
			},
		];
		if(result.links) {
			player.markSkill('XS_yangxing');
			player.logSkill('XS_yangxing',trigger.player);
			for(var i=0;i<result.links.length;i++){
				game.log(player,'选择了','#g“佯行”','的','#y选项'+get.cnNumber(result.links[i]+1,true));
				map[result.links[i]](trigger,player,event);
			}
		}
    },
	group:["XS_yangxing_change","XS_yangxing_draw"],
    subSkill:{
		change:{
			trigger:{
				player:"phaseBefore",
			},
			priority:99,
			direct:true,
			content:function (){
				for(var i=0;i<player.storage.XS_yangxing.length;i++) {
					if(player.storage.XS_yangxing[i][0]==1) {
						player.storage.XS_yangxing[i][1]=2;
						player.storage.XS_yangxing[i][0]=2;
					}
					else if(player.storage.XS_yangxing[i][0]==2) {
						player.storage.XS_yangxing[i][1]=1;
						player.storage.XS_yangxing[i][0]=0;
					}
				}
				player.syncStorage('XS_yangxing');
			},
            sub:true,
        },
		draw:{
			trigger:{
				player:"phaseDrawBegin2",
			},
			direct:true,
			priority:-990,
			content:function (){
				var num1=Math.floor(trigger.num*player.storage.XS_yangxing[0][1]);
				trigger.num=num1;
			},
        },
    },
},
"XS_chuanlie":{
	trigger:{
		global:"roundStart",
	},
	priority:-39,
	filter:function (event,player){
		return game.hasPlayer(function(current){
			return current!=player&&!current.hasSkill('XS_chuanliemark');
		});
	},
	direct:true,
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt('XS_chuanlie'),'你可指定1名其他角色，本轮其受到1点伤害/流失1点体力时，你代其承受之，并令你与其各摸1张牌。',1,false,function(card,player,target){
			return target!=player;
		}).set('ai',function(target){
			var hp=target.hp+0.1;
			var att=get.attitude(player,target)/hp;
			return att;
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_chuanlie',result.targets[0]);
			player.addTempSkill('XS_chuanliemark','roundStart');
			player.storage.XS_chuanliemark=result.targets[0];
			result.targets[0].markSkillCharacter('XS_chuanlie',player,'传烈','你受到1点伤害/流失1点体力时，'+get.translation(player)+'代你承受之，并令你与其各摸1张牌。');
		}
	},
	ai:{
		expose:0.5,
	},
},
"XS_chuanliemark":{
	onremove:function(player){
		player.storage.XS_chuanliemark.unmarkSkill('XS_chuanlie');
		delete player.storage.XS_chuanliemark;
	},
	charlotte:true,
	priority:-599,
	trigger:{global:['damageBegin4','loseHpBegin']},
	forced:true,
	filter:function(event,player){
		return player.storage.XS_chuanliemark==event.player&&event.num>0;
	},
	logTarget:'player',
	content:function(){
		"step 0"
		event.tar=trigger.player;
		"step 1"
		trigger.player=player;
		"step 2"
		player.draw(trigger.num);
		event.tar.draw(trigger.num);
	},
	group:["XS_chuanliemark_clear"],
	subSkill:{
        clear:{
			trigger:{global:'dieBegin'},
			silent:true,
			filter:function(event,player){
				return event.player==player||(player.storage.XS_chuanliemark&&player.storage.XS_chuanliemark==event.player);
			},
			content:function(){
				player.removeSkill('XS_chuanliemark');
			},
            sub:true,
        },
    },
},
"XS_fenwei":{
	trigger:{
		player:"phaseDiscardBefore",
	},
	filter:function (event,player){
		return player.countCards('h');
	},
	priority:-1,
	direct:true,
	content:function (){
		"step 0"
		var nh=player.countCards('h');
		for(var i=0;i<game.players.length;i++){
			if(game.players[i].isOut()||game.players[i]==player) continue;
			if(game.players[i].countCards('h')<nh) {
				nh=game.players[i].countCards('h');
			}
		}
		event.num1=Math.max(1,player.countCards('h')-nh);
		player.chooseToDiscard(get.prompt('XS_fenwei'),'你可弃置至少'+event.num1+'张手牌使你手牌数为全场最少，如此你视为使用1张杀，且此杀造成的伤害+弃置牌数/2（向下取整）。',[event.num1,Infinity],'h',false,function(card){
			return true;
		}).set('ai',function(card){
			return 5.5-get.value(card);
		});
        "step 1"
        if(result.bool){
			event.tem=Math.floor(result.cards.length/2);
			player.logSkill('XS_fenwei');
			player.chooseUseTarget({name:"sha",isCard:true},true,true);
        }
	},
	ai:{
        expose:0.2,
    },
	group:["XS_fenwei_dam"],
	subSkill:{
		dam:{
			trigger:{
				source:"damageBegin",
			},
			filter:function (event){
                if(!event.card||event.card.name!='sha'||!event.notLink()) return false;
				if(event.getParent(5).skill!='XS_fenwei') return false;
                return (typeof event.getParent(4).tem=='number'&&event.getParent(4).tem>0);
            },
			direct:true,
			content:function (){
				var nu=trigger.getParent(4).tem;
                trigger.num+=nu;
            },
			ai:{
				damageBonus:true,
			},
			sub:true,
		},
	},
},
"XS_chijing":{
	trigger:{
        global:["discardAfter"],
    },
    filter:function (event,player){
		if(player.hasSkill('XS_chijing_temp')) return false;
		if(_status.currentPhase!=event.player) return false;
		for(var i=0;i<event.cards.length;i++){
			if(get.tag(event.cards[i],'damage')) return true;
		}
    },
	direct:true,
	content:function (){
		"step 0"
		event.cds=[];
		for(var i=0;i<trigger.cards.length;i++){
			if(get.tag(trigger.cards[i],'damage')) event.cds.push(trigger.cards[i]);
		}
		player.chooseBool(get.prompt('XS_chijing',trigger.player),'是否对'+get.translation(trigger.player)+'造成1点伤害？如此其获得'+get.translation(event.cds)+'并获得一个额外的出牌阶段。').ai=function(event,player){
			var tri=_status.event.getTrigger();	
			var att=get.attitude(player,tri.player);
			if(att>0&&tri.player.hasSkillTag('maixie')) return true;
			if(att<=0) {
				return event.cds.length<2;
			}
		};
		"step 1"
		if(result.bool){
			player.logSkill('XS_chijing',trigger.player);
			trigger.player.damage(player,1,'nocard');
			trigger.player.gain(event.cds,'gain2');
			trigger.player.stat.push({card:{},skill:{}});
			trigger.player.phaseUse();
			if(!player.hasSkill('XS_chijing_temp')){
				player.addTempSkill('XS_chijing_temp','roundStart');
			}
			game.delay(0.5);
		}	
	},
	ai:{
		expose:0.2,
	},
	subSkill:{
		temp:{
			charlotte:true,
			sub:true,
		},
	},
},
"XS_quchi":{
	trigger:{
        global:"phaseBefore",
    },
	filter:function(event,player){
		return event.player!=player;
	},
	check:function (event,player){
		var att=get.attitude(event.player,player);
		if(att>0) return true;
		if(!player.countCards('h','shan')) return true;
		return false;
	},
	logTarget:"player",
    content:function (){
		"step 0"
		player.draw();
		"step 1"
		player.addTempSkill('XS_quchi_dis');
    },
	subSkill:{
		dis:{
			charlotte:true,
            marktext:"驱",
            init:function (player){
                player.markSkill('XS_quchi_dis');
            },
			intro:{
                content:function (storage){
                    return '无法使用和打出手牌';
                },
            },
            mod:{
                "cardEnabled2":function (card,player){
                    if(get.position(card)=='h') return false;
                },
            },
            ai:{
                effect:{
                    target:function (card,player,target){
                        if(get.tag(card,'damage')) return [0,-20];
                    },
                },
            },
            sub:true,
		},
	},
},
"XS_tongxin":{
	trigger:{
		player:"phaseDiscardAfter",
	},
	filter:function (event,player){
		if(!event.cards) return false;
		return game.hasPlayer(function(current){
			return current.countCards('h')>0&&current!=player;
		});
	},
	forced:true,
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt2('XS_tongxin'),[1,trigger.num],function(card,player,target){
            return player!=target&&target.countCards('h');
        }).ai=function(target){
			var att=get.attitude(_status.event.player,target);
			if(target.countCards('h','du')) return att;
			else return -att;
        }
        "step 1"
		if(result.bool) {
			var tars=result.targets;
			event.targetss=tars.sort(lib.sort.seat);
		}
		else event.finish();
        "step 2"
        if(event.targetss.length){
            var target=event.targetss.shift();
            event.current=target;
        }
        else event.finish();
        "step 3"
        if(event.current){
			event.current.chooseCard('将1张手牌置于牌堆顶','h',true).set('ai',function(card){
				return 8-get.value(card);
			});
        }
        else event.goto(2);
        "step 4"
        if(result&&result.cards){
			event.card1=result.cards[0];
            event.current.$throw(event.card1,1000);
			event.current.lose(event.card1);
        }
		else event.goto(2);
		"step 5"		
		event.card1.fix();
		ui.cardPile.insertBefore(event.card1,ui.cardPile.firstChild);
		game.log(event.current,'将',event.card1,'置于牌堆顶');
		game.delay(0.5);
		event.goto(2);
	},
	ai:{
		expose:0.3,
	},
},
"XS_fenjian":{
	trigger:{
		player:"discardAfter",
	},
	direct:true,
	content:function (){
		"step 0"
		event.cc=[0,0,0];
		for(var i=0;i<trigger.cards.length;i++) {
			switch(trigger.cards[i].original){
				case 'h':event.cc[0]++;break;
				case 'e':event.cc[1]++;break;
				case 'j':event.cc[2]++;break;
			}
		}
		event.nm=0;
		"step 1"
		if(event.cc[event.nm]!=0) {
			var tp=event.cc[event.nm];
			switch(event.nm){
				case 0:
					event.mk='h';event.str='手牌区';
				break;
				case 1:
					event.mk='e';event.str='装备区';
				break;
				case 2:
					event.mk='j';event.str='判定区';
				break;
			}
			player.chooseTarget(get.prompt('XS_fenjian'),'你可令至多'+tp+'名其他角色将其'+event.str+'的1张牌置于牌堆顶。',[1,tp],function(card,player,target){
				return player!=target&&target.countCards(event.mk);
			}).ai=function(target){
				var att=get.attitude(player,target);
				if(event.mk!='j') return -att;
				return -att;
			}
		}
		else event.goto(7);
        "step 2"
		if(result.bool) {
			var tars=result.targets;
			event.tars=tars.sort(lib.sort.seat);
		}
		else event.goto(7);
        "step 3"
        if(event.tars.length){
            var target=event.tars.shift();
            event.current=target;
        }
        else event.goto(7);
        "step 4"
		event.current.chooseCard('将1张'+event.str+'的1张牌置于牌堆顶',event.mk,true).set('ai',function(card){
			return 8-get.value(card);
		});
        "step 5"
        if(result&&result.cards){
			event.cd=result.cards[0];
            event.current.$throw(event.cd,1000);
			event.current.lose(event.cd);	
        }
		"step 6"
		if(event.cd) {
			event.cd.fix();
			ui.cardPile.insertBefore(event.cd,ui.cardPile.firstChild);
			game.delay(0.7);
		}
		event.goto(3);
		"step 7"
		if(event.nm<2) {
			event.nm++;
			event.goto(1);
			game.delay(0.7);
		}
		else event.finish();
	},
	ai:{
		nodiscard:true,
		expose:0.3,
	},
},
"XS_kejian":{
	enable:"phaseUse",
	usable:1,
	discard:false,
	prepare:"give2",
	filterCard:true,
	selectCard:[1,Infinity],
	position:"h",
    filterTarget:function (card,player,target){
        return player!=target;
    },
	selectTarget:1,
	filter:function (event,player){
		return player.countCards('h');
	},
	check:function (card){
		if(ui.selected.cards.length==0) return 2-get.value(card);
		else return -get.value(card);
    },
    content:function (){
		"step 0"
		targets[0].gain(cards,player);  
		"step 1"
		var num1=targets[0].countCards('h');
		event.target1=targets[0];
		var tars=game.filterPlayer(function(current){
			return current!=player&&current.countCards('h')<num1&&event.target1!=current;
		});
		event.tgs=tars.sort(lib.sort.seat);
		"step 2"
		if(event.tgs.length) {
			var target2=event.tgs.shift();
			event.current=target2;
		}
		else event.finish();
		"step 3"
		if(event.current&&event.target1.isAlive()){
			game.delay(0.5);
			event.current.discardPlayerCard(event.target1,'he',false);
		}
		event.goto(2);
    },
    ai:{
        order:9,
		result:{
			player:function (player){
				if(player.countCards('h','du')) return 1;
				return -0.5;
            },
            target:function (player,target){
				var du=player.countCards('h','du');
				var te=0;
				if(du<1) {
					te=1
				}
				else {
					te=-du;
				}
				var num1=target.countCards('h')+1;
				var num2=game.countPlayer(function(current){
					return get.attitude(target,current)<0&&current!=player&&current.countCards('h')<num1;
				});
				return te-num2;
            },
        },
        expose:0.3,
    },
},
"XS_qingya":{
	priority:15,
	trigger:{
		target:["shaBefore","juedouBefore"],
	},
	filter:function (event,player){
		if(event.player==player) return false;
		return event.player.countCards('h');
	},
	check:function(card){
		return true;
	},
	logTarget:'player',
	content:function (){
		"step 0"
		var hs=player.getCards('h');
		if(hs.length){
			var minval=get.value(hs[0]);
			for(var i=1;i<hs.length;i++){
				var val=get.value(hs[i],player,'raw');
				if(val<minval){
					minval=val;
				}
			}
			player.chooseCardButton('交换'+get.translation(trigger.player)+'1张手牌',trigger.player.getCards('h')).ai=function(button){
				return get.value(button.link,player,'raw')-minval;
			}
		}
		else{
			player.viewHandcards(trigger.player);
			event.finish();
		}
		'step 1'
        if(result.bool){
            event.card=result.links[0];
            player.chooseCard('h',true,'用一张手牌替换'+get.translation(event.card)).ai=function(card){
                return 2-get.value(card);
            };
        }
        else event.finish();
        'step 2'
        if(result.bool){
			player.gain(event.card,trigger.player,'giveAuto');	
			trigger.player.gain(result.cards,player,'giveAuto');
            game.log(player,'与',trigger.player,'交换了1张手牌');
        }
		"step 3"
		if(player.countCards('h')<trigger.player.countCards('h')) {
			player.draw();
		}
	},
	ai:{
        threaten:0.8,
		effect:{
			target:function (card,player,target){
				if(card.name=='sha'||card.name=='juedou') {
					if(!target.hasFriend()) return;
					return [1,1];
				}
			},
		},
    },
},
"XS_xianzheng":{
	unique:true,
	zhuSkill:true,
	trigger:{player:'loseEnd'},
	filter:function(event,player){
		if(!player.hasZhuSkill('XS_xianzheng')) return false;
		if(player.hasSkill('XS_xianzheng_temp')) return false;
		if(player.countCards('h')) return false;
		if(!game.hasPlayer(function(current){
			return current!=player&&current.group==player.group;
		})) return false;
		return event.hs&&event.hs.length>0;
	},
	direct:true,
    content:function (){
		"step 0"
		player.chooseTarget(get.prompt('XS_xianzheng'),'令1名其他与你同势力角色回复1点体力或摸2张牌',1,false,function(card,player,target){
			return player!=target&&target.group==player.group;
		}).set('ai',function(target){
			var player=_status.event.player;
			var att=get.attitude(player,target);
			if(target.hp==1) att=att*1.5;
			return att;
		});
		"step 1"
		if(result.bool){
			event.target1=result.targets[0];
			player.line(result.targets[0],'green');
			player.chooseControl('回复体力','摸2张牌',function(event,player){
				if(event.target1.hp==1) return '回复体力';
				return '摸2张牌';
			}).set('prompt','令'+get.translation(result.targets[0])+'获得1项效果');
		}
		else event.finish();
		"step 2"
		if(result.control=='摸2张牌'){
			event.target1.draw(2);
		}
		else{
			event.target1.recover();
		}
		player.logSkill('XS_xianzheng',event.target1);
		if(!player.hasSkill('XS_xianzheng_temp')){
			player.addTempSkill('XS_xianzheng_temp','roundStart');
		}
    },
	ai:{
		noh:true,
		skillTagFilter:function(player,tag){
			if(tag=='noh'){
				if(player.countCards('h')!=1) return false;
			}
		}
	},
	subSkill:{
        temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_shusheng":{
 	trigger:{
		player:"useCardBefore",
	},
	init:function (player){
		player.storage.XS_shusheng=[];
		player.storage.XS_shusheng_gain=[];
	},
	intro:{
		content:function (storage){
			return '书圣已作用于：'+get.translation(storage);
		},
	},
	check:function (event,player){
		return true;
    },
	filter:function (event,player){
		if(get.type(event.card)!='basic'&&get.type(event.card)!='trick') return false;
		if(!player.isPhaseUsing()) return false;
		if(player.countCards('h')<2) return false;
		if(player.storage.XS_shusheng.contains(event.card.name)) return false;
        return event.card.isCard;
    },
	content:function (){
        "step 0"
        player.storage.XS_shusheng.push(trigger.card.name);
		player.markSkill('XS_shusheng');
		"step 1"
		player.chooseCard('书圣：选择1张手牌代替'+get.translation(trigger.card)+'使用。',1,'h',true,function(card){
			var trigger=_status.event.getTrigger();
			return !trigger.cards.contains(card);
		}).set('ai',function(card){  
            var card1=_status.event.getTrigger().cards[0];
			return (get.value(card1)-get.value(card))>0;
		});
        "step 2"
        if(result.bool){
			trigger.cards[0]=result.cards[0];
			player.storage.XS_shusheng_gain.push(result.cards[0]);
            game.log(player,'使用',result.cards[0],'代替了',trigger.card);
        }		
    },
	group:["XS_shusheng_gain"],
	subSkill:{
		gain:{
			trigger:{
                player:["phaseAfter"],
            },
			filter:function (event,player){
				return player.storage.XS_shusheng_gain.length;
			},
            forced:true,
            content:function (){
				var cards=player.storage.XS_shusheng_gain;
				player.gain(cards,'gain2');
				player.storage.XS_shusheng_gain=[];
            },
			sub:true,
		},
	},
},
"XS_huihao":{
 	audio:2,
	enable:'phaseUse',
	filter:function (event,player){
		if(!player.countCards('h')) return false;
		var cards=player.getCards('h',function(card){
			return lib.filter.cardEnabled(card,player)&&lib.filter.cardUsable(card,player);
		});
		if(!cards.length){
			return true;
		}
		else return false;
    },
	content:function(){
		var cards=player.getCards('h');
		var num=cards.length;
		player.discard(cards);
		player.draw(num);
	},	
	ai:{
		order:1,
		result:{
			player:function (player){
				var val=0;
				var cards=player.getCards('h');
				for(var i=0;i<cards.length;i++) {
					val+=get.value(cards[i],player,'raw');
				}
				val=val/cards.length;
				if(val>3) return -1;
				return 1;
            },
		},
	},
},
"XS_jinglue":{
	enable:"phaseUse",
	filterTarget:function (card,player,target){
		if(!ui.selected.targets.length) {
			return target.countCards('h')&&target!=player;
		}
		else {
			return ui.selected.targets[0].inRange(target)&&lib.filter.targetEnabled({name:'sha'},ui.selected.targets[0],target);	
		}
	},
	usable:1,
	filter:function (event,player){
		return game.hasPlayer(function(current){
			if(!current.countCards('h')) return false;
			return game.hasPlayer(function(current1){
				return current1!=current&&current.inRange(current1)&&lib.filter.targetEnabled({name:'sha'},current,current1);	
			});
		});
	},
	targetprompt:["使用杀","被杀"],
	selectTarget:2,
	multitarget:true,
	prompt:'你可令1名其他角色将手牌中所有杀依次对其攻击范围内你指定的1名角色使用，否则你可观看其手牌并获得其中1张。',
	content:function (){
		"step 0"
		if(targets[0].countCards('h','sha')) {
			targets[0].chooseBool('对'+get.translation(targets[1])+'依次使用你手牌中的所有杀，否则令'+get.translation(player)+'观看你的手牌并获得其中1张。').set('ai',function(){
				var eff=get.effect(targets[1],{name:'sha'},targets[0],targets[0]);
				return eff>=0;
			});
		}
		else event.goto(2);
		"step 1"
		if(result.bool) {
			var cds=targets[0].getCards('h','sha');
			for(var i=0;i<cds.length;i++) {
				targets[0].useCard(cds[i],targets[1],true);
			}
			event.finish();
		}
		else event.goto(2);
		"step 2"
		player.gainPlayerCard('h',targets[0],1,'visible');
	},
	ai:{
		order:9,
		result:{
			target:function(player,target){
				if(ui.selected.targets.length==0){
					return -2;
				}
				else{
					if(target.hasSkillTag('maixie')) return 2;
					return -2;
				}
			}
		},
		expose:0.3,
	},
},
"XS_simou":{
	trigger:{
		global:"damageAfter",
	},
	priority:2,
	filter:function (event,player){
		if(_status.currentPhase!=player) return false;
		if(!event.card||event.card.name!='sha'||!event.notLink()) return false;
		return event.num>=0;
	},
	direct:true,
	content:function (){
		"step 0"
		player.chooseControlList(
			['摸1张牌，令'+get.translation(trigger.player)+'回复1点体力',
			'弃置1张牌，令'+get.translation(trigger.player)+'失去1点体力']).set('ai',function(event,player){
			var tri=_status.event.getTrigger();
			var att=get.attitude(player,tri.player);
			if(att>0) return 0;
			if(att<0) return 1;
			return 2;
		}).set('prompt','私谋：你可以选择一项');
		"step 1"
		if(result.index==0){
			player.logSkill('XS_simou',trigger.player);
			player.draw();
			trigger.player.recover();
			event.finish();
		}
		else if(result.index==1) {
			player.chooseToDiscard('弃置一张牌，令'+get.translation(trigger.player)+'失去1点体力','he').set('ai',function(card){
				return 6-get.value(card);
			});
			player.logSkill('XKsanqianleidong');
		}
		else event.finish();
		"step 2"
		if(result.bool) {
			player.logSkill('XS_simou',trigger.player);
			trigger.player.loseHp();
		}
	},
	ai:{
		threaten:1.1,
	},
},
"XS_zhanye":{
	priority:10,
	trigger:{
		player:["useCard"],
	},
	filter:function (event,player){
		return event.card.name=='sha';
	},
	frequent:true,
	content:function (){
		"step 0"
		event.num1=Math.max(1,player.maxHp-player.hp);
		var lt=[];
		for(var i=0;i<=event.num1;i++) {
			lt.push(i.toString());
		}
		player.chooseControl(lt,true).set('ai',function(event){
			return lt.randomGet();
		}).set('prompt','你可使你使用的'+get.translation(trigger.card)+'被响应所需的闪数增加1个数值');
		"step 1"
		if(result.control!=0) {
			trigger.ADDshan=parseInt(result.control);
			event.num1-=parseInt(result.control);
		}
		"step 2"
		if(event.num1>0) {
			var lt=[];
			for(var i=0;i<=event.num1;i++) {
				lt.push(i.toString());
			}
			player.chooseControl(lt,true).set('ai',function(event){
				return lt.randomGet();
			}).set('prompt','你可使你使用的'+get.translation(trigger.card)+'的伤害基数增加1个数值');
		}
		else event.finish();
		"step 3"
		if(result.control!=0) {
			trigger.ADDdam=parseInt(result.control);
			event.num1-=parseInt(result.control);
		}
		"step 4"
		if(event.num1>0) {
			player.chooseTarget('你可为你的'+get.translation(trigger.card)+'额外指定至多'+event.num1+'名目标',[1,event.num1],false,function(card,player,target){
				var targetx=_status.event.getTrigger().targets;
				return player!=target&&!targetx.contains(target)&&player.canUse('sha',target)&&player.inRange(target);
			}).set('ai',function(target){
				var card1=_status.event.getTrigger().card;
				var eff=get.effect(target,card1,player,player);
				return eff;
			});
		}
		else event.finish();
		"step 5"
		if(result.bool){
			player.line(result.targets,'fire');
			trigger.targets.addArray(result.targets);   		
			game.log(result.targets,'成为了',trigger.card,'的目标');
		}
		game.delay(0.6);
    },
	group:["XS_zhanye_shan","XS_zhanye_dam"],
	subSkill:{
		shan:{
			trigger:{
				player:"shaBegin",
			},
			priority:12,
			direct:true,
			filter:function (event,player){
				if(typeof event.getParent().ADDshan!='number') return false;
				return !event.directHit;
			},
			priority:-1,
			content:function (){
				var num1=trigger.getParent().ADDshan;
				if(typeof trigger.shanRequired=='number'){
					trigger.shanRequired+=num1;
				}
				else{
					trigger.shanRequired=1+num1;
				}
			},
			sub:true,
		},
		dam:{
			priority:10,
			trigger:{
				player:"shaBegin",
			},
			direct:true,
			filter:function (event,player){
				if(typeof event.getParent().ADDdam!='number') return false;
				return true;
			},
			priority:-1,
			content:function (){
				var num1=trigger.getParent().ADDdam;
				trigger.baseDamage+=num1;
			},
			sub:true,
		},
	},
},
"XS_hedao":{
	trigger:{
		player:"phaseJieshuBegin",
	},
	priority:6,
	filter:function (event,player){
		return game.hasPlayer(function(current){
			return current!=player&&current.countCards('h');
		});
	},
	"prompt2":function (event,player){
		return '你可失去1点体力并获得至多2名其他角色各1张手牌，然后将2张手牌依次置于牌堆顶。';
	},		
	check:function (event,player){
		if(player.hp<2) return false;
		var num=game.countPlayer(function(current){
			var att=get.attitude(player,current);
			return current!=player&&current.countCards('h')&&att<=0;
		});
		return num>=2;
	},
	content:function (){
		"step 0"
		player.loseHp();
		"step 1"
		player.chooseTarget('获得至多2名其他角色各1张手牌',[1,2],function(card,player,target){
			return target!=player&&target.countCards('h');
		},true).set('ai',function(target){
			var att=get.attitude(player,target);
			return att<=0;
		});
		"step 2"
		if(result.bool){
			for(var i=0;i<result.targets.length;i++) {
				player.gainPlayerCard('获得'+get.translation(result.targets[i])+'的1张手牌。','h',result.targets[i],true);
			}
		}
		else event.finish();
		"step 3"
		if(player.countCards('h')>=2) {
			player.chooseCard('h',2,'将2张手牌按顺序置于牌堆顶（先选择的在上）。',true).set('ai',function(card){
				var val=get.value(card);
				return 6-val;
			});
		}
		else event.finish();
		"step 4"
		if(result.bool){
			event.cardss=result.cards.slice(0);
			player.lose(event.cardss,ui.special);
			player.$throw(event.cardss,1000,'nobroadcast');
		}
		else event.finish();
		"step 5"
		for(var i=event.cardss.length-1;i>=0;i--){
			event.cardss[i].fix();
			ui.cardPile.insertBefore(event.cardss[i],ui.cardPile.firstChild);
		}
		game.log(player,'将',event.cardss.length,'张牌置于牌堆顶');
	},
	ai:{
		expose:0.3,
	},
},
"XS_juqi":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:'phaseZhunbeiBefore',
	},
	init:function (player){
		player.storage.XS_juqi=[];
	},
	filter:function (event,player){
		return player.storage.XS_juqi.length<4&&player.maxHp>1;
	},
	check:function (event,player){
		if(!player.isDamaged()) return false;
		return game.hasPlayer(function(current){
			var att=get.attitude(player,current);
			if(!player.storage.XS_juqi.contains('XS_juqi0')||!player.storage.XS_juqi.contains('XS_juqi1')) return att>0;
			if(!player.storage.XS_juqi.contains('XS_juqi2')||!player.storage.XS_juqi.contains('XS_juqi3')) return att<0;
			return false;
		});
	},
	ai:{
		expose:0.4,
	},
	content:function(){
		"step 0"
		var conlist=[];
		event.list=[];
		for(var i=0;i<4;i++){
			if(player.storage.XS_juqi.contains('XS_juqi'+i)) continue;
			var skill='XS_juqi'+i;
			conlist.push(get.skillInfoTranslation(skill));
			event.list.push(skill);
		}
		if(!conlist.length) event.finish();
		player.chooseControlList(conlist,true).set('ai',function(event,player){
			var len=event.list.length-1;
			if(player.hasFriend()) {
				if(event.list[0]=='XS_juqi0'||event.list[0]=='XS_juqi1') return 0;
			}
			else {
				if(event.list[len]=='XS_juqi2'||event.list[len]=='XS_juqi3') return len;
			}
        }).set('prompt','选择一项效果令一名其他角色获得之');  
        "step 1"
		var ski=event.list[result.index];
		event.skills=ski;
		player.chooseTarget('令1名角色获得该效果：'+get.skillInfoTranslation(ski),true,function(card,player,target){
            return player!=target;
        }).set('ai',function(target){
			var att=get.attitude(_status.event.player,target);
			if(ski=='XS_juqi0'||ski=='XS_juqi1') {
				return att;
			}
			else {
				return -att+1;
			}
		}).set('ski',ski);
		"step 2"
		if(result.targets.length){
			player.line(result.targets[0],'blue');
			result.targets[0].addSkill(event.skills);
			player.storage.XS_juqi.push(event.skills);
			player.loseMaxHp();
		}
		else event.finish();
	},
},
"XS_juqi0":{
	mod:{
		maxHandcard:function (player,num){
			return num+1;
		},
	},
	trigger:{
		player:"phaseDrawBegin",
	},
	forced:true,
	content:function (){
		trigger.num++;
	},
},
"XS_juqi1":{
	trigger:{
		player:"phaseUseAfter",
	},
	filter:function (event,player){
		return !player.hasSkill('XS_juqi1_temp');
	},
	forced:true,
	content:function (){
		player.addTempSkill('XS_juqi1_temp');
		player.stat.push({card:{},skill:{}});
		player.phaseUse();
	},
    subSkill:{
        temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_juqi2":{
	mod:{
		cardEnabled:function(card,player){
			var evt=player.getLastUsed();
			if(evt&&evt.card) {
				var card1=evt.card;
				return get.number(card1)<get.number(card);
			}
		}		
	},
},
"XS_juqi3":{
	trigger:{
		player:"phaseDiscardAfter",
	},
	filter:function (event,player){
		if(!event.cards) return false;
		return player.getHistory('useCard').length>0;
	},
	forced:true,
	content:function (){
		player.loseHp();
	},
},
"XS_chenfu":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:["loseMaxHpAfter","damageAfter"],
	},
	forced:true,
	content:function (){
		if(trigger.name=='loseMaxHp') {
			player.recover();
		}
		else {
			player.gainMaxHp();
		}
	},
	ai:{
		maixie:true,
		"maixie_hp":true,
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')) {
					if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
					if(!target.hasFriend()) return;
					if(target.hp>3) return [1,2];
					if(target.hp==3) return [1,1.4];
					return [1,0.8];
				}
			},
		},
	},
},
"XS_jiuyi":{
	trigger:{
		source:"damageBefore",
	},
	priority:2,
	filter:function (event,player){
		return event.card&&event.card.name=='juedou'&&player.hasSkill('jiu');
	},
	direct:true,
	content:function (){
		'step 0'
		if(player.storage.jiu) {
			trigger.num+=player.storage.jiu;
		}
		'step 1'
		game.broadcastAll(function(player){
			player.removeSkill('jiu');
		},player);
		if(player.node.jiu){
			player.node.jiu.delete();
			player.node.jiu2.delete();
			delete player.node.jiu;
			delete player.node.jiu2;
		}
		delete player.storage.jiu;
	},
	ai:{
		damageBonus:true,
	},
	group:["XS_jiuyi_sha","XS_jiuyi_juedou"],
	subSkill:{
        sha:{
			audio:2,
			trigger:{player:'useCard1'},
			forced:true,
			priority:999,
			firstDo:true,
			filter:function(event,player){
				return event.card&&event.card.name=='sha'&&player.hasSkill('jiu');
			},
			logTarget:'targets',
			content:function(){
				"step 0"
				event.tars=trigger.targets.slice(0);
				"step 1"
				if(event.tars.length) {
					var target=event.tars.shift();
					event.current=target;
				}
				else event.finish();
				"step 2"
				var id=event.current.playerid;
				var map=trigger.customArgs;
				if(!map[id]) map[id]={};
				if(typeof map[id].shanRequired=='number'){
					map[id].shanRequired++;
				}
				else{
					map[id].shanRequired=2;
				}
				"step 3"
				event.goto(1);
			},
			ai:{
				directHit_ai:true,
				skillTagFilter:function(player,tag,arg){
					if(arg.card.name!='sha'||arg.target.countCards('h','shan')>1) return false;
				},
			},
        },
		juedou:{
			audio:2,
			trigger:{player:'useCard'},
			forced:true,
			priority:999,
			firstDo:true,
			logTarget:'targets',
			filter:function(event,player){
				return event.card.name=='juedou'&&player.hasSkill('jiu');
			},
			content:function(){
				"step 0"
				event.tars=trigger.targets.slice(0);
				"step 1"
				if(event.tars.length) {
					var target=event.tars.shift();
					event.current=target;
				}
				else event.finish();
				"step 2"
				var idt=event.current.playerid;
				var map=trigger.customArgs;
				if(!map[idt]) map[idt]={};
				if(!map[idt].shaReq) map[idt].shaReq={};
				if(!map[idt].shaReq[idt]) map[idt].shaReq[idt]=1;
				map[idt].shaReq[idt]++;
				"step 3"
				event.goto(1);
			},
			ai:{
				directHit_ai:true,
				skillTagFilter:function(player,tag,arg){
					if(arg.card.name!='juedou'||Math.floor(arg.target.countCards('h','sha')/2)>player.countCards('h','sha')) return false;
				}
			},
        },
    },
},
"XS_lungong":{
	audio:"ext:血色衣冠:2",
	unique:true,
	zhuSkill:true,
    trigger:{
        global:"damageAfter",
    },
	direct:true,
	filter:function (event,player){
		if(player.hasSkill('XS_lungong_temp')) return false;
		if(!player.hasZhuSkill('XS_lungong')) return false;
		if(!event.card||event.card.name!='sha'||!event.notLink()) return false;
		if(!event.source||!event.source.isAlive()) return false;
		if(event.source.group!=player.group) return false;
		return game.hasPlayer(function(current){
			return current!=event.source&&current.group==player.group&&current.countCards('he',{type:'equip'});
		});
	},
	content:function (){
		"step 0"
		var tars=game.filterPlayer(function(current){
			return current.group==player.group&&current!=trigger.source&&current.countCards('he',{type:'equip'});
		});
		event.players=tars.sort(lib.sort.seat);
		"step 1"
		if(event.players.length) {
			var player1=event.players.shift();
			event.current=player1;
		}
		else event.finish();
		"step 2"
		if(event.current){
			var cds=event.current.getCards('he',{type:'equip'});
			event.current.chooseCardButton('论功：是否交给'+get.translation(trigger.source)+'1张装备牌?',cds,false).ai=function(button){
				var trigger=_status.event.getTrigger();
				var att=get.attitude(event.current,trigger.source);
				return att>0&&6-get.value(button.link);
			}
		}
		else event.goto(1);
		"step 3"
		if(result.bool){
			player.addTempSkill('XS_lungong_temp');
			player.logSkill('XS_lungong',trigger.source);
			trigger.source.gain(result.links[0],event.current,'giveAuto');
			trigger.source.equip(result.links[0]);
			game.delay(0.7);
        }
		else event.goto(1);
    },
	subSkill:{
		temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_shixian":{
	unique:true,
	zhuSkill:true,
	trigger:{
		global:["discardAfter"],
	},
	priority:19,
	filter:function (event,player){
		if(!player.hasZhuSkill('XS_shixian')) return false;
		return event.getParent(2).name=='XS_shouba'&&event.player.countCards('he')&&event.player.group==player.group;
	},
	direct:true,
	content:function (){
		"step 0"
		event.pla=player;	
		trigger.player.chooseCard(get.prompt('XS_shixian'),'he',1,'你可交给'+get.translation(player)+'1张牌，令其本回合发动“图霸”的次数+1。').set('ai',function(card){
			var trigger=_status.event.getTrigger();
			var att=get.attitude(trigger.player,event.pla);
			var gp=event.pla.group;
			var num=game.countPlayer(function(current){
				return current!=event.pla&&current.group!=gp;
			});
			if(num>2) return -1;
			else {
				if(att>0&&trigger.player.countCards('he')>1) {
					return 5-get.value(card);
				}
				else return -1;
			}
		});
		"step 1"
		if(result.bool) {
			player.gain(result.cards[0],trigger.player,'giveAuto');
			if(player.getStat().skill.XS_shouba>0) {
				player.getStat().skill.XS_shouba--;
			}
			trigger.player.logSkill('XS_shixian',player); 
			game.log(trigger.player,'令',player,'本回合发动“图霸”的次数+1');
		}
	},
},
"XS_baowei":{
	mark:true,
    marktext:"暴",
	unique:true,
	zhuSkill:true,
	limited:true,
	skillAnimation:true,
	animationColor:'wood',
	audio:"ext:血色衣冠:2",
    enable:"phaseUse",
    init:function (player){
        player.storage.XS_baowei=false;
    },
    intro:{
        content:"limited",
    },
    filter:function (event,player){
		if(!player.hasZhuSkill('XS_baowei')) return false;
        return !player.storage.XS_baowei&&player.isDamaged();
    },
	multitarget:true,
	multiline:true,
	selectTarget:function (){
        var player=_status.event.player;
		var num=player.getDamagedHp();
        return [1,num];
    },
	filterTarget:function (card,player,target){
		var att=get.attitude(player,target),plg=player.group;
        return target.group==plg&&att>0;
    },
    content:function (){
		"step 0"
        player.awakenSkill('XS_baowei');
        player.storage.XS_baowei=true;
		var tars=targets.slice(0);  
		event.targets=tars.sort(lib.sort.seat);
		"step 1"
		if(event.targets.length) {
			var target=event.targets.shift();
			event.current=target;
		}
		else event.finish();
		"step 2"
		if(event.current){
			event.current.chooseControl().set('choiceList',['视为使用1张决斗','视为使用1张杀']).set('ai',function(event,player){
				if(event.current.countCards('h','sha')) return 0;
				if(event.current.hasSkill('XS_bawang')) return 0;
				return 1;
			});	
		}
		else event.goto(1);
		"step 3"
		if(result.index==0){
			event.current.chooseUseTarget({name:"juedou",isCard:true},true);
		}
		else{
			event.current.chooseUseTarget({name:"sha",isCard:true},true,true);
		}
		event.goto(1);
    },
	ai:{
		order:2,
		result:{
			player:function(player){
				var num1=game.countPlayer(function(current){
					return get.attitude(player,current)>=0&&current.group=='wu';
				});
				var num2=player.maxHp-player.hp;
				if(num2>=num1) return 10;
				return -2;
			},
			target:function (player,target){
				return 1;
			},
		}
	},
},	
"XS_bingbian":{
	unique:true,
	zhuSkill:true,
    trigger:{
        player:"damageAfter",
    },
	filter:function(event,player){
		if(!player.hasZhuSkill('XS_bingbian')) return false;
		if(!event.source||!event.source.isAlive()) return false;
		if(player.hasSkill('XS_bingbian_temp')) return false;
		return game.hasPlayer(function(current){
			return current!=player&&current.group==player.group&&current.canUse('sha',event.source);
		});
	},
	check:function (event,player){
        return get.attitude(player,event.source)<=0;
    },
    content:function (){
		"step 0"
		var tars=game.filterPlayer(function(current){
			return current.group==player.group&&current!=player&&current.canUse('sha',trigger.source);
		});
		event.players=tars.sort(lib.sort.seat);
		"step 1"
		if(event.players.length) {
			var player1=event.players.shift();
			event.current=player1;
		}
		else event.finish();
		"step 2"
		if(event.current){
			event.current.chooseToUse({name:'sha'},trigger.source,-1,'兵变：是否对'+get.translation(trigger.source)+'使用1张杀？').set('targetRequired',true);
		}
		else event.goto(1);
		"step 3"
		if(result.bool==true){
			if(!player.hasSkill('XS_bingbian_temp')){
				player.addTempSkill('XS_bingbian_temp','roundStart');
			}
			game.delay();
		}
    },
	subSkill:{
        temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_enwei":{
	audio:"ext:血色衣冠:2",
	unique:true,
	zhuSkill:true,
	trigger:{
		player:["damageAfter"],
	},
	direct:true,
	filter:function(event,player){
		if(event.num<1) return false;
		if(!player.hasZhuSkill('XS_enwei')) return false;
		if(player.hasSkill('XS_enwei_temp')) return false;		
		return game.hasPlayer(function(current){
			return current!=player&&current.group==player.group;
		});
	},
	content:function(){
		"step 0"
		player.chooseTarget(get.prompt2('XS_enwei'),1,function(card,player,target){
			return target!=player&&target.group==player.group;
		}).set('ai',function(target){
			var player=_status.event.player;
			var att=get.attitude(player,target);
			if(target.hasSkill('XS_dianbing')) att=att*2;
			if(target.hasSkill('XS_yinzhi')) att=att*2.5;
			if(target.hasSkill('XS_zhanye')) att=att*1.5;
			return att;
		});
		"step 1"
		if(result.bool){
			event.target1=result.targets[0];	
			player.logSkill('XS_enwei',event.target1);
			player.addTempSkill('XS_enwei_temp','roundStart');
			event.target1.damage(player,1,'nocard');		
		}
		else event.finish();
		"step 2"
		event.target1.recover();
		event.target1.stat.push({card:{},skill:{}});
		event.target1.phaseUse();
	},
	subSkill:{
        temp:{
			charlotte:true,
			sub:true,
        },
    },
},
"XS_xinshi":{
	unique:true,
	trigger:{
		target:'taoAfter'
	},
	zhuSkill:true,
	check:function (event,player){
		return get.attitude(player,event.player)>0;
	},
	logTarget:"player",
	filter:function(event,player){
		if(event.player==player) return false;
		if(!player.hasZhuSkill('XS_xinshi')) return false;
		if(event.player.group!=player.group) return false;
		return true;
	},
	content:function(){
		trigger.player.draw();
	},
},
"XS_fadu":{
	unique:true,
	zhuSkill:true,
	trigger:{
		player:"gainAfter",
	},
	audio:"ext:血色衣冠:2",
	direct:true,
	filter:function (event,player){
		if(player.hasSkill('XS_fadu_temp')) return false;
		if(!player.hasZhuSkill('XS_fadu')) return false;
		if(!event.source||!event.source.isAlive()) return false;
		if(event.source==player) return false;
		if(event.source.group!=player.group) return false;
		return player.countCards('h');
    },
	content:function (){
		"step 0"
		var att=get.attitude(player,trigger.source);
		player.chooseCard(get.prompt('XS_fadu',trigger.source),'h','是否交给'+get.translation(trigger.source)+'一张手牌？').set('ai',function(card){
			var val=get.value(card);
			if(_status.event.att>0){
				return 4-val;
			}
			else return -val;
		}).set('att',att);
		"step 1"
		if(result.bool){
			player.addTempSkill('XS_fadu_temp');
			player.logSkill('XS_fadu',trigger.source);
			var cards=result.cards[0];
			trigger.source.gain(cards,player,'giveAuto');
        }
		else event.finish();		
	},
	subSkill:{
		temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_yingduan":{
	audio:"ext:血色衣冠:2",
	unique:true,
	zhuSkill:true,
    trigger:{
        global:"gainAfter",
    },
	direct:true,
	filter:function (event,player){
		if(player.hasSkill('XS_yingduan_temp')) return false;
		if(!player.hasZhuSkill('XS_yingduan')) return false;
		if(event.player==player) return false;
		if(!event.player.isPhaseUsing()) return false;
		if(event.player.group!=player.group) return false;
		return player.countCards('h');
	},
	content:function (){
		"step 0"
		event.pla=player;
		trigger.player.chooseBool(get.prompt('XS_yingduan'),'是否令'+get.translation(player)+'可选择重铸任意张手牌？').set('ai',function(){    
			var pla=_status.event.getTrigger().player;
			return get.attitude(pla,event.pla)>0;           
		});
		"step 1"
		if(result.bool){
			player.chooseCardButton('你可重铸任意张手牌',player.getCards('h'),[1,Infinity],false).ai=function(button){
                return 5-get.value(button.link);
            }  
        } 
		else event.finish();
		"step 2"
		if(result.bool){
			player.logSkill('XS_yingduan');
			player.addTempSkill('XS_yingduan_temp');
			var cards=result.links;
			player.chongzhuCards(cards);
        } 
    },
	subSkill:{
		temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_bishi":{
	trigger:{
		global:["phaseDrawBegin"],
	},
	forced:true,
	filter:function (event,player){
		return event.player.countCards('e')==player.countCards('e');
	},
	content:function (){
		trigger.num++;
	},
},
"XS_hengge":{
	ai:{
		threaten:1.2,
	},
	group:["XS_hengge_gain","XS_hengge_lose"],
    subSkill:{
        gain:{
			trigger:{
				global:["equipAfter"],
			},
			filter:function (event,player){
				if(!event.player.isAlive()) return false;
				if(event.player==player) return false;
				return player.countCards('e')!=event.player.countCards('e');
			},
			"prompt2":function (event,player){
				if(player.countCards('e')<event.player.countCards('e')){
					return '你可以令'+get.translation(event.player)+'弃置1张牌。';
				}
				else if(player.countCards('e')>event.player.countCards('e')){
					return '你可以令'+get.translation(event.player)+'摸1张牌。';
				}
			},
			check:function (event,player){
				var att=get.attitude(player,event.player);
				if(player.countCards('e')<event.player.countCards('e')) {
					return att<=0;
				}
				else if(player.countCards('e')>event.player.countCards('e')){
					return att>0;
				}
				return false;
			},
			logTarget:'player',
			content:function (){
				"step 0"
				if(player.countCards('e')<trigger.player.countCards('e')) {
					trigger.player.chooseToDiscard('he',1,true);
				}
				"step 1"
				if(player.countCards('e')>trigger.player.countCards('e')){
					trigger.player.draw();
				}
			},
			ai:{
				expose:0.3,
			},
            sub:true,
        },
		lose:{
			trigger:{
				global:["loseAfter"],
			},
			filter:function (event,player){
				if(!event.player.isAlive()) return false;
				if(event.player==player) return false;
				if(player.countCards('e')==event.player.countCards('e')) return false;
				return event.es&&event.es.length>0;
			},
			"prompt2":function (event,player){
				if(player.countCards('e')<event.player.countCards('e')){
					return '你可以令'+get.translation(event.player)+'摸1张牌。';
				}
				else if(player.countCards('e')>event.player.countCards('e')){
					return '你可以令'+get.translation(event.player)+'弃置1张牌。';
				}
			},
			check:function (event,player){
				var att=get.attitude(player,event.player);
				if(player.countCards('e')<event.player.countCards('e')) {
					return att>0;
				}
				else if(player.countCards('e')>event.player.countCards('e')){
					return att<=0;
				}
				return false;
			},
			logTarget:'player',
			content:function (){
				"step 0"
				if(player.countCards('e')<trigger.player.countCards('e')) {			
					trigger.player.draw();
				}
				"step 1"
				if(player.countCards('e')>trigger.player.countCards('e')){
					trigger.player.chooseToDiscard('he',1,true);
				}
			},
			ai:{
				expose:0.3,
			},
			sub:true,
		},	
    },
},
"XS_xiandeng":{
	trigger:{
		player:'phaseUseBefore'
	},
	filter:function(event,player){
		return player.countCards('h')>0;
	},
	priority:20,
	check:function (event,player){
		if(player.isDamaged()&&player.countCards('h','tao')) return false;
		if(player.countCards('h',{name:['shan','wuxie']})>1) return false;
		if(player.countCards('h','sha')<2) return false;
		return true;
	},
	content:function(){
		player.addTempSkill('XS_xiandeng_mark',{player:'phaseUseAfter'});
	},
    subSkill:{
        mark:{
			charlotte:true,
			mod:{
				cardUsable:function(card,player){
					return Infinity;
				},
				targetInRange:function (card,player,target,now){
					return true;
				},
			},
			mark:true,
			marktext:"先",
			intro:{
				content:"你使用牌无距离、次数限制，出牌阶段结束你弃置所有手牌。",
			},
			onremove:function(player){
				player.discard(player.getCards('h'));
			},
			ai:{
			　　effect:{
		　　		player:function(card,player){
						if(get.tag(card,'damage')) return [1,2];
					}
				}
			},
            sub:true,
        },
    },
},
"XS_yongjiang":{
	audio:2,
	group:["XS_yongjiang_1","XS_yongjiang_2"],
	subSkill:{
        1:{
			trigger:{
				source:"damageBegin",
			},
			filter:function (event,player){
				if(event.player==player) return false;
				if(event.player.countCards('h')>=player.countCards('h')) return false;
				if(player.hasSkill('XS_yongjiang_temp1')) return false;
				return event.num>0;
			},
			priority:17,
			forced:true,
			content:function (){
				"step 0"
				player.draw(2);
				if(!player.hasSkill('XS_yongjiang_temp1')){
					player.addTempSkill('XS_yongjiang_temp1','roundStart');
				}	
				"step 1"
				trigger.num--;
			},
			ai:{
				effect:{
					player:function (card,player,target){
						if(get.tag(card,'damage')) {
							if(player.hasSkill('XS_yongjiang_temp1')) return;
							if(target.countCards('h')<player.countCards('h')) return [0,2];
						}
					},
				},
			},
            sub:true,
        },
		2:{
			trigger:{
				player:"damageBegin",
			},
			filter:function (event,player){
				if(!event.source||event.source==player) return false;
				if(event.source.countCards('h')<=player.countCards('h')) return false;
				if(player.hasSkill('XS_yongjiang_temp2')) return false;
				return event.num>0;
			},
			priority:17,
			forced:true,
			content:function (){
				"step 0"
				player.recover();
				if(!player.hasSkill('XS_yongjiang_temp2')){
					player.addTempSkill('XS_yongjiang_temp2','roundStart');
				}	
				"step 1"
				trigger.num--;
			},
			ai:{
				effect:{
					target:function (card,player,target){
						if(get.tag(card,'damage')) {
							if(player.hasSkillTag('jueqing')) return;
							if(target.hasSkill('XS_yongjiang_temp2')) return;
							if(player.countCards('h')<=target.countCards('h')) return;
							if(!target.hasFriend()) return;
							if(target.isDamaged()) return [0,2];
							else return 0;
						}
					},
				},
			},
            sub:true,
        },
		temp1:{
			charlotte:true,
            sub:true,
        },
		temp2:{
			charlotte:true,
            sub:true,
        },
    },
},			
"XS_wanwei":{
	derivation:['XS_qiefu'],
	trigger:{global:'dying'},
	filter:function(event,player){
		return event.player.hp<1;
	},
	priority:233,
	limited:true,
	skillAnimation:true,
	animationColor:'fire',
	logTarget:'player',
	check:function(event,player){
		return event.player!=player?(get.attitude(player,event.player)>1&&player.hp>1):true;
	},
	content:function(){
		'step 0'
		player.awakenSkill('XS_wanwei');
		player.loseHp();
		'step 1'
		trigger.player.recover(1-trigger.player.hp);
		'step 2'
		player.draw(player.getDamagedHp());
		player.addSkill('XS_qiefu');
		player.addSkill('XS_qiefu2');
	},
	ai:{
		expose:0.5,
	}
},	
"XS_qiefu":{
	derivation:['XS_biju'],
	trigger:{global:'phaseAfter'},
	filter:function(event,player){
		if(event.player==player||!event.player.getStat('damage')) return false;
		var list=[];
		var listm=[];
		var listv=[];
		if(event.player.name1!=undefined) listm=lib.character[event.player.name1][3];
		else listm=lib.character[event.player.name][3];
		if(event.player.name2!=undefined) listv=lib.character[event.player.name2][3];
		listm=listm.concat(listv);
		var func=function(skill){
			var info=get.info(skill);
			if(!info||info.charlotte) return false;
			return true;
		};
		for(var i=0;i<listm.length;i++){
			if(func(listm[i])) list.add(listm[i]);
		}
		return list.length>0;
	},
	priority:133,
	limited:true,
	skillAnimation:true,
	animationColor:'fire',
	logTarget:'player',
	check:function(event,player){
		return get.attitude(player,event.player)<0;
	},
	content:function(){
		'step 0'
		player.awakenSkill('XS_qiefu');
		var list=[];
		var listm=[];
		var listv=[];
		if(trigger.player.name1!=undefined) listm=lib.character[trigger.player.name1][3];
		else listm=lib.character[trigger.player.name][3];
		if(trigger.player.name2!=undefined) listv=lib.character[trigger.player.name2][3];
		listm=listm.concat(listv);
		var func=function(skill){
			var info=get.info(skill);
			if(!info||info.charlotte) return false;
			return true;
		};
		for(var i=0;i<listm.length;i++){
			if(func(listm[i])) list.add(listm[i]);
		}
		event.skills=list;
		player.chooseControl(list).set('prompt','获得'+get.translation(trigger.player)+'的一个技能并令其失效，直至其下回合结束');
		'step 1'
		player.addSkill('XS_biju');
		player.addTempSkill(result.control,{player:'dieAfter'});
		player.popup(result.control,'thunder');
		player.storage.XS_qiefu=[result.control];
		player.storage.XS_qiefu_player=trigger.player;
		trigger.player.storage.XS_qiefu=[result.control];
		trigger.player.addTempSkill('XS_qiefu1',{player:'phaseJieshuAfter'});
		game.log(player,'获得了技能','#g【'+get.translation(result.control)+'】')
	},
	ai:{
		expose:0.5,
	},	
},	
"XS_qiefu1":{
	init:function(player,skill){
		player.disableSkill(skill,player.storage.XS_qiefu);
	},
	onremove:function(player,skill){
		player.enableSkill(skill);
	},
	locked:true,
	mark:true,
	charlotte:true,
	intro:{
		content:function(storage,player,skill){
			var list=[];
			for(var i in player.disabledSkills){
				if(player.disabledSkills[i].contains(skill)) list.push(i);
			};
			if(list.length){
				var str='失效技能：';
				for(var i=0;i<list.length;i++){
					if(lib.translate[list[i]+'_info']) str+=get.translation(list[i])+'、';
				};
				return str.slice(0,str.length-1);
			};
		},
	},
},
"XS_qiefu2":{
	charlotte:true,
	trigger:{global:['phaseJieshuAfter','dieAfter'],},
	filter:function(event,player){
		if(!player.storage.XS_qiefu_player||!player.storage.XS_qiefu) return false;
		return player.storage.XS_qiefu_player==event.player&&player.storage.XS_qiefu.length;
	},
	direct:true,
	content:function(){
		player.removeSkill(player.storage.XS_qiefu[0]);
		delete player.storage.XS_qiefu_player;
		player.storage.XS_qiefu=[];
	},
},
"XS_biju":{
	trigger:{player:['damageBegin4','loseHpBegin']},
	priority:-999,
	unique:true,
	limited:true,
	skillAnimation:true,
	animationColor:'fire',
	forceunique:true,
	filter:function(event,player){
		return event.num>0;
	},
	check:function(event,player){
		return event.num<=player.getDamagedHp();
	},
	content:function(){
		'step 0'
		player.awakenSkill('XS_biju');
		var tp=trigger.num;
		trigger.num=0;
		player.recover(tp);
		'step 1'
		var st=lib.characterSort['XSYG'],list=[];
		list=list.concat(st['XS_shsd']).concat(st['XS_xqwl']).concat(st['XS_zzbj']);
		var players=game.players.concat(game.dead);
		for(var i=0;i<players.length;i++){
			list.remove(players[i].name);
			list.remove(players[i].name1);
			list.remove(players[i].name2);
		}
		list=list.randomGets(4);
		var skills=[];
		for(var i of list){
			if(lib.character[i][3]) {
				skills.addArray((lib.character[i][3]).filter(function(skill){
					var info=get.info(skill);
					return info&&!info.hiddenSkill&&!info.charlotte;
				}));
			}
		}
		if(!list.length||!skills.length){event.finish();return;}
		if(player.isUnderControl()){
			game.swapPlayerAuto(player);
		}
		var switchToAuto=function(){
			_status.imchoosing=false;
			event._result={
				bool:true,
				skills:skills.randomGets(1),
			};
			if(event.dialog) event.dialog.close();
			if(event.control) event.control.close();
		};
		var chooseButton=function(list,skills){
			var event=_status.event;
			if(!event._result) event._result={};
			event._result.skills=[];
			var rSkill=event._result.skills;
			var dialog=ui.create.dialog('请选择获得一个技能',[list,'character'],'hidden');
			event.dialog=dialog;
			var table=document.createElement('div');
			table.classList.add('add-setting');
			table.style.margin='0';
			table.style.width='100%';
			table.style.position='relative';
			for(var i=0;i<skills.length;i++){
				var td=ui.create.div('.shadowed.reduce_radius.pointerdiv.tdnode');
				td.link=skills[i];
				table.appendChild(td);
				td.innerHTML='<span>'+get.translation(skills[i])+'</span>';
				td.addEventListener(lib.config.touchscreen?'touchend':'click',function(){
					if(_status.dragged) return;
					if(_status.justdragged) return;
					_status.tempNoButton=true;
					setTimeout(function(){
						_status.tempNoButton=false;
					},500);
					var link=this.link;
					if(!this.classList.contains('bluebg')){
						if(rSkill.length>=1) return;
						rSkill.add(link);
						this.classList.add('bluebg');
					}
					else{
						this.classList.remove('bluebg');
						rSkill.remove(link);
					}
				});
			}
			dialog.content.appendChild(table);
			dialog.add('　　');
			dialog.open();
			event.switchToAuto=function(){
				event.dialog.close();
				event.control.close();
				game.resume();
				_status.imchoosing=false;
			};
			event.control=ui.create.control('ok',function(link){
				event.dialog.close();
				event.control.close();
				game.resume();
				_status.imchoosing=false;
			});
			for(var i=0;i<event.dialog.buttons.length;i++){
				event.dialog.buttons[i].classList.add('selectable');
			}
			game.pause();
			game.countChoose();
		};
		if(event.isMine()){
			chooseButton(list,skills);
		}
		else if(event.isOnline()){
			event.player.send(chooseButton,list,skills);
			event.player.wait();
			game.pause();
		}
		else{
			switchToAuto();
		}
		'step 2'
		var map=event.result||result;
		if(map&&map.skills&&map.skills.length){
			for(var i of map.skills) player.addSkillLog(i);
		}
		game.broadcastAll(function(list){
			game.expandSkills(list);
			for(var i of list){
				var info=lib.skill[i];
				if(!info) continue;
				if(!info.audioname2) info.audioname2={};
				info.audioname2.old_yuanshu='weidi';
			}
		},map.skills);
		'step 3'
		var lt=['魏','蜀','吴','群'];
		player.chooseControl(lt).set('ai',function(event){
			return lt.randomGet();
		}).set('prompt','你可将更改为任意势力');
		'step 4'
		var gro;
		switch(result.control){
			case '魏':gro='wei';break;
			case '蜀':gro='shu';break;
			case '吴':gro='wu';break;
			case '群':gro='qun';break;
		}	
		game.log(player,'势力变更为',result.control);
		player.group=gro;
		if(player.name) lib.character[player.name][1]=gro;
		if(player.name1) lib.character[player.name1][1]=gro;
		if(player.name2) lib.character[player.name2][1]=gro; 
	},
},	
"XS_zhinang":{
    audio:2,
	createDialog:function (player,target,onlylist){
		var bannedList=['XS_shiwu','XS_tongwen','XS_congzheng'];
        var names=[];
        var list=[];
        if(target.name&&!target.isUnseen(0)) names.add(target.name);
        if(target.name1&&!target.isUnseen(0)) names.add(target.name1);
        if(target.name2&&!target.isUnseen(1)) names.add(target.name2);
        var pss=player.getSkills();
        for(var i=0;i<names.length;i++){
            var info=lib.character[names[i]];
            if(info){
                var skills=info[3];
                for(var j=0;j<skills.length;j++){
                    if(lib.translate[skills[j]+'_info']&&lib.skill[skills[j]]&&
                        !lib.skill[skills[j]].unique&&!lib.skill[skills[j]].zhuSkill&&
                        !pss.contains(skills[j])&&!bannedList.contains(skills[j])){
                        list.push(skills[j]);
                    }
                }
            }
        }
        if(onlylist) return list;
        var dialog=ui.create.dialog('forcebutton');
        dialog.add('选择获得一项技能');
        _status.event.list=list;
        var clickItem=function(){
            _status.event._result=this.link;
            game.resume();
        };
        for(i=0;i<list.length;i++){
            if(lib.translate[list[i]+'_info']){
                var translation=get.translation(list[i]);
                if(translation[0]=='新'&&translation.length==3){
                    translation=translation.slice(1,3);
                }
                else{
                    translation=translation.slice(0,2);
                }
                var item=dialog.add('<div class="popup pointerdiv" style="width:80%;display:inline-block"><div class="skill">【'+
                translation+'】</div><div>'+lib.translate[list[i]+'_info']+'</div></div>');
                item.firstChild.addEventListener('click',clickItem);
                item.firstChild.link=list[i];
            }
        }
        dialog.add(ui.create.div('.placeholder'));
        return dialog;
    },	
	trigger:{
		player:"phaseBefore",
	},
	filter:function (event,player){
		return player.storage.disableEquip.length>0;
	},
	check:function (event,player){
		return player.storage.disableEquip.length>2;
	},
	"prompt2":function (event,player){
		var nm=player.storage.disableEquip.length;
		return '是否依次视为使用至多'+nm+'张不同的普通锦囊牌，如此你跳过该回合？';
	},
	content:function (){
		"step 0"
		event.nm=player.storage.disableEquip.length;
		event.lt=[];
		"step 1"
		var tricklist=[];
		for(var i=0;i<lib.inpile.length;i++){
			if(get.type(lib.inpile[i])=='trick'&&!event.lt.contains(lib.inpile[i])) tricklist.push(['锦囊','',lib.inpile[i]]);
		}
		player.chooseButton(['你可视为使用1张普通锦囊牌',[tricklist,'vcard']],false).set('ai',function(button){
			var recover=0,lose=1,players=game.filterPlayer();
			for(var i=0;i<players.length;i++){
				if(players[i].hp==1&&get.damageEffect(players[i],player,player)>0&&!players[i].hasSha()){
					return (button.link[2]=='juedou')?2:-1;
				}
				if(!players[i].isOut()){
					if(players[i].hp<players[i].maxHp){
						if(get.attitude(player,players[i])>0){
							if(players[i].hp<2){
								lose--;
								recover+=0.5;
							}
							lose--;
							recover++;
						}
						else if(get.attitude(player,players[i])<0){
							if(players[i].hp<2){
								lose++;
								recover-=0.5;
							}
							lose++;
							recover--;
						}
					}
					else{
						if(get.attitude(player,players[i])>0){
							lose--;
						}
						else if(get.attitude(player,players[i])<0){
							lose++;
						}
					}
				}
			}
			if(lose>recover&&lose>0) {
				if(button.link[2]=='nanman') return 2;
				if(button.link[2]=='wanjian') return 1;
			}
			if(lose<recover&&recover>0) return (button.link[2]=='taoyuan')?1:-1;
			return (button.link[2]=='wuzhong'||button.link[2]=='guohe')?1:-1;
		});
		"step 2"
		if(result&&result.bool&&result.links[0]){
			event.nm--;
			event.lt.push(result.links[0][2]);
			player.chooseUseTarget({name:result.links[0][2],nature:result.links[0][3],isCard:true},false);
		}
		else event.goto(4);
		"step 3"
		if(event.nm>0) event.goto(1);
		"step 4"
		trigger.cancel();
	},
},	
"XS_kanyu":{
	intro:{
		content:function (storage){
			if(!storage.length) return '本轮未因“堪舆”使用过基本牌';
			else {
				var str='本轮因“堪舆”使用过的基本牌：'+get.translation(storage);
				return str;
			}
		},
	},
	init:function (player){
		player.storage.XS_kanyu=[];
	},
	usable:1,
	enable:"chooseToUse",
	filter:function (event,player){
		if(player.storage.disableEquip==undefined||player.storage.disableEquip.length>=5) return false;
		if(player.storage.XS_kanyu.length>=4) return false;
		if(event.filterCard({name:'sha'},player,event)&&!player.storage.XS_kanyu.contains('sha')) return true;
		if(event.filterCard({name:'jiu'},player,event)&&!player.storage.XS_kanyu.contains('jiu')) return true;
		if(event.filterCard({name:'tao'},player,event)&&!player.storage.XS_kanyu.contains('tao')) return true;
		if(event.filterCard({name:'shan'},player,event)&&!player.storage.XS_kanyu.contains('shan')) return true;
		return false;
	},
	chooseButton:{
		dialog:function (event,player){
			var list=[];
			if(event.filterCard({name:'sha'},player,event)&&!player.storage.XS_kanyu.contains('sha')){list.push(['基本','','sha']);}
			if(event.filterCard({name:'tao'},player,event)&&!player.storage.XS_kanyu.contains('tao')) {list.push(['基本','','tao']);}
			if(event.filterCard({name:'jiu'},player,event)&&!player.storage.XS_kanyu.contains('jiu')) {list.push(['基本','','jiu']);}
			if(event.filterCard({name:'shan'},player,event)&&!player.storage.XS_kanyu.contains('shan')) {list.push(['基本','','shan']);}
			return ui.create.dialog("将废除一个装备栏，视为使用一张基本牌",[list,"vcard"],"hidden");
		},
		check:function (button){
			var player=get.player();
			var card={name:button.link[2]};
			if(card.name=='shan') return 3;
			if(game.hasPlayer(function(current){
				return player.canUse({name:'tao'},current)&&get.effect(current,{name:'tao'},player,player)>0;
			})&&card.name=='tao'){
				return 4;
			}
			return 0;
		},
		backup:function (links,player){
			return {
				filterCard:function (card){
					return false;
				},
				popname:true,
				selectCard:-1,
				check:function(card,player,target){
					return true;
				},
				viewAs:{
					name:links[0][2],
				}, 
				precontent:function(){
					'step 0'
					var list=[];
					for(var i=1;i<6;i++){
						if(player.isDisabled(i)) continue;
						list.push('equip'+i);
					}
					player.chooseControl(list).set('ai',function(event){
						return list.randomGet();
					}).set('prompt','请选择废除一个装备栏');
					'step 1'
					player.disableEquip(result.control);
					player.storage.XS_kanyu.push(event.result.card.name);
					player.markSkill('XS_kanyu');
				},
			}
		},
		prompt:function (links,player){
			return '视为使用1张'+get.translation(links[0][2]);
		},
	},
	ai:{
		order:0.5,
		save:true,
		respondSha:true,
		respondShan:true,
		skillTagFilter:function (player,tag,arg){
			if(tag=='save'&&player.storage.XS_kanyu.contains('tao')&&player.storage.XS_kanyu.contains('jiu')){
				return false;
			}
			if(tag=='respondSha'&&player.storage.XS_kanyu.contains('sha')){
				return false;
			}
			if(tag=='respondShan'&&player.storage.XS_kanyu.contains('shan')){
				return false;
			}
		},
		result:{
			player:function (player){
				if(_status.event.type=='dying')return get.attitude(player,_status.event.dying);
				else return 1;
			},
		},
	},
	group:["XS_kanyu_clear"],
    subSkill:{
		clear:{
			trigger:{
				global:"roundStart",
			},
			priority:17,
			direct:true,
			content:function (){
				player.storage.XS_kanyu=[];
				player.unmarkSkill('XS_kanyu');
			},
			sub:true,
        },
    },
},	
"XS_xingshan":{
    audio:"ext:血色衣冠:2",
 	trigger:{
		player:"damage",
	},
	filter:function (event,player){
        return event.num>0&&event.source;
    },
	check:function (event,player){
		return true;
	},
	logTarget:'source',
	priority:-920,
	content:function (){
        "step 0"
		player.draw();
		trigger.source.draw();
		"step 1"
		if(trigger.source.countCards('h')>trigger.source.getHandcardLimit()) {
			player.recover();
		}
    },
	ai:{
		maixie:true,
		"maixie_defend":true,
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')){
					if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
					if(((player.getHandcardLimit()-player.countCards('h'))<=1)&&!player.hasSkillTag('damageBonus')) {
						if(!target.hasFriend()) return 0.5;
						return [1,2];
					}
				}
			},
		},
	},
},	
"XS_quyi":{
    audio:"ext:血色衣冠:2",
	init:function (player){
		player.storage.XS_quyi=2;
	},
	trigger:{
		global:"damageBegin4",
	},
	filter:function (event,player){
		if(player.storage.XS_quyi===true||(player.storage.XS_quyi==0&&player.hasSkill('XS_quyi_temp'))) return false;
        return event.num>=event.player.hp&&event.player!=player&&player.storage.XS_quyi!==true;
    },
	direct:true,
	priority:-892,
	content:function (){
        "step 0"
		var str='其他角色受到不小于其体力值的伤害时，你可代替其成为目标';
		if(player.storage.XS_quyi==2) {
			if(player.hasSkill('XS_quyi_temp')) {
				event.mk=3;
				str='每回合限1次，'+str+'；你可不受次数限制地发动“取义”，如此其改为“每轮限1次”。';
			}
			else {
				event.mk=4;
				str='每回合限1次，'+str+'。';
			}
		}
		else if(player.storage.XS_quyi==1) {
			if(player.hasSkill('XS_quyi_temp')) {
				event.mk=1;
				str='每轮限1次，'+str+'；你可不受次数限制地发动“取义”，如此其改为“限定技”。';
			}
			else {
				event.mk=2;
				str='每轮限1次，'+str+'。';
			}
		}
		else {
			event.mk=0;
			str='限定技，'+str+'。';
		}
		player.chooseBool(get.prompt('XS_quyi',trigger.player),str).set('ai',function(){ 
			var trigger=_status.event.getTrigger();
			var att=get.attitude(player,trigger.player);
			if([4,2].contains(event.mk)) return att>0;
			return att>6;
		}); 
		"step 1"
		if(result.bool) {
			player.logSkill('XS_quyi',trigger.player);
			if(event.mk!=0) {
				switch(event.mk){
					case 4:
						player.addTempSkill('XS_quyi_temp');
					break;
					case 3:
						player.storage.XS_quyi=1;
						player.removeSkill('XS_quyi_temp');
						player.addTempSkill('XS_quyi_temp','roundStart');
					break;
					case 2:
						player.addTempSkill('XS_quyi_temp','roundStart');
					break;
					case 1:
						player.storage.XS_quyi=0;
					break;
				}
			}
			else {
				player.awakenSkill('XS_quyi');
				player.storage.XS_quyi=true;
			}
			trigger.player=player;
		}
    },
	ai:{
		expose:0.5,
	},
	subSkill:{
		temp:{
			charlotte:true,
			sub:true,
        },
    },
},	
"XS_jichi":{
	enable:'phaseUse',
	position:'he',
	usable:1,
	prompt:'将一张非基本牌当做决斗使用',
	viewAs:{name:'juedou'},
	filterCard:function(card,player){
		return get.type(card)!='basic';
	},
	filter:function(event,player){
		var nm=player.countCards('he',function(card){
			return get.type(card)!='basic';
		})
		return nm>0;
	},
	check:function(card){
		return 7-get.value(card);
	},
	ai:{
		basic:{
			order:10
		}
	},
    group:["XS_jichi_juedou"],
    subSkill:{
        juedou:{
            trigger:{
                player:"useCardToPlayered",
            },
            forced:true,
            filter:function (event,player){
                return event.card.name=='juedou';
            },
			logTarget:'target',
            content:function (){
                "step 0"
                var suit1=get.suit(trigger.card);
                if(trigger.target.countCards('h',{suit:suit1})) {
                    trigger.target.chooseToDiscard('h','弃置1张'+get.translation(suit1)+'花色的牌，否则'+get.translation(player)+'的'+get.translation(trigger.card)+'将可指定1个额外的目标',function(card){
                        return get.suit(card)==suit1;
                    }).set('ai',function(card){
                        return 5-get.value(card);
                    });
                }
                else event.goto(2);
                "step 1"
                if(result.bool){
                    event.finish();
                }
                else{
					game.log(trigger.target,'拒绝弃置牌');
                    event.goto(2);
                }
                "step 2"
                player.chooseTarget('你可令1名其他角色成为'+get.translation(trigger.card)+'的额外目标',function(card,player,target){
                    var trigger=_status.event.getTrigger();
                    return player!=target&&!trigger.targets.contains(target)&&lib.filter.targetEnabled2(trigger.card,player,target);
                }).ai=function(target){
                    var eff=get.effect(target,{name:'juedou'},player,player);
                    return eff;
                }
                "step 3"
                if(result.bool){
                    player.line(result.targets[0],'green');
					trigger.getParent().targets.add(result.targets[0]);
					game.delay(0.7);
                }
            },
            sub:true,
        },
    },
},
"XS_jugong":{
    mark:true,
    marktext:"据",
    limited:true,
    skillAnimation:true,
    animationColor:"wood",
    unique:true,
    enable:"chooseToUse",
	priority:-10,
    init:function (player){
        player.storage.XS_jugong=false;
    },
    intro:{
        content:"limited",
    },
    filter:function (event,player){
        if(player.storage.XS_jugong) return false;
        if(event.type=='dying'){
            if(player!=event.dying) return false;
            return true;
        }
        return false;
    },
    content:function (){
		"step 0"
        player.awakenSkill('XS_jugong');
        player.storage.XS_jugong=true;	
		"step 1"
		event.num=5;
		event.num1=0;
		"step 2"
        player.draw();
        "step 3"
        if(Array.isArray(result)&&result.length){
            event.gained=result[0];
            if(lib.filter.cardEnabled(event.gained,player)){
                var next=player.chooseToUse();
                next.filterCard=function(card){
                    return card==event.gained;
                };
                next.prompt='是否使用'+get.translation(event.gained)+'？';
            }
			else event.goto(4);
        }
        else event.goto(4);
		"step 4"
		if(result.bool){
			event.num1++;
		}
		"step 5"	
		event.num--;
        if(event.num>0){
            event.goto(2);
        }
		"step 6"	
		player.recover(event.num1);
    },
	ai:{
        order:0.5,
        skillTagFilter:function (player){
            if(player.storage.XS_jugong) return false;
            if(player.hp>1) return false;
        },
        save:true,
        result:{
            player:function (player){
                if(player.hp<=0) return 10;
                return 0;
            },
        },
        threaten:function (player,target){
            if(!target.storage.XS_jugong&&target.hp==1) return 0.4;
        },
    },
},
"XS_jingtian":{
	trigger:{
        global:"dieAfter",
    },
	filter:function (event,player){
		return player.storage.XS_jingtian_b.length;
	},
	intro:{
		content:function(storage,player,skill){
			if(player.storage.XS_jingtian_a.length) {
				var tp=player.storage.XS_jingtian_a;
				var str='在你的准备阶段后，永久追加一个：'+tp[0];
				if(tp.length>1) {
					for(var i=1;i<tp.length;i++) {
						str+='、'+tp[i];
					}
				}
				return str;
			}
			return '未获得额外的主要阶段';
		},
	},
	priority:2,
	init:function (player){
		player.storage.XS_jingtian_b=['判定阶段','摸牌阶段','出牌阶段','弃牌阶段'];
		player.storage.XS_jingtian_a=[];
	},
    forced:true,
    content:function (){
        'step 0'
        var list=player.storage.XS_jingtian_b;
		player.chooseControl(list,true).set('ai',function(event,player){
			if(list.contains('摸牌阶段')) return '摸牌阶段';
			if(list.contains('出牌阶段')) return '出牌阶段';
			if(list.contains('判定阶段')) return '判定阶段';
			return '弃牌阶段';
		}).set('prompt','经天：使你在准备阶段后永久追加一个额外的主要阶段');
		"step 1"
		player.storage.XS_jingtian_b.remove(result.control);
		if(!player.hasSkill('XS_jingtian1')) {
			player.addSkill('XS_jingtian1');
		}
		player.storage.XS_jingtian_a.push(result.control);
		player.markSkill('XS_jingtian');
    },
    ai:{
        threaten:1.2,
    },
},	
"XS_jingtian1":{
	trigger:{
        player:"phaseZhunbeiAfter",
    },
	filter:function (event,player){
		return player.storage.XS_jingtian_a&&player.storage.XS_jingtian_a.length;
	},
    direct:true,
    content:function (){
        var list=player.storage.XS_jingtian_a;
		for(var i=0;i<list.length;i++) {
			switch(list[i]){
				case '判定阶段':player.phaseJudge();break;
				case '摸牌阶段':player.phaseDraw();break;
				case '出牌阶段':player.phaseUse();break;
				case '弃牌阶段':player.phaseDiscard();break;
			}	
		}
    },
},	
"XS_weidi":{
    audio:2,
    trigger:{
        player:["phaseDrawBefore","phaseUseBefore"],
    },
    direct:true,
    content:function (){
        "step 0"
        if(trigger.name=="phaseDraw") {
            var pha='摸牌阶段';
        }
        else {
            var pha='出牌阶段';
        }
        player.chooseTarget(get.prompt('XS_weidi'),"是否跳过"+pha+"视为对攻击范围内的一名其他角色使用一张不计入次数的杀？",function(card,player,target){
            if(player==target) return false;
            return player.canUse({name:'sha'},target);
        }).set('ai',function(target){
            var trigger=_status.event.getTrigger();
            if(trigger.name=="phaseDraw") {
                return player.countCards('h')<=2&&get.effect(target,{name:'sha'},player)>0;
            }
            else {
                return !player.needsToDiscard()&&get.effect(target,{name:'sha'},player)>0;
            }
        });
        "step 1"
        if(result.bool){
            player.logSkill('XS_weidi',result.targets);
            player.useCard({name:'sha',isCard:true},result.targets[0],false);
            trigger.cancel();
        }
    },
},	
"XS_qiaobianys":{
    audio:"ext:血色衣冠:2",
    trigger:{
        player:"useCardToBefore",
    },
    priority:199,
    check:function (event,player){
        var eff=get.effect(event.target,{name:'sha'},player,player);
        var eff1=get.effect(event.target,event.card,player,player);
        if(eff1>eff) return false; 
        return true;
    },
    filter:function (event,player){
		if(!event.target||!event.targets||!event.targets.length) return false;
        if(event.card.name=='sha') return false;
        if(event.target==player) return false;
        return true;
    },
    logTarget:'target',
    content:function (){
        "step 0"
        var num1=player.actionHistory[player.actionHistory.length-1].useCard.length-1;
        player.actionHistory[player.actionHistory.length-1].useCard.splice(num1,1);
        "step 1"
		player.useCard({name:'sha'},trigger.cards,trigger.target,false);
        "step 2"
        trigger.cancel();
    },
    ai:{
        threaten:1.2,
        expose:0.3,
    },
},
"XS_bingji":{
	audio:"ext:血色衣冠:2",
	trigger:{
        source:"damageBegin4",
    },
	mark:true,
	marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"40px")+" src="+lib.assetURL+"extension/血色衣冠/icon/bingji.png>":"击",
	priority:-10,
    filter:function (event,player){
        var num1=player.getHistory('useCard').length;
        if(num1!=player.hp) return false;
        return event.card&&get.tag(event.card,'damage')&&event.notLink();
    },
    forced:true,
    intro:{
        content:function (content,player){
            var num1=player.getHistory('useCard').length;
            var str='本回合已使用: <span class="bluetext">'+num1+' </span>张牌。';
            return str;
        },
    },
    content:function (){
        trigger.num=trigger.num*2;
    },
    ai:{
        effect:{
            player:function (card,player){
                if(get.tag(card,'damage')) {
                    var num1=player.getHistory('useCard').length;
                    if(num1+1==player.hp) return 2;
                }
            },
        },
    },
},
"XS_tongyi":{
	audio:"ext:血色衣冠:2",
	trigger:{
		target:"useCardToPlayered",
	},
	frequent:true,
	filter:function (event,player){
		if(!event.player||event.player==player) return false;
		if(!event.isPhaseUsing(event.player)) return false;
		var evt=event.player.getLastUsed(1);
		if(!evt||!evt.targets||!evt.targets.length||!evt.isPhaseUsing(event.player)) return false;
		return evt.targets.contains(player);
	},
	content:function (){
		player.draw();
	},
	ai:{
		effect:{
			target:function (card,player,target,current){
				var evt=player.getLastUsed();
				if(evt&&evt.targets.contains(target)&&(!target.storage.counttrigger||!target.storage.counttrigger.XS_tongyi)&&player.isPhaseUsing(player)) return [1.5,0];
			}
		},
	},
},
"XS_fanlun":{
	audio:"ext:血色衣冠:2",
	trigger:{
		target:"useCardToBefore",
	},
	priority:12,
	direct:true,
	filter:function (event,player){
		if(player.hasSkill('XS_fanlun_temp')) return false;
		if(!event.player||!event.targets||!event.targets.length) return false;
		if(event.targets.length>1) return false;
		if(get.type(event.card)!='trick'&&event.card.name!='sha') return false;
		return event.player!=player;
	},
	content:function(){
		"step 0"
		player.addTempSkill('XS_fanlun_temp');
		"step 1"
		var translation1=get.translation(trigger.card);
		var translation2=get.translation(trigger.player);
		player.chooseBool(get.prompt('XS_fanlun',trigger.player),'是否使'+translation2+'的'+translation1+'对你无效，并视为你对'+translation2+'使用'+translation1+'?如此，本回合你成为普通锦囊牌或杀的目标时，其额外结算一次。').ai=function(event,player){
			var tri=_status.event.getTrigger();
			var eff=get.effect(player,tri.card,tri.player,player);
			var att=get.attitude(player,tri.player);
			return (eff<0&&att<=0)||(eff>0&&att>0);
		};
		"step 2"
		if(result.bool){
			player.logSkill('XS_fanlun',trigger.player);
			var pla=trigger.player;
			trigger.player=player;
			trigger.target=pla;
			player.addTempSkill('XS_fanlun_mark');
		}
	},
	ai:{
		effect:{
			target:function (card,player,target){
				var att=get.attitude(player,target);
				if(target.hasSkill('XS_fanlun_temp')) return;
				if(card.name=='sha'||get.type(card)=='trick'){
					if(!target.hasFriend()) return;
					if(att<=0) {
						return 0.5;
					}
					else return 2;
				}
			},
		},
    },
	subSkill:{
        mark:{
			charlotte:true,
			trigger:{
				target:"useCardToAfter",
			},
			priority:9,
			forced:true,
			filter:function (event,player){
				if(_status.currentPhase==player||event.player==player) return false;
				if(event.card.name!='sha'&&get.type(event.card)!='trick') return false;
				var info=get.info(event.card);
				if(info.multitarget) return false;
				if(event.getParent(2).name=='XS_fanlun_mark') return false;
				return true;
			},
			content:function(){
				trigger.player.useCard(trigger.card,trigger.cards,player,false);
			},
            sub:true,	
			ai:{
				effect:{
					target:function (card,player,target){
						if(card.name=='sha'||get.type(card)=='trick'){
							return 2;
						}
					},
				},
			},
        },
		temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_mengjin":{
    audio:2,
   enable:"phaseUse",
    usable:1,
    filter:function (event,player){
        return player.countCards('h')&&event.filterCard({name:'sha'},player,event);
    },
    position:"h",
    filterCard:true,
    selectCard:[1,Infinity],
    check:function (card){
		if(ui.selected.cards.length==0){
            return 6-get.value(card);
        }
		else if(ui.selected.cards.length==1){
            return 4.5-get.value(card);
        }
		return -1;
    },
	discard:false,
    content:function (){
		player.addTempSkill('XS_mengjin_shan',{player:'useCardAfter'});
		player.storage.XS_mengjin_shan=cards.length;
		player.chooseUseTarget({name:'sha'},cards,true,'nodistance');
    },
    ai:{
        order:9,
        result:{
            player:1,
        },
    },
    subSkill:{
        shan:{
            trigger:{
                player:"shaBegin",
            },
			onremove:true,
            direct:true,
            filter:function (event,player){
				return typeof player.storage.XS_mengjin_shan=='number';
            },
            priority:-1,
            content:function (){
				var nm=player.storage.XS_mengjin_shan-1;
                if(typeof trigger.shanRequired=='number'){
                    trigger.shanRequired+=nm;
                }
                else{
                    trigger.shanRequired=(1+nm);
                }
            },
            sub:true,
        },
    },
},
"XS_zhuiji":{
     priority:12,
    trigger:{
        player:["shaAfter"],
    },
    filter:function (event,player){
        return event.target.isAlive();
    },
	direct:true,
    content:function (){  
		"step 0"
		var tp=get.distance(player,trigger.target);
		var evt=trigger.getParent(2);
		if(evt.name!='XS_zhuiji') {
			trigger.nm=3*tp;
			if(trigger.responded) {
				trigger.nm+=3;
			}
		}
		else {
			var tpnm=trigger.getParent(5).nm;
			if(trigger.responded) {
				trigger.nm=tpnm+6;
			}
			else {
				trigger.nm=tpnm+3;
			}
		}
		event.temp=trigger.nm;
		player.chooseBool(get.prompt('XS_zhuiji'),'是否进行一次判定？若结果不小于'+trigger.nm+'，你可使'+get.translation(trigger.card)+'对'+get.translation(trigger.target)+'额外结算一次。').set('ai',function(){
			var tri=_status.event.getTrigger();
			return get.effect(tri.target,tri.card,player,player)>0;
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_zhuiji',trigger.target);
			player.judge('追击',function(card){
				if(get.number(card)>=event.temp) return 3;
				return -3;
			});
		}
		else event.finish();
		"step 2"
		if(result.bool==true){
			player.useCard(trigger.card,trigger.cards,trigger.target,false);
        }
    },
    ai:{
        expose:0.3,
    },
},
"XS_youshui":{
	audio:"ext:血色衣冠:2",
    trigger:{
        global:["chooseToUseBegin"],
    },
	usable:1,
    filter:function (event,player){
		if(event.player==player) return false;
        if(event.responded) return false;
		if(!event.filterCard({name:'shan'},player,event)) return false;
		if(event.name=='chooseToRespond'&&!lib.filter.cardRespondable({name:'shan'},player,event)) return false;
		var sour=event.getParent().player;
		if(!sour||sour==player) return false;
		return player.canCompare(sour);
    },
	check:function (event,player){
		if(event.player.hp>2) return false;
		var att=get.attitude(player,event.player);
		if(att<=0) return false;
		var hs=player.getCards('h');
		for(var i=0;i<hs.length;i++){
			if(hs[i].number>=8&&get.value(hs[i])<7){
				return true;
			}
		}
		return false;
	},
	logTarget:'player',
	"prompt2":function (event,player){
		var sour=event.getParent().player;
		return '是否与'+get.translation(sour)+'拼点？若你赢，则视为'+get.translation(event.player)+'使用了一张闪。';
	},
    content:function (){
		"step 0"
		var sour=trigger.getParent().player;
		player.chooseToCompare(sour);
		"step 1"
		if(result.bool){
			trigger.untrigger();
			trigger.responded=true;
			trigger.result={bool:true,card:{name:'shan'}};
		}
    },
    ai:{
		respondShan:true,
    },
	group:["XS_youshui_mi"],
	subSkill:{
		mi:{
			usable:1,
			trigger:{
				player:["chooseToUseBegin"],
			},
			filter:function (event,player){
				if(event.responded) return false;
				if(!event.filterCard({name:'shan'},player,event)) return false;
				if(event.name=='chooseToRespond'&&!lib.filter.cardRespondable({name:'shan'},player,event)) return false;
				return true;
			},
			frequent:true,
			content:function (){
				"step 0"
				game.playXSAudio('XS_youshui',2);
				player.judge('游说',function(card){
					if(card.number>7) return 3;
					return -3;
				});
				"step 1"
				if(result.bool==true){
					trigger.untrigger();
					trigger.responded=true;
					trigger.result={bool:true,card:{name:'shan'}};
				}
			},
			ai:{
				respondShan:true,
				effect:{
					target:function (card,player,target,effect){
						if(get.tag(card,'respondShan')) return 0.5;
					},
				},
			},
            sub:true,
        },
    },
},
"XS_kuangke":{
	audio:"ext:血色衣冠:2",
	group:["XS_kuangke_compare","XS_kuangke_judge"],
    subSkill:{
        compare:{
            trigger:{
                player:"compare",
                target:"compare",
            },
            direct:true,
            filter:function (event,player){
                if(event.iwhile) return false;
				return true;
            },
            content:function (){
				player.logSkill('XS_kuangke');
                var numX=player.hp;
                game.log(player,'拼点牌点数增加',numX);
                if(player==trigger.player){
                    trigger.num1+=numX;
                }
                else{
                    trigger.num2+=numX;
                }
            },
            sub:true,
        },
        judge:{
            trigger:{
                player:"judge",
            },
			filter:function (event,player){
				return player.isDamaged();
			},
            priority:-10,
            direct:true,
            content:function (){
				player.logSkill('XS_kuangke');
                var num1=player.getDamagedHp();
                trigger.player.judging[0].number+=num1;
                game.log(trigger.player,'的判定牌点数增加',num1);
            },
            sub:true,
        },
    },
},
"XS_huoji":{
	enable:"phaseUse",
	usable:1,
	filter:function (event,player){
		return game.hasPlayer(function(current){
			return current.countCards('ej');
		});
    },
	filterTarget:function (card,player,target){
        return target.countCards('ej');
    },
	content:function (){
        'step 0'
		player.choosePlayerCard(target,'ej',true).set('ai',function(button){
			var att=get.attitude(player,target);
			var val=get.value(button.link);
			if(att>0) {
				if(get.type(button.link)=='equip') return 5-val;
				return 20;
			}
			else {
				if(get.type(button.link)=='equip') return val;
				return -20;
			}
		});
		'step 1'
		event.cds=result.links.slice(0);
		'step 2'
		player.useCard({name:'huogong'},event.cds,target);
    },
	ai:{
		expose:0.3,
		order:9,
		result:{
			target:function (player,target){
                return -2;
            },
		},
	},
},
"XS_jieyong":{
    trigger:{
        player:["chooseToDiscardBefore"],
    },
    filter:function (event,player){
        return event.getParent().name=='huogong';
    },
	check:function (event,player){
		return true;
	},
    content:function (){
        "step 0"
		var tp=['heart','diamond','club','spade','none'],st,cl;
		for(var i=0;i<tp.length;i++) {
			if(trigger.filterCard({suit:tp[i]})) {
				st=tp[i];
				break;
			}
		}
		if(st=='spade'||st=='club') cl='black';
		else if(st=='heart'||st=='diamond') cl='red';
		else cl='none';
		trigger.position='he';
		trigger.filterCard=get.filter({color:cl});
		player.addTempSkill('XS_jieyong_give',{player:'discardAfter'});
    },
    subSkill:{
        give:{
			trigger:{
				player:"discardEnd",
			},
			filter:function(event,player){
				return event.getParent(2).name=='huogong';
			},
			direct:true,
			content:function (){
				"step 0"
				player.chooseTarget('你可令1名其他角色获得'+get.translation(trigger.cards[0]),1,false,function(card,player,target){
					return target!=player;
				}).set('ai',function(target){
					return get.attitude(player.target)/(target.countCards('h')+0.1);
				});
				"step 1"
				if(result.bool) {
					result.targets[0].gain(trigger.cards[0],'gain2');
				}	
				player.removeSkill('XS_jieyong_give');
			},
            sub:true,
        },
    },
},
"XS_huoluan":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:["phaseUseBegin"],
	},
	priority:2,
	"prompt2":function (event,player){
		return '是否令'+get.translation(event.player)+'对你使用一张杀?若其未使用，其此回合无法使用杀。';
	},
	check:function (event,player){
		if(player.hp<2&&!player.countCards('h','shan')) return false;
		return get.attitude(player,event.player)<0;
	},
	filter:function (event,player){
		return event.player!=player&&event.player.inRange(player);
	},
	logTarget:"player",
	content:function (){
		"step 0"
		event.pla=player;
		trigger.player.chooseToUse(function(card,player,event){
			if(get.name(card)!='sha') return false;
			return lib.filter.filterCard.apply(this,arguments);
		},'对'+get.translation(player)+'使用一张杀，否则你本回合无法使用杀。')
		.set('ai2',function(target,card,player,player2,isLink){
			return true;
		})
		.set('filterTarget',function(card,player,target){
			if(target!=event.pla) return false;
			return lib.filter.targetEnabled.apply(this,arguments);
		});
        "step 1"
		if(!result.bool){
			trigger.player.addTempSkill('XS_huoluan_temp');
			trigger.player.markSkillCharacter('XS_huoluan_temp',player,'祸乱','你无法使用杀');
		}
	},
	subSkill:{
		temp:{
			onremove:function(player){
				player.unmarkSkill('XS_huoluan_temp');
			},
			mod:{
				cardEnabled:function (card,player){
					if(card.name=='sha') return false;
				},
			},
			sub:true,
		},
	},
    ai:{
		expose:0.3,
    },
},
"XS_beiqi":{
	audio:"ext:血色衣冠:2",
	trigger:{
        player:"damageEnd",
    },
	priority:2,
    filter:function (event){
		if(event.num<=0) return false;
		if(get.itemtype(event.cards)!='cards') return false;
		if(event.card.isCard) {
			if(get.position(event.cards[0],true)=='o') return true;
		}
        return false;
    },
	frequent:true,
    content:function (){
        "step 0"
		player.draw();
		"step 1"
		var col=get.color(trigger.cards[0]);
		event.str=(col=='red'?'lebu':'bingliang');
        player.chooseTarget('你可将'+get.translation(trigger.cards[0])+'当作'+get.translation(event.str)+'置于1名角色的判定区。',1,function(card,player,target){
            return !target.hasJudge(event.str);
        },function(target){
			var eff=get.effect(target,{name:event.str},player,player);
            return eff;
        });
        "step 2"
		if(result.bool) {
			var next=player.useCard({name:event.str},trigger.cards,result.targets[0]);
			next.animate=false;
			next.audio=false;
		}
    },
	ai:{
		maixie:true,
		"maixie_hp":true,
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')) {
					if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
					if(!target.hasFriend()) return;
					return [1,1.5];
				}
			},
		},
	},
},
"XS_pingluan":{
    mod:{
        globalFrom:function (from,to,current){
            if(to.hasSkill('XS_pingluan_mark')) return current-1;
            return current;
        },
        globalTo:function (from,to,current){
            if(from.hasSkill('XS_pingluan_mark')) return current+1;
            return current;
        },
    },
    audio:2,
    enable:"phaseUse",
    usable:1,
    filterTarget:function (card,player,target){
        return target!=player&&!target.hasSkill('XS_nizhan_temp');
    },
    filter:function (event,player){
        return game.hasPlayer(function(current){
            return current!=player&&!current.hasSkill('XS_nizhan_temp');
        });
    },
    selectTarget:1,
    content:function (){
        player.useCard({name:'sha',isCard:true},target,false);
        target.addSkill('XS_pingluan_mark');
		target.markSkillCharacter('XS_pingluan_mark',player,'平乱',get.translation(player)+'计算与你的进攻、防御距离+1');
        target.addTempSkill('XS_pingluan_temp');
    },
    ai:{
		expose:0.3,
        order:7,
        result:{
            target:function (target,player){
                var eff=get.effect(target,{name:'sha'},player,target);
                return eff;
            },
        },
    },
    subSkill:{
        mark:{
			charlotte:true,
			onremove:function(player){
				player.unmarkSkill('XS_pingluan_mark');
			},
            sub:true,
        },
        temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_nizhan":{
	audio:2,
    enable:"phaseUse",
    usable:1,
    filterTarget:function (card,player,target){
        return target!=player&&target.hasSkill('XS_pingluan_mark')&&!target.hasSkill('XS_pingluan_temp');
    },
    filter:function (event,player){
        return game.hasPlayer(function(current){
            return current!=player&&current.hasSkill('XS_pingluan_mark')&&!current.hasSkill('XS_pingluan_temp');
        });
    },
    selectTarget:1,
    content:function (){
        player.draw();
        target.removeSkill('XS_pingluan_mark');
        target.addTempSkill('XS_nizhan_mark');
        target.markSkillCharacter('XS_nizhan_mark',player,'逆战','你无法使用或打出闪');
        target.addTempSkill('XS_nizhan_temp');
    },
    ai:{
		expose:0.3,
        order:8,
        result:{
            target:-1,
        },
    },
    subSkill:{
        mark:{
			charlotte:true,
            onremove:function (player){
                player.unmarkSkill('XS_nizhan_mark');
            },
            mod:{
                "cardEnabled2":function (card,player){
                    if(card.name=='shan') return false;
                },
            },
            ai:{
                effect:{
                    target:function (card,player,target){
                        if(card.name=='sha'||card.name=='wanjian') return [1,-20];
                    },
                },
            },
            sub:true,
        },
        temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_duji":{
    audio:"ext:血色衣冠:2",
    trigger:{
        player:"useCardToBefore",
    },
    priority:15,
    check:function (event,player){
		var att=get.attitude(player,event.target);
		if(att>0) return false;
        var eff=get.effect(event.target,event.card,player,player);
        return eff<=3;
    },
    filter:function (event,player){
		if(get.type(event.card)!='trick') return false;
		if(!event.target) return false;
		if(event.targets.contains(player)) return false;
		if(event.target.hasSkill('XS_duji_temp')) return false;	
        return true;
    },
    logTarget:'target',
    content:function (){
        trigger.setContent(function(){
			var evt=_status.event;
            evt.target.loseHp();
			evt.target.addTempSkill('XS_duji_temp');
        });
    },
	ai:{
		threaten:1.1,
	},
	subSkill:{
        temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_xumou":{
	audio:"ext:血色衣冠:2",
	init:function (player){
		player.storage.XS_xumou=[5,4,3,2];
	},
    trigger:{
        player:"phaseAfter",
    },
	forced:true,
	priority:16,
    content:function (){
		"step 0"
		var lt=[],nm=game.roundNumber;
		for(var i=0;i<player.storage.XS_xumou.length;i++) {
			if(player.storage.XS_xumou[i]!=nm) lt.push(player.storage.XS_xumou[i].toString());
		}
		player.chooseControl(lt,true).set('ai',function(event,player){
			var tp=[];
			for(var i=0;i<lt.length;i++) {
				tp.push(parseInt(lt[i]));
			}
			var nm=Math.max(...tp); 
			return nm.toString(); 
		}).set('prompt','蓄谋：将手牌数调整至1项数值');
		"step 1"
		player.storage.XS_xumou.remove(parseInt(result.control));
		var nm=player.countCards('h')-parseInt(result.control);
		if(nm>0) {
			player.chooseToDiscard(nm,'h',true);
		}
		else {
			player.draw(-nm);
		}
		"step 2"
		if(!player.storage.XS_xumou.length) {
			player.storage.XS_xumou=[5,4,3,2];
		}
    },
},
"XS_daizheng":{
	priority:39,
	trigger:{
		global:"compare",
	},
	filter:function (event,player){
		if(event.iwhile) return false;
		return player.countCards('h');
	},
	direct:true,
	content:function (){
		"step 0"
		player.chooseCardTarget({
			filterCard:function(card){return true;},
			position:"h",
			selectCard:1,
			selectTarget:1,
			filterTarget:function(card,player,target){
				var tri=_status.event.getTrigger();
				return target==tri.player||target==tri.target;
			},
			ai1:function(card){
				player=_status.event.player;
				var tri=_status.event.getTrigger();
				var att1=get.attitude(player,tri.player);
				var att2=get.attitude(player,tri.target);
				var hs=player.getCards('h');
				if(att1>0) {
					for(var i=0;i<hs.length;i++) {
						if((hs[i].number>tri.card2.number)&&(get.value(hs[i])<7)) {
							if(card==hs[i]) return 20;
						}
					}
				}
				if(att1<0) {
					for(var i=0;i<hs.length;i++) {
						if((hs[i].number<=tri.card2.number)&&(get.value(hs[i])<7)) {
							if(card==hs[i]) return 20;
						}
					}
				}
				if(att2>0) {
					for(var i=0;i<hs.length;i++) {
						if((hs[i].number>tri.card1.number)&&(get.value(hs[i])<7)) {
							if(card==hs[i]) return 20;
						}
					}
				}
				if(att2<0) {
					for(var i=0;i<hs.length;i++) {
						if((hs[i].number<=tri.card1.number)&&(get.value(hs[i])<7)) {
							if(card==hs[i]) return 20;
						}
					}
				}
				return -1;
			},
			ai2:function(target){
				player=_status.event.player;
				var tri=_status.event.getTrigger();
				var att=get.attitude(player,target);
				var nm=ui.selected.cards[0].number;
				if(tri.card2.number<nm||tri.card1.number<nm) {
					return att*2;
				}
				if(tri.card2.number>=nm||tri.card1.number>=nm) {
					return -att*2;
				}
				return -1;
			},
			prompt:'是否发动【代政】？</br></br>你可用1张手牌替换其中1名拼点角色的拼点牌，若其因此赢/没赢，你可令其摸/弃置2张牌。'
		});
		"step 1"
		if(result.bool){
			event.tar=result.targets[0];
			event.cd=result.cards[0];
			player.logSkill('XS_daizheng',result.targets[0]);
			player.respond(event.cd,'highlight');
		}
		else event.finish();
		"step 2"
		if(event.cd){
			if(trigger.player==event.tar){
				player.gain(trigger.card1,'gain2');
				trigger.card1=event.cd;
				trigger.num1=get.number(event.cd);
				game.log(trigger.player,'拼点牌改为',event.cd);  
				game.log(trigger.player,'拼点牌点数改为',trigger.num1);
			}
			else {
				player.gain(trigger.card2,'gain2');
				trigger.card2=event.cd;
				trigger.num2=get.number(event.cd);
				game.log(trigger.target,'拼点牌改为',event.cd);
				game.log(trigger.target,'拼点牌点数改为',trigger.num2);
			}
		}
		"step 3"
		game.delay();
		"step 4"
		event.bl=false;
		event.mark='draw';
		var att=get.attitude(player,event.tar);
		if(trigger.player==event.tar){
			if(trigger.num1>trigger.num2) {
				var str='是否令'+get.translation(event.tar)+'摸2张牌？';
				if(att>0) event.bl=true;
			}
			else {
				var str='是否令'+get.translation(event.tar)+'弃置2张牌？';
				if(att<=0) {
					event.bl=true;
					event.mark='discard';
				}
			}
		}
		else {
			if(trigger.num1<trigger.num2) {
				var str='是否令'+get.translation(event.tar)+'摸2张牌？';
				if(att>0) event.bl=true;
			}
			else {
				var str='是否令'+get.translation(event.tar)+'弃置2张牌？';
				if(att<=0) {
					event.bl=true;
					event.mark='discard';
				}
			}
		}
		player.chooseBool(str).set('ai',function(){
			return event.bl;
		});
		"step 5"
		if(result.bool) {
			if(event.mark=='draw') {
				event.tar.draw(2);
			}
			else {
				event.tar.chooseToDiscard(2,'he',true);
			}
		}
	},
	ai:{
		expose:0.3,
	},
},
"XS_tuiyin":{
	trigger:{
		player:"phaseUseAfter",
	},
	filter:function (event,player){
		return game.hasPlayer(function(current){
			return player.inRange(current)&&player.canCompare(current);
		});
	},
	direct:true,
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt2('XS_tuiyin'),1,function(card,player,target){
			return player.inRange(target)&&player.canCompare(target);
		}).set('ai',function(target){
			var hs=player.getCards('h');
			if(!player.isDamaged()) return -1;
			for(var i=0;i<hs.length;i++){
				if(hs[i].number>=8&&get.value(hs[i])<7){
					return -get.attitude(player,target);
				}
			}
			return -1;
		});
		"step 1"
		if(result.bool) {
			event.tar=result.targets[0];
			player.logSkill('XS_tuiyin',result.targets[0]);
			player.chooseToCompare(result.targets[0]);
		}
		else event.finish();
		"step 2"
		if(result.bool){
			player.chooseUseTarget({name:"tao",isCard:true},true);
		}
		else {
			event.tar.chooseUseTarget({name:"sha",isCard:true},true);
		}
	},
	ai:{
		expose:0.3,
	},
},
"XS_xiangmian":{
	audio:2,
	enable:'phaseUse',
	usable:1,
	filterTarget:function(card,player,target){
		return target!=player&&target.countCards('h')>0;
	},
	content:function(){
		'step 0'
		player.showCards('相面',target.getCards('h'));
		'step 1'
		var suitlist=[],cds=target.getCards('h');
		for(var i=0;i<cds.length;i++) {
			suitlist.add(get.suit(cds[i]));
		}
		game.log(target,'手牌中的花色数为：',suitlist.length);
		game.delay(0.8);
		if(suitlist.length>0) {
			target.addSkill('XS_xiangmian_mark');
			if(suitlist.length>1) target.addSkill('XS_xiangmian_buff1');
			if(suitlist.length>2) target.addSkill('XS_xiangmian_buff2');
			if(suitlist.length>3) target.addSkill('XS_hengzheng2');
			target.markSkill('XS_xiangmian_mark');
		}
	},
	ai:{
		expose:0.3,
		order:3,
		result:{
			target:function(target,player){
				var hs=target.countCards('h');
				return 1+hs/2;
			},
		},
	},
	group:["XS_xiangmian_remove"],
	subSkill:{
		mark:{
            marktext:"相",
            sub:true,
			intro:{
				content:function(storage,player,skill){
					var str='你的进攻距离+1';
					if(player.hasSkill('XS_xiangmian_buff1')) str+='、摸牌阶段摸牌数+1';
					if(player.hasSkill('XS_xiangmian_buff1')) str+='、手牌上限+2';
					return str;
				},
			},
			mod:{
				globalFrom:function (from,to,current) {
					return current-1;
				},
			},
        },
		buff1:{
			trigger:{
				player:"phaseDrawBegin",
			},
			direct:true,
			priority:299,
			content:function (){
				trigger.num++;
			},
            sub:true,
        },
		buff2:{
			mod:{
				maxHandcard:function (player,num){
					return num+2;
				},
			},
            sub:true,
        },
		remove:{
			sub:true,
            trigger:{
                player:["phaseBefore","dieBegin"],
            },
			direct:true,
            content:function (){
                for(var i=0;i<game.players.length;i++){
					if(game.players[i].hasSkill('XS_xiangmian_mark')){
                        game.players[i].removeSkill('XS_xiangmian_mark');
                    }
                    if(game.players[i].hasSkill('XS_xiangmian_buff')){
                        game.players[i].removeSkill('XS_xiangmian_buff');
                    }
					if(game.players[i].hasSkill('XS_hengzheng2')){
                        game.players[i].removeSkill('XS_hengzheng2');
                    }
                }
            },
        },
    },
},
"XS_hengzheng2":{
	trigger:{
		global:"phaseDrawAfter",
	},
	check:function(event,player){
		var att=get.attitude(player,event.player);
		if(att<=0) return true;
		else {
			return event.player.group=='wei';
		}
	},
	"prompt2":function (event,player){
		return '是否令'+get.translation(event.player)+'交给你1张牌？';
	},
	filter:function (event,player){
		if(event.player==player) return false;
        return player.countCards('h')<player.getHandcardLimit();
    },
	content:function (){
        "step 0"
        trigger.player.chooseCard('交给'+get.translation(player)+'1张牌',1,'he',true).ai=function(card){
            var trigger=_status.event.getTrigger();
            if(get.attitude(trigger.player,player)>8){
                return get.value(card);
            }
            else{
                return 8-get.value(card);
            }
        }
        "step 1"
        if(result.bool){
			player.gain(result.cards[0],trigger.player,'giveAuto');
        }
    },
	ai:{
		threaten:1.2,
	},
},
"XS_wujing":{
	audio:2,
	trigger:{player:'damageEnd'},
	frequent:true,
	filter:function(event){
		return event.num>0;
	},
	content:function(){
		"step 0"
		event.cards=get.cards(2);
		player.showCards(event.cards);
		"step 1"
		if(event.cards.length>1){
			player.chooseCardButton('将这些分配给任意角色',true,event.cards,[1,event.cards.length]).set('ai',function(button){
				if(ui.selected.buttons.length==0) return 1;
				return 0;
			});
		}
		else if(event.cards.length==1){
			event._result={links:event.cards.slice(0),bool:true};
		}
		else{
			event.finish();
		}
		"step 2"
		if(result.bool){
			for(var i=0;i<result.links.length;i++){
				event.cards.remove(result.links[i]);
			}
			event.togive=result.links.slice(0);
			player.chooseTarget('将'+get.translation(result.links)+'交给一名角色',true).set('ai',function(target){
				var att=get.attitude(_status.event.player,target);
				if(_status.event.enemy){
					return -att;
				}
				else if(att>0){
					return att/(1+target.countCards('h'));
				}
				else{
					return att/100;
				}
			}).set('enemy',get.value(event.togive[0],player,'raw')<0);
		}
		"step 3"
		if(result.targets.length){
			result.targets[0].gain(event.togive,'draw');
			player.line(result.targets[0],'green');
			game.log(result.targets[0],'获得了'+get.cnNumber(event.togive.length)+'张牌');
			event.goto(1);
		}
	},
	ai:{
		maixie:true,
		maixie_hp:true,
		effect:{
			target:function(card,player,target){
				if(get.tag(card,'damage')){
					if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
					if(!target.hasFriend()) return;
					if(target.hp>=4) return [1,2];
					if(target.hp==3) return [1,1.5];
					if(target.hp==2) return [1,0.5];
				}
			}
		}
	},
},
"XS_duanshui":{
	audio:2,
	enable:'chooseToUse',
	filter:function(event,player){
		return player.countCards('he',{suit:'spade'})>0;
	},
	filterCard:function(card){
		return get.suit(card)=='spade';
	},
	position:'he',
	viewAs:{name:'tiesuo'},
	prompt:'将一张黑桃牌当铁锁连环使用',
	check:function(card){return 4.5-get.value(card)},
	group:["XS_duanshui_draw"],
    subSkill:{
        draw:{
			trigger:{
				global:"phaseDrawBegin",
			},
			check:function (event,player){
				return get.attitude(player,event.player)<0;
			},
			logTarget:'player',
			"prompt2":function (event,player){
				return '是否令'+get.translation(event.player)+'于此阶段摸牌数-1？';
			},
			filter:function (event,player){
				if(event.player==player) return false;
				if(!player.inRange(event.player)) return false;
				if(player.isLinked()&&!event.player.isLinked()) return true;
				if(!player.isLinked()&&event.player.isLinked()) return true;
				return false;
			},
			content:function (){
				trigger.num--;
			},
        },
    },
},
"XS_guoshi":{
	trigger:{
		player:"damageBegin4",
	},
	priority:-4,
	check:function (event,player){
		var num1=event.num+1;
		if(num1>player.hp) return false;
		return player.hp>2;
	},
	"prompt2":function (event,player){
		return '你可使你受到的伤害+1，如此你摸'+player.hp+'张牌。';
	},
	filter:function (event,player){
		if(event.nature&&player.isLinked()) return true;
		if(!event.nature&&!player.isLinked()) return true;
		return false;
    },
	content:function (){
		"step 0"
		player.draw(player.hp);
		"step 1"
		trigger.num++;
	},
},
"XS_baizhan":{
	trigger:{
        global:["equipAfter"],
    },
	priority:12,
	check:function (event,player){
		return get.effect(event.player,{name:'sha'},player,player)>0;
	},
	logTarget:'player',
    filter:function (event,player){
		if(event.player==player) return false;
		var sub=get.subtype(event.card);
		return !player.getEquip(sub);
    },
    content:function (){
        "step 0"
		player.useCard({name:'sha',isCard:true},trigger.player,false);
		event.mark_player=trigger.player;
		player.line(trigger.player,'black');
		"step 1"
        if(event.dam){
			trigger.player.lose(trigger.card);
			trigger.player.$throw(trigger.card,1000);
			player.equip(trigger.card);
        }
    },
    ai:{
        expose:0.4,
    },
	group:["XS_baizhan_dam"],
    subSkill:{
        dam:{
            trigger:{
                source:"damageAfter",
            },
			direct:true,
            filter:function (event,player){
                return event.getParent(3).name=='XS_baizhan'&&event.getParent(3).mark_player&&event.getParent(3).mark_player==event.player;
            },
            content:function (){
                trigger.getParent(3).dam=true;
            },
            sub:true,
        },
    },
},
"XS_gangrou":{
	zhuanhuanji:true,
	init:function (player){
        player.storage.XS_gangrou=false;
        player.unmarkSkill("XS_gangrou_gang");
        player.markSkill("XS_gangrou_rou");
    },
	subSkill:{
		gang:{
			marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"40px")+" src="+lib.assetURL+"extension/血色衣冠/icon/gang.png>":"刚",
			intro:{
				content:function(storage,player,skill){
					return '刚：你造成伤害后，可以弃置2张牌对目标造成1点伤害';
				},
			},
			sub:true,
		},
		rou:{
			intro:{
				content:function(storage,player,skill){
					return '柔：你造成伤害后，可以令目标回复1点体力，然后你摸2张牌';
				},
			},
			marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"40px")+" src="+lib.assetURL+"extension/血色衣冠/icon/rou.png>":"柔",
			sub:true,
		},
	},
	"prompt2":function (event,player){
        if(player.storage.XS_gangrou==true){
			return '是否弃置2张牌对'+get.translation(event.player)+'造成1点伤害';
        }
        else if(player.storage.XS_gangrou==false){
			return '是否令'+get.translation(event.player)+'回复1点体力，然后你摸2张牌';
        }
    },
	trigger:{
		source:"damageEnd",
	},
	filter:function (event,player){
		if(event.preserve) return false;
		if(event.getParent().name=='XS_gangrou') return false;
		if(!event.player.isAlive()||!event.notLink()) return false;
		if(player.storage.XS_gangrou==true) {
			return player.countCards('he')>=2;
		}
		else if(player.storage.XS_gangrou==false) {
			return true;
		}
		return false;
	},
	check:function (event,player){
		if(player.storage.XS_gangrou==true) {
			var eff=get.damageEffect(event.player,player,player);
			return eff>=2&&player.countCards('he')>2;
		}
		else if(player.storage.XS_gangrou==false) {
			var eff=get.recoverEffect(event.player,player,player);
			return eff>=-2;
		}
		return false;
	},
	logTarget:'player',
	content:function(){
		"step 0"
		if(player.storage.XS_gangrou==true) {
			var next=player.chooseToDiscard(get.prompt('XS_gangrou'),2,'he');
			next.set('ai',function(card){
				return 6-get.value(card)
			});
		}
		else event.goto(2);
		"step 1"
		if(result.bool){
			trigger.player.damage(player,1,'nocard');
			player.storage.XS_gangrou=false;
			player.unmarkSkill("XS_gangrou_gang");
			player.markSkill("XS_gangrou_rou");
			event.finish();
		}
		"step 2"
		if(player.storage.XS_gangrou==false) {
			trigger.player.recover();
			player.draw(2);
			player.unmarkSkill("XS_gangrou_rou");
			player.markSkill("XS_gangrou_gang");
			player.storage.XS_gangrou=true;
		}
	},
},
"XS_yinren":{
	audio:"ext:血色衣冠:2",
	marktext:"忍",
	intro:{
		content:function (storage){
			return '当前有：<span class="bluetext">'+storage+'</span> 枚“忍”';
		},
	},
	trigger:{
		player:"damageBegin4",
	},
	init:function (player){
		player.storage.XS_yinren=0;
	},
	priority:-889,
	forced:true,
	filter:function (event,player){
		return event.num>0;
	},
	content:function (){
		player.storage.XS_yinren+=trigger.num;
		if(player.storage.XS_yinren>0) player.markSkill('XS_yinren');
		trigger.cancel();
	},
	ai:{
		maixie:true,
		"maixie_hp":true,
		nodamage:true,
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')){
					if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
					if(!target.hasFriend()) return;
					return [1,1.5];
				}
			},
		},
	},
	group:["XS_yinren_remove"],
    subSkill:{
        remove:{
            forced:true,
			trigger:{
				player:"phaseZhunbeiBegin",
			},
			priority:29,
            filter:function (event,player){
                return player.storage.XS_yinren>0;
            },
            content:function (){
				var num1=player.storage.XS_yinren;
				player.loseHp(num1);
				player.draw(2*num1);
				player.storage.XS_yinren=0
				player.unmarkSkill('XS_yinren');
            },
            sub:true,
        },
    },
},
"XS_qiying":{
	audio:"ext:血色衣冠:2",
	priority:8,
	trigger:{
		player:["shaBefore"],
	},
	filter:function (event,player){
		var hs=player.getCards('h');
		for(var i=0;i<hs.length;i++) {
			if(get.tag(hs[i],'damage')) return true;
		}
		return false;
	},
	direct:true,
	content:function (){
		"step 0"
		player.chooseToDiscard(get.prompt('XS_qiying'),'h',false,[1,Infinity],'可弃置至少1张带有伤害标签的牌，使'+get.translation(trigger.card)+'的基数与响应所需的闪增加等量的值，且此杀无视防具。',function(card){
			return get.tag(card,'damage');
		}).set('ai',function(card){
			var tri=_status.event.getTrigger();
			if(get.attitude(player,tri.targets[0])>0) return 0;
			if(tri.targets[0].hp<2) return 0;
			return 5-get.value(card);;
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_qiying');
			player.addTempSkill('XS_queyue_wushi',{player:'shaAfter'});
			var num1=result.cards.length;
			if(typeof trigger.shanRequired=='number'){
				trigger.shanRequired+=num1;
			}
			else{
				trigger.shanRequired=(1+num1);
			}
			trigger.ADDdamage=num1;
		}
	},
	ai:{
		expose:0.2,
	},
	group:["XS_qiying_dam"],
	subSkill:{
		dam:{
			trigger:{
				source:"damageBegin1",
			},
			filter:function (event){
				if(!event.card||event.card.name!='sha'||!event.notLink()) return false;
				return (typeof event.getParent().ADDdamage=='number'&&event.getParent().ADDdamage>0);
			},
			direct:true,
			content:function (){
				var num1=trigger.getParent().ADDdamage;
				trigger.num+=num1;
			},
			ai:{
				damageBonus:true,
				"XK_shabonus":true,
			},
			sub:true,
		},
	},
},
"XS_jiusheng":{
	mod:{
		cardUsable:function (card,player,num){
			if(card.name=='jiu') return Infinity;
		},
	},
	audio:2,
    enable:"phaseUse",
    filterCard:true,
    usable:1,
	selectCard:1,
    filterTarget:function (card,player,target){
        return true;
    },
    check:function (card){
        return 7-get.value(card);
    },
    position:"h",
    filter:function (event,player){
        return player.countCards('h')>0;
    },
    discard:false,
    lose:false,
    prepare:"give2",
    content:function (){
        player.lose(cards,ui.special,'toStorage');
		if(!target.hasSkill('XS_jiushengdk')){
			target.addSkill('XS_jiushengdk');
			target.storage.XS_jiushengdk=[];
			target.markSkill('XS_jiushengdk');
        }
		target.storage.XS_jiushengdk.push(cards[0]);
		target.syncStorage('XS_jiushengdk');
    },
    ai:{
		expose:0.3,
        order:8,
        result:{
            target:3,
        },
    },
},
"XS_jiushengdk":{
	mark:true,
	marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"30px")+" src="+lib.assetURL+"extension/血色衣冠/icon/niang.png>":"酿",
    intro:{
        content:"cards",
    },
	audio:2,
	enable:"chooseToUse",
	forceDie:true,
	filter:function (event,player){
		if(player.storage.XS_jiushengdk.length>0) {
			if(event.type=='dying'){
				if(player!=event.dying) return false;
				return true;
			}
			else if(event.parent.name=='phaseUse'){
				return true;
			}
		}
		return false;
	},
	check:function (card){
		var player=_status.event.player;
		if(_status.event.type=='dying'||player.isDying()) return 1;
		return player.countCards('h','sha')>0;
	},
	chooseButton:{
		dialog:function (event,player){
			var cardX=player.storage.XS_jiushengdk;
			return ui.create.dialog('酒圣',[cardX,'vcard']);
		},
		backup:function (links,player){
			return {
				filterCard:function (card){
					return false;
				},
				selectCard:-1,
				viewAs:{name:'jiu'},
				cards:links,
				onuse:function(result,player){
					result.cards=lib.skill[result.skill].cards;
					var card=result.cards[0];
					player.storage.XS_jiushengdk.remove(card);
					player.syncStorage('XS_jiushengdk');
					if(!player.storage.XS_jiushengdk.length){
						player.removeSkill('XS_jiushengdk');
						player.unmarkSkill('XS_jiushengdk');
					}
				}
			}
		},
		prompt:function (links,player){
			return '将一张“酒圣”牌当酒使用';
		},
	},
	ai:{
		order:10,
		result:{
			player:function(player){
				if(player.countCards('h','sha')>0||player.isDying()) return 2;
				return 0;
			}
		},
		skillTagFilter:function(player){
			if(!player.storage.XS_jiushengdk.length) return false;
		},
		order:function(item,player){
			return 9;
		},
		save:true,
	},
},
"XS_chunniang":{
	trigger:{
		global:"jiuBegin",
	},
	forced:true,
	filter:function (event,player){
		return event.skill=='XS_jiushengdk_backup'&&event.getParent().skill=='XS_jiushengdk_backup';
	},
	priority:998,
	content:function (){
		var tp=get.type(trigger.cards[0]);
		if(tp=='delay') tp='trick';
		switch(tp){
			case 'equip':
				trigger.player.recover();
			break;
			case 'trick':
				trigger.player.draw(2);
			break;
			case 'basic':
				trigger.baseDamage++;
			break;
		}
	},
},
"XS_wangyou":{
	trigger:{
        player:"useCardAfter",
    },
    filter:function (event,player){
        return event.card.name=='jiu'&&player.countCards('h');
    },
    check:function (event,player){
		if(player.countCards('h','du')>0) return true;
        else return game.hasPlayer(function(current){
            return get.attitude(player,current)<0;
        });
    },
	ai:{
		expose:0.2,
	},
    content:function (){
        "step 0"
        player.chooseCardTarget({
            filterCard:function(card){
                return true;
            },
            position:"h",
            selectCard:1,
            selectTarget:[1,2],
            filterTarget:function(card,player,target){
                return player!=target&&target.countCards('h');
            },
            ai1:function(card){
                if(card.name=='du') return 20;
                return 3-get.value(card);
            },
            ai2:function(target){
                var att=get.attitude(_status.event.player,target);
                return -att;
            },
            forced:true,
            prompt:'请选择要展示的牌和展示牌的目标'
        });
        "step 1"
        if(result.bool){
            event.cards1=result.cards.slice(0);;
            player.lose(result.cards,ui.special);
            player.$throw(result.cards,1000,'nobroadcast');
			var tars=result.targets;
            event.targetss=tars.sort(lib.sort.seat);
        }
        else event.finish();
        "step 2"
        if(event.targetss.length){
            var target=event.targetss.shift();
            event.current=target;
        }
        else event.goto(5);
        "step 3"
        if(event.current){
			event.current.chooseCard('展示1张手牌','h',true).set('ai',function(card){
				return 12-get.value(card);
			});
        }
        else event.goto(2);
        "step 4"
        if(result&&result.cards){
            event.current.lose(result.cards,ui.special);
            event.current.$throw(result.cards,1000,'nobroadcast');
            event.cards1.push(result.cards[0]);
            game.delay(1);
        }
        event.goto(2);
        "step 5"
        if(event.cards1.length>0) {
            event.num=event.cards1.length;
            event.chosen=[];
            event.num1=0;
            event.num2=0;
        }
        else event.finish();
        'step 6'
        var js=player.getCards('j');
        var pos;
        var choice=-1;
        var getval=function(card,pos){
            if(js[pos]){
                return (get.judge(js[pos]))(card);
            }
            else{
                return get.value(card);
            }
        };
        for(pos=0;pos<Math.min(event.cards1.length,js.length+2);pos++){
            var max=getval(event.cards1[pos],pos);
            for(var j=pos+1;j<event.cards1.length;j++){
                var current=getval(event.cards1[j],pos);
                if(current>max){
                    choice=j;
                    max=current;
                }
            }
            if(choice!=-1){
                break;
            }
        }
        player.chooseCardButton('选择要移动的牌',event.cards1).set('filterButton',function(button){
            return !_status.event.chosen.contains(button.link);
        }).set('chosen',event.chosen).set('ai',function(button){
            return button.link==_status.event.choice?1:0;
        }).set('choice',event.cards1[choice]);
        event.pos=pos;
        'step 7'
        if(result.bool){
            var card=result.links[0];
            var index=event.cards1.indexOf(card);
            event.card=card;
            event.chosen.push(card);
            event.cards1.remove(event.card);
            var buttons=event.cards1.slice(0);
            player.chooseControl(function(){
                return _status.event.controlai;
            }).set('controlai',event.pos||0).set('sortcard',buttons).set('tosort',card);
        }
        else{
            event.goto(9);
        }
        'step 8'
        if(typeof result.index=='number'){
            if(result.index>event.cards1.length){
                ui.cardPile.appendChild(event.card);
                event.num2++;
            }
            else{
                event.cards1.splice(result.index,0,event.card);
            }
            event.num--;
            if(event.num>0){
                event.goto(6);
            }
        }
        'step 9'
        while(event.cards1.length){
            ui.cardPile.insertBefore(event.cards1.pop(),ui.cardPile.firstChild);
            event.num1++;
        }
        var js=player.getCards('j');
        player.popup(get.cnNumber(event.num1)+'上'+get.cnNumber(event.num2)+'下');
        game.log(player,'将','#y'+get.cnNumber(event.num1)+'张牌','置于牌堆顶，','#y'+get.cnNumber(event.num2)+'张牌','置于牌堆底');
    },
},
"XS_jianshi":{
	enable:"phaseUse",
    usable:1,
    init:function (player){
        player.storage.XS_jianshi=0;
    },
	filter:function (event,player){
        return player.storage.XS_jianshi<3;
    },
    skillAnimation:true,
    content:function (){
        player.gainMaxHp();
        player.draw(2);
        player.addTempSkill('XS_jianshi_mark');
        player.storage.XS_jianshi++;
    },
    ai:{
        order:9,
        result:{
            player:3,
        },
    },
	subSkill:{
		mark:{
			mark:true,
			mod:{
				globalFrom:function (from,to,current){
					return current-1;
				},
				cardUsable:function (card,player,num){
					if(card.name=='sha') return num+1;
				},
			},
			intro:{
				content:'使用杀的次数、进攻距离+1'
			},
			sub:true,
        },
    },
},
"XS_jingong1":{
    skillAnimation:true,
    animationColor:"thunder",
    audio:2,
    trigger:{
        player:"phaseJieshuBegin",
    },
    forced:true,
    unique:true,
    juexingji:true,
	derivation:['XS_qingfu'],
	init:function(player){
		player.storage.XS_jingong1=false;
	},
    filter:function (event,player){
        return player.storage.XS_jianshi>=3&&!player.storage.XS_jingong1;
    },
    content:function (){
		"step 0"
        player.awakenSkill('XS_jingong1');
        player.storage.XS_jingong1=true;
		"step 1"
        player.recover();
        player.draw(2);
        player.removeSkill('XS_jianshi');
        player.addSkill('XS_qingfu');
    },
},
"XS_qingfu":{
	trigger:{
        player:"damageEnd",
    },
    filter:function (event,player){
        return event.num>0;
    },
    forced:true,
    content:function (){
        "step 0"
        player.loseMaxHp();
        player.draw(trigger.num);
		"step 1"
        player.chooseTarget('你可令1名角色横置',function(card,player,target){
            return !target.isLinked();
        }).ai=function(target){
            var player=_status.event.player;
            return get.attitude(player,target)<=0;
        }
        "step 2"
        if(result.bool) {
            result.targets[0].link(true);
        }
    },
},
"XS_zhengshui":{
	audio:"ext:血色衣冠:2",
	enable:'phaseUse',
	usable:1,
	filter:function(event,player){
		return game.countPlayer()>=2;
	},
	selectCard:1,
	check:function(card){return 7-get.value(card)},
	filterCard:true,
	position:'h',
	filterTarget:function(card,player,target){
		return target.countCards('h')>0;
	},
	targetprompt:['发起方','接受方'],
	selectTarget:2,
	multitarget:true,
	content:function(){
		'step 0'
		targets[0].chooseToCompare(targets[1]);
		'step 1'
		if(result.bool){
			if(targets[1].countCards('h',{color:'red'})) {
				targets[1].chooseCard('选择1张红色手牌',true,function(card,player){
					return get.color(card)=='red';
				}).ai=function(card){
					return 8-get.value(card);
				};
				event.target=targets[1];
			}
			else event.finish();
		}
		else if(!result.tie){
			if(targets[0].countCards('h',{color:'red'})) {
				targets[0].chooseCard('选择1张红色手牌',true,function(card,player){
					return get.color(card)=='red';
				}).ai=function(card){
					return 8-get.value(card);
				};
				event.target=targets[0];
			}
			else event.finish();
		}
		'step 2'
		if(result.bool){
			event.cards1=result.cards[0];
        }
		else event.finish();
		'step 3'
		player.chooseTarget('令1名其他角色获得'+get.translation(event.cards1),function(card,player,target){
			var target1=event.target;
			return player!=target&&target1!=target;
		}).ai=function(target){
			return get.attitude(player,target)>0;
		}
		'step 4'
		if(result.bool){
			result.targets[0].gain(event.cards1,event.target,'giveAuto');
		}
	},
	ai:{
		order:8,
		result:{
			target:-2,
		},
		expose:0.2,
		threaten:1.2,
	}
},
"XS_xinsuan":{
	audio:"ext:血色衣冠:2",
	trigger:{
        global:["chooseToCompareAfter"],
    },
	usable:1,
    filter:function (event,player){
        if(event.preserve) return false;
		return get.position(event.card1,true)=='o'&&get.position(event.card2,true)=='o';
    },
    frequent:true,
    content:function (){
        'step 0'
        player.chooseControlList(['获得'+get.translation(trigger.card1),'获得'+get.translation(trigger.card2)]).set('ai',function(event,player){
            var trigger=_status.event.getTrigger();
            if(get.value(trigger.card1)>get.value(trigger.card2)) return 0;
            return 1;
        }).set('prompt','心算：请选择1项');
        "step 1"
        if(result.index==0){
            player.gain(trigger.card1,'gain2');
            player.addTempSkill('XS_xinsuan_mark',{player:'phaseBefore'});
            player.storage.XS_xinsuan_mark=get.number(trigger.card1)%2;
        }
        else if(result.index==1){
            player.gain(trigger.card2,'gain2');
            player.addTempSkill('XS_xinsuan_mark',{player:'phaseBefore'});
            player.storage.XS_xinsuan_mark=get.number(trigger.card2)%2;
        }
    },
    subSkill:{
        mark:{
			charlotte:true,
            mark:true,
            marktext:"算",
            intro:{
                content:function (storage){
					var translation1;
					if(storage==1) translation1='奇数';
					else translation1='偶数';
                    return '其他角色使用点数不为<span class="bluetext"> '+translation1+' </span> 的基本、普通锦囊牌指定你为目标时，需弃置1张牌，否则此牌对你无效。';
                },
            },
			onremove:function (player,skill){
				delete player.storage.XS_xinsuan_mark;
			},
            trigger:{
                target:"useCardToTargeted",
            },
            direct:true,
            filter:function (event,player){
                if(event.player==player) return false;
				if(get.type(event.card)!='basic'&&get.type(event.card)!='trick') return false;
                var num1=player.storage.XS_xinsuan_mark;
                return get.number(event.card)%2!=num1;
            },
            content:function (){
                "step 0"
				player.logSkill('XS_xinsuan',trigger.player);
                var num1=player.storage.XS_xinsuan_mark;
				var translation1;
				if(num1==1) translation1='奇数';
				else translation1='偶数';
                var eff=get.effect(player,trigger.card,trigger.player,trigger.player);
                trigger.player.chooseToDiscard('弃置1张牌，否则此牌对'+get.translation(player)+'无效',1,'he',function(card){
					var tri=_status.event.getTrigger();
                    return !tri.cards.contains(card);
                }).set('ai',function(card){
                    if(_status.event.eff>0){
                        return 6-get.value(card);
                    }
                    return 0;
                });
                "step 1"
                if(result.bool==false){
                    trigger.getParent().excluded.add(player);
                }
            },
			ai:{
				effect:{
					target:function (card,player,target,current){
						if(get.attitude(player,target)<0){
							if(!target.hasSkill('XS_xinsuan_mark')) return;
							var num1=target.storage.XS_xinsuan_mark;
							var bs=player.getCards('h',function(cardx){
								return get.number(cardx)%2==num1;
							});
							if(bs.length<1) return 0;
							return [1,0,1,-1];
						}
					},
				},
			},
            sub:true,
        },
    },
},
"XS_zhengqi":{
	ai:{
		damage:true,
		maixie:true,
		"maixie_defend":true,
		effect:{
			target:function (card,player,target){
                if(get.tag(card,'damage')){
					if(target.hp!=1) return;
                    if(!target.hasFriend()) return;
					return [1,1.5];
                }
            },
		},
    },
	group:['XS_zhengqi_be','XS_zhengqi_af'],
	subSkill:{
		be:{
			trigger:{player:['dyingBegin']},
			filter:function (event,player){
				return _status.currentPhase!=player;
			},
			check:function (event,player){
				var tar=_status.currentPhase;
				return get.damageEffect(tar,player,player,'fire')>0;
			},
			"prompt2":function (event,player){
				return '是否对'+get.translation(_status.currentPhase)+'造成1点火属性伤害？';
			},
			content:function(){
				game.playXSAudio('XS_zhengqi',2);
				_status.currentPhase.damage(1,player,'fire','nocard');
			},
			sub:true,
		},
		af:{
			trigger:{player:['dyingAfter']},
			filter:function (event,player){
				return true;
			},
			frequent:true,
			content:function(){
				game.playXSAudio('XS_zhengqi',2);
				var num=player.getDamagedHp();
				player.draw(num);
			},
			sub:true,
		},
	},
},
"XS_danxin":{
	mod:{
		ignoredHandcard:function (card,player){
            if(card.name=='tao'){
                return true;
            }
        },
		cardDiscardable:function (card,player,name){
            if(name=='phaseDiscard'&&card.name=='tao') return false;
        },
	},
	ai:{
		skillTagFilter:function(player,tag){
			switch(tag){
				case 'respondShan':{
					if(!player.countCards('h',{suit:'diamond'})||player.hp>2) return false;
					break;
				}
				case 'save':{
					if(!player.countCards('h',{suit:'heart'})||player.hp>1) return false;
					break;
				}
				default:return true;break;
			}
		},
		maixie:true,
		save:true,
		respondShan:true,
		effect:{
			target:function(card,player,target){
				if(get.tag(card,'recover')&&target.hp>=1) return [0,0];
				if(!target.hasFriend()) return;
				if((get.tag(card,'damage')==1||get.tag(card,'loseHp'))&&target.hp>1) return [0,1];
			}
		},
		threaten:function(player,target){
			var num=player.getDamagedHp()*0.2+0.9;
			return num;
		},
	},
    group:["XS_danxin_wuxie","XS_danxin_shan","XS_danxin_tao"],
    subSkill:{
        wuxie:{
			enable:['chooseToUse','chooseToRespond'],
			prompt:function(){
				return '将1张梅花手牌当作无懈可击使用';
			},
			position:'h',
			check:function(card,event){
				return 6-get.value(card);
			},
			selectCard:1,
			viewAs:{name:'wuxie'},
			viewAsFilter:function(player){
				if(player.hp>3) return false;
				return player.countCards('h',{suit:'club'});
			},
			onuse:function(result,player){
				game.playXSAudio('XS_danxin',2);
			},
			filterCard:function(card){
				return get.suit(card)=='club';
			},
            sub:true,
        },
        shan:{
			enable:['chooseToUse','chooseToRespond'],
			prompt:function(){
				return '将1张方片手牌当作闪使用或打出';
			},
			position:'h',
			check:function(card,event){
				return 8-get.value(card);
			},
			selectCard:1,
			viewAs:{name:'shan'},
			onuse:function(result,player){
				game.playXSAudio('XS_danxin',2);
			},
			filter:function(event,player){
				if(player.hp>2) return false;
				return player.countCards('h',{suit:'diamond'});
			},
			filterCard:function(card){
				return get.suit(card)=='diamond';
			},
            sub:true,
        },
		tao:{
			enable:['chooseToUse','chooseToRespond'],
			prompt:function(){
				return '将1张红桃手牌当作桃使用';
			},
			position:'h',
			check:function(card,event){
				return 8-get.value(card);
			},
			selectCard:1,
			viewAs:{name:'tao'},
			onuse:function(result,player){
				game.playXSAudio('XS_danxin',2);
			},
			filter:function(event,player){
				if(player.hp>1) return false;
				return player.countCards('h',{suit:'heart'});
			},
			filterCard:function(card){
				return get.suit(card)=='heart';
			},
            sub:true,
        },
    },
},
"XS_liqi":{
	mod:{
		canBeDiscarded:function(card,player){
			if(get.position(card)=='e') return false;
		},
	},
	usable:1,
    enable:"phaseUse",
    selectTarget:1,
    filterTarget:function (card,player,target){
        return target.getEquip(1);
    },
    filter:function (event,player){
        return game.hasPlayer(function(current){
            return current.getEquip(1);
        });
    },
    content:function (){
		"step 0"
		var weaponlist=['hanbing','qilin','fangtian','guanshi','zhangba','qinglong','qinggang','zhuge','cixiong','zhuque','guding','zhungangshuo','yinyueqiang','qibaodao'];
		var eqs=target.getCards('e',{subtype:'equip1'}),lt=[];
		for(var i=0;i<eqs.length;i++) {
			if(weaponlist.contains(eqs[i].name)) {
				lt.push(eqs[i]);
			}
		}
		if(!lt.length) {
			player.draw(2);
		}
		else {
			var next=player.chooseButton();
			next.set('createDialog',['将'+get.translation(target)+'的1张装备牌替换为强化版',lt]);
			next.set('ai',function(button){
				return 8-get.buttonValue(button);
			});
		}
		"step 1"
		if(result.bool){
			var card1=result.links[0];
			var name='';
			var skill1;
			switch(card1.name){
				case 'hanbing':name='强化寒冰剑';skill1='EXhanbing_skill';break;
				case 'qilin':name='强化麒麟弓';skill1='EXqilin_skill';break;
				case 'fangtian':name='强化方天戟';skill1='EXfangtian_skill';break;
				case 'guanshi':name='强化贯石斧';skill1='EXguanshi_skill';break;
				case 'zhangba':name='强化丈八矛';skill1='EXzhangba_skill';break;
				case 'qinglong':name='强化青龙刀';skill1='EXqinglong_skill';break;
				case 'qinggang':name='强化青钢剑';skill1='EXqinggang_skill';break;
				case 'zhuge':name='强化诸葛弩';skill1='zhuge_skill';break;
				case 'cixiong':name='强化双股剑';skill1='EXshuanggu_skill';break;
				case 'zhuque':name='强化朱雀扇';skill1='EXzhuque_skill';break;
				case 'guding':name='强化古锭刀';skill1='EXguding_skill';break;
				case 'zhungangshuo':name='强化衠钢槊';skill1='EXzhungang_skill';break;
				case 'yinyueqiang':name='强化银月枪';skill1='EXyinyue_skill';break;
				case 'qibaodao':name='强化七宝刀';skill1='EXqibao_skill';break;
			}
			if(name!='') {
				var info1=get.info(card1);
				var info={
					enable:true,
					type:'equip',
					subtype:'equip1',
					vanish:true,
					destroy:"XS_liqi",
					cardimage:info1.cardimage||card1.name,
					filterTarget:function(card,player,target){
						return target==player;
					},
					selectTarget:-1,
					modTarget:true,
					content:lib.element.content.equipCard,
					legend:true,
					onEquip:[],
					onLose:[],
					skills:[],
					distance:{},
					ai:{
						order:8.9,
						equipValue:9,
						useful:2.5,
						value:function(card,player){
							var value=0;
							var info=get.info(card);
							var current=player.getEquip(info.subtype);
							if(current&&card!=current){
								value=get.value(current,player);
							}
							var equipValue=info.ai.equipValue||info.ai.basic.equipValue;
							if(typeof equipValue=='function') return equipValue(card,player)-value;
							return equipValue-value;
						},
						result:{
							target:function(player,target){
								return get.equipResult(player,target,name);
							}
						}
					}
				}
				if(card1.name=='zhuge') {
					info.distance={attackFrom:-2};
				}
				else {
					for(var i in info1.distance){
						info.distance[i]=info1.distance[i];
					}
				}
				info.skills=info.skills.concat(skill1);
				if(card1.name=='qibaodao') info.skills=info.skills.concat('qibaodao2');
				if(info1.onEquip){
					if(Array.isArray(info1.onEquip)){
						info.onEquip=info.onEquip.concat(info1.onEquip);
					}
					else{
						info.onEquip.push(info1.onEquip);
					}
				}
				if(info1.onLose){
					if(Array.isArray(info1.onLose)){
						info.onLose=info.onLose.concat(info1.onLose);
					}
					else{
						info.onLose.push(info1.onLose);
					}
				}
				if(info.onEquip.length==0) delete info.onEquip;
				if(info.onLose.length==0) delete info.onLose;
				lib.card[name]=info;
				lib.translate[name]=name;
				lib.translate[name+'_info']=get.skillInfoTranslation(skill1);
				try{
					game.addVideo('newcard',null,{
						name:name,
						translate:lib.translate[name],
						info:lib.translate[name+'_info'],
						card:card1.name,
						legend:true,
					});
				}
				catch(e){
					console.log(e);
				}
				target.equip(game.createCard({name:name,suit:card1.suit,number:card1.number}));
			}
			else event.finish();
		}
		else event.finish();
		"step 2"
		player.draw();
    },
    ai:{
        order:9.5,
        result:{
            player:1,
			target:function(player,target){
				if(target==player) return 2;
				return 1;
			},
        },
    },
},
"XS_jiejiang":{
    trigger:{
        global:["equipAfter"],
    },
    direct:true,
    filter:function (event,player){
		if(player.hasSkill('XS_jiejiang_temp')) return false;
        return _status.currentPhase==event.player&&player.countCards('h');
    },
    content:function (){
        "step 0"
        player.chooseCardTarget({
            filterCard:function(card){
                return true;
            },
            selectCard:1,
            position:"h",
            filterTarget:function(card,player,target){
                var trigger=_status.event.getTrigger();
                return target!=trigger.player;
            },
            ai1:function(card){
				var trigger=_status.event.getTrigger();
				if(get.attitude(_status.event.player,trigger.player)>0) return -1;
                var card1=trigger.card;
                return get.value(card1)-get.value(card)-2.5;
            },
            ai2:function(target){
				var trigger=_status.event.getTrigger();
                var att=get.attitude(_status.event.player,target);
                var eq=get.subtype(trigger.card);
                if(att>0&&!target.getEquip(eq)) return att;
                return -1;
            },
            forced:false,
            prompt:'是否对'+get.translation(trigger.player)+'发动【截江】？</br></br>你可弃置1张手牌令1名角色装备'+get.translation(trigger.card)+'。',
        });
        "step 1"
        if(result.bool){
			player.logSkill('XS_jiejiang',trigger.player);
			player.addTempSkill('XS_jiejiang_temp');
            player.discard(result.cards);
			trigger.player.lose(trigger.card);
			trigger.player.$throw(trigger.card,1000);
            trigger.player.line(result.targets[0],'red');
            result.targets[0].equip(trigger.card);
            game.delay(0.7);
        }
    },
    ai:{
        expose:0.3,
    },
	subSkill:{
		temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_chuangge":{
	enable:"phaseUse",
	selectTarget:1,
	filterTarget:function (card,player,target){
        return target!=player;
    },
	filter:function (event,player){
        return player.countCards('e')>0;
    },
	filterCard:function (card){
		return true;
	},
	prepare:function (cards,player,targets){
		player.line(targets);
	},
	position:"e",
	selectCard:1,
	check:function (card){
		return get.value(card);
	},
	discard:false,
	content:function (){
		"step 0"
		target.gain(cards[0],player,'giveAuto');
		player.draw(2);
		event.sub=get.subtype(cards[0]);
		"step 1"
		player.chooseTarget('是否废除你的'+get.translation(event.sub)+'栏位，以弃置任意名其他角色对应栏位的所有牌？',[1,Infinity],function(card,player,target){
			return target!=player&&target.getEquip(event.sub);
		}).set('ai',function(target){
			var att=get.attitude(player,target);
			var num=game.countPlayer(function(current){
				return current!=player&&current.getEquip(event.sub)&&att<0;
			});
			if(num>1) {
				return -att;
			}
			return -1;
		});
		"step 2"
		if(result.bool) {
			player.disableEquip(event.sub);
			for(var i=0;i<result.targets.length;i++){
				player.line(result.targets[i],'black');
				result.targets[i].discard(result.targets[i].getEquip(event.sub));
			}
		}
    },
    ai:{
		order:1,
		expose:0.2,
		result:{
			player:1,
			target:1,
        },
    },
},
"XS_fuqing":{
    trigger:{
        global:["damageAfter","loseHpAfter"],
    },
    filter:function (event,player){
        return event.player.hp==1&&!event.player.hasSkill('XS_fuqing_temp');
    },
    check:function (event,player){
        return get.attitude(player,event.player)>0;
    },
    logTarget:"player",
    content:function (){
        trigger.player.insertPhase();
        trigger.player.addSkill('XS_fuqing_temp');
		player.gainMaxHp();
    },
    ai:{
        expose:0.3,
    },
    subSkill:{
        temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_zengzao":{
	limited:true,
    enable:"phaseUse",
	filterTarget:function(card,player,target){
		return target.countCards('h');
	},
    content:function (){
        'step 0'
        player.awakenSkill('XS_zengzao');
        'step 1'
		target.chooseToDiscard('h',true,1,'弃置1张手牌并摸3张牌，若你有已发动的限定技，你可令其中1项于本回合结束后重置。',function(card){
			return true;
		}).set('ai',function(card){
			return 7-get.value(card);;
		});
        'step 2'
		target.draw(3);
        'step 3'
        var list=[];
        var skills=target.getOriginalSkills();
        for(var i=0;i<skills.length;i++){
            if(lib.skill[skills[i]].limited&&target.awakenedSkills.contains(skills[i])){
                list.push(skills[i]);
            }
        }
        if(list.length==1){
            target.addTempSkill('XS_zengzao_store','phaseZhunbeiBegin');
			target.storage.XS_zengzao_store=list[0];
            event.finish();
        }
        else if(list.length>1){
            player.chooseControl(list).set('prompt','选择一个限定技在回合结束后重置之');
        }
        else{
            event.finish();
        }
        'step 4'
        target.addTempSkill('XS_zengzao_store','phaseZhunbeiBegin');
		target.storage.XS_zengzao_store=result.control;
    },
    subSkill:{
        store:{
			charlotte:true,
            trigger:{
                global:"phaseAfter",
            },
            direct:true,
            content:function (){
				if(player.storage.XS_zengzao_store) {
					player.restoreSkill(player.storage.XS_zengzao_store);
				}
            },
            sub:true,
        },
    },
    ai:{
		expose:0.3,
        order:1,
        result:{
            target:function (player,target){
                if(target.countCards('h')){
                    var skills=target.getOriginalSkills();
                    for(var i=0;i<skills.length;i++){
                        if(lib.skill[skills[i]].limited&&target.awakenedSkills.contains(skills[i])){
                            return 8;
                        }
                    }
                }
                if(target==player) return 1;
            },
        },
    },
    mark:true,
    intro:{
        content:"limited",
    },
    skillAnimation:true,
    init:function (player,skill){
        player.storage[skill]=false;
    },
},
"XS_liaodi":{
	marktext:"料",
    intro:{
        content:"cards",
    },
    init:function (player){
        player.storage.XS_liaodi=[];
    },
    trigger:{
        player:"phaseDiscardBefore",
    },
    direct:true,
    filter:function (event,player){
        return player.countCards('h')>0;
    },
    content:function (){
        "step 0"
        player.chooseCard(get.prompt('XS_liaodi'),[1,Infinity],'h','你可将至少1张手牌置于武将牌上，你的回合外，你可移除武将牌上1张牌视为使用了1张闪或无懈可击。',false).ai=function(card){
            return 5.5-get.value(card);
        }
        "step 1"
        if(result.bool){
			player.logSkill('XS_liaodi');
            var cds=result.cards;
            player.lose(cds,ui.special,'toStorage');
			for(var i=0;i<cds.length;i++) {
				player.storage.XS_liaodi.push(cds[i]);
			}
            if(player.storage.XS_liaodi.length!=0){    
                player.markSkill('XS_liaodi');
                player.syncStorage('XS_liaodi');
            }
        }
    },
    group:["XS_liaodi_shan","XS_liaodi_wuxie"],
    subSkill:{
        shan:{
            trigger:{
                player:["chooseToRespondBegin","chooseToUseBegin"],
            },
            filter:function (event,player){
                if(_status.currentPhase==player) return false;
                if(player.storage.XS_liaodi.length<=0) return false;
                if(event.responded) return false;
                if(!event.filterCard({name:'shan'},player,event)) return false;
                if(event.name=='chooseToRespond'&&!lib.filter.cardRespondable({name:'shan'},player,event)) return false;
                return true;
            },
            prompt:"你可移除1枚“料敌”牌，视为使用了1张闪",
            check:function (){return 1},
            content:function (){
                "step 0"
                player.storage.XS_liaodi.splice(0,1);
                player.syncStorage('XS_liaodi');
                if(!player.storage.XS_liaodi.length){
                    player.unmarkSkill('XS_liaodi');
                }
                'step 1'
                trigger.untrigger();
                trigger.responded=true;
                trigger.result={bool:true,card:{name:'shan'}}
            },
            ai:{
                respondShan:true,
				skillTagFilter:function (player,tag,arg){
					if(!player.storage.XS_liaodi.length) return false;
				},
            },
        },
        wuxie:{
            enable:["chooseToUse","chooseToRespond"],
            filterCard:function (){return false},
            selectCard:-1,
            viewAsFilter:function (player){
                if(_status.currentPhase==player) return false;
                return player.storage.XS_liaodi.length>0;
            },
            viewAs:{
                name:"wuxie",
            },
            prompt:"你可移除1枚“料敌”牌，视为使用了1张无懈可击",
            onuse:function (result,player){
                player.storage.XS_liaodi.splice(0,1);
                player.syncStorage('XS_liaodi');
                if(!player.storage.XS_liaodi.length){
                    player.unmarkSkill('XS_liaodi');
                }
            },
            check:function (){return 1},
            ai:{
                threaten:0.8,
                basic:{
                    useful:[6,4],
                    value:[6,4],
                },
                result:{
                    player:1,
                },
                expose:0.2,
            },
        },
    },
},
"XS_tongjian":{
	group:["XS_tongjian_shan","XS_tongjian_wuxie"],
	subSkill:{
        wuxie:{
			enable:["chooseToUse"],
			filterCard:function (){return false},
			selectCard:-1,
			viewAsFilter:function (player){
				return !player.hasSkill('XS_tongjian_temp');
			},
			viewAs:{
				name:"wuxie",
			},
			precontent:function(){
				"step 0"
				player.addTempSkill('XS_tongjian_temp','roundStart');
				var evt=event.getParent(5);
				if(get.itemtype(evt.cards)=='cards') {
					event.cds=evt.cards.filterInD();
				}
				if(event.cds&&event.cds.length) {
					player.chooseTarget('你可令一名其他角色获得'+get.translation(event.cds),1,function(card,player,target){
						return target!=player;
					}).ai=function(target){
						return get.attitude(player,target);
					}
				}
				"step 1"
				if(result.bool) {
					result.targets[0].gain(event.cds,'gain2','log');
				}
			},	
			prompt:"视为使用1张无懈可击，然后令1名角色获得此牌所响应的牌",
			check:function (card){return true;},
			sub:true,
        },
		shan:{
			enable:["chooseToUse","chooseToRespond"],
			filterCard:function (){return false},
			selectCard:-1,
			viewAsFilter:function (player){
				return !player.hasSkill('XS_tongjian_temp');
			},
			viewAs:{
				name:"shan",
			},
			prompt:"使用或打出1张闪，然后令1名角色获得此闪所响应的牌",
			check:function (card){return true;},
			precontent:function(){
				"step 0"
				player.addTempSkill('XS_tongjian_temp','roundStart');
				var evt=event.getParent(2);
				if(get.itemtype(evt.cards)=='cards') {
					event.cds=evt.cards.filterInD();
				}
				if(event.cds&&event.cds.length) {
					player.chooseTarget('你可令一名其他角色获得'+get.translation(event.cds),1,function(card,player,target){
						return target!=player;
					}).ai=function(target){
						return get.attitude(player,target);
					}
				}
				"step 1"
				if(result.bool) {
					result.targets[0].gain(event.cds,'gain2','log');
				}
			},	
			ai:{
				respondShan:true,
				skillTagFilter:function(player){
					if(player.hasSkill('XS_tongjian_temp')) return false;
				},
			},
			sub:true,
        },
		temp:{
			charlotte:true,
			sub:true,
        },
    },
},
"XS_gufa":{
	trigger:{player:'phaseDrawBegin2'},
	forced:true,
	preHidden:true,
	filter:function(event,player){
		return !event.numFixed;
	},
	content:function(){
		trigger.num+=2;
	},
	mod:{
		maxHandcard:function (player,num){
			return Math.max(0,num-player.countCards('e'));
		},
	},
	ai:{
		effect:{
			target:function (card,player,target){
				if(get.type(card)=='equip') return 0.5;
			},
		},
    },
},
"XS_shuwei":{
	audio:"ext:血色衣冠:2",
    group:["XS_shuwei_draw","XS_shuwei_use"],
    subSkill:{
        draw:{
			ai:{
				expose:0.2,
			},
            trigger:{
                player:"phaseDrawBefore",
            },
            filter:function (event,player){
                return !player.hasSkill('XS_shuwei_temp');
            },
            direct:true,
            content:function (){
                "step 0"
                player.chooseTarget(get.prompt('XS_shuwei'),'你可跳过摸牌阶段，令至多2名角色获得1个额外的摸牌阶段，若仅选择1了名其他角色，你摸1张牌。',[1,2],function(card,player,target){
                    return player!=target;
                },function(target){
                    var att=get.attitude(player,target);
                    var hs1=player.countCards('h');
                    var hs2=target.countCards('h');
                    if(att>0) return hs1-hs2;
					return -1;
                });
                "step 1"
                if(result.bool){
					player.logSkill('XS_shuwei',result.targets);
                    player.addTempSkill('XS_shuwei_temp');
                    var len=result.targets.length;
                    if(len==1) {
                        player.draw();
                    }
                    for(var i=0;i<len;i++) {
                        result.targets[i].phaseDraw();
                    }
                    trigger.cancel();
                }
                else event.finish();
            },
            sub:true,
        },
        use:{
			ai:{
				expose:0.2,
			},
            trigger:{
                player:"phaseUseBefore",
            },
            filter:function (event,player){
                return !player.hasSkill('XS_shuwei_temp');
            },
            direct:true,
            content:function (){
                "step 0"
                player.chooseTarget(get.prompt('XS_shuwei'),'你可跳过出牌阶段，令至多2名角色获得1个额外的出牌阶段，若仅选择1了名其他角色，你摸1张牌。',[1,2],function(card,player,target){
                    return player!=target;
                },function(target){
                    var att=get.attitude(player,target);
                    var hs=target.countCards('h');
                    if(att<0) return -1;
                    if(player.needsToDiscard()) {
                        if(ui.selected.targets.length==1) return -1;
                        return hs-1;
                    }
                    else return hs-2;
                });
                "step 1"
                if(result.bool){
					player.logSkill('XS_shuwei',result.targets);
                    player.addTempSkill('XS_shuwei_temp');
                    var len=result.targets.length;
                    if(len==1) {
                        player.draw();
                    }
                    for(var i=0;i<len;i++) {
                        result.targets[i].stat.push({card:{},skill:{}});
                        result.targets[i].phaseUse();
                    }
                    trigger.cancel();
                }
                else event.finish();
            },
            sub:true,
        },
        temp:{
			charlotte:true,
            sub:true,
        },
    },
},
"XS_lianjian":{
	group:["XS_lianjian_discard","XS_lianjian_judge"],
    subSkill:{
        discard:{
            trigger:{
                global:"discardAfter",
            },
            filter:function (event,player){
                if(event.player==player) return false;
                for(var i=0;i<event.cards.length;i++){
                    var suit1=get.suit(event.cards[i]);
                    if(get.position(event.cards[i])=='d'&&!player.countCards('h',{suit:suit1})){
                        return true;
                    }
                }
                return false;
            },
            check:function (event,player){
                for(var i=0;i<event.cards.length;i++){
                    if(get.value(event.cards[i])>=4) return true;
                }
            },
			"prompt2":function (event,player){
				return '当其他角色的牌因弃置或判定而进入弃牌堆时，你可获得其中1张你手牌中没有的花色的牌。';
			},
            content:function (){
                "step 0"
				game.playXSAudio('XS_lianjian',2);
                if(trigger.delay==false) game.delay();
                "step 1"
                event.cards=[];
                for(var i=0;i<trigger.cards.length;i++){
                    var suit1=get.suit(trigger.cards[i]);
                    if(get.position(trigger.cards[i])=='d'&&!player.countCards('h',{suit:suit1})){
                        event.cards.push(trigger.cards[i]);
                    }
                }
                if(event.cards.length) {
                    player.chooseCardButton('廉俭：选择1张牌获得之',true,event.cards,1).set('ai',function(button){
                        return get.value(button.link);
                    });
                }
                else event.finish();
                "step 2"
                if(result.bool){
                    player.gain(result.links[0],'log');
                    player.$gain2(result.links[0]);
                }
            },
            sub:true,
        },
        judge:{
            trigger:{
                global:"judgeAfter",
            },
            check:function (event,player){
                return get.value(event.result.card)>=4;
            },
			"prompt2":function (event,player){
				return '当其他角色的牌因弃置或判定而进入弃牌堆时，你可获得其中1张你手牌中没有的花色的牌。';
			},
            filter:function (event,player){
                if(event.player==player) return false;
                if(get.position(event.result.card)!='d') return false;
                return !player.countCards('h',{suit:get.suit(event.result.card)});
            },
            content:function (){
				game.playXSAudio('XS_lianjian',2);
                player.gain(trigger.result.card,'log');
                player.$gain2(trigger.result.card);
            },
            sub:true,
        },
    },
},
"XS_chuanyang":{
	audio:"ext:血色衣冠:2",
    mod:{
        targetInRange:function (card,player,target){
            if(card.name=='sha'&&player.getEquip(1)){
                return true;
            }
        },
    },
    trigger:{
        source:"damageEnd",
    },
    forced:true,
	logTarget:'player',
    filter:function (event,player){
		if(event.player==player) return false;
        return event.card&&event.card.name=='sha'&&event.notLink()&&event.player.isAlive();
    },
    content:function (){
        var list=[];
        for(var i=1;i<5;i++){
            if(trigger.player.isDisabled(i)) continue;
            list.push('equip'+i);
        }
        if(!list.length) event.finish();
        else{
            var equ=list.randomGet();
            trigger.player.disableEquip(equ);
        }
    },
    ai:{
        threaten:1.1,
    },
},
"XS_tujin":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
    usable:1,
    content:function (){
        player.addTempSkill('XS_tujin_buff',{player:'phaseBefore'});
    },
    ai:{
        order:9,
        result:{
            player:function (player){
                if(player.hp>2) return 3;
                else if(!player.countCards('h','shan')) return 2;
                return 0;
            },
        },
    },
    subSkill:{
        buff:{
			charlotte:true,
            marktext:"突",
            init:function (player){
                player.markSkill('XS_tujin_buff');
            },
            intro:{
                content:function (storage){
                    return '你的闪均视为杀，使用杀的次数+1且可额外指定1个目标';
                },
            },
            mod:{
                cardUsable:function (card,player,num){
                    if(card.name=='sha') return num+1;
                },
                cardname:function (card,player,name){
                    if(card.name=='shan') return 'sha';
                },
                cardnature:function (card,player,name){
                    if(card.name=='shan') return null;
                },
                selectTarget:function (card,player,range){
                    if(card.name=='sha') range[1]+=1;
                },
            },
			trigger:{
				player:"damageEnd",
			},
			filter:function (event,player){
				return event.num>0;
			},
			direct:true,
			content:function (){
				player.removeSkill('XS_tujin_buff');
			},
            sub:true,
        },
    },
},
"XS_xingkun":{
	init:function (player){
		player.storage.XS_xingkun=0;
	},
	marktext:'困',
	mod:{
		cardEnabled:function(card,player){
			if(card.name=='sha'&&player.storage.XS_xingkun>=3) return false;
		},
		targetEnabled:function(card,player,target){
			if(card.name=='sha'&&target.storage.XS_xingkun>=3) return false;
		},
		cardUsable:function (card,player,num){
			if(card.name=='sha'&&player.storage.XS_xingkun>=3) return 0;
		},
	},
	intro:{
		content:function (storage,player,skill){
			return '本轮，你剩余可使用杀、被使用杀的次数为：<span class="bluetext">'+(3-player.storage.XS_xingkun)+'</span>';
		},
	},
	mark:true,
	trigger:{
		global:"useCardAfter",
	},
	priority:-178,
	filter:function(event,player){
		if(event.card.name!='sha'||player.storage.XS_xingkun>=3) return false;
		return event.player==player||event.targets.contains(player);
	},
	direct:true,
	content:function (){
		player.storage.XS_xingkun++;
		player.syncStorage('XS_xingkun');
		if(trigger.player!=player) {
			player.draw();
			player.logSkill('XS_xingkun');
		}
	},
	group:["XS_xingkun_clear"],
    subSkill:{
		clear:{
			trigger:{
				global:"roundStart",
			},
			direct:true,
			content:function (){
				player.storage.XS_xingkun=0;
				player.syncStorage('XS_xingkun');
			},
			sub:true,
        },
    },
},
"XS_liyongyb":{
	trigger:{
		player:"shaBegin",
	},
	priority:162,
	filter:function (event,player){
		return player.storage.XS_xingkun==0||player.storage.XS_xingkun==2;
	},
	check:function (event,player){
		var nm=0;
		for(var i=0;i<event.targets.length;i++) {
			if(get.attitude(player,event.targets[i])>0) nm--;
			else nm++;
		}
		return nm>0;
	},
	"prompt2":function (event,player){
		return player.storage.XS_xingkun==0?'你可使此杀的伤害基数+1。':'你可获得此杀目标装备区的1张牌。';
	},
	content:function (){
		"step 0"
		if(player.storage.XS_xingkun==0) {
			trigger.baseDamage++;
			event.finish();
		}
		"step 1"
		event.tars=trigger.targets.slice(0);
		"step 2"
		if(event.tars.length){
			var target=event.tars.shift();
			event.current=target;
		}
		else event.finish();
		"step 3"
		if(event.current.countGainableCards(player,'e')>0) {
			player.gainPlayerCard('e',1,event.current,false);
		}
		"step 4"
		event.goto(2);
	},
	ai:{
		expose:0.3,
		maixie:true,
		"maixie_defend":true,
		effect:{
			target:function (card,player,target){
				if(card.name=='sha') {
					if(!target.hasFriend()) return;
					if(typeof target.storage.XS_xingkun=='number') {
						if(target.storage.XS_xingkun==0||target.storage.XS_xingkun==2) return [1,-2];
						if(target.storage.XS_xingkun==1) return [1,2];
					}
				}
			},
		},
	},
},
"XS_mouduan":{
    trigger:{
        global:"judge",
    },
    filter:function (event,player){
        return player.countCards('h')>0;
    },
    direct:true,
    content:function (){
        "step 0"
        player.chooseCard(get.translation(trigger.player)+'的'+(trigger.judgestr||'')+'判定为'+
        get.translation(trigger.player.judging[0])+'，'+get.prompt('XS_mouduan'),'h',function(card){
            return true;
        }).set('ai',function(card){
            var trigger=_status.event.getTrigger();
            var judging=_status.event.judging;
            var result=trigger.judge(card)-trigger.judge(judging);
            var attitude=get.attitude(player,trigger.player);
            if(attitude==0||result==0) return 0;
            if(attitude>0){
                return result;
            }
            else{
                return -result;
            }
        }).set('judging',trigger.player.judging[0]);
        "step 1"
        if(result.bool){
            player.respond(result.cards,'highlight','XS_mouduan');
        }
        else{
            event.finish();
        }
        "step 2"
        if(result.bool){
			player.logSkill('XS_mouduan',trigger.player);
			player.gain(trigger.player.judging[0],'gain2');
            trigger.player.judging[0]=result.cards[0];
            if(!get.owner(result.cards[0],'judge')){
                trigger.position.appendChild(result.cards[0]);
            }
            game.log(trigger.player,'的判定牌改为',result.cards[0]);
			event.st=get.suit(result.cards[0]);
        }
        "step 3"
        game.delay();
		"step 4"
		if(event.st=='heart') {
			player.chooseBool("是否令"+get.translation(trigger.player)+"回复1点体力？").ai=function(event,player){
				var pla=_status.event.getTrigger().player;
				var att=get.attitude(player,pla);
				return att>0;
			};
		}
		else event.finish();
		"step 5"
		if(result.bool){
			trigger.player.recover();
		}
    },
    ai:{
		expose:0.2,
        tag:{
            rejudge:1,
        },
    },
},
"XS_hongliang":{
	trigger:{
        player:"damageEnd",
    },
    filter:function (event,player){
        return event.num>0;
    },
    direct:true,
    content:function (){
        "step 0"
		event.nm=trigger.num;
		"step 1"
		event.cd=get.cardPile(function(card){
            return get.type(card)=='delay';
        });
        if(event.cd){
			player.chooseTarget(get.prompt('XS_hongliang'),'你可将'+get.translation(event.cd)+'置于1名角色的判定区。',function(card,player,target){
				return !target.hasJudge(event.cd.name);
			}).ai=function(target){
				var eff=get.effect(target,event.cd,player,player);
				return eff;
			}
        }
		else {
			game.log('牌堆中已无延时锦囊牌。');
			event.finish();
		}
        "step 2"
        if(result.bool) {
			player.logSkill('XS_hongliang',result.targets[0]);
			result.targets[0].addJudge(event.cd);
			game.delay();
        }
        else{
			game.cardsDiscard(event.cd);
        }
        "step 3"
        event.nm--;
        if(event.nm>0){
            event.goto(1);
        }
        else event.finish();
    },
    ai:{
		maixie:true,
		"maixie_defend":true,
		effect:{
			target:function (card,player,target){
                if(get.tag(card,'damage')){
                    if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
                    if(!target.hasFriend()) return;
					return [1,1];
                }
            },
		},
        expose:0.3,
	},
},
"XS_zhixing":{
	trigger:{
		player:["useCardEnd","respondEnd"],
	},
	direct:true,
	priority:-10,
	skillAnimation:true,
	derivation:['XS_liyan','XS_ligong','XS_lide'],
	init:function (player){
		player.storage.XS_zhixing_a=0;
		player.storage.XS_zhixing_b=0;
		player.storage.XS_zhixing_c=0;
	},
	filter:function (event,player){
		return get.type(event.card)=='trick'||get.type(event.card)=='basic';
	},
	intro:{
		content:function (content,player){
			var num1=player.storage.XS_zhixing_c;
			var str='已通过“知行”获得：'+num1+'张牌';
			return str;
		},
	},
	content:function (){
		"step 0"
		if(get.type(trigger.card)=='basic') {
			player.storage.XS_zhixing_a++;
		}
		else {
			player.storage.XS_zhixing_b++;
		}
		"step 1"
		if(player.storage.XS_zhixing_a>=2) {
			var card=get.cardPile(function(card){
				return get.type(card)=='trick';
			});
			if(card) {
				player.gain(card,'gain2','log');
				player.storage.XS_zhixing_a-=2;
				player.storage.XS_zhixing_c++;
				player.markSkill('XS_zhixing');
			}
		}
		if(player.storage.XS_zhixing_b>=2) {
			var card=get.cardPile(function(card){
				return get.type(card)=='basic';
			});
			if(card) {
				player.gain(card,'gain2','log');
				player.storage.XS_zhixing_b-=2;
				player.storage.XS_zhixing_c++;
				player.markSkill('XS_zhixing');
			}
		}
		"step 2"
		if(player.storage.XS_zhixing_c>=2&&!player.hasSkill('XS_lide')) {
			player.logSkill('XS_zhixing');
			player.loseMaxHp();
			player.addSkill('XS_lide');
		}
		if(player.storage.XS_zhixing_c>=4&&!player.hasSkill('XS_ligong')) {
			player.logSkill('XS_zhixing');
			player.loseMaxHp();
			player.addSkill('XS_ligong');
		}
		if(player.storage.XS_zhixing_c>=6&&!player.hasSkill('XS_liyan')) {
			player.logSkill('XS_zhixing');
			player.loseMaxHp();
			player.addSkill('XS_liyan');
			player.removeSkill('XS_zhixing');
		}
	},
},
"XS_liyan":{
    trigger:{
        player:"phaseJieshuBegin",
    },
	priority:20,
    frequent:true,
    content:function (){
		"step 0"
		if(player.isMinHp(false)) {
			player.chooseBool('是否使“立言”的效果改为：获得杀、闪、酒、桃各1张，然后失去此技能？').set('ai',function(){
				return true;
			});
		}
		else event.goto(2);
		"step 1"
		if(result.bool) {
			var cds=[],lt=['sha','shan','jiu','tao'];
			for(var i=0;i<lt.length;i++) {
				var card=get.cardPile(function(card){
					return card.name==lt[i];
				});
				if(card) {
					cds.push(card);
				}
			}
			if(cds.length) {
				player.gain(cds,'gain2','log');
			}
			player.removeSkill('XS_liyan');
			event.finish();
		}
		else event.goto(2);
		"step 2"
		player.chooseControl(['sha','shan'],true).set('ai',function(event){
			if(player.countCards('h','shan')) return 'shan';
			return 'sha';
		}).set('prompt','立言：获得牌堆中随机1张杀或闪');
		"step 3"
		var card=get.cardPile(function(card){
			return card.name==result.control;
		});
		if(card) {
			player.gain(card,'gain2','log');
		}
    },
},
"XS_ligong":{
	trigger:{player:'useCardToPlayered'},
	direct:true,
	filter:function(event,player){
		return event.card.name=='sha'&&event.target.isAlive()&&event.target.countCards('h')>0;
	},
	content:function(){
		'step 0'
		player.choosePlayerCard(trigger.target,get.prompt2('XS_ligong'),'h','visible').set('ai',function(button){
			if(button.link.name=='shan') return 3;
			if(button.link.name=='tao') return 2;
			else if(get.color(button.link)=='black') {
				return 1;
			}
			return 0.5;
		});
		'step 1'
		if(result.bool&&result.links.length){
			player.logSkill('XS_ligong',trigger.target);
			if(trigger.target.storage.XS_ligong1){
				trigger.target.storage.XS_ligong1=trigger.target.storage.XS_ligong1.concat(result.links);
			}
			else{
				trigger.target.storage.XS_ligong1=result.links;
			}
			trigger.target.addSkill('XS_ligong1');
			trigger.target.lose(result.links,ui.special,'toStorage');
		}
	},
	ai:{
		expose:0.2
	},
},
"XS_ligong1":{
	charlotte:true,
	trigger:{global:'phaseJieshuBegin'},
	forced:true,
	mark:true,
    intro:{
        content:"cards",
    },
	content:function(){
		if(player.storage.XS_ligong1){
			for(var i=0;i<player.storage.XS_ligong1.length;i++) {
				if(get.color(player.storage.XS_ligong1[i])!='black') {
					player.gain(player.storage.XS_ligong1[i],'fromStorage');
				}
				else {
					game.cardsDiscard(player.storage.XS_ligong1[i]);
				}
			}
			delete player.storage.XS_ligong1;
		}
		player.removeSkill('XS_ligong1');
	},
	group:["XS_ligong1_die"],
    subSkill:{
        die:{
			trigger:{player:'dieBegin'},
			direct:true,
			content:function(){
				player.$throw(player.storage.XS_ligong1,1000);
				game.cardsDiscard(player.storage.XS_ligong1);
				game.log(player,'弃置了',player.storage.XS_ligong1);
				delete player.storage.XS_ligong1;
				player.removeSkill('XS_ligong1');
			},
			sub:true,
        },
    },
},
"XS_lide":{
	group:["XS_lide_gain","XS_lide_lose"],
    subSkill:{
        gain:{
			trigger:{
				player:"gainAfter",
			},
			direct:true,
			filter:function (event,player){
				if(event.cards&&event.cards.length>1) {
					return game.hasPlayer(function(current){
						return current!=player&&current.countCards('hej');
					});
				}
				return false;
			},
			content:function (){
				"step 0"
				player.chooseTarget(get.prompt('XS_lide'),'你可选择1名其他角色并弃置其1张牌',function(card,player,target){
					return target.countCards('hej')&&target!=player;
				}).ai=function(target){
					var att=get.attitude(player,target);
					if(att>0) {
						if(target.countCards('j')>0) return att+6;
						return -1;
					}
					else {
						if(target.countCards('e')>0) return -att+3;
						return -att;
					}
				}
				"step 1"
				if(result.bool) {
					player.logSkill('XS_lide',result.targets[0]);
					target1=result.targets[0];
					player.discardPlayerCard(target1,1,'hej',true);
				}
			},
			ai:{
				expose:0.3,
			},
			sub:true,
        },
		lose:{
			trigger:{
				player:["loseAfter"],
			},
			check:function (event,player){
				return player.canMoveCard(true);
			},
			"prompt2":function (event,player){
				return '是否移动场上1张牌？';
			},
			filter:function (event,player){
				if(event.cards&&event.cards.length>1) {
					return player.canMoveCard(false);
				}
				return false;
			},
			content:function (){
				player.moveCard();
			},
			ai:{
				expose:0.3,
			},
			sub:true,
        },
    },
},
"XS_pincai":{
	mod:{
		maxHandcard:function (player,num){
			return num+player.maxHp;
		},
	},
    trigger:{
        global:"phaseUseBegin",
    },
	filter:function (event,player){
        return event.player!=player&&player.countCards('he');
    },
	direct:true,
	content:function(){
		"step 0"
		var translation1=get.translation(trigger.player);
		var cards=player.getCards('he');
		player.chooseCardButton(get.prompt('XS_pincai',trigger.player),'你可交给'+translation1+'任意张牌，若数量不少于2，你可回复1点体力或摸1张牌。',false,cards,[1,cards.length]).set('ai',function(button){
			var card1=button.link;
			var trigger=_status.event.getTrigger();
			var att=get.attitude(player,trigger.player);
			if(att<=0) {
				if(card1.name=='du') return 20;
				return -1;
			}
			else {
				if(ui.selected.buttons.length==0) {
					return 6-get.value(card1);
				}
				if(ui.selected.buttons.length==1) {
					return 8-get.value(card1);
				}
				if(ui.selected.buttons.length>1) {
					return -1;
				}
			}

		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_pincai',trigger.player);
			event.nm=result.links.length;
			trigger.player.gain(result.links,player,'giveAuto');
		}
		else event.finish();
		"step 2"
		if(event.nm>=2) {
			player.chooseControl('回复体力','摸1张牌','取消',function(event,player){
				if(player.isDamaged()) return '回复体力';
				return '摸1张牌';
			}).set('prompt','请选择1项');
		}
		else event.finish();
		"step 3"
		if(result.control=='回复体力'){
			player.recover();
		}
		else if(result.control=='摸1张牌'){
			player.draw();
		}
	},
	ai:{
		expose:0.3,
	},
},
"XS_sanku":{
	trigger:{
		player:"damageBegin4",
	},
	check:function (event,player){
		if(!player.countCards('h','tao')&&!player.countCards('h','jiu')) return true;
		return false;
    },
	init:function (player){
		player.storage.XS_sanku=0;
	},
	priority:-199,
	filter:function (event,player){
		return event.num>=player.hp&&player.storage.XS_sanku<3;
	},
	content:function (){
		"step 0"
		var list=[];
        if(!player.isDisabled(1)&&!player.isDisabled(4)){
            list.push('武器与攻击马');
        }
		if(!player.isDisabled(2)&&!player.isDisabled(3)){
            list.push('防具与防御马');
        }
		if(!player.isDisabled(5)&&player.storage._disableJudge!=true){
            list.push('宝物与判定区');
        }
        if(list.length){
            player.chooseControl(list,true).set('prompt','废弃一组栏位以防止此伤害，并摸1张牌');
        }
		else event.finish();
		"step 1"
		if(result.control=='武器与攻击马'){
			player.disableEquip('equip1');
			player.disableEquip('equip4');
		}
		else if(result.control=='防具与防御马') {
			player.disableEquip('equip2');
			player.disableEquip('equip3');
		}
		else if(result.control=='宝物与判定区') {
			player.disableEquip('equip5');
			player.disableJudge();
		}
		"step 2"
		player.draw();
		trigger.cancel();
		player.storage.XS_sanku++;
	},
},
"XS_dingyuan":{
	intro:{
		content:function (storage){
			return '你的进攻距离+ '+storage;
		},
	},
	mod:{
		globalFrom:function (from,to,current){
			return current-from.storage.XS_dingyuan;
		},
	},
	ai:{
		expose:0.2,
	},
    trigger:{
        global:["discardEnd"],
    },
    direct:true,
	init:function (player){
        player.storage.XS_dingyuan=0;
    },
    filter:function (event,player){
		if(!event.player||event.player==player) return false;
		return event.cards&&event.cards.length>1&&event.player.isAlive();
    },
    content:function (){
		"step 0"
		player.chooseCardButton('定远：你可令你或'+get.translation(trigger.player)+'获得其中1张牌，若你未因此获得牌，你的进攻距离+1直至你回合结束。',trigger.cards,1,false).ai=function(button){
			return get.value(button.link);
		}
        "step 1"
        if(result.bool){
            player.logSkill('XS_dingyuan',trigger.player);
			event.cd=result.links[0];
			player.chooseControl().set('choiceList',['令'+get.translation(trigger.player)+'获得'+get.translation(event.cd),'令你获得'+get.translation(event.cd)]).set('ai',function(event,player){
				var trigger=_status.event.getTrigger();
				var att=get.attitude(player,trigger.player);
				if(get.value(event.cd)<0) return 0;
				if(att<=0) return 1;
				else if(trigger.player.countCards('h')<=player.countCards('h')) {
					return 0;
				}
				return 1;
			});	
        }
		else event.finish();
        "step 2"
		if(result.index==0){
			trigger.player.gain(event.cd,'gain2');
			player.storage.XS_dingyuan++;
			player.markSkill('XS_dingyuan');
		}
		else{
			player.gain(event.cd,'gain2');
		}
    },
	group:["XS_dingyuan_clear"],
    subSkill:{
        clear:{
            trigger:{
                player:["phaseAfter"],
            },
			direct:true,
            content:function (){
				player.storage.XS_dingyuan=0;
				player.unmarkSkill('XS_dingyuan');
            },
			sub:true,
        },
    },
},
"XS_pingrong":{
	init:function (player){
		player.storage.XS_pingrong={};
	},
	trigger:{
		player:"useCardToPlayered",
	},
	"prompt2":function (event,player){
		var mp=player.storage.XS_pingrong,tp=0,str='';
		if(mp[event.target]) {
			tp=mp[event.target]+1;
		}
		else {
			tp=1;
		}
		switch(tp){
			case 1:str='弃置'+get.translation(event.target)+'1张手牌';break;
			case 2:str='弃置'+get.translation(event.target)+'1张牌';break;
			case 3:str='获得'+get.translation(event.target)+'1张牌';break;
		}
		return '是否'+str+'？';
	},		
	check:function (event,player){
		var att=get.attitude(player,event.target);
		return att<=0;
	},
	filter:function (event,player){
		if(event.target==player) return false;
		if(!event.targets||!event.targets.length||!event.isPhaseUsing(player)) return false;
		var evt=player.getLastUsed(1);
		if(!evt||!evt.targets||!evt.targets.length||!evt.isPhaseUsing(player)) return false;
		if(!evt.targets.contains(event.target)) return false;
		return !player.storage.XS_pingrong[event.target]||player.storage.XS_pingrong[event.target]<3;
	},
	content:function (){
		'step 0'
		if(player.storage.XS_pingrong[trigger.target]) {
			player.storage.XS_pingrong[trigger.target]++;
		} 
		else {
			player.storage.XS_pingrong[trigger.target]=1;
		}
		'step 1'
		var tp=player.storage.XS_pingrong[trigger.target];
		switch(tp){
			case 1:
				if(trigger.target.countCards('h')) {
					player.discardPlayerCard(trigger.target,'h',1,false);
				}	
			break;
			case 2:
				if(trigger.target.countCards('he')) {
					player.discardPlayerCard(trigger.target,'he',1,false);
				}
			break;
			case 3:
				if(trigger.target.countCards('he')) {
					player.gainPlayerCard('he',trigger.target,1,false);
				}		
			break;
		}
	},
	mod:{
		aiOrder:function(player,card,num){
			if(player.isPhaseUsing()&&(!player.storage.counttrigger||!player.storage.counttrigger.XS_pingrong||!player.storage.counttrigger.XS_pingrong<3)){
				var evt=player.getLastUsed();
				if(evt&&evt.targets&&evt.targets.length&&evt.isPhaseUsing(player)&&game.hasPlayer(function(current){
					return evt.targets.contains(current)&&player.canUse(card,current)&&get.effect(current,card,player,player)>0;
				})){
					return num+10;
				}
			}
		},
	},
	ai:{
		effect:{
			player:function(card,player,target){
				var evt=player.getLastUsed(1);
				if(evt&&evt.targets.contains(target)&&(!player.storage.counttrigger||!player.storage.counttrigger.XS_pingrong||!player.storage.counttrigger.XS_pingrong<3)&&player.isPhaseUsing(player)) return [1.5,0];
			}
		},
	},
	group:["XS_pingrong_clear"],
    subSkill:{
        clear:{
            trigger:{
                player:["phaseUseAfter"],
            },
			direct:true,
            content:function (){
				player.storage.XS_pingrong={};
            },
			sub:true,
        },
    },
},
"XS_qinwang":{
	group:["XS_qinwang_sha"],
	subSkill:{
		sha:{
			trigger:{
				player:"useCardBefore",
			},
			priority:15,
			filter:function (event,player){
				return event.card.name=='sha'&&event.skill=='XS_qinwang_backup';
			},
			direct:true,
			content:function (){
				"step 0"
				var tgs=trigger.targets;
				for(var i=0;i<tgs.length;i++) {
					tgs[i].damage(1,player,'nocard')
				}
			},
			sub:true,
		},
	},
	usable:1,
	enable:"chooseToUse",
	filter:function (event,player){
		if(event.filterCard({name:'sha'},player,event)) return true;
		if(event.filterCard({name:'shan'},player,event)) return true;
		return false;
	},
	chooseButton:{
		dialog:function (event,player){
			var list=[];
			if(event.filterCard({name:'sha'},player,event)){
				list.push(['基本','','sha']);}
			if(event.filterCard({name:'shan'},player,event)) {
				list.push(['基本','','shan']);}
			return ui.create.dialog("擒王",[list,"vcard"],"hidden");
		},
		check:function (button){
			var player=get.player();
			if(player.countCards('h')<=1&&player.hp>player.countCards('h')) return 3;
			return 0;
		},
		backup:function (links,player){
			return {
				filterCard:function (card){return false;},
				popname:true,
				selectCard:-1,
				viewAs:{
					name:links[0][2],
				}, 
				onuse:function(result,player){
					player.logSkill('XS_qinwang');
					player.loseHp(player.countCards('h'));
					if(_status.currentPhase!=player) {
						_status.currentPhase.damage(1,player,'nocard')
					}
				}  
			}
		},
		prompt:function (links,player){
			return '失去'+player.countCards('h')+'点体力视为使用1张'+get.translation(links[0][2]);
		},
	},
},
"XS_zhenyi":{
	trigger:{
		source:"damageBegin4",
	},
	filter:function (event,player){
		if(player.hasSkill('XS_zhenyi_temp')) return false;
		if(!event.card) return false;
		if((event.card.name!='sha'&&event.card.name!='juedou')||!event.notLink()) return false;
		return player.isDamaged();
	},
	priority:-998,
	check:function (event,player){
		return event.num<player.getDamagedHp();
	},
	"prompt2":function (event,player){
		return '是否使你对'+get.translation(event.player)+'造成的伤害变为'+player.getDamagedHp()+'？';
	},
	content:function (){
		player.addTempSkill('XS_zhenyi_temp',{player:'changeHp'});
		var nm=player.getDamagedHp();
		trigger.num=nm;
	},
	ai:{
		damageBonus:true,
	},
	subSkill:{
		temp:{
			charlotte:true,
			sub:true,
		},
	},
},
"XS_tanli":{
    trigger:{
        global:["damageEnd"],
    },
	init:function(player){
		player.storage.XS_tanli=0;
	},
    filter:function (event,player){
		if(player.storage.XS_tanli>=3) return false;
        return event.player.countCards('h');
    },
	logTarget:'player',
	check:function (event,player){
		return get.attitude(player,event.player)>0;
	},
    content:function (){
		"step 0"
		trigger.player.showHandcards();
		"step 1"	
		player.discardPlayerCard(trigger.player,'弃置'+get.translation(trigger.player)+'1张手牌，令其回复1点体力','h',1,'visible',true).set('ai',function(card){
			return 100-get.value(card);
		});
		"step 2"
		player.storage.XS_tanli++;
		trigger.player.recover();
    },
    ai:{
		threaten:1.2,
        expose:0.3,
    },
	group:["XS_tanli_clear"],
    subSkill:{
		clear:{
            trigger:{
                global:"roundStart",
            },
			direct:true,
            content:function (){
				player.storage.XS_tanli=0;
            },
			sub:true,
        },
    },
},
"XS_qianjie":{
	trigger:{
		global:"useCardBefore",
	},
	direct:true,
	priority:885,
	filter:function (event,player){
		if(!get.tag(event.card,'damage')||event.player==player||!event.targets.contains(player)) return false;
		return game.hasPlayer(function(current){
			return current!=event.player&&current!=player&&!event.targets.contains(current)&&current.sex=='male';
		});
	},
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt2('XS_qianjie'),function(card,player,target){
			var trigger=_status.event.getTrigger();
			return player!=target&&!trigger.targets.contains(target)&&target.sex=='male';
		}).ai=function(target){
			var trigger=_status.event.getTrigger();
			var hs=Math.max(1,target.countCards('h'));
			var eff=get.effect(target,trigger.card,trigger.player,player);
			var att=get.attitude(player,target);
			if(eff>2) {
				if(att>0) {
					if(!target.hasSkill('XS_qianjie_temp')) return 20;
					return -1;
				}
				else {
					if(target.hasSkill('XS_qianjie_temp')) return 20;
					return -1;
				}
			}
			else {
				if(target.hasSkill('XS_tianzhao')&&!target.hasSkill('XS_qianjie_temp')) return att*2;
				if(hs>2) return att;
				return -att;
			}
		}
		"step 1"
		if(result.bool){
			player.logSkill('XS_qianjie',result.targets);
			var target1=result.targets[0];
			trigger.targets.add(target1);
			if(!target1.hasSkill('XS_qianjie_temp')) {
				target1.addTempSkill('XS_qianjie_temp',{player:'phaseZhunbeiEnd'});
				target1.markSkillCharacter('XS_qianjie_temp',player,'谦节','你于下个准备阶段开始摸2张牌');
			}
		}
	},
	subSkill:{
		temp:{
			trigger:{
				player:"phaseZhunbeiBegin",
			},
			onremove:function(player){
				player.unmarkSkill('XS_qianjie_temp');
			},
			priority:18,
			forced:true,
			content:function (){
				player.draw(2);
			},
			charlotte:true,
			sub:true,
        },
    },
},
"XS_poshi":{
    enable:"phaseUse",
	usable:1,
    audio:2,
    filter:function (event,player){
		return game.hasPlayer(function(current){
			return current!=player&&current.countCards('h');
		});
    },
	selectTarget:1,
    filterTarget:function (card,player,target){
        return player!=target&&target.countCards('h');
    },
    content:function (){
        "step 0"
		event.card1=target.getCards('h').randomGet();
		player.gain(event.card1,target,'giveAuto');
		"step 1"
		if(lib.filter.cardEnabled(event.card1,player)){
			var next=player.chooseToUse();
			next.filterCard=function(card){
				return card==event.card1;
			};
			next.prompt='是否使用'+get.translation(event.card1,target)+'？';
		}
		else{
			player.loseHp();
			player.getStat().skill.XS_poshi--;
			event.finish();
		}
		"step 2"
		if(!result.bool){
			player.loseHp();
			player.getStat().skill.XS_poshi--;
		}
    },
    ai:{
        order:1,
		result:{
			player:function(player){
				if(player.hp<2) return -2;
				return 1;
			},
            target:-1,
        },
        expose:0.3,
    },
},
"XS_fubing":{
	init:function (player){
		player.storage.XS_fubing=0;
	},
	trigger:{
		player:["damageBegin","loseHpBegin"],
	},
	priority:-997,
	direct:true,
	filter:function (event){
		return event.num>0;
	},
	content:function (){
		"step 0"
		player.storage.XS_fubing++;
		"step 1"
		var tp=player.storage.XS_fubing;
		event.mk=(tp%2==0?false:true);
		"step 2"
		if(event.mk&&player.countCards('he')) {
			player.logSkill('XS_fubing');
			player.chooseToDiscard('府兵：每轮你奇数次的受到伤害/体力流失效果改为弃置1张牌。','he',1,true);
		}
		else event.finish();
		"step 3"
		if(result.bool){
			trigger.cancel();
		}
	},
	group:["XS_fubing_clear"],
    subSkill:{
        clear:{
			charlotte:true,
			trigger:{
				global:"roundStart",
			},
			priority:5,
			direct:true,
			content:function (){
				player.storage.XS_fubing=0;
			},
			sub:true,
        },
    },
},
"XS_yuanjiao":{
	trigger:{
		player:"phaseUseBegin",
	},
	filter:function (event,player){
		if(!player.countCards('h')) return false;
		return game.hasPlayer(function(current){
			var nm=player.countCards('h')-current.countCards('h')-1;
			return current!=player&&nm>0;
		});
	},
	direct:true,
	content:function (){
		"step 0"
		player.chooseToDiscard(get.prompt('XS_yuanjiao'),'你可弃置1张手牌，如此你可令1名其他角色将手牌补充至与你相同，且你的防御距离+1直到你下回合开始。','h',1,false).set('ai',function(card){
			if(game.hasPlayer(function(current){
				var att=get.attitude(player,current);
				var nm=player.countCards('h')-current.countCards('h')-1;
				return current!=player&&att>0&&nm>0;
			})) {
				return 6-get.value(card);
			}
			return -1;
		});
		"step 1"
		if(result.bool){
			var nm=player.countCards('h');
			player.chooseTarget('你可令1名其他角色将手牌补充至'+nm+'张，且你的防御距离+1直到你下回合开始。',1,function(card,player,target){
				return player!=target&&player.countCards('h')>target.countCards('h');
			}).ai=function(target){
				var att=get.attitude(player,target);
				if(att<=0) return -1;
				else {
					var nm=player.countCards('h')-target.countCards('h');
					return nm;
				}
			}
		}
		else event.finish();
		"step 2"
		if(result.bool) {
			player.logSkill('XS_yuanjiao',result.targets[0]);
			var nm=player.countCards('h')-result.targets[0].countCards('h');
			result.targets[0].draw(nm);
			player.addTempSkill('XS_yuanjiao_temp',{player:'phaseBefore'});
		}
		else event.finish();
	},
	ai:{
        expose:0.3,
    },
	subSkill:{
		temp:{
			intro:{
				content:function (storage){
					return '你的防御距离+1';
				},
			},
			mark:true,
			mod:{
				globalTo:function (from,to,current) {
					return current+1;
				},
			},
			charlotte:true,
			sub:true,
        },
    },
},
"XS_jingong":{
	trigger:{
		player:"phaseUseEnd",
	},
	filter:function (event,player){
		return game.hasPlayer(function(current){
			var nm=current.countCards('h')-player.countCards('h')-1;
			return current!=player&&nm>0;
		});
	},
	direct:true,
	content:function (){
		"step 0"
		player.chooseBool(get.prompt('XS_jingong'),'你可摸1张牌，如此你可令1名其他角色将手牌弃置至与你相同，且其防御距离-1直到你下回合开始。').set('ai',function(){
			return game.hasPlayer(function(current){
				var att=get.attitude(player,current);
				var nm=current.countCards('h')-player.countCards('h')-1;
				return current!=player&&att<0&&nm>0;
			});
		});
		"step 1"
		if(result.bool){
			player.draw();
		}
		else event.finish();
		"step 2"
		var nm=player.countCards('h');
		player.chooseTarget('你可令1名其他角色将手牌弃至'+nm+'张，且其防御距离-1直到你下回合开始。',1,function(card,player,target){
			return player!=target&&player.countCards('h')<target.countCards('h');
		}).ai=function(target){
			var att=get.attitude(player,target);
			if(att>=0) return -1;
			else {
				var nm=target.countCards('h')-player.countCards('h');
				return nm;
			}
		}
		"step 3"
		if(result.bool) {
			player.logSkill('XS_jingong',result.targets[0]);
			var nm=result.targets[0].countCards('h')-player.countCards('h');
			result.targets[0].chooseToDiscard(nm,'h',true);
			result.targets[0].addSkill('XS_jingong_temp');
		}
		else event.finish();
	},
	ai:{
        expose:0.3,
    },
	group:["XS_jingong_remove"],
	subSkill:{
		temp:{
			intro:{
				content:function (storage){
					return '你的防御距离-1';
				},
			},
			mark:true,
			mod:{
				globalTo:function (from,to,current) {
					return current-1;
				},
			},
			charlotte:true,
			sub:true,
        },
		remove:{
            trigger:{
                player:["phaseBefore","dieBegin"],
            },
            direct:true,
            content:function (){
                for(var i=0;i<game.players.length;i++){
                    if(game.players[i].hasSkill('XS_jingong_temp')){
                        game.players[i].removeSkill('XS_jingong_temp');
                    }
                }
            },
			sub:true,
        },
    },
},
"XS_lizhan":{
	audio:"ext:血色衣冠:2",
	trigger:{target:'useCardToTarget'},
	check:function (event,player){
		return get.effect(player,event.card,event.player,player)<0;
    },
	"prompt2":function (event,player){
		return '是否使'+get.translation(event.player)+'使用的'+get.translation(event.card)+'无效并将其置于你的武将牌上？';
	},
	filter:function(event,player){
		if(event.player==player) return false;
		return event.targets.length==1&&event.card.isCard&&event.cards.length==1&&event.getParent(2).name!='XS_lizhan_timeout'&&
			get.position(event.cards[0],true)=='o'&&event.card.name==event.cards[0].name;
	},
	content:function(){
		trigger.targets.remove(player);
		trigger.getParent().triggeredTargets2.remove(player);
		trigger.untrigger();
		var card=trigger.cards[0];
		game.cardsGotoSpecial(card);
		player.$gain2(card,false);
		game.log(player,'将',card,'置于了武将牌上');
		if(!player.storage.XS_lizhan) player.storage.XS_lizhan=[[],[]];
		player.storage.XS_lizhan[0].push(card);
		player.storage.XS_lizhan[1].push(trigger.player);
		player.markSkill('XS_lizhan');
		game.delayx();
	},
	intro:{
		markcount:function(storage){
			return storage[0].length;
		},
		mark:function(dialog,storage,player){
			dialog.addAuto(storage[0]);
			dialog.addText(get.translation(storage[1]));
		},
		onunmark:function(storage,player){
			if(storage[0]&&storage[0].length){
				player.$throw(storage[0],1000);
				game.cardsDiscard(storage[0]);
				game.log(storage[0],'进入了弃牌堆');
			}
			delete player.storage.XS_lizhan;
		},
	},
	ai:{
		threaten:0.98,
	},
	group:'XS_lizhan_timeout',
	subSkill:{
		timeout:{
			trigger:{player:'phaseEnd'},
			forced:true,
			filter:function(event,player){
				return player.storage.XS_lizhan&&player.storage.XS_lizhan[0].length;
			},
			content:function(){
				var list=player.storage.XS_lizhan,card=list[0].shift(),source=list[1].shift();
				if(source&&source.isIn()&&source.canUse(card,player,false)) source.useCard(card,player,false);
				else game.cardsDiscard(card);
				if(list[0].length) event.redo();
				else player.unmarkSkill('XS_lizhan');
			},
		},
	},
},
"XS_baipao":{
	init:function (player){player.storage.XS_baipao=[];},
	audio:"ext:血色衣冠:2",
    enable:"phaseUse",
    filter:function (event,player){
		var cds=player.getCards('he');
		if(!game.hasPlayer(function(current){
			return player.canUse({name:'sha'},current);
		})) return false;
		for(var i=0;i<cds.length;i++) {
			if(!player.storage.XS_baipao.contains(get.suit(cds[i]))&&get.suit(cds[i])!='none') return true;
		}
		return false;
    },
    position:"he",
	filterCard:function (card,player){
		return !player.storage.XS_baipao.contains(get.suit(card))&&get.suit(card)!='none';
	},
    selectCard:1,
    check:function (card){
		return 6-get.value(card);
    },
	discard:false,
    content:function (){
		player.storage.XS_baipao.push(get.suit(cards[0]));
		player.chooseUseTarget({name:'sha'},cards,true,false).viewAs=true;
    },
    ai:{
		order:function(){
			return get.order({name:'sha'})+0.05;
		},
        result:{
            player:1,
        },
    },
	group:['XS_baipao_clear','XS_baipao_dam'],
    subSkill:{
		clear:{
			trigger:{player:'phaseUseBefore'},
			direct:true,
			priority:84,
			content:function(){
				player.storage.XS_baipao=[];
			},
		},
		dam:{
			trigger:{
				source:["damageEnd"],
			},	
			priority:338,
			direct:true,
			filter:function (event,player){
				return event.getParent(4)&&event.getParent(4).name=='XS_baipao';
			},
			content:function (){
				"step 0"
				if(player.storage.XS_lizhan&&player.storage.XS_lizhan[0].length) {
					var cds=player.storage.XS_lizhan[0];
					player.chooseCardButton('你可移除武将牌上一张“励战”牌，或摸一张牌',false,cds,1).set('ai',function(button){
						var val=get.value(button.link);
						if(get.tag(button.link,'damage')) val*=10;
						return val-2;
					});
				}
				"step 1"
				if(result&&result.bool) {
					var id=player.storage.XS_lizhan[0].indexOf(result.links[0]);
					if(id>=0) {
						player.storage.XS_lizhan[0].splice(id,1);
						player.storage.XS_lizhan[1].splice(id,1);
						game.cardsDiscard(result.links[0]);
						if(player.storage.XS_lizhan[0].length) player.syncStorage('XS_lizhan');
						else player.unmarkSkill('XS_lizhan');
					}
				}
				else player.draw();
			},
		},
    },
},
"XS_gongshu":{
     trigger:{
        player:"phaseDrawBegin",
    },
    direct:true,
    priority:-10,
    filter:function (event,player){
        return event.num>0&&game.hasPlayer(function(current){
			return current!=player&&current.countCards('e');
		});
    },
    content:function (){
		"step 0"
		event.num=0;
        player.chooseTarget(get.prompt('XS_gongshu'),'获得至多'+get.translation(trigger.num)+'名角色各1张装备牌，若其仅有1件装备，你可令其摸2张牌。',[1,trigger.num],function(card,player,target){
            return player!=target&&target.countCards('e');
        },function(target){
            var att=get.attitude(player,target);
			if(player.getEquip(1)&&player.getEquip(2)) return -2;
			if(att>=0) {
				if(target.countCards('e')==1) {
					return att+2;
				}
				return att-2;
			}
			else {
				if(target.countCards('e')==1) {
					return -att+2;
				}
				return -att-2;
			}
        });
        "step 1"
        if(result.bool){
			player.logSkill('XS_gongshu',result.targets);
			trigger.num-=result.targets.length;
			event.targets=result.targets;
        }
		else event.finish();
		"step 2"
		if(event.targets.length) {
			var target=event.targets.shift();
			event.current=target;
		}
		else event.finish();
        "step 3"
		player.gainPlayerCard('e',event.current,true);
		"step 4"
		if(!event.current.countCards('e')) {
			player.chooseBool('是否令'+get.translation(event.current)+'摸2张牌？').set('ai',function(){
				var att=get.attitude(player,event.current);
				return att>0;
			});
		}
		else event.goto(2);
		"step 5"
		if(result.bool){
			event.current.draw(2);
        }
		event.goto(2);
    },
    ai:{
        threaten:1.2,
        expose:0.3,
    },
},
"XS_qingtian":{
	trigger:{
		source:"damageBefore",
	},
	priority:9,
	filter:function (event,player){
		if(event.player.countCards('e')) return false;
		return event.card&&event.card.name=='sha'&&event.notLink();
	},
	forced:true,
	content:function (){
		trigger.num++;
	},
	ai:{
		damageBonus:true,
	},
	group:["XS_qingtian_last"],
	subSkill:{
        last:{
			trigger:{
				player:"shaBegin",
			},
			forced:true,
			filter:function (event,player){
				return player.countCards('h')==0;
			},
			content:function (){
				trigger.directHit=true;
			},
			sub:true,
        },
    },
},
"XS_yinzhi":{
	marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"40px")+" src="+lib.assetURL+"extension/血色衣冠/icon/yinzhi.png>":"饮",
	init:function(player){
		player.storage.XS_yinzhi=0;
	},
	intro:{
		content:function(storage){
			return '当前有 <span class="bluetext">'+storage+'</span> 枚“饮”';
		},
	},
	enable:"phaseUse",
	filter:function (event,player){
		if(player.getCardUsable('jiu')<=0) return false;
		return player.storage.XS_yinzhi>0;
	},
    content:function (){
		'step 0'
		player.storage.XS_yinzhi--;
		player.syncStorage('XS_yinzhi');
		'step 1'
		if(player.storage.XS_yinzhi<=0) {
			player.unmarkSkill('XS_yinzhi');
		}
		player.useCard({name:'jiu',isCard:true},player);
    },
    ai:{
		order:9,
		maixie:true,
        "maixie_hp":true,
		result:{
			player:function(player){
				if(player.hasUsableCard('sha')) return 2;
				return -1;
			},
        },
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')){
					if(!target.hasFriend()) return;
					if(player.hp>3) return [1,2];
					if(player.hp=3) return [1,1.5];
					if(player.hp<3) return [1,1];
				}
			},
		},
    },
	group:["XS_yinzhi_hp"],
    subSkill:{
		hp:{
		    trigger:{
				player:["damageAfter","loseHpAfter"],
			},
			forced:true,
			priority:7,
			filter:function (event){
				return event.num>0; 
			},
			content:function (){
				player.storage.XS_yinzhi+=trigger.num;
				player.syncStorage('XS_yinzhi');	
				player.markSkill('XS_yinzhi');
			},
        },
    },
},
"XS_tuishang":{
	trigger:{
		player:'phaseDrawBegin',
	},
	ai:{
		expose:0.3,
	},
	check:function (event,player){
		return player.countCards('h');
	},
	"prompt2":function (event,player){
		var cds=player.getCards('h'),lt=[];
		for(var i=0;i<cds.length;i++) {
			lt.add(get.color(cds[i]));
		}
		var nm=lt.length+2;
		return '是否将你的摸牌阶段改为：展示牌堆顶'+nm+'张牌，并将之分配给任意角色？';
	},
	content:function(){
		"step 0"
		var cds=player.getCards('h'),lt=[];
		for(var i=0;i<cds.length;i++) {
			lt.add(get.color(cds[i]));
		}
		var nm=lt.length+2;
		event.cds=get.cards(nm);
		"step 1"
		if(event.cds.length>1){
			player.chooseCardButton('将牌分配给任意角色',true,event.cds,[1,event.cds.length]).set('ai',function(button){
				if(ui.selected.buttons.length==0) return 1;
				return 0;
			});
		}
		else if(event.cds.length==1){
			event._result={links:event.cds.slice(0),bool:true};
		}
		else{
			trigger.cancel();
			event.finish();
		}
		"step 2"
		if(result.bool){
			for(var i=0;i<result.links.length;i++){
				event.cds.remove(result.links[i]);
			}
			event.togive=result.links.slice(0);
			player.chooseTarget('将'+get.translation(result.links)+'交给一名角色',true).set('ai',function(target){
				var att=get.attitude(_status.event.player,target);
				var hs=target.countCards('h')+0.01;
				if(_status.event.enemy){
					return -att;
				}
				else if(att>0){
					if(target.hasSkill('XS_xuhuai')) return 2+att/hs;
					return att/hs;
				}
				else{
					return att/100;
				}
			}).set('enemy',get.value(event.togive[0])<0);
		}
		"step 3"
		if(result.targets.length){
			result.targets[0].gain(event.togive,'draw');
			player.line(result.targets[0],'green');
			game.log(result.targets[0],'获得了'+get.cnNumber(event.togive.length)+'张牌');
			event.goto(1);
		}
	},
},
"XS_pingliao":{
	shaRelated:true,
	audio:2,
	trigger:{
		player:'useCardToPlayered',
	},
	filter:function(event,player){
		if(event.targets.length!=1||!['sha','juedou'].contains(event.card.name)) return false;
		var evt2=event.getParent('phaseUse');
		if(evt2.player!=player) return false;
		return player.getHistory('useCard',function(evt){
			return (evt.card.name=='sha'||evt.card.name=='juedou')&&evt.getParent('phaseUse')==evt2;
		}).indexOf(event.getParent())==0;
	},
	direct:true,
	content:function(){
		'step 0'
		player.chooseControl('draw_card','加伤害','cancel2').set('prompt',get.prompt2('XS_pingliao'));
		'step 1'
		if(result.control&&result.control!='cancel2'){
			player.logSkill('XS_pingliao',trigger.target);
			var nd=trigger.target.countCards('h',{type:'trick'})+trigger.target.countCards('h',{type:'delay'});
			if(result.control=='draw_card'){
				var tp=nd++;
				player.draw(tp);
			}
			else{
				var trigger2=trigger.getParent();
				if(typeof trigger2.baseDamage!='number'){
				trigger2.baseDamage=1;
			}
			trigger2.baseDamage+=nd;
			}
		}
	},
},
"XS_yejian":{
	trigger:{
		source:"damageEnd",
	},
	priority:2,
	frequent:true,
	filter:function (event){
        return event.card&&(event.card.name=='sha'||event.card.name=='juedou')&&event.notLink();
    },
	logTarget:"player",
	content:function (){
		"step 0"
		if(!trigger.player.getEquip(3)&&!trigger.player.getEquip(4)&&!trigger.player.getEquip(6)) {
			event.cd=[];
			for(var i=0;i<ui.cardPile.childElementCount;i++){
				var node=ui.cardPile.childNodes[i];
				if(get.subtype(node)==''||get.subtype(node)=='equip4'||get.subtype(node)=='equip6'){
					event.cd.push(node);
					break;
				}
			}
			if(!event.cd.length){
				for(var i=0;i<ui.discardPile.childElementCount;i++){
					var node=ui.discardPile.childNodes[i];
					if(get.subtype(node)==''||get.subtype(node)=='equip4'||get.subtype(node)=='equip6'){
						event.cd.push(node);
						break;
					}
				}
			}
			if(event.cd.length){
				player.gain(event.cd[0],'gain2');
				event.goto(2);
			}
			else {
				player.draw();
				event.finish();
			}
		}
		else {
			var cds=trigger.player.getCards('e',{subtype:['equip3','equip4','equip6']});
			player.chooseCardButton('你可获得'+get.translation(trigger.player)+'的1张坐骑牌，并令1名角色装备之。',cds).ai=function(button){
				var tar=_status.event.getTrigger().player;
				var att=get.attitude(player,tar);
				if(att<=0) {
					return get.value(button.link);
				}
				return -1;
			}
		}
		"step 1"
        if(result.bool){
			event.cd=result.links;
			player.gain(event.cd,'gain2');
        }
		else event.finish();
		"step 2"
		player.chooseTarget('令1名角色装备'+get.translation(event.cd[0]),1,true,function(card,player,target){
			return true;
		}).ai=function(target){
			var att=get.attitude(player,target);
			var tp=get.subtype(event.cd[0]);
			if(att>0) {
				if(target.getEquip(tp)) return 0.5;
				else return att;
			}
			else return -1;
		}
		"step 3"
		if(result.bool){
			result.targets[0].gain(event.cd[0],player,'giveAuto');
			result.targets[0].equip(event.cd[0]);
		}
	},
	ai:{
		expose:0.3,
		threaten:1.1,
	},
},
"XS_pingbu":{
	mod:{
		globalTo:function (from,to,current){
			var num1=0;
			if(from.getEquip(4)||from.getEquip(6)) {num1++;}
			if(!to.getEquip(3)&&!to.getEquip(6)) {num1++;}
			if(to.getEquip(4)||to.getEquip(6)) {num1++;}
			return current+num1;
		},
		globalFrom:function (from,to,current){
			var num1=0;
			if(to.getEquip(3)||to.getEquip(6)) {num1++;}
			if(!from.getEquip(4)&&!from.getEquip(6)) {num1++;}
			if(from.getEquip(3)||from.getEquip(6)) {num1++;}
			return current-num1;
		},
	},
},
"XS_qiaozhan":{
	enable:"phaseUse",
    usable:1,
    filter:function (event,player){
        return player.countCards('h')>0;
    },
    filterTarget:function (card,player,target){
        return player!=target&&target.countCards('h');
    },
    content:function (){
        "step 0"
		event.num=0;
		if(target.countCards('h',{suit:'spade'})) event.num++;
		if(target.countCards('h',{suit:'heart'})) event.num++;
		if(target.countCards('h',{suit:'diamond'})) event.num++;
		if(target.countCards('h',{suit:'club'})) event.num++;
		var hs=player.getCards('h');
		var minval=get.value(hs[0]);
		for(var i=1;i<hs.length;i++){
			var val=get.value(hs[i],player,'raw');
			if(val<minval){
				minval=val;
			}
		}
		player.chooseCardButton('交换对方1张手牌，若其手牌花色数因此：增加，其摸2张牌；减少，你摸2张牌；不变，你与其各摸1张牌。',target.getCards('h')).ai=function(button){
			return get.value(button.link,player,'raw')-minval;
		}
		"step 1"
        if(result.bool){
            event.cd=result.links[[0]];
            player.chooseCard('h',true,'用一张手牌替换'+get.translation(event.cd)).ai=function(card){
				if(get.suit(event.cd)==get.suit(card)) return 4-get.value(card);
				else return 6-get.value(card);
            };
        }
        else event.finish();
        "step 2"
        if(result.bool){
			target.gain(result.cards[0],player,'giveAuto');	
			player.gain(event.cd,target,'giveAuto');
        }
		else event.finish();
		"step 3"
		var num1=0;
		if(target.countCards('h',{suit:'spade'})) num1++;
		if(target.countCards('h',{suit:'heart'})) num1++;
		if(target.countCards('h',{suit:'diamond'})) num1++;
		if(target.countCards('h',{suit:'club'})) num1++;
		if(num1==event.num) {
			player.draw();
			target.draw();
		} else if(num1<event.num) {
			player.draw(2);
		}
		else {
			target.draw(2);
		}
		game.log(player,'与',target,'交换了1张手牌');
    },
    ai:{
        order:8,
		result:{
			target:function (player,target){
				var num=target.countCards('h');
				if(num>=4) return 0.5;
				if(num>2) return 1;
				return 2;

            },
        },
        expose:0.3,
        threaten:1.2,
    },
},
"XS_shijing":{
	mod:{
		cardUsable:function (card,player,num){
			if(!player.isMinHandcard(false)) return Infinity;
		},
		targetInRange:function (card,player,target,now){
			if(!player.isMinHp(false)) return true;
		},
	},
},
"XS_renhou":{
	trigger:{
		global:"damageBegin4",
	},
	priority:-1,
	check:function (event,player){
		 return get.attitude(player,event.player)>0;
	},
	filter:function (event,player){
		return event.source!=player&&event.player!=player;
	},
	logTarget:'player',
	content:function (){
		"step 0"
		if(player.countCards('h')) {
			player.chooseCard('你可交给'+get.translation(trigger.player)+trigger.num+'张手牌；否则，你可代替其承受'+trigger.num+'点伤害',trigger.num,false).ai=function(card){
				var trigger=_status.event.getTrigger();
				if(trigger.num>=trigger.player.hp) {return -1;}
				else {
					if(trigger.num>=player.countCards('h')){
						return 10-get.value(card);
					}
					return 8-get.value(card);
				}
			}
		}
		else event.goto(2);
        "step 1"
        if(result.bool){
			trigger.player.gain(result.cards,player,'giveAuto');
			event.finish();
        }
		"step 2"
		player.chooseBool('是否代替'+get.translation(trigger.player)+'承受'+trigger.num+'点伤害？').set('ai',function(){
			var tri=_status.event.getTrigger();
			if(get.attitude(player,tri.player)>0) {
				if(tri.num>player.hp) return false;
				if(player.hp>1) return true;
				else {
					return player.hasUsableCard('tao')||player.hasUsableCard('jiu');
				}
			}
			return false;
		});
		"step 3"
		if(result.bool){
			trigger.player=player;
		}
	},
},
"XS_sisheng":{
    mod:{
        maxHandcard:function (player,num){
			var gp=player.group;
			var nm=game.countPlayer(function(current){
				return current!=player&&current.group==gp;
			});
			return num+nm;
        },
    },
	trigger:{player:['dyingBegin','dyingAfter']},
	forced:true,
	content:function(){
		player.draw();
	},
	group:['XS_sisheng_draw'],
	subSkill:{
		draw:{
			sub:true,
			trigger:{player:'loseEnd'},
			forced:true,
			filter:function(event,player){
				if(player.countCards('h')) return false;
				return event.hs&&event.hs.length>0;
			},
			content:function(){
				player.draw();
			},
			ai:{
				threaten:0.8,
				effect:{
					target:function(card){
						if(card.name=='guohe'||card.name=='liuxinghuoyu') return 0.5;
					}
				},
				noh:true,
				skillTagFilter:function(player,tag){
					if(tag=='noh'){
						if(player.countCards('h')!=1) return false;
					}
				}
			}
		},
	},
},
"XS_shouba":{
	enable:'phaseUse',
	selectTarget:1,
	filterTarget:function (card,player,target){
        return target!=player&&target.countDiscardableCards(player,'hej')>0;
    },
	init:function(player,skill){
		player.storage.XS_shouba=0;
	},
	filter:function (event,player){
		var gp=player.group;
		var num=Math.min(4,game.countPlayer(function(current){
			return current!=player&&current.group!=gp;
		}));
		var nm=Math.max(1,num);
		if(player.getStat().skill.XS_shouba>=nm) return false;
		return true;
    },
	content:function(){
		player.storage.XS_shouba++;
		player.discardPlayerCard(target,'hej',true);
		target.draw();
	},
	ai:{
		order:4,
		result:{
			target:function(player,target){
				if(target.hasSkill('XS_tongku')) return 0;
				if(target.countCards('j')) {
					if(target.hasJudge('XS_mantian')) return -1;
					else return 2;
				}
				if(target.countCards('j')) {
					if(target.getEquip('baiyin')) return 2;
					else return -1;
				}
				return -0.5;
			}
		},
		expose:0.3,
		threaten:1.1,
	},
},
"XS_chuizhi":{
	ai:{
		expose:0.3,
		combo:'XS_shouba',
	},
	trigger:{
		player:"phaseAfter",
	},
	direct:true,
	filter:function (event,player){
		return player.storage.XS_shouba&&player.storage.XS_shouba>0;
	},
	content:function (){
		"step 0"
		event.num=player.storage.XS_shouba;
		player.storage.XS_shouba=0;
		var str='你可令1名其他角色获得1个额外的<span class="bluetext">准备';
		if(event.num>1) str+='、判定';
		if(event.num>2) str+='、摸牌';
		if(event.num>3) str+='、出牌';
		str+='</span>阶段';
		player.chooseTarget(get.prompt('XS_chuizhi'),str,function(card,player,target){
			return target!=player;
		}).ai=function(target){
			var att=get.attitude(player,target);
			return att;
		}
		"step 1"
		if(result.bool){
			player.logSkill('XS_chuizhi',result.targets[0]);
			var target=result.targets[0];
			if(event.num>0) {target.phaseZhunbei();}
			if(event.num>1) {target.phaseJudge();}
			if(event.num>2) {target.phaseDraw();}
			if(event.num>3) {target.phaseUse();}
			switch(event.num){
				case 1:target.addTempSkill('XS_chuizhi_mark',{player:'phaseZhunbeiAfter'});break;
				case 2:target.addTempSkill('XS_chuizhi_mark',{player:'phaseJudgeAfter'});break;
				case 3:target.addTempSkill('XS_chuizhi_mark',{player:'phaseDrawAfter'});break;
				case 4:target.addTempSkill('XS_chuizhi_mark',{player:'phaseUseAfter'});break;
			}
			target.storage.XS_chuizhi_mark=event.num;
		}
		else event.finish();
	},
	subSkill:{
		mark:{
			onremove:function (player,skill){
				delete player.storage.XS_chuizhi_mark;
				player.unmarkSkill('XS_chuizhi_mark');
			},
			charlotte:true,
			sub:true,
			marktext:"治",
			init:function (player){
                player.markSkill('XS_chuizhi_mark');
            },
			intro:{
				content:function (storage){
					var str='你获得了1个额外的<span class="bluetext">准备';
					if(storage>1) str+='、判定';
					if(storage>2) str+='、摸牌';
					if(storage>3) str+='、出牌';
					str+='</span>阶段';
                    return str;
				},
			},
		},
	}
},
"XS_laomou":{
    trigger:{
        player:["chooseToRespondBegin","chooseToUseBegin"],
    },
    filter:function (event,player){
		if(player.countCards('h')>0) return false;
        if(event.responded) return false;
		if(!event.filterCard({name:'shan'},player,event)) return false;
		if(event.name=='chooseToRespond'&&!lib.filter.cardRespondable({name:'shan'},player,event)) return false;
        return true;
    },
	frequent:true,
    content:function (){
		player.draw();
		trigger.untrigger();
		trigger.responded=true;
		trigger.result={bool:true,card:{name:'shan'}};
    },
    ai:{
		respondShan:true,
		skillTagFilter:function(player){
			if(player.countCards('h')) return false;
		},
        effect:{
            target:function (card,player,target,effect){
                if(get.tag(card,'respondShan')&&target.countCards('h')==0) return 0.5;
            },
        },
    },
	group:['XS_laomou_wuxie'],
	subSkill:{
		wuxie:{
			sub:true,
			enable:["chooseToUse"],
			filterCard:function (){return true},
			selectCard:-1,
			viewAsFilter:function (player){
				return player.countCards('h');
			},
			viewAs:{
				name:"wuxie",
			},
			prompt:"将全部手牌当作一张无懈可击使用",
			check:function (){
				var player=_status.event.player;
				var tri=_status.event.getTrigger();
				if(tri&&tri.card&&tri.card.name=='chiling') return -1;
				return player.countCards('h')<=2;
			},
			ai:{
				threaten:0.9,
			},
		},
	}
},
"XS_qudou":{
	enable:'phaseUse',
	filter:function(event,player){
		return game.countPlayer(function(current){
			return current!=player;
		})>1;
	},
	selectCard:function (){
        var player=_status.event.player;
		if(player.getStat().skill.XS_qudou) {var num=player.getStat().skill.XS_qudou+1;}
		else {var num=1;}
		return num;
    },
	check:function(card){return 6.5-get.value(card)},
	filterCard:true,
	position:'he',
	filterTarget:function(card,player,target){
		if(player==target) return false;
		if(ui.selected.targets.length==1){
			if(ui.selected.targets[0].sex!=target.sex) return false;
			return target.canUse({name:'juedou',isCard:true},ui.selected.targets[0]);
		}
		return true;
	},
	targetprompt:['先出杀','后出杀'],
	selectTarget:2,
	multitarget:true,
	content:function(){
		targets[1].useCard({name:'juedou'},targets[0],'noai').animate=false;
		game.delay(0.5);
	},
	ai:{
		order:8,
		result:{
			target:function(player,target){
				if(ui.selected.targets.length==0){
					return -3;
				}
				else{
					return get.effect(target,{name:'juedou'},ui.selected.targets[0],target);
				}
			}
		},
		expose:0.4,
		threaten:1.5,
	}
},
"XS_shicheng":{
	trigger:{
		global:"roundStart",
	},
	priority:5,
	direct:true,
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt('XS_shicheng'),'你可令1名其他角色依次选择是否将：手牌数调整为3；体力值调整为2；装备区牌数调整为1；其每有1项因此减少，摸1张牌。',1,false,function(card,player,target){
			return target!=player;
		}).set('ai',function(target){
			var att=get.attitude(player,target);
			if(att<=0) {
				return -1;
			}
			else {
				var num=0;
				num+=(4-target.countCards('h'));
				num+=(2.5-target.hp);
				num+=(2-target.countCards('e'));
				return Math.sqrt(att)*num;
			}
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_shicheng',result.targets[0]);
			event.tar=result.targets[0];
			if(!event.tar.hasSkill('XS_shicheng_mark')) {
				event.tar.addSkill('XS_shicheng_mark');
			}
			event.nm=0;
		}
		else event.finish();
		"step 2"
		event.tar.chooseBool('是否将手牌数调整为3？').set('ai',function(){
			return event.tar.countCards('h')<=4;
		});
		"step 3"
		if(result.bool) {
			var tp=3-event.tar.countCards('h');
			if(tp>0) {
				event.tar.draw(tp);
			}
			else if(tp<0) {
				event.tar.chooseToDiscard(-tp,'h',true);
				event.nm++;
			}
			event.tar.storage.XS_shicheng_mark++;
		}
		"step 4"
		event.tar.chooseBool('是否将体力值调整为2？').set('ai',function(){
			return event.tar.hp<=3;
		});
		"step 5"
		if(result.bool) {
			var tp=2-event.tar.hp;
			if(tp>0) {
				event.tar.recover(tp);
			}
			else if(tp<0) {
				event.tar.loseHp(-tp);
				event.nm++;
			}
			event.tar.storage.XS_shicheng_mark++;
		}
		"step 6"
		event.tar.chooseBool('是否将装备区牌数调整为1？').set('ai',function(){
			return event.tar.countCards('e')<=2;
		});
		"step 7"
		if(result.bool) {
			var tp=1-event.tar.countCards('e');
			if(tp>0) {
				var card=get.cardPile(function(card){
					return get.type(card)=='equip';
				});
				if(card){
					event.tar.gain(card,'gain2','log');
					event.tar.equip(card);
				}
			}
			else if(tp<0) {
				event.tar.chooseToDiscard(-tp,'e',true);
				event.nm++;
			}
			event.tar.storage.XS_shicheng_mark++;
		}
		"step 8"
		event.tar.draw(event.nm);
		event.tar.syncStorage('XS_shicheng_mark');
		event.tar.markSkill('XS_shicheng_mark');
		"step 9"
		if(event.tar.storage.XS_shicheng_mark>=3&&player.hasSkill('XS_shouye')) {
			player.chooseBool(get.prompt('XS_shouye',event.tar),'是否令'+get.translation(event.tar)+'本轮获得随机3名不在场角色中任意1名的全部非觉醒、限定、主公技？').set('ai',function(){
				return get.attitude(player,event.tar)>0;
			});
		}
		else event.finish();
		"step 10"
		if(result.bool) {
			var list=[];
			var list2=[];
			var players=game.players.concat(game.dead);
			for(var i=0;i<players.length;i++){
				list2.add(players[i].name);
				list2.add(players[i].name1);
				list2.add(players[i].name2);
			}
			for(var i in lib.characterPack['XSYG']){
				if(lib.character[i][4].contains('boss')) continue;
				if(lib.character[i][4].contains('minskin')) continue;
				if(list2.contains(i)) continue;
				list.push(i);
			}
			var name=list.randomGets(3);
			event.dialog=ui.create.dialog('令'+get.translation(event.tar)+'获得1名角色的技能',[[name[0]],'character'],[[name[1]],'character'],[[name[2]],'character']);
			if(!event.isMine()){
				event.dialog.style.display='none';
			}
			player.chooseButton().set('ai',function(button){
				return Math.random();
			});
		}
		else event.finish();
		"step 11"
		if(result.bool){
			var chara=result.links[0];
			var skills=lib.character[chara][3];
			for(var i=0;i<skills.length;i++){
				if(!lib.skill[skills[i]].unique&&!lib.skill[skills[i]].zhuSkill) {
					event.tar.addTempSkill(skills[i],'roundStart');
				}
			}
			event.tar.removeSkill('XS_shicheng_mark');
			game.log(event.tar,'获得了'+get.translation(chara)+'的全部非觉醒、限定、主公技。');
		}
	},
	ai:{
		combo:'XS_shouye',
		expose:0.5,
	},
	subSkill:{
	   mark:{
			init:function (player){
				player.storage.XS_shicheng_mark=0;
			},
			intro:{
				content:function (storage){
					return '“试诚”已选择是的次数：'+storage;
				},
			},
			onremove:function(player){
				delete player.storage.XS_shicheng_mark;
				player.unmarkSkill('XS_shicheng_mark');
			},
			sub:true,
			charlotte:true,
        },
    },
},
"XS_shouye":{
	ai:{
		combo:'XS_shicheng',
	},
},
"XS_huashi":{
	ai:{
		expose:0.5,
	},
	trigger:{
		global:"dying",
	},
	filter:function(event,player){
		return event.player.hp<=0&&!event.player.isTurnedOver()&&!player.hasSkill('XS_huashi_temp');
	},
	check:function (event,player){
		return get.attitude(player,event.player)>0;
	},
	logTarget:'player',
	content:function(){
		trigger.player.recover();
		trigger.player.draw(2);
		trigger.player.turnOver(true);
		if(!player.hasSkill('XS_huashi_temp')){
			player.addTempSkill('XS_huashi_temp','roundStart');
		}
	},
	subSkill:{
	   temp:{
		   charlotte:true,
        },
    },
},
"XS_yonglue":{
	init:function (player){
		player.storage.XS_yonglue=[];
	},
	intro:{
		content:function (storage){
			if(storage){
				return '本轮因“勇略”已使用：'+get.translation(storage);
			}
		},
	},
	filter:function (event,player){
		var lt=[];
		for(var i=0;i<lib.inpile.length;i++){
			if(get.tag({name:lib.inpile[i]},'damage')&&get.type(lib.inpile[i])=='trick'&&!player.storage.XS_yonglue.contains(lib.inpile[i])) lt.push(['锦囊','',lib.inpile[i]]);
		}
		return lt.length;
	},
	trigger:{
		player:["equipAfter"],
	},
	direct:true,
	content:function (){
		"step 0"
		var lt=[];
		for(var i=0;i<lib.inpile.length;i++){
			if(get.tag({name:lib.inpile[i]},'damage')&&get.type(lib.inpile[i])=='trick'&&!player.storage.XS_yonglue.contains(lib.inpile[i])) lt.push(['锦囊','',lib.inpile[i]]);
		}
		lt.remove(player.storage.XS_yonglue);
		player.chooseButton(['你可视为使用一张带有伤害标签的普通锦囊牌',[lt,'vcard']],false).set('ai',function(button){
			var recover=0,lose=1,players=game.filterPlayer();
			for(var i=0;i<players.length;i++){
				if(players[i].hp==1&&get.damageEffect(players[i],player,player)>0&&!players[i].hasSha()){
					return (button.link[2]=='juedou')?2:-1;
				}
				if(!players[i].isOut()){
					if(players[i].hp<players[i].maxHp){
						if(get.attitude(player,players[i])>0){
							if(players[i].hp<2){
								lose--;
								recover+=0.5;
							}
							lose--;
							recover++;
						}
						else if(get.attitude(player,players[i])<0){
							if(players[i].hp<2){
								lose++;
								recover-=0.5;
							}
							lose++;
							recover--;
						}
					}
					else{
						if(get.attitude(player,players[i])>0){
							lose--;
						}
						else if(get.attitude(player,players[i])<0){
							lose++;
						}
					}
				}
			}
			if(lose>recover&&lose>0) return (button.link[2]=='nanman'||button.link[2]=='wanjian')?1:-1;
			return (button.link[2]=='XS_chunqiangshejian')?1:-1;
		});
		"step 1"
		if(result&&result.bool&&result.links[0]){
			player.logSkill('XS_yonglue');
			player.chooseUseTarget({name:result.links[0][2],isCard:true},false);
			player.storage.XS_yonglue.push(result.links[0][2]);
			player.markSkill('XS_yonglue');
		}
	},
	ai:{
	　　effect:{
　　		player:function(card,player){
				if(player.storage.XS_yonglue.length>=3) return 0;
				if(player.getEquip(get.subtype(card))) return [1,-1];
				return 2;
			}
		}
	},
	group:["XS_yonglue_clear","XS_yonglue_lose"],
	subSkill:{
        clear:{
			sub:true,
			trigger:{
				global:"roundStart",
			},
			filter:function (event,player){
				return player.storage.XS_yonglue.length;
			},
			priority:51,
			direct:true,
			content:function (){
				player.storage.XS_yonglue=[];
				player.unmarkSkill('XS_yonglue');
			},
        },
		lose:{
			sub:true,
			trigger:{
				player:'loseAfter',
				global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter'],
			},
			priority:-1,
			forced:true,
			filter:function(event,player){
				var evt=event.getl(player);
				return evt&&evt.player==player&&evt.es&&evt.es.length>0;
			},
			content:function(){
				player.loseHp();
			},
			ai:{
				effect:{
					target:function(card){
						if(card.name=='guohe'||card.name=='liuxinghuoyu') return 1.2;
					}
				},
			}
        },
    },
},
"XS_xiongao":{
	trigger:{
		global:"dieAfter",
	},
	filter:function(event,player){
		return event.player!=player;
	},
	direct:true,
	priority:67,
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt2('XS_xiongao'),1,function(card,player,target){
			return true;
		}).set('ai',function(target){
			var att=get.attitude(player,target),hs=target.countCards('h')-1;
			att/=hs;
			return (target==player)?(att+1):att;
		});
		"step 1"
		if(result.bool){
			event.tar=result.targets[0];
			player.logSkill('XS_xiongao',event.tar);
			event.tar.draw(3);
			event.goto(2);
        }
		else event.finish();
		"step 2"
		if(event.tar==player) {
			var cds=player.getCards('h');
			event.lt=[];
			for(var i=0;i<cds.length;i++) {
				if(lib.filter.cardEnabled(cds[i],player)) event.lt.push(cds[i]);
			}
		}
		else event.finish(); 
		"step 3"
		if(event.lt.length) {				
			player.chooseCardButton('你可选择使用其中一张牌',event.lt).set('ai',function(button){
				return get.value(button.link);
			});
		}
		else event.finish();
		"step 4"
		if(result.bool){
            event.use=result.links[0];
            var next=player.chooseToUse();
            next.filterCard=function(card){
                return card==event.use;
            };
            next.prompt='是否使用'+get.translation(event.use)+'？';
        }
	},
	ai:{
		expose:0.4,
	}
},
"XS_fubi":{
	trigger:{
		global:"roundStart",
	},
	priority:-99,
	filter:function (event,player){
		return game.hasPlayer(function(current){
			return current!=player&&!current.hasSkill('XS_fubi_mark');
		});
	},
	direct:true,
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt('XS_fubi'),'你可指定1名其他角色，其于此轮使用杀造成伤害后，你可展示牌堆顶2张牌并任意分配给你或该角色。',1,false,function(card,player,target){
			return target!=player&&!target.hasSkill('XS_fubi_mark');
		}).set('ai',function(target){
			return get.attitude(player,target);
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_fubi',result.targets[0]);
			player.storage.XS_fubi=result.targets[0];
			result.targets[0].addTempSkill('XS_fubi_mark','roundStart');
			result.targets[0].markSkillCharacter('XS_fubi_mark',player,'辅弼','你使用杀造成伤害后，'+get.translation(player)+'可展示牌堆顶2张牌并任意分配给你或其。');
		}
	},
	group:["XS_fubi_give"],
    subSkill:{
        give:{
			trigger:{
				global:"damageEnd",
			},
			ai:{
				expose:0.2,
			},
			filter:function (event,player){
				if(!event.source||!event.source.hasSkill('XS_fubi_mark')) return false;
				if(!player.storage.XS_fubi) return false;
				if(event.source!=player.storage.XS_fubi) return false;
				return event.card&&event.card.name=='sha'&&event.notLink()&&event.num>0;
			},
			frequent:true,
			content:function(){
				"step 0"
				event.cards=get.cards(2);
				event.translation1=get.translation(player.storage.XS_fubi);
				"step 1"
				if(event.cards.length>1){
					player.chooseCardButton('将牌分配给你或'+event.translation1,true,event.cards,[1,event.cards.length]).set('ai',function(button){
						if(ui.selected.buttons.length==0) return 1;
						return 0;
					});
				}
				else if(event.cards.length==1){
					event._result={links:event.cards.slice(0),bool:true};
				}
				else{
					event.finish();
				}
				"step 2"
				if(result.bool){
					for(var i=0;i<result.links.length;i++){
						event.cards.remove(result.links[i]);
					}
					event.togive=result.links.slice(0);
					var translation1=get.translation(player.storage.XS_fubi);
					player.chooseTarget('将任意牌交给你或'+event.translation1,true,function(card,player,target){
						return target==player||target==player.storage.XS_fubi;
					}).set('ai',function(target){
						var att=get.attitude(_status.event.player,target);
						if(_status.event.enemy){
							return -att;
						}
						else if(att>0){
							return att/(1+target.countCards('h'));
						}
						else{
							return att/100;
						}
					}).set('enemy',get.value(event.togive[0])<0);
				}
				"step 3"
				if(result.targets.length){
					result.targets[0].gain(event.togive,'draw');
					player.line(result.targets[0],'green');
					game.log(result.targets[0],'获得了'+get.cnNumber(event.togive.length)+'张牌');
					event.goto(1);
				}
			},
        },
		mark:{
			onremove:function (player,skill){
				player.unmarkSkill('XS_fubi_mark');
			},
			sub:true,
			charlotte:true,
        },
    },
},
"XS_kuangzuo":{
	ai:{
		expose:0.2,
	},
	audio:2,
	trigger:{
		player:"phaseDrawAfter",
	},
	filter:function(event,player){
		return player.countCards('h')>player.hp;
	},
	direct:true,
	content:function(){
		'step 0'
		var num=player.countCards('h')-player.hp;
		player.chooseCardTarget({
			filterCard:true,
			filterTarget:function(card,player,target){
				return target!=player;
			},
			position:"h",
			selectCard:[1,Infinity],
			ai1:function(card){
				var pla=_status.event.player;
				if(pla.isHealthy()) {
					return 5-get.value(card);
				}
				else {
					var nm=Math.max(0,pla.countCards('h')-pla.maxHp+1);
					if(ui.selected.cards.length<nm) {
						return 8-get.value(card);
					}
					return -1;
				}
			},
			ai2:function(target){
				var att=get.attitude(_status.event.player,target);
				var nh2=target.countCards('h');
				var num=Math.sqrt(1+nh2);
				if(target.isDamaged()) return att;
				return att/num;
			},
			prompt:'是否发动【匡佐】？</br></br>你可交给1名其他角色至少1张手牌，若你因此手牌数小于体力上限，你回复1点体力。'
		});
		'step 1'
		if(result.bool){
			event.tar=result.targets[0];
			player.logSkill('XS_kuangzuo',event.tar);
			event.tar.gain(result.cards,player,'giveAuto');
		}
		else event.finish();
		'step 2'
		if((player.countCards('h')<player.maxHp)&&player.isDamaged()) {
			player.recover();
		}
	},
	ai:{
		expose:0.3,
	},
},
"XS_hengxing1":{
	charlotte:true,
	mark:true,
	marktext:"横",
	intro:{
		content:function (storage){
			return '你使用牌无数量、距离限制且无法被响应';
		},
	},
	mod:{
		cardUsable:function(card,player){
			return Infinity;
		},
		targetInRange:function (card,player,target,now){
			return true;
		},
	},
	trigger:{
        player:"phaseUseAfter",
    },
    direct:true,
    content:function (){
		player.disableEquip('equip1');
		player.disableEquip('equip2');
		player.disableEquip('equip3');
		player.disableEquip('equip4');
		player.disableEquip('equip5');
    },
	group:["XS_hengxing1_nores"],
    subSkill:{
        nores:{
			sub:true,
			direct:true,
			trigger:{
				player:"useCard",
			},
			filter:function (event,player){
				return true;
			},
			content:function(){
				trigger.nowuxie=true;
				trigger.directHit.addArray(game.players);
			},
        },
    },
},
"XS_hengxing":{
	audio:2,
	unique:true,
	enable:'phaseUse',
	mark:true,
	skillAnimation:true,
	animationColor:'gray',
	limited:true,
	init:function(player){
		player.storage.XS_hengxing=false;
	},
	filter:function(event,player){
		if(player.storage.XS_hengxing) return false;
		return true;
	},
	content:function(){
		player.awakenSkill('XS_hengxing');
		player.storage.XS_hengxing=true;
		var num=player.maxHp-player.countCards('h');
		player.draw(num);
		player.addTempSkill('XS_hengxing1');
	},
	ai:{
		order:13,
		result:{
            player:function (player){
				var num=player.maxHp-player.countCards('h');
				if(player.maxHp>=6) {
					if(num>=4||player.countCards('h','sha')>=2) return 2;
				}
				return -0.5;
            },
		},
	},
	intro:{
		content:'limited'
	},
},
"XS_yuxue":{
	trigger:{player:"damageBefore"},
	filter:function(event,player){
		return player.countCards('h')>0;
	},
	check:function (event,player){
		if(player.countCards('h','tao')||player.countCards('h','jiu')) return false;
		if(player.countCards('h')==1||player.countCards('h')==3) return true;
		if(event.num>=player.hp&&!player.countCards('h','tao')&&!player.countCards('h','jiu')) return true;
		if(player.maxHp>=7&&player.storage.XS_hengxing==false) return true;
		return false;
	},
	content:function(){
		"step 0"
		var cards=player.getCards('h');
		var num=cards.length;
		player.discard(cards);
		if(num>=player.hp) {
			player.gainMaxHp();
			player.recover();
		}
		"step 1"
		trigger.cancel();
	},
	ai:{
		threaten:0.8,
	}
},
"XS_aozhan":{
	derivation:['XS_yuxue','XS_xianzhen','XS_zhulu','XS_pozhu'],
	trigger:{
		player:"damageAfter",
	},
	filter:function (event,player){
		return event.num>0&&player.countCards('h')>0;
	},
	direct:true,
	content:function (){
		"step 0"
        player.chooseCard(get.prompt('XS_aozhan'),'你可弃置1张手牌，根据其花色获得对应技能直至你回合结束：♥，浴血；♦，陷阵；♠，逐虏；♣，破竹。',1,'h',false).ai=function(card){
			if(player.hp<2&&get.suit(card)=='heart') {return 12-get.value(card);}
			if(player.hp>3&&get.suit(card)=='diamond') {return 12-get.value(card);}
			if(player.countCards('h','sha')>1&&get.suit(card)=='club') {return 12-get.value(card);}
			return 8-get.value(card);
        }
        "step 1"
        if(result.bool){
			var translation=get.translation(result.cards[0]);
			var suit=get.suit(result.cards[0]);
			switch(suit){
				case 'heart':player.addTempSkill('XS_yuxue',{player:'phaseAfter'});break;
				case 'spade':player.addTempSkill('XS_zhulu',{player:'phaseAfter'});break;
				case 'diamond':player.addTempSkill('XS_xianzhen',{player:'phaseAfter'});break;
				case 'club':player.addTempSkill('XS_pozhu',{player:'phaseAfter'});break;
			}
			player.discard(result.cards);
			player.gainMaxHp();
        }
        else{
			event.finish();
        }
	},
	ai:{
		maixie:true,
		"maixie_hp":true,
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')) {
					if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
					if(!target.hasFriend()) return;
					if(!target.countCards('h')) return;
					if(target.hp>=4) return [1,2];
					if(target.hp==3) return [1,1.5];
					return;
				}
			},
		},
	},
},
"XS_zhucheng":{
	init:function (player){
		player.storage.XS_zhucheng=0;
	},
	trigger:{
		player:"phaseJieshuBegin",
	},
	frequent:true,
	filter:function (event,player){
		return player.storage.disableEquip.length>0;
	},
	content:function (){
		var num=player.storage.disableEquip.length;
		player.storage.XS_zhucheng=num-1;
		player.draw(num);
	},
	group:["XS_zhucheng_dis"],
    subSkill:{
		dis:{
			trigger:{
				player:"phaseBefore",
			},
			forced:true,
			content:function (){
				var num=player.storage.XS_zhucheng;
				if(num!=0) {
					player.chooseToDiscard(num,'h',true);
				}
				player.storage.XS_zhucheng=0;
			},
			filter:function (event,player){
				return player.storage.XS_zhucheng>0;
			},
			sub:true,
		},
    },
},
"XS_jihu":{
	mod:{
		targetInRange:function (card,player,target){
			if(!player.countCards('e')){
				return true;
			}
		},
	},
	usable:1,
	audio:2,
	enable:"phaseUse",
	filter:function(event,player){
		return player.storage.disableEquip!=undefined&&player.storage.disableEquip.length<5;
	},
    filterTarget:function (card,player,target){
        return player!=target;
    },
	selectTarget:1,
	content:function(){
		'step 0'
		var list=[];
		for(var i=1;i<6;i++){
			if(player.isDisabled(i)) continue;
			list.push('equip'+i);
		}
		if(!list.length) event.finish();
		else{
			event.list=list;
			var next=player.chooseControl(list);
			next.prompt='请选择废除1个装备栏';
			next.ai=function(){
				if(list.contains('equip2')) return 'equip2';
				if(list.contains('equip3')) return 'equip3';
				if(list.contains('equip5')) return 'equip5';
				if(list.contains('equip4')) return 'equip4';
				return 'equip1';
			};
		}
		'step 1'
		if(result.control){
			player.disableEquip(result.control);
			player.logSkill('XS_jihu',target);
			player.useCard({name:'sha',isCard:true},target,false);
		}
		else event.finish();
	},
	ai:{
		order:1,
		result:{
			target:function (player,target){
				var eff=get.effect(target,{name:'sha'},player,target);
				if(player.storage.disableEquip.length>=4) return 0;
				return eff;
            },
		},
	},
},
"XS_jiezhong":{
	audio:"ext:血色衣冠:2",
	trigger:{target:'useCardToTargeted'},
	check:function(event,player){
		var att=get.attitude(player,event.player),hs=player.getCards('h'),mk=false,tp=get.type(event.card);
		if(att>=0) return false;
		for(var i=0;i<hs.length;i++) {
			if(get.type(hs[i])==tp) {
				mk=true;
				break;
			}
		}
		return !mk;
	},
	init:function (player){
		player.storage.XS_jiezhong=[];
	},
	filter:function(event,player){
		return event.player!=player;
	},
	logTarget:'player',
	content:function(){
		'step 0'
		player.showHandcards();
		'step 1'
		var hs=player.getCards('h'),mk=false,tp=get.type(trigger.card);
		for(var i=0;i<hs.length;i++) {
			if(get.type(hs[i])==tp) {
				mk=true;
				break;
			}
		}
		if(!mk) {
			trigger.player.chooseToDiscard('h',1,true);
		}
		player.storage.XS_jiezhong.push(trigger.card);
	},
	ai:{
		expose:0.3,
		effect:{
			target:function (card,player,target){
				var att=get.attitude(target,player),hs=4/(target.countCards('h')+1);
				if(att>=0) return;
				return [1,0,1,-1*hs];
            },
		},
	},
	group:["XS_jiezhong_dam","XS_jiezhong_clear"],
    subSkill:{
        dam:{
			sub:true,
			trigger:{
				player:"damageEnd",
			},
			filter:function(event,player){
				return event.card&&player.storage.XS_jiezhong.contains(event.card)&&event.source;
			},
			direct:true,
			priority:7,
			content:function (){
				"step 0"
				player.chooseControl('失去1点体力','立即结束出牌阶段',function(event,player){
					var sour=_status.event.getTrigger().source;
					if((sour.countCards('h')-sour.getHandcardLimit())>1) return '立即结束出牌阶段';
					return '失去1点体力';
				}).set('prompt','你可令'+get.translation(trigger.source)+'获得一项效果');
				"step 1"
				if(result.control=='失去1点体力') {
					trigger.source.loseHp();
				}
				else {
					var evt=_status.event.getParent('phaseUse');
					if(evt&&evt.name=='phaseUse'){
						evt.skipped=true;
					}
				}
				"step 2"
				player.storage.XS_jiezhong=[];
			},
        },
		clear:{
			trigger:{
				global:["useCardAfter","useCardCancelled"],
			},
			direct:true,
			priority:16,
			filter:function(event,player){ 
				return player.storage.XS_jiezhong.contains(event.card);
			},
			content:function(){
				player.storage.XS_jiezhong=[];
			},
			sub:true,
		},
    },
},
"XS_yinxian":{
	audio:"ext:血色衣冠:2",
    enable:"phaseUse",
    filter:function (event,player){
        return player.countCards('h')>0;
    },
    filterCard:true,
    selectCard:1,
	position:"h",
    filterTarget:function (card,player,target){
        return player!=target&&!target.hasSkill('XS_yinxian_temp');
    },
	check:function (card){
        return 8-ai.get.value(card);
    },
	init:function (player){
        player.storage.XS_yinxian=0;
    },
    content:function (){
        "step 0"
        event.target1=targets[0];
		event.card1=cards[0];
		var translate=get.translation(event.card1);
		event.target1.chooseControlList(
		['获得'+get.translation(player)+'弃置的'+translate+'牌',
		'从牌堆中随机获得1张与'+translate+'同类型的牌'],
		true).set('ai',function(event,player){
			if(ai.get.value(event.card1)>5) return 0;
			return 1;
		});
		"step 1"
        if(result.index==0){
			event.target1.gain(event.card1);
			event.target1.$gain2(event.card1);
        }else{
			var type=get.type(event.card1);
			var card=get.cardPile(function(card){
				return get.type(card)==type;
			});
			if(card){
				event.target1.gain(card,'gain2','log');
			}
        }
		"step 2"
		event.target1.addTempSkill('XS_yinxian_temp');
		player.storage.XS_yinxian++;
    },
    ai:{
        order:2,
		result:{
            target:function (player,target){
				if(player.needsToDiscard()) return 3;
				if(target.countCards('h')<player.countCards('h')) return 1;
				return 0;
            },
        },
        expose:0.2,
    },
   subSkill:{
		temp:{
			charlotte:true,
        },
    },
},
"XS_feizhao":{
   trigger:{
        player:"phaseUseAfter",
    },
	filter:function (event,player){
		return player.countCards('h','sha');
	},
    direct:true,
    content:function (){
		"step 0"
		player.chooseCardTarget({
			filterCard:function(card){
				return card.name=='sha';
			},
			position:"h",
			selectCard:[1,Infinity],
			selectTarget:1,
			filterTarget:function(card,player,target){
				return player!=target;
			},
			ai1:function(card){
				return 7.5-get.value(card);
			},
			ai2:function(target){
				var player=_status.event.player;
				var att=get.attitude(player,target);
				if(target.hasSkill('XS_shenjiang')) att*=10;
				return att;
			},
			prompt:'是否发动【飞诏】？</br></br>你可交给1名其他角色任意张杀，令其直至你下回合开始使用杀无距离限制。',
		});
		"step 1"
		if(result.bool){
			event.tar=result.targets[0];
			player.logSkill('XS_feizhao',event.tar);
			event.tar.gain(result.cards,player,'giveAuto');
			event.mk=false;
			player.chooseBool('是否将武将牌翻面，使'+get.translation(event.tar)+'额外获得效果“其使用杀造成伤害后，令你摸伤害数值张牌。”？').set('ai',function(){
				return player.countCards('h')>=player.hp||player.isTurnedOver();
			});
		}
		else event.finish();
		"step 2"
		if(result.bool) {
			player.turnOver();
			event.mk=true;
		}
		"step 3"
		if(!event.mk) {
			event.tar.addSkill('XS_feizhao_1');
			event.tar.markSkillCharacter('XS_feizhao_1',player,'飞诏','你使用杀无距离限制');
		}
		else {
			event.tar.addSkill('XS_feizhao_2');
			event.tar.storage.XS_feizhao_2=player;
			event.tar.markSkillCharacter('XS_feizhao_2',player,'飞诏','你使用杀无距离限制；你使用杀造成伤害后，令'+get.translation(player)+'摸伤害数值张牌');
		}
    },
	ai:{
		expose:0.3,
    },
	group:["XS_feizhao_remove"],
	subSkill:{
		remove:{
			sub:true,
            trigger:{
                player:["phaseBefore","dieBegin"],
            },
			direct:true,
            content:function (){
                for(var i=0;i<game.players.length;i++){
                    if(game.players[i].hasSkill('XS_feizhao_1')){
                        game.players[i].removeSkill('XS_feizhao_1');
                    }
					if(game.players[i].hasSkill('XS_feizhao_2')){
                        game.players[i].removeSkill('XS_feizhao_2');
                    }
                }
            },
        },
		1:{
			charlotte:true,
			sub:true,
			mod:{
				targetInRange:function (card){
					if(card.name=='sha') return true;
				},
			},
			onremove:function(player){
				player.unmarkSkill('XS_feizhao_1');
			},
		},
		2:{
			charlotte:true,
			sub:true,
			mod:{
				targetInRange:function (card){
					if(card.name=='sha') return true;
				},
			},
			onremove:function(player){
				player.unmarkSkill('XS_feizhao_2');
			},
			trigger:{
				source:"damageEnd",
			},
			priority:2,
			filter:function (event,player){
				if(!player.storage.XS_feizhao_2) return false;
				return event.card&&event.card.name=='sha'&&event.notLink();
			},
			forced:true,
			content:function (){
				player.storage.XS_feizhao_2.draw(trigger.num);
			},
		},
	},
},
"XS_zhigu":{
	init:function(player,skill){
		player.storage.XS_zhigu_card1=[];
		player.storage.XS_zhigu_card2=[];
		player.storage.XS_zhigu_card3=[];
	},
	trigger:{
		global:"useCardBegin",
	},
	ai:{
		expose:0.3,
    },
	priority:-5,
	filter:function (event,player){
		if(event.card.name!='sha') return false;
        return player.countCards('h');
    },
	direct:true,
	content:function (){
        "step 0"
		event.usesha=false;
		player.chooseCardButton('执鼓：你可以弃置任意张花色不同的手牌，根据花色令<span class="bluetext">'+get.translation(trigger.player)+'</span>使用的'+get.translation(trigger.card)+'获得效果：♥︎，伤害基数+1；♠︎，可额外指定1个目标；♦︎，需两张闪响应；♣︎，不计入使用次数。',[1,Infinity],player.getCards('h')).set('filterButton',function(button){
			var cds=_status.event.getTrigger().cards;
			if(cds.contains(button.link)) return false;
			var st=get.suit(button.link);
			for(var i=0;i<ui.selected.buttons.length;i++){
				if(get.suit(ui.selected.buttons[i])==st) return false;
			}
			return true;
		}).set('ai',function(button){
			var trigger=_status.event.getTrigger();
			var pl=trigger.player;
			var att=get.attitude(player,pl);
			if(att>0) {
				if(pl.hasSkill('XS_feizhao_2')) return 6-get.value(button.link);
				if(get.type(button.link)=='club'){
					if(pl.getStat().card.sha==1&&pl.hasSha()) return 4-get.value(button.link);
				}
				if(get.type(button.link)=='spade'){
					var eff=game.hasPlayer(function(current){
						return get.effect(current,trigger.card,pl,pl)>0&&pl.canUse(trigger.card,current)&&!trigger.targets.contains(current);
					});
					if(eff) return 6-get.value(button.link);
				}
				if(get.type(button.link)=='heart'){
					return 5-get.value(button.link);
				}
				else return 7-get.value(button.link);
			}
			return -1;
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_zhigu',trigger.player);
			event.lt=[];
			for(var i=0;i<result.links.length;i++) {
				event.lt.add(get.suit(result.links[i]));
			}
			player.discard(result.links);
		}
		else event.finish();
		"step 2"
		if(event.lt.contains('club')){
			player.storage.XS_zhigu_card3.push(trigger.card);
		}
		if(event.lt.contains('heart')){
			player.storage.XS_zhigu_card1.push(trigger.card);
		}
		if(event.lt.contains('diamond')){
			player.storage.XS_zhigu_card2.push(trigger.card);
		}
		if(event.lt.contains('spade')){
			event.usesha=true;
		}
        "step 3"
        if(event.usesha==true){
            trigger.player.chooseTarget('是否为'+get.translation(trigger.card)+'额外指定1个目标?',function(card,player,target){
				var trigger=_status.event.getTrigger();
                return !trigger.targets.contains(target)&&trigger.player.canUse(trigger.card,target);
            }).set('ai',function(target){
				var trigger=_status.event.getTrigger();
                var pla=trigger.player;
                return get.effect(target,trigger.card,pla,pla);
            });
        }
        else event.finish();
        "step 4"
        if(result.bool){
            if(!event.isMine()&&!_status.connectMode) game.delayx();
            event.target=result.targets[0];
        }
        else event.finish();
        "step 5"
        trigger.player.line(event.target,'green');
        trigger.targets.push(event.target);
    },
	group:['XS_zhigu_remove1','XS_zhigu_remove2','XS_zhigu_remove3','XS_zhigu_damage','XS_zhigu_shan','XS_zhigu_count'],
	subSkill:{
		remove1:{
			trigger:{
				global:["useCardAfter","useCardCancelled"],
			},
			direct:true,
			priority:6,
			filter:function(event,player){ 
				return player.storage.XS_zhigu_card1.indexOf(event.card)>=0;
			},
			content:function(){
    			var n=player.storage.XS_zhigu_card1.indexOf(trigger.card);
    			player.storage.XS_zhigu_card1.splice(n,1);
			},
			sub:true,
		},
		remove2:{
			trigger:{
				global:["useCardAfter","useCardCancelled"],
			},
			direct:true,
			priority:7,
			filter:function(event,player){ 
				return player.storage.XS_zhigu_card2.indexOf(event.card)>=0;
			},
			content:function(){
    			var n=player.storage.XS_zhigu_card2.indexOf(trigger.card);
    			player.storage.XS_zhigu_card2.splice(n,1);
			},
			sub:true,
		},
		remove3:{
			trigger:{
				global:["useCardAfter","useCardCancelled"],
			},
			direct:true,
			priority:8,
			filter:function(event,player){ 
				return player.storage.XS_zhigu_card3.indexOf(event.card)>=0;
			},
			content:function(){
    			var n=player.storage.XS_zhigu_card3.indexOf(trigger.card);
    			player.storage.XS_zhigu_card3.splice(n,1);
			},
			sub:true,
		},
		damage:{
			trigger:{
				global:"shaBegin",
			},
			priority:99,
			filter:function(event,player){ 
				return player.storage.XS_zhigu_card1.indexOf(event.card)>=0;
			},
			direct:true,
			content:function (){
				trigger.baseDamage++;
			},
			sub:true,
		},
		shan:{
			trigger:{
				global:"shaBegin",
			},
			direct:true,
			filter:function (event,player){
				if(event.directHit) return false;
				return player.storage.XS_zhigu_card2.indexOf(event.card)>=0;
			},
			priority:-1,
			content:function (){
				if(typeof trigger.shanRequired=='number'){
					trigger.shanRequired++;
				}
				else{
					trigger.shanRequired=2;
				}
			},
			sub:true,
		},
		count:{
			trigger:{
				global:"useCardEnd",
			},
			direct:true,
			filter:function (event,player){
				return player.storage.XS_zhigu_card3.indexOf(event.card)>=0;
			},
			priority:-2,
			content:function (){
				if(trigger.player.getStat().card.sha>0){
					trigger.player.getStat().card.sha--;
				}
			},
			sub:true,
		},
	},
},
"XS_shenjian":{
	mod:{
		targetInRange:function(card){
			if(card.name=='sha') return true;
		},
	},
	zhuanhuanji:true,
	audio:"ext:血色衣冠:2",
	init:function (player){
        player.storage.XS_shenjian=[1,2,3];
		player.storage.XS_shenjian_a=[];
		player.storage.XS_shenjian_b=[];
    },
	mark:true,
	marktext:'箭',
	intro:{
		content:function(storage,player,skill){
			if(player.storage.XS_shenjian[0]==1) return  '你使用杀无视防具';
			else if(player.storage.XS_shenjian[0]==2) return  '你使用杀响应所需闪数+1';
			else if(player.storage.XS_shenjian[0]==3) return '你使用杀令目标本回合所有非锁定技失效，且无法使用或打出牌';
		},
	},
	trigger:{
		player:"useCardBefore",
	},
	forced:true,
	filter:function (event,player){
		return event.card.name=='sha';
	},
	priority:-1,
	content:function (){
		"step 0"
		if(player.storage.XS_shenjian[0]==1) {
			player.storage.XS_shenjian_a.push(trigger.card);
		}
		else if(player.storage.XS_shenjian[0]==2) {
			player.storage.XS_shenjian_b.push(trigger.card);
		}
		else {
			for(var i=0;i<trigger.targets.length;i++) {
				if(!trigger.targets[i].hasSkill('fengyin')){
					trigger.targets[i].addTempSkill('fengyin');
				}
				trigger.targets[i].addTempSkill('XS_shenjian_feng');
			}
		}
		"step 1"
		var temp=player.storage.XS_shenjian.shift();
		player.storage.XS_shenjian.push(temp);
		player.markSkill('XS_shenjian');
	},
	ai:{
		unequip:true,
		skillTagFilter:function(player,tag,arg){
			if(!arg||!arg.card||arg.card.name!='sha'||player.storage.XS_shenjian_a.indexOf(arg.card)<0) return false;
		},
	},
	group:['XS_shenjian_shan','XS_shenjian_remove'],
	subSkill:{
		remove:{
			trigger:{
				global:["useCardAfter","useCardCancelled"],
			},
			direct:true,
			priority:6,
			filter:function(event,player){ 
				return player.storage.XS_shenjian_a.length>0||player.storage.XS_shenjian_b.length>0;
			},
			content:function(){
				player.storage.XS_shenjian_a=[];
				player.storage.XS_shenjian_b=[];
			},
			sub:true,
		},
		shan:{
			trigger:{
				player:"shaBegin",
			},
			direct:true,
			filter:function (event,player){
				if(event.directHit) return false;
				return player.storage.XS_shenjian_b.indexOf(event.card)>=0;
			},
			priority:-1,
			content:function (){
				if(typeof trigger.shanRequired=='number'){
					trigger.shanRequired++;
				}
				else{
					trigger.shanRequired=2;
				}
			},
			sub:true,
		},
		feng:{
			charlotte:true,
			marktext:'禁',
			mark:true,
			mod:{
				cardEnabled2:function(){
					return false;
				},
			},
			intro:{
				content:'不能使用或打出牌'
			},
			sub:true,
		},
	},
},
"XS_weizhen":{
	audio:"ext:血色衣冠:2",
	trigger:{
		source:"damageAfter",
	},
	priority:8,
	filter:function (event){
		if(!event.card||event.card.name!='sha'||!event.notLink()) return false;
		return event.player.countCards('he');
	},
	logTarget:'player',
	check:function (event,player){
		return get.attitude(player,event.player)<0;
	},
	content:function (){
		"step 0"
		player.discardPlayerCard(trigger.player,1,'he',true);
		"step 1"
		if(result.cards&&get.type(result.cards[0])=='basic') {
			event.cd=result.cards[0];
			player.chooseBool('是否获得'+get.translation(event.cd)+'？').set('ai',function(){
				return get.value(event.cd)>=3;
			});
		}
		else event.finish();
		"step 2"
		if(result.bool) {
			player.gain(event.cd,'gain2','log');
		}
	},
},
"XS_jiqu":{
	audio:"ext:血色衣冠:2",
	mod:{
		targetInRange:function (card){
			if(get.suit(card)=='diamond'&&card.name=='sha') return true;
		},
		cardUsable:function(card){
			if(card.name=='sha'&&get.suit(card)=='heart') return Infinity;
		},
	},
	enable:"chooseToUse",
	usable:1,
	filterCard:function (card,player){
        return get.color(card)=='red';
    },
	position:"he",
	viewAs:{
		name:"sha",
	},
	viewAsFilter:function (player){
		if(!player.isPhaseUsing()) return false;
        return player.countCards('he',{color:'red'});
    },
	prompt:"将一张红色牌当杀使用",
	check:function (card){
        return 6-get.value(card);
    },
	group:["XS_jiqu_count"],
	subSkill:{
		count:{
			trigger:{player:'useCard'},
			direct:true,
			filter:function(event,player){
				return event.card.name=='sha'&&get.suit(event.card)=='heart';
			},
			content:function(){
				if(trigger.addCount!==false){
					trigger.addCount=false;
					if(player.stat[player.stat.length-1].card.sha>0){
						player.stat[player.stat.length-1].card.sha--;
					}
				}
			},
			sub:true,
		},
	},
},
"XS_poqiu":{
	audio:"ext:血色衣冠:2",
	trigger:{source:'damageAfter'},
	check:function (event,player){
		return get.attitude(player,event.player)<=0;
	},
	logTarget:'player',
	filter:function(event,player){
		return event.num>0&&event.card&&event.card.name=='sha'&&event.notLink()&&event.player.countCards('e');
	},
	content:function(){
		"step 0"
		player.choosePlayerCard('e',true,function(button){
			return get.value(button.link);
		},trigger.player);
		"step 1"
		event.cd=result.links[0];
		player.chooseTarget('将'+get.translation(event.cd)+'置于一名角色的装备区',1,true,function(card,player,target){
			return _status.event.getTrigger().player!=target;
		}).set('ai',function(target){
			var att=get.attitude(player,target),sub=get.subtype(event.cd);
			if(target.isEmpty(sub)) return att*2;
			return att/2;
		});
		"step 2"
		result.targets[0].equip(event.cd);
		trigger.player.$give(event.cd,result.targets[0]);
	},
	ai:{
		expose:0.4,
	},
},
"XS_fenglang":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"phaseJieshuBegin",
	},
	frequent:true,
	filter:function (event,player){
		return player.getStat('damage');
    },
	content:function (){
        var numx=Math.min(4,player.getStat('damage'));
		player.draw(numx);
    },
	ai:{
		threaten:1.1,
	},
},
"XS_faming":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"useCardBefore",
	},
	filter:function (event,player){
		return !player.hasSkill('XS_faming_temp')&&event.getParent().name!='XS_faming';
	},
	priority:199,
	check:function (event,player){
		var eff1=0;
		for(var i=0;i<event.targets.length;i++) {
			eff1+=get.effect(event.targets[i],event.card,player,player);
		}
		return get.effect(player,{name:'wuzhong',isCard:true},player,player)>eff1;
	},
	content:function (){
		"step 0"
		player.addSkill('XS_faming_temp');
		"step 1"
		player.useCard({name:'wuzhong'},trigger.cards,player);
		"step 2"
		trigger.cancel();
	},
	group:['XS_faming_clear'],
	subSkill:{
		temp:{
			charlotte:true,
			sub:true,
		},
		clear:{
			trigger:{
				player:["phaseBefore","phaseJieshuBegin"],
			},
			priority:599,
			direct:true,
			content:function (){
				player.removeSkill('XS_faming_temp');
			},
			sub:true,
		},
	},
},
"XS_jiqiao":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"gainAfter",
	},
	direct:true,
	filter:function (event,player){
		var players=game.players,lt=['XS_jinglan','XS_yunti','XS_chongche','XS_mushou'],mk=false;
		for(var i=0;i<players.length;i++) {
			if(!lt.contains(players[i].getEquip(5).name)) {
				mk=true;
				continue;
			}
			if(players[i].getEquip(5)) {
				lt.remove(players[i].getEquip(5).name);
			}
		}
		return lt.length&&mk;
	},
	init:function(player,skill){
		if(typeof game.storage=="undefined") game.storage={};
		game.storage[skill]=[];
		game.addGlobalSkill(skill+"_a");
	},
	content:function (){
		"step 0"
		var players=game.players,lts=['XS_jinglan','XS_yunti','XS_chongche','XS_mushou'];
		for(var i=0;i<players.length;i++) {
			if(players[i].getEquip(5)) lts.remove(players[i].getEquip(5).name);
		}
		event.lt=[];
		for(var i=0;i<lts.length;i++) {
			event.lt.push(['宝物','',lts[i]]);
		}
		player.chooseCardButton(get.prompt2('XS_jiqiao'),trigger.cards).ai=function(button){
			var tri=_status.event.getTrigger();
			if(tri.cards.length>2) return false;
			for(var i=0;i<tri.cards.length;i++) {
				if(get.value(tri.cards[i])>6) return -10;
			}
			return 6-get.value(button.link);
		}
		"step 1"
		if(result.links){
			player.logSkill('XS_jiqiao');
			event.cds=result.links;
			var dialog=ui.create.dialog('将'+get.translation(event.cds)+'当作一张宝物牌置于1名角色装备区',[event.lt,'vcard'],'hidden');
            player.chooseButton(dialog,true).set('ai',function(button){
                return Math.random();
            });
		}
		else event.finish();
		"step 2"
		if(result.bool){
            event.name=result.buttons[0].link[2];
			player.chooseTarget('令1名角色装备'+get.translation(event.name),true,function(card,player,target){
				return target.isEmpty(5);
			}).set('ai',function(target){
				var att=get.attitude(player,target);
				if(!target.isEmpty(5)) att/=10;
				return att;
			});
        }
		"step 3"
		if(result.bool){
			var ca=event.cds[0];
			event.ca=[event.cds[0].name,event.cds[0].nature];
			ca.init(game.createCard(event.name,get.suit(event.cds[0]),get.number(event.cds[0])));
			ca.storage.orname=event.ca;
			game.storage.XS_jiqiao.push(ca);
			result.targets[0].equip(ca);
			player.$give(event.cds,result.targets[0],false);
			trigger.cards.remove(event.cds[0]);
			player.discard(trigger.cards);
        }
	},
	ai:{
		expose:0.3,
	},
	subSkill:{
		a:{
			sub:true,
			trigger:{
				player:"loseAfter",
			},
			priority:15,
			direct:true,
			forceDie:true,
			filter:function(event,player){
				if(event.getParent(2).name=="XS_jiqiao")return false;
				if((event.parent&&event.parent.name!='swapEquip')&&event.type!='equip'){
					for(var i=0;i<event.cards.length;i++){
						if(game.storage.XS_jiqiao.contains(event.cards[i]))return true;
					}
				}
			},
			content:function(){
				"step 0"
				for(var i=0;i<trigger.cards.length;i++){
					if(game.storage.XS_jiqiao.contains(trigger.cards[i])){
						game.storage.XS_jiqiao.remove(trigger.cards[i]);
						trigger.cards[i].init(game.createCard(trigger.cards[i].storage.orname[0],trigger.cards[i].suit,trigger.cards[i].number,trigger.cards[i].storage.orname[1]));
					}
				}
			},
		},
	},
},
"XS_tiandao":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:1,
	filter:function(event,player){
		return player.countCards('h');
	},
	filterCard:function(card){
		if(!ui.selected.cards.length) return true;
		else {
			var col=get.color(ui.selected.cards[0]);
			return get.color(card)==col;
		}
	},
	selectCard:function (){
		if(!ui.selected.cards.length) return [1,Infinity];
		else {
			var player=_status.event.player;
			var col=get.color(ui.selected.cards[0]);
			return player.countCards('h',{color:col});
		}
    },
	position:'h',
	check:function (card){
		return 6-get.value(card);
	},
	discard:false,
	content:function(){
		"step 0"
		event.col=get.color(cards[0]);
		player.chongzhuCards(cards.slice(0));
		"step 1"
		var str='令1名角色直到你下回合开始，受到的属性伤害+1。';
		if(event.col=='red') str='令1名角色直到你下回合开始，防止所受雷属性以外的伤害。';
		player.chooseTarget(get.prompt('XS_tiandao'),str,1,true,function(card,player,target){
			return true;
		}).ai=function(target){
			var att=get.attitude(player,target);
			if(event.col=='black') return -att+0.01;
			return att;
		}
		"step 2"
		if(result.bool) {
			if(event.col=='black') result.targets[0].addSkill('XS_tiandao_yin');
			else if(event.col=='red') result.targets[0].addSkill('XS_tiandao_yang');
			
		}
	},
	ai:{
		order:1,
		expose:0.3,
        threaten:1.2,
		result:{
			player:2,
		},
	},
	group:["XS_tiandao_remove"],
    subSkill:{
		remove:{
			onremove:function(player){
				game.countPlayer(function(current){
                    if(current.hasSkill('XS_tiandao_yin')){
                        current.removeSkill('XS_tiandao_yin');
                    }
					if(current.hasSkill('XS_tiandao_yang')){
                        current.removeSkill('XS_tiandao_yang');
                    }
				});
			},
            trigger:{
                player:["phaseBefore","dieBegin"],
            },
            direct:true,
            content:function (){
                for(var i=0;i<game.players.length;i++){
                    if(game.players[i].hasSkill('XS_tiandao_yin')){
                        game.players[i].removeSkill('XS_tiandao_yin');
                    }
					if(game.players[i].hasSkill('XS_tiandao_yang')){
                        game.players[i].removeSkill('XS_tiandao_yang');
                    }
                }
            },
			sub:true,
        },
		yin:{
			mark:true,
			marktext:"阴",
			intro:{
				content:function(storage,player,skill){
					return '受到的属性伤害+1';
				},
			},
			trigger:{
				player:"damageBegin3",
			},
			forced:true,
			filter:function (event){
				return event.nature;
			},
			content:function (){
				trigger.num++;
			},
			ai:{
				threaten:2,
				effect:{
					target:function (card,player,target,current){
						if(get.tag(card,'fireDamage')) return 2;
						if(get.tag(card,'thunderDamage')) return 2;
					},
				},
			},
			sub:true,
		},
		yang:{
			mark:true,
			marktext:"阳",
			intro:{
				content:function(storage,player,skill){
					return '免受雷属性以外的伤害';
				},
			},
			trigger:{
				player:"damageBefore",
			},
			filter:function (event){
				if(event.nature!='thunder') return true;
				return false;
			},
			forced:true,
			content:function (){
				trigger.cancel();
			},
			ai:{
				nofire:true,
				nodamage:true,
				effect:{
					target:function (card,player,target,current){
						if(get.tag(card,'damage')&&!get.tag(card,'thunderDamage')) return [0,0];
					},
				},
			},
			sub:true,
		},
    },
},
"XS_yingxu":{
 	audio:"ext:血色衣冠:2",
	trigger:{
		player:"phaseJieshuBegin",
	},
	filter:function (event,player){
		return player.countCards('h');
	},
	frequent:true,
	content:function (){
		"step 0"
		event.nm1=player.countCards('h',{color:'red'});
		event.nm2=player.countCards('h',{color:'black'});
		if(event.nm1!=event.nm2) player.draw();
		if(event.nm1>=event.nm2) {
			player.chooseTarget(get.prompt('XS_yingxu'),'令1名角色进行一次闪电效果的判定。',1,function(card,player,target){
				return true;
			}).ai=function(target){
				var eff=get.effect(target,{name:'shandian'},player,player);
				return eff;
			}
		}
		else event.goto(3);
		"step 1"
		if(result.bool) {
			event.tar=result.targets[0];
			event.tar.judge('盈虚',function(card){
				if(get.suit(card)=='spade'&&get.number(card)>1&&get.number(card)<10) return -6;
				return 0;
			});
		}
		else event.goto(3);
		"step 2"
		if(result.bool==false){
			event.tar.damage(3,'thunder','nosource');
		}
		"step 3"
		if(event.nm1<=event.nm2) {
			player.addTempSkill('XS_yingxu_bagua',{player:'phaseBefore'});
		}
	},
    subSkill:{
		bagua:{
			charlotte:true,
			equipSkill:true,
			noHidden:true,
			inherit:'bagua_skill',
			filter:function(event,player){
				if(!lib.skill.bagua_skill.filter(event,player)) return false;
				return true;
			},
			ai:{
				respondShan:true,
				effect:{
					target:function(card,player,target){
						if(player==target&&get.subtype(card)=='equip2'){
							if(get.equipValue(card)<=7.5) return 0;
						}
						return lib.skill.bagua_skill.ai.effect.target.apply(this,arguments);
					}
				}
			},
			sub:true,
        },
    },
},
"XS_xuezhan":{
	trigger:{
		player:"phaseDiscardBefore",
	},
	filter:function (event,player){
        return player.isDamaged();
    },
	check:function (event,player){
        if(player.needsToDiscard()&&player.maxHp>1) return true;
        return false;
    },
                content:function (){
        player.loseMaxHp();
        trigger.cancel();
    },
                group:["XS_xuezhan_one"],
                subSkill:{
                    one:{
                        audio:2,
                        trigger:{
                            player:"phaseJieshuBegin",
                        },
                        filter:function (event,player){
                if(player.maxHp==1) return true;
                return false;
            },
                        forced:true,
                        content:function (){
                player.draw();
            },
                        sub:true,
                        ai:{
                            threaten:1.2,
                        },
                    },
                },
            },
"XS_xiaoyong":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:["phaseBefore","changeHp"],
	},
	direct:true,
	derivation:["XS_jiqu","XS_xianzhen","XS_shenjiang"],
	content:function (){
        player.removeAdditionalSkill('XS_xiaoyong');
        var list=[];
        if(player.hp<=3){
            list.push('XS_jiqu');
        }
        if(player.hp<=2){
            list.push('XS_xianzhen');
        }
        if(player.hp<=1){
            list.push('XS_shenjiang');
        }
        if(list.length){
			player.logSkill('XS_xiaoyong');
            player.addAdditionalSkill('XS_xiaoyong',list);
        }
    },
	ai:{
		maixie:true,
		effect:{
			target:function (card,player,target){
                if(get.tag(card,'damage')){
                    if(!target.hasFriend()) return;
                    if(target.hp>=4) return [0,1];
                }
                if(get.tag(card,'recover')&&player.hp>=player.maxHp-1) return [0,0];
            },
		},
	},
},
"XS_xianzhen":{
	trigger:{
		target:"useCardToBefore",
	},
	direct:true,
	priority:-1,
	filter:function (event,player){
        return event.card.name=='sha';
    },
	content:function (){
        'step 0'
        player.chooseControl('draw_card','使用杀','cancel2').set('prompt',get.prompt2('XS_xianzhen'));
        'step 1'
        if(result.control&&result.control!='cancel2'){
			player.logSkill('XS_xianzhen');
            if(result.control=='draw_card'){
                player.draw();
            }
            else{
                player.useCard({name:'sha',isCard:true},trigger.player,false);
            }
        }
    },
	ai:{
		expose:0.2,
    },
},
"XS_moshou":{
	audio:"ext:血色衣冠:2",
	mod:{
		targetInRange:function(card,player,target){
			if(player.hasSkill('XS_moxin_temp1')&&get.color(card)=='red') return true;
			if(player.hasSkill('XS_moxin_temp2')&&get.color(card)=='black') return true;
		},
		cardUsable:function(card,player,num){
			if(player.hasSkill('XS_moxin_temp1')&&get.color(card)=='red') return Infinity;
			if(player.hasSkill('XS_moxin_temp2')&&get.color(card)=='black') return Infinity;
		},
	},
	trigger:{
		source:"damageBefore",
	},
	filter:function (event,player){
		if(!event.card||event.num<=0) return false;
		if(player.hasSkill('XS_moxin_temp1')&&get.color(event.card)=='red') return true;
		if(player.hasSkill('XS_moxin_temp2')&&get.color(event.card)=='black') return true;
		return false;
	},
	priority:44,
	forced:true,
	content:function (){
		"step 0"
		if(player.hasSkill('XS_moxin_temp1')) player.removeSkill('XS_moxin_temp1');
		else player.removeSkill('XS_moxin_temp2');
		"step 1"
		trigger.cancel();
	},
},
"XS_moxin":{
	audio:"ext:血色衣冠:2",
	group:["XS_moxin1","XS_moxin2"],
	subSkill:{
		temp1:{
			charlotte:true,
			mark:true,
			intro:{
				content:function (storage,player,skill){
					return '“墨心”失效效果：你可弃置1张红色牌令1名角色体力回复值+1</br>你使用红色牌无距离、次数限制，且使用红色牌造成伤害时防止之，并恢复“墨心”对应效果';
				},
			},
		},
		temp2:{
			charlotte:true,
			mark:true,
			intro:{
				content:function (storage,player,skill){
					return '“墨心”失效效果：你可弃置1张黑色牌取消1张杀的1个目标</br>你使用黑色牌无距离、次数限制，且使用黑色牌造成伤害时防止之，并恢复“墨心”对应效果';
				},
			},
		},
	},
},
"XS_moxin1":{
	trigger:{
        global:"recoverBegin",
    },
	filter:function(event,player){
		return !player.hasSkill('XS_moxin_temp1')||(player.hasSkill('XS_moxin_temp1')&&player.countCards('he',{color:'red'}));
	},
	direct:true,
    content:function (){
        "step 0"
		player.chooseBool(get.prompt('XS_moxin',trigger.player),'你可弃置红色牌令'+get.translation(trigger.player)+'的体力回复值+1。').set('ai',function(){
			var tri=_status.event.getTrigger();
			var att=get.attitude(player,tri.player);
			return att>0&&tri.num<tri.player.getDamagedHp();
		});
		"step 1"
		if(result.bool) {
			player.logSkill('XS_moxin',trigger.player);
			var str='弃置1张红色牌，否则令你“墨心”的另一项效果失效',bl=false;
			if(player.hasSkill('XS_moxin_temp1')) {
				str='弃置1张红色牌';
				bl=true;
			}
			player.chooseToDiscard(str,1,'he',bl,function(card){
				return get.color(card)=='red';
			}).set('ai',function(card){
				return 7-get.value(card);
			});
		}
		else event.finish();
		"step 2"
		if(!result.bool) {
			player.addSkill('XS_moxin_temp2');
		}
		"step 3"
		trigger.num++;
    },
    ai:{
        expose:0.3,
    },
},
"XS_moxin2":{
	trigger:{
        global:"useCardBegin",
    },
	filter:function(event,player){
		if(event.card.name!='sha') return false;
		return !player.hasSkill('XS_moxin_temp2')||(player.hasSkill('XS_moxin_temp2')&&player.countCards('he',{color:'black'}));
	},
	direct:true,
    content:function (){
        "step 0"
		player.chooseBool(get.prompt('XS_moxin',trigger.player),'你可弃置1张黑色牌取消'+get.translation(trigger.player)+'使用的杀的1个目标（'+get.translation(trigger.targets)+'）。').set('ai',function(){
			var tri=_status.event.getTrigger();
			for(var i=0;i<tri.targets.length;i++) {
				if(get.effect(tri.targets[i],tri.card,tri.player,player)<0) return true;
			}
			return false;
		});
		"step 1"
		if(result.bool) {
			player.logSkill('XS_moxin',trigger.player);
			var str='弃置1张黑色牌，否则令你“墨心”的另一项效果失效',bl=false;
			if(player.hasSkill('XS_moxin_temp1')) {
				str='弃置1张黑色牌';
				bl=true;
			}
			player.chooseToDiscard(str,1,'he',bl,function(card){
				var tri=_status.event.getTrigger();
				return get.color(card)=='black'&&!tri.cards.contains(card);
			}).set('ai',function(card){
				return 7-get.value(card);
			});
		}
		else event.finish();
		"step 2"
		if(!result.bool) {
			player.addSkill('XS_moxin_temp1');
		}
		"step 3"
		player.chooseTarget('取消1名角色成为'+get.translation(trigger.player)+'使用的'+get.translation(trigger.card)+'的目标？',1,true,function(card,player,target){
			var trigger=_status.event.getTrigger();
			return trigger.targets.contains(target);
		}).set('ai',function(target){
			var trigger=_status.event.getTrigger();
			return -get.effect(target,trigger.card,trigger.player,player);
		});
		"step 4"
		if(result.bool) {
			trigger.targets.remove(result.targets[0]);
		}
    },
    ai:{
        expose:0.3,
    },
},
"XS_yuchang":{
	enable:"phaseUse",
	usable:1,
	filterCard:function (card){
        return true;
    },
	position:"h",
	filterTarget:function (card,player,target){
        return target!=player;
    },
	check:function (card){
        return 5-get.value(card);
    },
	discard:false,
	prepare:"give2",
	content:function (){
        target.gain(cards,player);
    },
	ai:{
		order:8,
		expose:0.2,
		result:{
			target:function (player,target){
                if(ui.selected.cards.length){
                    if(target.countCards('h')<player.countCards('h')) return -1;
                    return -0.5;
                }
                return -1.2;
            },
		},
	},
	group:["XS_yuchang_mark"],
	subSkill:{
		mark:{
			trigger:{
				global:"gainEnd",
			},
			forced:true,
			popup:false,
			filter:function (event,player){
				return event.source==player&&event.player!=player&&event.cards;
			},
			content:function (){
				"step 0"
				if(!trigger.player.hasSkill('XS_yuchanglose')) {
					trigger.player.addSkill('XS_yuchanglose');
				}
				"step 1"
				var mark=false;
				for(var i=0;i<trigger.player.storage.XS_yuchanglose.length;i++) {
					if(trigger.player.storage.XS_yuchanglose[i].pl==player) {
						mark=true;
						trigger.player.storage.XS_yuchanglose[i].cards.push(...trigger.cards);
					}
				}
				if(mark==false) {
					var lt={
						pl:player,
						cards:[],
					}
					lt.cards.push(...trigger.cards)
					trigger.player.storage.XS_yuchanglose.add(lt);
				}
			},
			sub:true,
		},
	},
},
"XS_yuchanglose":{
	charlotte:true,
	trigger:{
		player:["loseEnd"],
	},
	init:function (player){
		player.storage.XS_yuchanglose=[];
	},
	forced:true,
	filter:function (event,player){
		if(player.storage.XS_yuchanglose.length==0) return false;
		var tp=player.storage.XS_yuchanglose;
		for(var i=0;i<tp.length;i++) {
			for(var j=0;j<event.cards.length;j++) {
				if(tp[i].cards.contains(event.cards[j])) return true;
			}
		}
		return false;
	},
	content:function (){
		'step 0'
		var drawlist=[];
		var tp=player.storage.XS_yuchanglose,cds=trigger.cards;
		for(var i=0;i<tp.length;i++) {
			for(var j=0;j<cds.length;j++) {
				if(tp[i].cards.contains(cds[j])) {
					if(!drawlist.contains(tp[i].pl)) drawlist.push(tp[i].pl);
					tp[i].cards.remove(cds[j]);
				}
			}
		}
		if(drawlist.length) {
			for(var i=0;i<drawlist.length;i++) {
				drawlist[i].draw();
				player.damage(1,'nocard',drawlist[i]);
			}
		}
	},
},
"XS_cuidu":{
	trigger:{
		source:"damageEnd",
	},
	priority:2,
	filter:function (event,player){
        return event.card&&event.card.name=='sha'&&event.notLink();
	},
	forced:true,
	content:function (){
		"step 0"
		if(player.countCards('h','du')) {
			player.chooseCard('h','淬毒：交给'+get.translation(trigger.player)+'一张毒',{name:'du'},true).ai=function(card){
				return true;
			}
		}
		else {
			var card=get.cardPile('du');
			if(card){
				trigger.player.gain(card,'gain2');
				game.log(trigger.player,'从牌堆获得了',card);
			}
			else {
				var suit=['club','heart','diamond','spade'].randomGet();
				var num=[1,2,3,4,5,6,7,8,9,10,11,12,13].randomGet();
				trigger.player.gain(game.createCard('du',suit,num),'gain2');
			}
			event.finish();
		}
		"step 1"
        if(result.bool){
			trigger.player.gain(result.cards[0],player,'giveAuto');
        }
	},
	ai:{
		threaten:1.1,
	},
},
"XS_shangcai":{
	enable:"phaseUse",
	filterCard:function(card){
		var num=0;
		for(var i=0;i<ui.selected.cards.length;i++){
			num+=get.number(ui.selected.cards[i]);
		}
		return get.number(card)+num<=13;
	},
	complexCard:true,
	selectCard:function(){
		var num=0;
		for(var i=0;i<ui.selected.cards.length;i++){
			num+=get.number(ui.selected.cards[i]);
		}
		if(num<13) return [ui.selected.cards.length,ui.selected.cards.length+2];
		else if(num==13) return ui.selected.cards.length;
		return ui.selected.cards.length+2;
	},
	discard:false,
	lose:false,
	delay:false,
	filterTarget:function(card,player,target){
		return player!=target;
	},
	check:function(card){
		var player=_status.event.player;
		if(player.countCards('h','du')) return -get.value(card);
		return 6-get.value(card);
	},
	usable:1,
	position:"h",
	filter:function (event,player){
		return player.countCards('h');
	},
    content:function (){
		"step 0"
		target.gain(cards,player,'giveAuto');
		event.nm=cards.length;
		event.pla=player;
		target.chooseControlList(['令'+get.translation(player)+'摸'+(event.nm+1)+'张牌','令'+get.translation(player)+'接下来对你使用的前'+event.nm+'张牌不计次数、伤害值+1'],true).set('ai',function(event,player){
            return 0;
        }).set('prompt','请选择1项');
		"step 1"
		if(result.index==0){
			player.draw(event.nm+1);
        }
        else if(result.index==1){
			target.addSkill('XS_shangcai1');
			target.storage.XS_shangcai1=event.nm;
			target.storage.XS_shangcai1_a=player;
        }
    },
    ai:{
        order:9,
		result:{
			target:function(player,target){
				if(player.countCards('h','du')) return -10;
				return 1;
			},
        },
        expose:0.3,
    },
	group:["XS_shangcai_clear"],
	subSkill:{
        clear:{
            trigger:{
                player:["phaseAfter","dieBegin"],
            },
			direct:true,
            content:function (){
				var plas=game.players.slice(0);
				for(var i=0;i<plas.length;i++) {
					if(plas[i].hasSkill('XS_shangcai1')) plas[i].removeSkill('XS_shangcai1');
				}
            },
            sub:true,
        },
	},
},
"XS_shangcai1":{
	onremove:function(player){
		delete player.storage.XS_shangcai1;
		delete player.storage.XS_shangcai1_a;
		player.unmarkSkill('XS_shangcai1');
	},
	mark:true,
	intro:{
		content:function (storage,player,skill){
			return '欠债还钱，天经地义！'+get.translation(player.storage.XS_shangcai1_a)+'对你使用的下<span class="bluetext"> '+player.storage.XS_shangcai1+' </span>张牌不计次数、伤害值+1';
		},
	},
	charlotte:true,
	trigger:{
		player:"damageBegin",
	},
	filter:function (event,player){
        return event.card&&event.source&&event.source==player.storage.XS_shangcai1_a&&player.storage.XS_shangcai1>0;
    },
	forced:true,
	silent:true,
	priority:84,
	content:function (){
		trigger.num++;
    },
	group:["XS_shangcai1_count"],
	subSkill:{
		count:{
			trigger:{
				global:"useCardAfter",
			},
			priority:-975,
			direct:true,
			filter:function (event,player){
				return event.player==player.storage.XS_shangcai1_a&&event.targets.contains(player);
			},
			priority:-2,
			content:function (){
				if(trigger.addCount!==false){
					trigger.addCount=false;
					if(player.storage.XS_shangcai1_a.stat[player.stat.length-1].card[trigger.card.name]>0){
						player.storage.XS_shangcai1_a.stat[player.stat.length-1].card[trigger.card.name]--;
					}
				}
				player.storage.XS_shangcai1--;
				player.syncStorage('XS_shangcai1');
				if(player.storage.XS_shangcai1<=0) player.removeSkill('XS_shangcai1');
			},
            sub:true,
        },
    },
	ai:{
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')&&target.hasSkill('XS_shangcai1')&&player==target.storage.XS_shangcai1_a&&target.storage.XS_shangcai1>0) return [1,-2];
			},
		},
	},
},
"XS_zhouyin":{
	trigger:{
		global:"useCardAfter",
	},
	frequent:true,
	filter:function (event,player){
		if(!get.tag(event.card,'damage')) return false;
		if(!event.targets.contains(player)) return false;
		return (event.player!=player&&get.itemtype(event.cards)=='cards'&&get.position(event.cards[0],true)=='o');
	},
	priority:-2,
	content:function (){
		player.gain(trigger.cards,'gain2');
	},
	group:["XS_zhouyin_dis"],
    subSkill:{
        dis:{
			sub:true,
			trigger:{
				player:"phaseJieshuBegin",
			},
			direct:true,
			priority:7,
			content:function (){
				var cds=player.getCards('h'),todis=[];
				for(var i=0;i<cds.length;i++) {
					if(get.tag(cds[i],'damage')) todis.push(cds[i]);
				}
				if(!todis.length) event.finish();
				else {
					player.logSkill('XKduanyilianshen');
					player.chongzhuCards(todis);
				}
			},
        },
    },
},
"XS_weiya":{
	audio:"ext:血色衣冠:2",
	mod:{
		maxHandcard:function (player,num){
			var nm=game.countPlayer(function(current){
				return current!=player&&current.hp<player.hp&&!current.hasSkill('XS_sutan_temp');
			});
			return num+nm;
		},
	},
	trigger:{
		player:"phaseDrawBegin1",
	},
	forced:true,
	content:function (){
		trigger.num++;
	},
	global:"XS_weiya_ya",
},
"XS_weiya_ya":{
	mod:{
		maxHandcard:function (player,num){
			if(!player.hasSkill('XS_sutan_temp')) {
				if(game.countPlayer(function(current){
					return current.hasSkill('XS_weiya')&&current.hp>player.hp
				})>0) return num-1;
			}
		},
	},
},
"XS_zhulu":{
    trigger:{
        global:["useCardAfter"],
    },
    filter:function (event,player){
		if(event.getParent().name=='XS_zhulu') return false;
		if(!get.tag(event.card,'damage')||!event.targets.length) return false;
		return player.countCards('h',{type:'basic'});
    },
    direct:true,
    content:function (){
		"step 0"
		player.chooseCardTarget({
			filterCard:function(card){return get.type(card)=='basic';},
			position:"h",
			selectCard:1,
			selectTarget:1,
			filterTarget:function(card,player,target){
				var trigger=_status.event.getTrigger();
				return trigger.targets.contains(target);
			},
			ai1:function(card){
				if(get.color(card)=='red') return 7.5-get.value(card);
				return 6-get.value(card);
			},
			ai2:function(target){
				var player=_status.event.player;
				return eff=get.effect(target,{name:'sha'},player,player);;
			},
			prompt:'是否发动【逐虏】？</br></br>1名角色不因此技能使用带有伤害标签的牌结算完成后，你可弃置1张基本牌视为对其中1名目标使用1张杀，若此牌为红色，其伤害基数+1'
		});
		"step 1"
		if(result.bool){
			event.add=false;
			player.logSkill('XS_zhulu',result.targets[0]);
			player.discard(result.cards[0]);
			player.useCard({name:'sha',isCard:true},result.targets[0]);
			if(get.color(result.cards[0])=='red') event.add=true;
		}
    },
    ai:{
        expose:0.4,
    },
	group:["XS_zhulu_dam"],
	subSkill:{
		dam:{
			trigger:{
				player:["shaBegin"],
			},	
			priority:378,
			direct:true,
			filter:function (event,player){
				return event.getParent(2)&&event.getParent(2).name=='XS_zhulu'&&event.getParent(2).add;
			},
			content:function (){
				trigger.baseDamage++;
			},
		},
	},
},
"XS_lingzhi":{
	trigger:{player:'discardBefore'},
	firstDo:true,
	filter:function (event,player){
		if(player.hasSkill('XS_lingzhi_temp')) return false;
		var cds=event.cards;
		for(var i=0;i<cds.length;i++) {
			if(get.position(cds[i])=='h') return true;
		}
		return false;
	},
	check:function (event,player){
		var cds=event.cards,gain=[],val=0;
		for(var i=0;i<cds.length;i++) {
			if(get.position(cds[i])=='h') {
				gain.push(cds[i]);
				val+=get.value(cds[i]);
			}
		}
		return cds.length>2||val>8;
	},
	"prompt2":function (event,player){
		var cds=event.cards,gain=[];
		for(var i=0;i<cds.length;i++) {
			if(get.position(cds[i])=='h') {
				gain.push(cds[i]);
			}
		}
		return '是否防止你弃置'+get.translation(gain)+'?';
	},
	content:function(){
		for(var i=0;i<trigger.cards.length;i++) {
			if(get.position(trigger.cards[i])=='h') trigger.cards.splice(i--,1);
		}
		player.addTempSkill('XS_lingzhi_temp','roundStart');
	},
	group:["XS_lingzhi_rec"],
	subSkill:{
        rec:{
			trigger:{player:'loseAfter'},
			forced:true,
			silent:true,
			filter:function(event,player){
				if(player.countCards('h')) return false;
				return event.hs&&event.hs.length>0&&player.hasSkill('XS_lingzhi_temp');
			},
			content:function(){
				player.removeSkill('XS_lingzhi_temp');
			},
			ai:{
				noh:true,
				skillTagFilter:function(player,tag){
					if(player.countCards('h')!=1||!player.hasSkill('XS_lingzhi_temp')) return false;
				}
			}
		},
		temp:{
			charlotte:true,
        },
    },
},
"XS_bianfa":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	complexCard:true,
	multitarget:true,
	multiline:true,
	position:"he",
	usable:1,
	filter:function (event,player){
		return player.countCards("he");
	},
	selectCard:[1,Infinity],
	filterCard:function (card,player){
		if(ui.selected.cards.length){
			return get.suit(card)==get.suit(ui.selected.cards[0]);
		}
		return true;
	},
	selectTarget:function (card){
		if(ui.selected.targets.length>ui.selected.cards.length){
			game.uncheck('target');
		}
		return [1,ui.selected.cards.length];
	},
	filterTarget:function (card,player,target){
		return target!=player&&target.countCards('he');
	},
	check:function (card){
		return 6-ai.get.value(card);
	},
	prepare:function (cards,player,targets){
		player.line(targets);
	},
	content:function (){
		"step 0"
		event.nm=cards.length;
		event.st=get.suit(cards[0]);
		player.chongzhuCards(cards);
		"step 1"
		game.delay();
		event.mk=false;
		var tars=targets.slice(0);
		event.tars=tars.sort(lib.sort.seat);
		"step 2"
		if(event.tars.length){
			var target=event.tars.shift();
			event.current=target;
		}
		else event.goto(5);
		"step 3"
		if(event.current){
			var cds=event.current.getCards('he',{suit:event.st}),str='（无）';
			if(cds.length) str='（'+get.translation(cds)+'）';
			event.current.chooseBool('是否重铸你所有花色为'+get.translation(event.st)+'的牌？'+str).set('ai',function(){
				var num1=event.current.countCards('he',{suit:event.st})+0.1;
				var num2=get.value(event.current.getCards('he',{suit:event.st}))/num1;
				if(num2>4.5||event.current.hasSkill('XKzhuoying')) return 1;
				return 0;
			});
		}
		else event.goto(5);
		"step 4"
		if(result.bool&&event.current.countCards('he',{suit:event.st})){
			event.mk=true;
			var cds=event.current.getCards('he',{suit:event.st});
			event.current.chongzhuCards(cds);
		}
		event.goto(2);
		"step 5"
		if(!event.mk) player.draw();
	},
	ai:{
		order:9,
		expose:0.3,
		result:{
			target:-1,
		},
	},
},
"XS_yizhi":{
	audio:"ext:血色衣冠:2",
	countSuits:function (cards){
		var map={},suitslist=[];
		for(var i=0;i<cards.length;i++) {
			var key=get.suit(cards[i]);
			if(map[key]) {
				map[key] += 1
			} else {
				map[key] = 1
			}
		}
		for(let key in map) {
			if(map[key]>=2) {
				suitslist.push(key);
			}
		}
		return suitslist;
	},
	trigger:{
		player:["loseEnd"],
	},
	forced:true,
	filter:function (event,player){
		return lib.skill.XS_yizhi.countSuits(event.cards).length>0;
	},
	content:function (){
		//game.log(player.getStat().skill.XS_bianfa);
		var list=lib.skill.XS_yizhi.countSuits(trigger.cards);
		for(var i=0;i<list.length;i++) {
			switch(list[i]){
				case 'heart':player.recover();break;
				case 'spade':
					player.loseHp();
					player.draw(3);
				break;
				case 'club':
					if(player.getStat().skill.XS_bianfa>0) {
						player.getStat().skill.XS_bianfa--;
					}	
				break;
				case 'diamond':
					player.chooseUseTarget({name:"sha"},'nodistance',false);
				break;
			}
		}
	},
},
"XS_weijia":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:"phaseJieshuBegin",
	},
	check:function (event,player){
		return get.attitude(player,event.player)<0;
	},
	logTarget:'player',
	filter:function (event,player){
        return event.player!=player&&event.player.countCards('h')>player.hp&&event.player.countGainableCards(player,'h')>0;;
    },
	content:function (){
        player.gainPlayerCard('获得'+get.translation(trigger.player)+'的1张手牌','h',trigger.player,true);
    },
	ai:{
		threaten:function (player,target){
            if(player.hp>=4) return 0.8;
            if(player.hp==3) return 1.1;
            if(player.hp==2) return 1.2;
            return 1.5;
        },
	},
},
"XS_jianyi":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:1,
	init:function (player){
        player.storage.XS_jianyi=[];
        player.storage.XS_jianyi2=[];
    },
	filterTarget:function (card,player,target){
        if(player==target) return false;
        return true;
    },
	content:function (){
	   "step 0"
		player.chooseControl('失去体力','弃牌',function(event,player){
			if(player.hp>2) return '失去体力';
			if(player.countCards('he')>3) return '弃牌';
			return '弃牌';
		}).set('prompt','翦异：失去1点体力或弃置两张牌');
		"step 1"
		if(result.control=='失去体力'||player.countCards('he')<2){
			player.storage.XS_jianyi='losehp';
			player.loseHp();
		}
		else{
			player.chooseToDiscard('he',2,true);
			player.storage.XS_jianyi='discard';
		}
		"step 2"
		target.chooseControl('失去体力','弃牌',function(event,player){
			if(target.hp>2) return '失去体力';
			if(target.countCards('he')>3) return '弃牌';
			return '弃牌';
		}).set('prompt','翦异：失去1点体力或弃置两张牌');
		"step 3"
		if(result.control=='失去体力'||target.countCards('he')<2){
			player.storage.XS_jianyi2='losehp';
			target.loseHp();
		}
		else{
			target.chooseToDiscard('he',2,true);
			player.storage.XS_jianyi2='discard';
		}
		"step 4"
		if(player.storage.XS_jianyi!=player.storage.XS_jianyi2){
			//if(lib.filter.targetEnabled({name:'sha'},player,target)) {
			player.useCard({name:'sha',isCard:true},target,false);
			//}	
			player.storage.XS_jianyi=[];
			player.storage.XS_jianyi2=[];
		}
    },
	ai:{
		expose:0.2,
		order:8,
		result:{
			player:function (player,target){
				if(player.hp>=target.hp) return -0.9;
				if(player.hp<=2) return -10;
				return -2;
			},
			target:function (player,target){
				if(target.hp<2) return -10;
				if(player.hp==2&&target.hp>=2) return -3;
				return -2;
			},
		},
		threaten:1.2,
	},
},
"XS_zhisheng":{
    audio:"ext:血色衣冠:2",
	trigger:{
		player:"compare",
		target:"compare",
	},
	filter:function (event,player){
		return !event.iwhile;
	},
	frequent:true,
	content:function (){
		"step 0"
		player.chooseControl('视为1','视为K','取消').set('prompt','使你的拼点点数视为').ai=function(event){
			var trigger=_status.event.getTrigger();
			var player=_status.event.player;
			if(trigger.parent.name=='XS_renli') {
				if(!player.isDamaged()) return '视为1';
			}
			return '视为K';
		};
		"step 1"
		if(result.control=='视为1'){
			game.log(player,'拼点牌点数视为','#y1');
			if(player==trigger.player){
				trigger.num1=1;
			}
			else{
				trigger.num2=1;
			}
		}
		else{
			game.log(player,'拼点牌点数视为','#y13');
			if(player==trigger.player){
				trigger.num1=13;
			}
			else{
				trigger.num2=13;
			}
		}
	},
},
"XS_renli":{
	usable:1,
	audio:"ext:血色衣冠:2",
    trigger:{
        global:"damageAfter",
    },
	check:function (event,player){
		var att=get.attitude(player,event.source);
		if(att<=0) return event.source.isHealthy();
		return true;
	},
	filter:function (event,player){
		if(!event.source||event.source==player) return false;
		return player.countCards('h')&&event.source.countCards('h');
	},
	logTarget:'source',
	content:function (){
        "step 0"
		player.chooseToCompare(trigger.source);
		"step 1"
		if(result.bool){
			event.rc=player;
			event.dw=trigger.source;
			event.goto(3);
		}
		else {
			if(result.num1==result.num2) {
				player.chooseControl('回复1点体力','摸1张牌').ai=function(){
					return player.isDamaged()?'回复1点体力':'摸1张牌';
				};
			}
			else {
				event.dw=player;
				event.rc=trigger.source;
				event.goto(3);
			}
		}
		"step 2"
		if(result.control=='回复1点体力'){
			event.rc=player;
			event.dw=trigger.source;
		}
		else {
			event.dw=player;
			event.rc=trigger.source;
		}
		"step 3"
		event.rc.recover();
		event.dw.draw();
    },
	ai:{
		expose:0.4,
	},
},
"XS_huahu":{
	audio:"ext:血色衣冠:2",
	trigger:{
        global:"useCard2",
    },
    filter:function (event,player){
		if(event.player==player||get.type(event.card)!='trick') return false;
		var info=get.info(event.card);
		if(info.selectTarget&&info.selectTarget==2) return false;
		if(info.notarget) return false;
		return !event.targets.contains(player);
    },
	"prompt2":function (event,player){
		return '是否令你也成为'+get.translation(event.player)+'使用的'+get.translation(event.card)+'的目标？';
    },
	logTarget:'player',
	check:function (event,player){
		return get.effect(player,event.card,event.player,player)>0;
	},
    content:function (){
		game.log(player,'成为了',trigger.player,'使用的',trigger.card,'的额外目标');
		trigger.targets.add(player);
    },
},
"XS_shangshan":{
	audio:"ext:血色衣冠:2",
	enable:["chooseToUse","chooseToRespond"],
	filter:function (event,player){
		if(!game.hasPlayer(function(current){
			return current.countCards('h')==1;
		})) return false;
		if(event.filterCard({name:'sha'},player,event)||event.filterCard({name:'shan'},player,event)) return true;
		return false;
	},
	hiddenCard:function(player,name){
		if(game.hasPlayer(function(current){
			return current.countCards('h')==1;
		})&&(['sha','shan'].contains(name))) return true;
		return false;
	},
	chooseButton:{
		dialog:function (event,player){
			var list=[],str='杀';
			if(event.filterCard({name:'sha'},player,event)) list.push(['基本','','sha']);
			if(event.filterCard({name:'shan'},player,event)) {
				str='闪'
				list.push(['基本','','shan']);
			}
			return ui.create.dialog("将一名角色最后一张手牌当作一张"+str+"使用或打出，并令其摸2张牌",[list,"vcard"],"hidden");
		},
		check:function (button){
			var player=_status.event.player,name=button.link[2];
			if(name=='shan') return 10;
			else if(game.hasPlayer(function(current){
				var att=get.attitude(player,current);
				return current.countCards('h')&&att>0;
			})) return 5;
			return 0;
		},
		backup:function (links,player){
			return {
				filterCard:function (card){
					return false;
				},
				popname:true,
				selectCard:-1,
				check:function(card,player,target){return true;},
				viewAs:{
					name:links[0][2],
				}, 
				precontent:function(){
					'step 0'
					player.chooseTarget('选择将其最后1张手牌当作'+get.translation(event.result.card)+'使用的角色，并令其摸2张牌',1,true,function(card,player,target){
						return target.countCards('h')==1;
					}).set('ai',function(target){
						var att=get.attitude(player,target);
						return att;
					});
					'step 1'
					if(result.bool){
						player.logSkill('XS_shangshan',result.targets[0]);
						var cds=result.targets[0].getCards('h');
						event.result.cards=cds;
						result.targets[0].draw(2);
					}
					else event.finish();
				},
			}
		},
		prompt:function (links,player){
			return '视为使用1张'+get.translation(links[0][2]);
		},
	},
	ai:{
		order:9,
		respondSha:true,
		respondShan:true,
		skillTagFilter:function (player,tag,arg){
			if(!game.hasPlayer(function(current){
				return current.countCards('h')==1;
			})) return false;
		},
		result:{
			player:1,
		},
	},
},
"XS_sutan":{
	audio:"ext:血色衣冠:2",
	unique:true,
	zhuSkill:true,
    enable:"phaseUse",
    usable:1,
    filterTarget:function (card,player,target){
        return target!=player&&target.countCards('h')&&target.group==player.group;
    },
	filter:function (event,player){
		if(!player.hasZhuSkill('XS_sutan')) return false;
        return game.hasPlayer(function(current){
            return current!=player&&current.countCards('h');
        });
    },
    selectTarget:1,
    content:function (){
        "step 0"
		target.addSkill('XS_sutan_temp');
		player.chooseCardButton('肃贪：你可重铸'+get.translation(target)+'任意张手牌',target.getCards('h'),[1,Infinity],false).ai=function(button){
			var att=get.attitude(player,target);
			if(att>0) {
				return 4-get.value(button.link);
			}
			else return get.value(button.link)-5;
		}
		"step 1"
		if(result.bool){
			var cards=result.links;
			target.chongzhuCards(cards);
		}
    },
    ai:{
		order:9,
		expose:0.2,
		result:{
			target:-1,
		},
    },
	group:["XS_sutan_clear"],
    subSkill:{
        clear:{
			trigger:{
				player:"phaseBefore",
			},
			priority:12,
			direct:true,
            content:function (){
                for(var i=0;i<game.players.length;i++){
                    if(game.players[i].hasSkill('XS_sutan_temp')){
                        game.players[i].removeSkill('XS_sutan_temp');
                    }
                }
            },
			sub:true,
        },
		temp:{
			charlotte:true,
			sub:true,
        },
    },
},
"XS_mocu":{
	trigger:{
		source:"damageBegin3",
	},
	filter:function (event){
		return event.card&&event.card.name=='sha'&&event.notLink();
	},
	audio:"ext:血色衣冠:2",
	logTarget:'player',
	check:function(event,player){
		return get.attitude(player,event.player)<0;
	},
	"prompt2":function (event,player){
		return '是否进行1次判定？若结果为黑色，你对'+get.translation(event.player)+'造成的伤害+1，否则你可弃置1张黑色手牌令伤害+1。';
	},
	content:function (){
		"step 0"
		player.judge('没簇',function(card){
			if(get.color(card)=='black') return 3;
			return -3;
		});
		"step 1"
		if(result.bool==true){
			trigger.num++;
			event.finish();
		}
		else {
			event.goto(2);
		}
		"step 2"
		var goon=(get.attitude(player,trigger.player)<0);
		var next=player.chooseToDiscard(get.prompt('XS_mocu',trigger.player));
		next.set('filterCard',function(card){
			return get.color(card)=='black';
		});
		next.set('prompt2','弃置一张黑色手牌令伤害+1');
		next.set('ai',function(card){
			if(_status.event.goon){
				return 8-get.value(card);
			}
			return 0;
		});
		next.set('goon',goon);
		'step 3'
		if(result.bool){
			trigger.num++;
		}
	},
	ai:{
		damageBonus:true,
	},
},
"XS_feijiang":{
	mod:{
		globalFrom:function (from,to,current){
			if(from.hp>2) return current-1;
		},
		globalTo:function (from,to,current){
			if(to.hp<=2) return current+1;
		},
	},
	trigger:{
		player:"shaBegin",
	},
	audio:"ext:血色衣冠:2",
	forced:true,
	filter:function (event,player){
		var nm=player.getAttackRange();
        return get.distance(player,event.target)<nm;
    },
	content:function (){
        trigger.directHit=true;
    },
	ai:{
		threaten:1.1,
	},
},
"XS_youdi":{
	priority:15,
    trigger:{
        global:["shaBefore"],
    },
    filter:function (event,player){
		if(event.player==player) return false;
        return player.countCards('he')&&!event.targets.contains(player);
    },
	direct:true,
    content:function (){
        "step 0"
		player.chooseToDiscard(get.prompt2('XS_youdi',trigger.player),'he',false,1,function(card){
			return true;
		}).set('ai',function(card){
			var tri=_status.event.getTrigger();
			if(get.attitude(player,tri.target)<=0) return -1;
			return 6.5-get.value(card);;
		});
        "step 1"
		if(result.bool){
			player.logSkill('XS_youdi',trigger.player);
			trigger.player.line(player,'green');
            trigger.targets.remove(trigger.target);
			trigger.targets.push(player);
			trigger.target=player;
        }
		else event.finish();
        "step 2"
		trigger.player.chooseToDiscard('弃置一张杀，否则受到'+get.translation(player)+'1点伤害',function(card){
			return card.name=='sha';
		});
		"step 3"
		if(!result.bool){
            trigger.player.damage(player);
        }
    },
	ai:{
		expose:0.4,
		threaten:1.2,
	},
},
"XS_lianque":{
	marktext:"却",
	forced:true,
	priority:-10,
	trigger:{
		target:"shaBegin",
	},
	intro:{
		content:"mark",
	},
	init:function (player){
        player.storage.XS_lianque=0;
    },
	content:function (){
        player.storage.XS_lianque++;
		player.markSkill('XS_lianque');
		player.syncStorage('XS_lianque');
    },
	group:["XS_lianque_draw"],
	subSkill:{
		draw:{
			mod:{
				maxHandcard:function (player,num){
                    return num+player.storage.XS_lianque;
                },
			},
			trigger:{
				player:"phaseZhunbeiBegin",
			},
			filter:function (event,player){
                return player.storage.XS_lianque>0;
            },
			check:function (event,player){
                return player.storage.XS_lianque>=3;
            },
			"prompt2":function (event,player){
				var str='是否移除所有“却”并摸'+player.storage.XS_lianque+'张牌？'
				if(player.storage.XS_lianque>=3) str+='同时你回复1点体力。'
				return str;
			},
			content:function (){
                var nm=player.storage.XS_lianque;
                player.draw(nm);
                if(nm>=3) {
                    player.recover();
                }
                player.storage.XS_lianque=0;
				player.unmarkSkill('XS_lianque');
            },
			sub:true,
		},
	},
},
"XS_mousheng":{
	audio:"ext:血色衣冠:2",
	mod:{
		wuxieRespondable:function(card,player,target,current){
			if(player!=current){
				return false;
			}
		},
	},
	usable:1,
	enable:"phaseUse",
	filter:function (event,player){
		return player.countCards('h')>0;
	},
	chooseButton:{
		dialog:function (player){
			var list=[];
			for(var i=0;i<lib.inpile.length;i++){
				if(get.type(lib.inpile[i])=='trick') list.push(['锦囊','',lib.inpile[i]]);
			}
			return ui.create.dialog(get.translation('XS_mousheng'),[list,'vcard']);
		},
		filter:function (button,player){
			return lib.filter.filterCard({name:button.link[2]},player,_status.event.getParent());
		},
		check:function (button){
			var player=_status.event.player;
			var recover=0,lose=1,players=game.filterPlayer();
			for(var i=0;i<players.length;i++){
				if(players[i].hp==1&&get.damageEffect(players[i],player,player)>0&&!players[i].hasSha()){
					return (button.link[2]=='juedou')?2:-1;
				}
				if(!players[i].isOut()){
					if(players[i].hp<players[i].maxHp){
						if(get.attitude(player,players[i])>0){
							if(players[i].hp<2){
								lose--;
								recover+=0.5;
							}
							lose--;
							recover++;
						}
						else if(get.attitude(player,players[i])<0){
							if(players[i].hp<2){
								lose++;
								recover-=0.5;
							}
							lose++;
							recover--;
						}
					}
					else{
						if(get.attitude(player,players[i])>0){
							lose--;
						}
						else if(get.attitude(player,players[i])<0){
							lose++;
						}
					}
				}
			}
			if(lose>recover&&lose>0) return (button.link[2]=='nanman')?1:-1;
			if(lose<recover&&recover>0) return (button.link[2]=='taoyuan')?1:-1;
			return (button.link[2]=='wuzhong')?1:-1;
		},
		backup:function (links,player){
			return {
				filterCard:function (card){
					return true;
				},
				selectCard:1,
				//audio:2,
				//popname:true,
				viewAs:{name:links[0][2]},
				onuse:function(result,player){
					player.logSkill('XS_mousheng');
				},
			}
		},
		prompt:function (links,player){
			return '将一张手牌当作'+get.translation(links[0][2])+'使用';
		},
	},
	ai:{
		order:1,
		result:{
			player:function (player){
				var num=0;
				var cards=player.getCards('h',{type:'basic'});
				for(var i=0;i<cards.length;i++){
					num+=Math.max(0,get.value(cards[i],player,'raw'));
				}
				num/=cards.length;
				return 12-num;
			},
		},
		threaten:1.1,
	},
},
"XS_dushan":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:"useCardBefore",
	},
	frequent:true,
	filter:function (event,player){
		if(get.type2(event.card)!='trick') return false;
		return event.targets.contains(player);
    },
	content:function (){
		"step 0"
		player.draw();
		"step 1"
		if(get.type(trigger.card)=='trick') {
			player.chooseBool('是否令'+get.translation(trigger.player)+'使用的'+get.translation(trigger.card)+'对你无效？').set('ai',function(){
				var trigger=_status.event.getTrigger();
				var eff=get.effect(player,trigger.card,trigger.player,player);
				return eff<=0;
			});
		}
		"step 2"
		if(result.bool) trigger.targets.remove(player);
    },
	ai:{
        effect:{
            target:function (card,player,target,current){
                if(get.type2(card)=='trick') {
					var att=get.attitude(player,target);
					if(att>0) return [1,1];
					return [0,1]
				}
            },
        },
    },
},
"XS_guicai":{
	audio:"ext:血色衣冠:2",
    mod:{
        targetInRange:function (card,player,target,now){
            if(get.type(card)=='trick') return true;
        },
    },
	frequent:true,
	trigger:{
		global:"useCardAfter",
	},
	priority:9,
	filter:function (event,player){
		if(event.player==player) return false;
		if(get.type(event.card)!='trick') return false;
		if(!event.targets.contains(player)) return false;
		if(event.card) {
			return get.itemtype(event.cards)=='cards'&&get.position(event.cards[0],true)=='o';
		}
		return false;
	},
	content:function (){
		player.gain(trigger.cards,'gain2');
		player.draw();
	},
	ai:{
        effect:{
            target:function (card,player,target,current){
                if(get.type(card)=='trick') return [1,2];
            },
        },
    },
},
"XS_fangyuan":{
	audio:"ext:血色衣冠:2",
	ai:{
        threaten:function (player,target){
			var nm=player.getDamagedHp()*0.2;
            return 0.7+nm;
        },
    },
	trigger:{
		player:"useCard",
	},
	direct:true,
	filter:function (event,player){
        var type=get.type(event.card);
        return type=='trick';
    },
	content:function (){
        'step 0'
        var goon=false;
        var info=get.info(trigger.card);
        if(trigger.targets&&!info.multitarget){
            var players=game.filterPlayer();
            for(var i=0;i<players.length;i++){
                if(lib.filter.targetEnabled2(trigger.card,player,players[i])&&!trigger.targets.contains(players[i])){
                    goon=true;break;
                }
            }
        }
        if(goon){
            var num1=Math.max(1,player.getDamagedHp());
            player.chooseTarget('是否额外指定至多'+num1+'名其他角色角色成为'+get.translation(trigger.card)+'的目标？',[1,num1],function(card,player,target){
                var trigger=_status.event.getTrigger();
                if(trigger.targets.contains(target)) return false;
                return lib.filter.targetEnabled2(trigger.card,_status.event.player,target);
            }).set('ai',function(target){
                var trigger=_status.event.getTrigger();
                var player=_status.event.player;
                return get.effect(target,trigger.card,player,player);
            });
        }
        else{
            if(!info.multitarget&&trigger.targets&&trigger.targets.length>1){
                event.goto(3);
            }
        }
        'step 1'
        if(result.bool){
            if(!event.isMine()) game.delayx();
            event.target=result.targets;
        }
        else{
            event.finish();
        }
        'step 2'
        if(event.target){
            player.logSkill('XS_fangyuan',event.target);
            game.log(event.target,'额外成为了'+get.translation(trigger.card)+'的目标');
            trigger.targets.addArray(event.target);
        }
        event.finish();
        'step 3'
        var num2=Math.max(1,player.getDamagedHp());
        player.chooseTarget('是否取消至多'+num2+'名角色成为'+get.translation(trigger.card)+'的目标？',[1,num2],function(card,player,target){
            return _status.event.getTrigger().targets.contains(target);
        }).set('ai',function(target){
            var trigger=_status.event.getTrigger();
            return -get.effect(target,trigger.card,trigger.player,_status.event.player);
        });
        'step 4'
        if(result.bool){
            event.targets=result.targets;
            if(event.isMine()){
                player.logSkill('XS_fangyuan',event.targets);
                event.finish();
            }
            for(var i=0;i<result.targets.length;i++){
                trigger.targets.remove(result.targets[i]);
            }
            game.delay();
        }
        else{
            event.finish();
        }
        'step 5'
        player.logSkill('XS_fangyuan',event.targets);
    },
},
"XS_sijian":{
	trigger:{
		global:"roundStart",
	},
	priority:2,
	filter:function (event,player){
		if(game.hasPlayer(function(current){
			return current!=player&&current.hasSkill('XS_sijian_mark');
		})) return false;
		return true;
    },
	direct:true,
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt2('XS_sijian'),1,false,function(card,player,target){
			return target!=player&&!target.hasSkill('XS_sijian_mark');
		}).set('ai',function(target){
			return -get.attitude(player,target);
		});
		"step 1"
		if(result.bool){
			var target=result.targets[0];
			player.logSkill('XS_sijian',target);
			player.storage.XS_sijian1=target;
			player.addSkill('XS_sijian1');
			target.addSkill('XS_sijian_mark');
			target.markSkillCharacter('XS_sijian_mark',player,'死间','你成为了'+get.translation(player)+'的死间目标');
		}
	},
	ai:{
		expose:0.4,
		threaten:0.8,
	},
	subSkill:{
		mark:{
			onremove:function (player,skill){
				player.unmarkSkill('XS_sijian_mark');
			},
			charlotte:true,
			sub:true,
		},
	},
},
"XS_sijian1":{
	onremove:function (player,skill){
		delete player.storage.XS_sijian1;
	},
	trigger:{
		player:["phaseJieshuBegin"],
	},
	forced:true,
	filter:function (event,player){
		if(!player.storage.XS_sijian1) return false;
		return true;
	},
	content:function (){
		var tp=player.storage.XS_sijian1;
		if(tp.hp>player.hp) {
			player.recover();
		}
		if(player.countCards('h')<tp.countCards('h')) {
			player.gainPlayerCard('h',tp,1);
		}
	},
	group:["XS_sijian1_clear"],
	subSkill:{
		clear:{
			trigger:{global:'dieBegin'},
			silent:true,
			filter:function(event,player){
				return event.player==player||(player.storage.XS_sijian1&&player.storage.XS_sijian1==event.player);
			},
			content:function(){
				"step 0"
				if(trigger.player!=player) {
					trigger.player.removeSkill('XS_sijian_mark');
					player.removeSkill('XS_sijian1');
					event.finish();
				}
				else {
					event.tar=player.storage.XS_sijian1;
					event.pla=player;
					var tp=game.filterPlayer(function(current){
						return player!=current&&event.tar!=current&&lib.filter.targetEnabled({name:'sha'},current,event.tar);
					});
					event.tars=tp;
				}
				"step 1"
				if(event.tars.length){
					event.current=event.tars.shift();			
					event.current.chooseToUse(function(card,player,event){
						if(get.name(card)!='sha') return false;
						return lib.filter.filterCard.apply(this,arguments);
					},'对'+get.translation(event.tar)+'使用一张杀，否则你失去1点体力。')
					.set('ai2',function(target,card,player,player2,isLink){
						var eff=get.effect(event.tar,{name:'sha'},event.current,event.current);
						return eff>=-2;
					})
					.set('filterTarget',function(card,player,target){
						if(target!=event.tar) return false;
						return lib.filter.targetEnabled.apply(this,arguments);
					});
				}
				else {
					event.tar.removeSkill('XS_sijian_mark');
					player.removeSkill('XS_sijian1');
					event.finish();
				}
				"step 2"
				if(!result.bool){
					event.current.loseHp();
				}
				"step 3"
				event.goto(1);
			},
			sub:true,
		},
	},
},
"XS_hezong":{
	enable:"phaseUse",
	usable:1,
	multitarget:true,
	multiline:true,
	selectTarget:[1,Infinity],
	filterTarget:function (card,player,target){
        return !target.isMaxHandcard();
    },
                content:function (){
        if(targets.length) {
            for(var i=0;i<targets.length;i++){
                targets[i].link(true);
            }
            game.asyncDraw(targets);
        }
    },
                ai:{
                    order:8,
                    expose:0.1,
                    threaten:1.1,
                    result:{
			target:function (player,target){
                if(target.isLinked()||!target.hasFriend()) return 1;
                return -0.5;
            },
                    },
                },
            },
"XS_lianheng":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:1,
	selectTarget:1,
	filterTarget:function (card,player,target){
		return player!=target;
	},
	content:function (){
        "step 0"
		target.draw();
		target.link(false);
		event.tar=target;
        "step 1"
        player.chooseTarget(true,'选择“连横”的目标',function(card,player,target){
            return target!=player&&target!=event.tar;
        }).set('ai',function(target){
            var eff=get.effect(target,{name:'sha'},event.tar,player);
            return eff;
        });
        "step 2"
		event.tars2=result.targets[0];
		event.tar.chooseControlList(
			['视为对'+get.translation(event.tars2)+'使用1张杀',
			'交给'+get.translation(player)+'1张牌'],
			true).set('ai',function(event,player){
				var eff=get.effect(event.tars2,{name:'sha'},event.tar,event.tar);
				if(eff>2) return 0;
				return 1;
		});
        "step 3"
        if(result.index==1){
            event.goto(4);
        }
		else {
            event.tar.useCard({name:'sha',isCard:true},event.tars2);
            event.finish();
        }
		"step 4"
		event.tar.chooseCard('he',1,'交给'+get.translation(player)+'1张牌',true).ai=function(card){
			return 8-get.value(card);
		}
		"step 5"
		if(result.bool){
			player.gain(result.cards,event.tar,'giveAuto');
		}
    },
	ai:{
		order:8,
		result:{
			player:1,
			target:function (player,target){
                if(target.isLinked()) return 2;
				return 1;
            },
		},
		expose:0.3,
	},
},
"XS_kuolun":{
	audio:"ext:血色衣冠:2",
	usable:1,
	trigger:{
        global:["shaBefore"],
    },
    filter:function (event,player){
		if(event.player==player) return false;
        return player.countCards('h')&&event.player.countCards('h');
    },
	logTarget:"player",
	check:function (event,player){
		if(get.attitude(player,event.player)>0) return false;
		var hs=player.getCards('h');
		if(hs.length<3) return false;
		var bool=false;
		for(var i=0;i<hs.length;i++){
			if(hs[i].number>=9&&get.value(hs[i])<7){
				bool=true;
				break;
			}
		}
		if(!bool) return false;
		return true;
    },
    content:function (){
		'step 0'
		player.chooseToCompare(trigger.player);
		'step 1'
		if(result.bool){
			player.gain(result.player,'gain2');
			player.gain(result.target,'gain2');
		}
		else {
			trigger.directHit=true;
		}
    },
	ai:{
		expose:0.3,
		threaten:0.9,
	},
},
"XS_bugua":{
	trigger:{
		player:'phaseDrawBefore'
	},
	check:function (event,player){
		return true;
	},
    content:function (){
		'step 0'
		player.chooseControl('heart2','diamond2','club2','spade2',function(){
            if(Math.random()<0.3) return 'club2';
            if(Math.random()<0.5&&Math.random()>=0.3) return 'spade2';
			if(Math.random()<0.7&&Math.random()>=0.5) return 'diamond2';
            return 'heart2'
        }).set('prompt','请选择不想要的花色');
		'step 1'
		if(result.control&&result.control.indexOf('2')!=-1){
			player.chooseControl('牌堆顶','牌堆底').ai=function(){
				var player=_status.event.player;
				var att=get.attitude(player,player.next);
				if(att>0) return '牌堆顶';
				return '牌堆底';
			};
			event.suit=result.control.slice(0,result.control.length-1);
        }
        else{
            event.finish();
        }
		'step 2'
		if(result.control=='牌堆顶'){
			var cards1=[];
			var temp=get.cards(5);
			for(var i=0;i<temp.length;i++){
                if(get.suit(temp[i])!=event.suit) {
					cards1.push(temp[i]);
					temp.splice(i--,1);
				}
            }
			game.cardsDiscard(temp);
			event.cards=cards1;
		}
		else{
			if(result.control=='牌堆底') {
			    var list=[];
				for(var i=0;i<4;i++) {
					list.push(ui.cardPile.removeChild(ui.cardPile.lastChild));
				}
				var cards1=[];
				for(var i=0;i<list.length;i++){
					if(get.suit(list[i])!=event.suit) {
						cards1.push(list[i]);
					}
				}
				event.cards=cards1;
			}
			else event.finish();
		}
		"step 3"
		if(event.isMine()==false){
			event.dialog=ui.create.dialog('卜卦',event.cards);
			game.delay(1);
		}
        if(event.cards&&event.cards.length){
			player.gain(event.cards,'gain2');
			trigger.cancel();
        }
		"step 4"
		if(event.dialog){
			event.dialog.close();
		}
    },
    ai:{
        threaten:1.1,
    },
},
"XS_xiuli":{
	trigger:{
		player:["phaseJieshuBegin"],
	},
	frequent:true,
	filter:function (event,player){
		var history=player.getHistory('useCard');
        return history.length>0;
    },
	content:function (){
        var num=Math.min(5,player.getHistory('useCard').length);
		player.chooseToGuanxing(num);
    },
	ai:{
		guanxing:true,
	},
},
"XS_shicai":{
	enable:"phaseUse",
	usable:1,
	filter:function (event,player){
		return game.hasPlayer(function(current){
			return current!=player&&!current.hasSkill('XS_shicaimark');
		});
	},
	filterTarget:function (card,player,target){
		return player!=target&&!target.hasSkill('XS_shicaimark');
	},
	check:function (card){
		return 6-get.value(card);
	},
	discard:false,
	position:"he",
	selectCard:1,
	filterCard:true,
	selectTarget:1,
	content:function (){
		target.gain(cards,player);
		target.addTempSkill('XS_shicaimark',{player:'phaseAfter'});
		target.storage.XS_shicaimark=player;
    },
	ai:{
		order:10,
		result:{
			player:2,
			target:function (player,target){
				var num=target.countCards('h')-2;
				if(target.hasSkill('XS_yinzhi')) num++;
				return num
			},
		},
	},
},
"XS_shicaimark":{
	charlotte:true,
	mark:true,
	marktext:"识",
	intro:{
		content:function(storage,player,skill){
			return '你使用基本牌的次数、进攻距离+1';
		},
	},
	onremove:function(player){
		player.unmarkSkill('XS_shicaimark');
	},
	mod:{
		globalFrom:function (from,to,current){
            return current-1;
        },
		cardUsable:function (card,player,num){
			if(card.name=='sha'||card.name=='jiu') return num+1;
		},
	},
	trigger:{
		player:"phaseJieshuBegin",
	},
	forced:true,
	filter:function (event,player){
		return player.countCards('he');
    },
	content:function (){
		"step 0"
		player.chooseCard('识才：交给'+get.translation(player.storage.XS_shicaimark)+'2张牌','he',2,true).ai=function(card){
			return 9-get.value(card);
		}
		"step 1"
		if(result.bool){
			player.storage.XS_shicaimark.gain(result.cards,player,'giveAuto');
		}
    },
	ai:{
		nokeep:true,
	},
},
"XS_houqin":{
	trigger:{
		global:['equipAfter','addJudgeAfter','loseAfter','gainAfter','loseAsyncAfter'],
		//global:['loseAfter'],
	},
	usable:1,
	check:function (event,player){
		return get.attitude(player,event.player)>0;
	},
	logTarget:"player",
	"prompt2":function (event,player){
		return '是否摸令'+get.translation(event.player)+'将手牌摸至2张？';
	},
	filter:function (event,player){
		// if(event.player.countCards('h')>1) return false;
		// return event.hs&&event.hs.length>0;
		return game.hasPlayer(function(current){
			var evt=event.getl(current);
			return evt&&evt.hs&&evt.hs.length&&current.countCards('h')<2;
		});
	},
	content:function (){
		var num=2-trigger.player.countCards('h');
		trigger.player.draw(num);
	},
	ai:{
		threaten:1.2,
		expose:0.2,
		noh:true,
	},
},
"XS_zhanshen":{
	frequent:true,
	"prompt2":function (event,player){
		return '是否重置你的基本牌使用次数？';
	},
	trigger:{
		player:"shaMiss",
	},
	content:function (){
		player.stat[player.stat.length-1].card.sha=0;
		player.stat[player.stat.length-1].card.jiu=0;
		game.playAudio('..','extension','血色衣冠','XS_zhanshen1');
	},
	group:["XS_zhanshen_shan"],
	subSkill:{
		shan:{
			trigger:{
				player:["shaBegin","jiuBegin"],
			},	
			priority:78,
			forced:true,
			content:function (){
				trigger.baseDamage++;
				game.playAudio('..','extension','血色衣冠','XS_zhanshen2');
			},
			ai:{
				damageBonus:true,
			},
			sub:true,
		},
	},
},
"XS_diaohu":{
	audio:2,
	trigger:{
		player:["damage"],
	},
	filter:function (event,player){
		return event.source&&event.source!=player&&event.num>0;
	},
	check:function (event,player){
		if(event.source.hasSkill('XS_diaohu_sk')) return false;
		return get.attitude(player,event.source)<=0;
	},
	logTarget:'source',
	"prompt2":function (event,player){
		return '是否'+get.translation(event.source)+'摸1张牌，如此其跳过下一个摸牌阶段？';
	},
	priority:100,
	content:function(){
		trigger.source.draw();
		trigger.source.addSkill('XS_diaohu_sk');
		trigger.source.markSkillCharacter('XS_diaohu_sk',player,'调虎','你跳过下一个摸牌阶段');
	},
	ai:{
		expose:0.3,
		maixie:true,
		"maixie_defend":true,
		effect:{
			target:function (card,player,target){
                if(get.tag(card,'damage')){
                    if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
                    if(!target.hasFriend()) return;
					if(player.hasSkill('XS_diaohu_sk')) return;
					return [1,0,1,-1];
                }
            },
		},
	},
	subSkill:{
        sk:{
			trigger:{
				player:"phaseDrawBefore",
			},
			onremove:function(player){
				player.unmarkSkill('XS_diaohu_sk');
			},
			direct:true,
			content:function (){
				player.removeSkill('XS_diaohu_sk');
                trigger.cancel();
            },
			charlotte:true,
			sub:true,
        },
    },
},
"XS_mengzhe":{
	trigger:{
		player:"shaMiss",
	},
	direct:true,
	filter:function (event,player){
        return player.countCards('he')>=2&&event.target.isAlive();
    },
	content:function (){
        "step 0"
        var next=player.chooseToDiscard(get.prompt2('XS_mengzhe'),2,'he',false);
        next.logSkill='XS_mengzhe';
        next.set('ai',function(card){
            var evt=_status.event.getParent();
            if(get.attitude(evt.player,evt._trigger.target)<0){
                if(evt.player.hasSkill('jiu')||
                evt.player.hasSkill('tianxianjiu')||
                evt._trigger.target.hp==1){
                    return 8-get.value(card)
                }
                return 5-get.value(card)
            }
            return -1;
        });
        "step 1"
        if(result.bool){
            trigger.untrigger();
            trigger.trigger('shaHit');
            trigger._result.bool=false;
        }
    },
		ai:{
		expose:0.3,
	},
	group:["XS_mengzhe_damage"],
	subSkill:{
		damage:{
			trigger:{
				source:"damageEnd",
			},
			priority:2,
			filter:function (event,player){
				return event.card&&event.card.name=='sha'&&event.notLink();
            },
			forced:true,
			content:function (){
				trigger.player.addSkill('XS_shoushang');
            },
			sub:true,
		},
	},
},
"XS_shoushang":{
	mark:true,
	marktext:"伤",
	intro:{
		content:function (storage){
		return '你下一次回复体力时取消之';
		},
	},
	forced:true,
	trigger:{
		player:"recoverBegin",
	},
	content:function (){
		player.removeSkill('XS_shoushang');
		trigger.cancel();
	},
},
"XS_henglian":{
	init:function (player){
        player.link(true);
    },
 	trigger:{
		player:"damage",
	},
	forced:true,
	filter:function (event,player){
		return player.isLinked()&&event.notLink()&&event.nature&&event.num>0;
	},
	content:function (){
		player.recover(trigger.num);
	},
	ai:{
		maixie:true,
		"maixie_hp":true,
		effect:{
			target:function (card,player,target){
                if(get.tag(card,'natureDamage')){
                    if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
                    if(!target.hasFriend()) return;
					var num=game.countPlayer(function(current){
						if(current!=player&&current!=target){
							return	get.attitude(player,current)<=0&&current.isLinked();
						}
					});
                    return [0,0,1,num*2];
                }
            },
		},
	},
	group:["XS_henglian_draw","XS_henglian_link"],
    subSkill:{
		draw:{
			sub:true,
			trigger:{
				player:"damage",
			},
			forced:true,
			filter:function (event,player){
				return player.isLinked()&&!event.notLink()&&event.nature&&event.num>0;;
			},
			content:function (){
				player.draw(2*trigger.num);
			},
        },
		link:{
			sub:true,
			trigger:{
				player:["linkEnd"],
			},
			forced:true,
			filter:function (event,player){
				return !player.isLinked();
			},
			content:function (){
				player.link(true);
			},
			ai:{
				link:true,
				effect:{
					target:function (card){
						if(card.name=='tiesuo') return 'zeroplayertarget';
					},
				},
			},
        },
    },
},
"XS_kuangshi":{
	audio:"ext:血色衣冠:2",
    enable:"phaseUse",
    usable:1,
    filterTarget:function (card,player,target){
        return true;
    },
	filter:function (event,player){
        return true;
    },
    selectTarget:1,
    content:function (){
        "step 0"
		target.discard(target.getCards('hj'));
		"step 1"
		target.draw(4);
    },
    ai:{
		order:1,
		expose:0.2,
		result:{
			target:function (player,target){
				var num=0;
				if(target.countCards('j')) {
					if(!target.hasSkill('XS_zhisheng')&&!target.hasSkill('XS_tianming')&&!target.hasSkill('XS_xianji')) num+=target.countCards('j');
				}
				var num1=4-target.countCards('h');
				return num+num1;
            },
		},
    },
},
"XS_zhijiao":{
    trigger:{
        player:["chooseToRespondBefore","chooseToUseBefore"],
    },
	audio:"ext:血色衣冠:2",
    filter:function (event,player){
		if(!game.hasPlayer(function(current){
			return !current.hasSkill('XS_zhijiao_temp');
		})) return false;
        if(event.responded) return false;
		if(!event.filterCard({name:'shan'},player,event)) return false;
		if(event.name=='chooseToRespond'&&!lib.filter.cardRespondable({name:'shan'},player,event)) return false;
		return true;
    },
    check:function (event,player){
		if(game.hasPlayer(function(current){
			return current!=player&&!current.hasSkill('XS_zhijiao_temp');
		})) {
			return !player.countCards('h','shan');
		}
		else {
			return player.countCards('h','shan');
		}  
    },
    content:function (){
        "step 0"
		player.chooseTarget('你可展示1名角色所有手牌，若其中有闪，视为你使用或打出了1张闪，否则令你摸1张牌。',1,false,function(card,player,target){
			return !target.hasSkill('XS_zhijiao_temp')&&target.countCards('h');
		}).set('ai',function(target){
			return -get.attitude(player,target)+20;
		});
		"step 1"
		if(result.bool){
			result.targets[0].showHandcards();
			result.targets[0].addSkill('XS_zhijiao_temp');
			if(result.targets[0].countCards('h','shan')) {
				trigger.untrigger();
				trigger.set('responded',true);
				trigger.result={bool:true,card:{name:'shan',isCard:true}};
			}
			else player.draw();
		}
		else event.finish();
    },
	ai:{
		respondShan:true,
		skillTagFilter:function(player){
			return game.hasPlayer(function(current){
				return !current.hasSkill('XS_zhijiao_temp');
			});
		},
	},	
    subSkill:{
        temp:{
			sub:true,
			charlotte:true,
        },
    },
},
"XS_poguo":{
	audio:"ext:血色衣冠:1",
    trigger:{
        global:"die",
    },
	frequent:true,
	gainable:true,
	priority:5,
    content:function (){
		"step 0"
		event.player1=trigger.player;
		player.chooseControlList(['获得'+get.translation(event.player1)+'的所有牌','弃置1张牌并于当前回合结束后获得一个额外回合']).set('ai',function(event,player){
			if(event.player1.countCards('he')>=3) return 0;
			return 1;
		}).set('prompt','破国：请选择1项');
		"step 1"
		if(result.control!='cancel2') {
			if(result.index==0||!player.countCards('he')) {
				event.togain=trigger.player.getCards('he');
				player.gain(event.togain,trigger.player,'giveAuto');
			}
			else if(result.index==1){
				player.chooseToDiscard('he',1,true);
				player.insertPhase();
			}
		}
    },
    ai:{
        threaten:1.5,
    },
},
"XS_suoci":{
	trigger:{
		source:"damageEnd",
	},
	direct:true,
	filter:function (event,player){
		if(player.hasSkill('XS_suoci_temp')) return false;
		return event.card&&event.card.name=='sha'&&event.notLink();
	},
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt2('XS_suoci'),function(card,player,target){
			var trigger=_status.event.getTrigger();
            return player!=target&&trigger.player!=target&&target.countCards('h');
        }).ai=function(target){
			var player=_status.event.player;
			var att=get.attitude(player,target);
			if(target.countCards('h')>2) return att;
            return -att;
        }
		"step 1"
		if(result.bool) {
			player.addTempSkill('XS_suoci_temp');
			player.logSkill('XS_suoci',result.targets[0]);
			event.target1=result.targets[0];
			event.target1.chooseControl().set('choiceList',['交给'+get.translation(player)+'1张牌，并使其本回合使用杀的次数+1','此杀继续对你结算']).set('ai',function(event,player){
				var att=get.attitude(player,event.target1);
				if(att>0) return 0;
				return 1
			});
		}
		else event.finish();
		"step 2"
		if(result.index==1){
			player.useCard(trigger.card,event.target1,false);
			event.finish();
		}
		else{
			event.target1.chooseCard('交给'+get.translation(player)+'1张牌，并使其本回合使用杀的次数+1','h',true).ai=function(card){
				if(card.name=='sha') return 1;
				return 6-get.value(card);
			}
		}
		"step 3"
		if(result.bool) {
			player.gain(result.cards[0],event.target1,'giveAuto');
			if(player.stat[player.stat.length-1].card.sha>0){
				player.stat[player.stat.length-1].card.sha--;
			}
		}
	},
	subSkill:{
		temp:{
			charlotte:true,
			sub:true,
		},
	},
},
"XS_yingong":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:1,
    filter:function (event,player){
		if(!player.getEquip('XS_shediaogong')&&player.getEquip(1)) return true;
        return player.getEquip('XS_shediaogong');
    },
    content:function (){
		if(!player.getEquip('XS_shediaogong')&&player.getEquip(1)) {
			player.useCard(game.createCard('XS_shediaogong','diamond',1),player);
		}
		else if(player.getEquip('XS_shediaogong')) {
			var card=get.cardPile(function(card){
				return card.name=='sha';
			});
			if(card){
				player.gain(card,'gain2','log');
			}
		}
    },
	ai:{
		order:10,
		effect:{
			target:function(card,player,target,current){
				if(!player.getEquip('XS_shediaogong')) {
					if(get.subtype(card)=='equip1') return [1,3];
				}
				return;
			}
		},
		result:{
			player:2,
		},
    },
            },
"XS_tianjiao":{
	audio:"ext:血色衣冠:2",
	mod:{
		selectTarget:function (card,player,range){
			if(card.name=='sha'&&card.number>=7) range[1]+=1;
		},
	},
	trigger:{
		source:"damageEnd",
	},
	priority:99,
	frequent:true,
	filter:function (event,player){
		if(!event.card||event.card.name!='sha'||!event.notLink()) return false;
		return true;
	},
	content:function (){
		"step 0"
		if(trigger.getParent(2).targets.length==1) {
			player.recover();
			event.finish();
		}
		else if(trigger.getParent(2).targets.length==2) {
			player.draw();
			event.finish();
		}
		else {
			player.chooseCardButton('天骄：是否重铸1张牌？',player.getCards('he'),false).ai=function(button){
				return 5-get.value(button.link);
			}
		}
		"step 1"
		if(result.bool){
			var cards=result.links;
			player.chongzhuCards(cards);
		}
	},
	ai:{
		threaten:1.2,
	},
},
"XS_shiquan":{
	enable:"phaseUse",
	usable:1,
	filter:function(event,player){
		return game.hasPlayer(function(current){
			return current.countCards('e')>0&&current!=player;
		});
	},
	filterTarget:function(card,player,target){
		return target.countCards('e')>0&&target!=player;
	},
	content:function(){
		"step 0"
		event.target1=target;
		event.pla=player;
		player.logSkill('XS_shiquan',event.target1);
		event.target1.chooseControl().set('choiceList',['弃置你装备区的1张牌并令'+get.translation(player)+'摸1张牌','交给'+get.translation(player)+'你装备区的1张牌，并可对其使用1张无距离限制的杀']).set('ai',function(event,player){
			var att=get.attitude(event.target1,event.pla);
			if(event.target1.hasUsableCard('sha')&&event.target1.canUse('sha',player,false)&&att<0) return 1;
			return 0;
		}).set('prompt','释权');
		"step 1"
		if(result.index==0){
			event.target1.chooseToDiscard(1,true,'e');
			player.draw();
			event.finish();
		}
		else{
			event.target1.chooseCard('交给'+get.translation(player)+'1张装备牌','e',true).ai=function(card){
				return -get.value(card);
			}
		}
		"step 2"
		if(result.bool){
			player.gain(result.cards[0],event.target1,'giveAuto');
			if(event.target1.hasUsableCard('sha')&&event.target1.canUse('sha',player,false)) {
				event.target1.chooseToUse({name:'sha'},player,-1,'你可对'+get.translation(player)+'使用一张杀').set('targetRequired',true);
			}
        }
	},
	ai:{
		expose:0.1,
		order:7,
		result:{
			target:function(player,target){
				if(target.hasSkill('XS_lianbing')) return 1;
				return -1;
			}
		}
	},
            },
"XS_renzheng":{
	trigger:{
		player:"damageEnd",
	},
	frequent:true,
	content:function (){
        "step 0"
        player.draw();
		"step 1"
        if(get.itemtype(trigger.cards)=='cards'&&get.position(trigger.cards[0],true)=='o'){
            player.chooseTarget('你可令1名其他角色获得'+get.translation(trigger.cards)+'。',function(card,player,target){
                return player!=target&&trigger.source!=target;
            }).ai=function(target){
                return get.attitude(player,target);
            };
        }
        "step 2"
        if(result.bool){
            var target=result.targets[0];
            target.gain(trigger.cards,"gain2");
        }
    },
	ai:{
		maixie:true,
		"maixie_hp":true,
		effect:{
			target:function (card,player,target){
				if(player.hasSkillTag('jueqing',false,target)) return [1,-1];
				if(get.tag(card,'damage')&&player!=target) return [1,0.6];
			},
		},
	},
},
"XS_tianzhao":{
	trigger:{target:'useCardToTargeted'},
	check:function (event,player){
		return get.damageEffect(event.player,player,player)>0;
    },
	logTarget:'player',
	filter:function(event,player){
		if(!event.card||event.player==player) return false;
        return get.tag(event.card,'damage');
	},
	content:function (){
        'step 0'
		event.cd=get.cards(1)[0];
		player.showCards('天兆',event.cd);
		game.delay(0.6);
		'step 1'
		player.showHandcards();
		game.delay(0.7);
		'step 2'
		var mk=true,st=get.suit(event.cd),cds=player.getCards('h');
		for(var i=0;i<cds.length;i++) {
			if(get.suit(cds[i])==st) {
				mk=false;
				break;
			}
		}
		if(mk) trigger.player.damage(1,'thunder',player);
		else player.gain(event.cd,'gain2','log');	
    },
	ai:{
		expose:0.4,
		threaten:0.9,
		effect:{
			target:function (card,player,target){
                if(get.tag(card,'damage')||card.name=='tiesuo'){
                    if(!target.hasFriend()) return;
					var hs=Math.max(0,4-target.countCards('h'));
					return [1,0,1,-hs];
                }
            },
		},
	},
},
"XS_xinglue":{
	audio:"ext:血色衣冠:2",
    trigger:{
        player:"phaseZhunbeiBegin",
    },
	priority:99,
    filter:function (event,player){
        return player.countCards('h')<player.maxHp;
    },
	check:function (event,player){
		var nm1=player.maxHp-player.countCards('h');
		var nm2=player.getDamagedHp()-player.countCards('hs','tao');
        return nm1>nm2;
    },
    content:function (){
		var nm=player.maxHp-player.countCards('h');
		player.draw(nm);
		player.addTempSkill('XS_xinglue_dis');
    },
    subSkill:{
        dis:{
			trigger:{
				player:['phaseJieshuBegin'],
			},
			filter:function (event,player){
				return player.isDamaged();
			},
			forced:true,
			silent:true,
			content:function(){
				player.chooseToDiscard(player.getDamagedHp(),'he',true);
			},
        },
    },
},
"XS_yuxia":{
	audio:2,
	unique:true,
	zhuSkill:true,
	trigger:{player:['chooseToRespondBefore','chooseToUseBefore']},
	filter:function(event,player){
		if(!player.hasZhuSkill('XS_yuxia')) return false;
		if(event.responded||player.storage.XS_yuxiaing) return false;
		if(!event.filterCard({name:'shan'},player,event)||!player.countCards('h')) return false;
		return game.hasPlayer(function(current){
			return current!=player&&current.group==player.group;	
		});
	},
	direct:true,
	check:function(event,player){
		if(get.damageEffect(player,event.player,player)>=0) return false;
		return true;
	},
	content:function(){
		"step 0"
		player.chooseCardTarget({
			filterCard:function(card){return true;},
			position:"h",
			selectCard:1,
			selectTarget:1,
			filterTarget:function(card,player,target){return target!=player&&target.group==player.group;},
			ai1:function(card){
				return 5.5-get.value(card);
			},
			ai2:function(target){
				var cd=ui.selected.cards[0],att=get.attitude(player,target);
				if(get.value(cd)<=0) return -att;
				return att;
			},
			prompt:'是否发动【御下】？</br></br>主公技，当你需要使用或打出1张闪时，你可交给1名与你同势力其他角色1张手牌，令其可替你使用或打出之，否则展示其手牌'
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_yuxia',result.targets[0]);
			player.line(result.targets[0]);
			result.targets[0].gain(result.cards[0],'gain2','log');
			event.tar=result.targets[0]
		}
		else event.finish();
		"step 2"
		if((event.tar==game.me&&!_status.auto)||(get.attitude(event.tar,player)>2)||event.tar.isOnline()) {
			player.storage.XS_yuxiaing=true;
			var next=event.tar.chooseToRespond('是否替'+get.translation(player)+'打出一张闪？',{name:'shan'});
			next.set('ai',function(){
				var event=_status.event;
				return (get.attitude(event.player,event.source)-2);
			});
			next.set('skillwarn','替'+get.translation(player)+'打出一张闪');
			next.autochoose=lib.filter.autoRespondShan;
			next.set('source',player);
		}
		"step 3"
		player.storage.XS_yuxiaing=false;
		if(result.bool){
			event.finish();
			trigger.result={bool:true,card:{name:'shan'}};
			trigger.responded=true;
			trigger.animate=false;
			if(typeof event.tar.ai.shown=='number'&&event.tar.ai.shown<0.95){
				event.tar.ai.shown+=0.3;
				if(event.tar.ai.shown>0.95) event.tar.ai.shown=0.95;
			}
		}
		else{
			event.tar.showHandcards();
		}
	},
	ai:{
		respondShan:true,
		skillTagFilter:function(player){
			if(player.storage.XS_yuxiaing||!player.hasZhuSkill('XS_yuxia')||!player.countCards('h')) return false;
			return game.hasPlayer(function(current){
				return current!=player&&current.group==player.group;	
			});
		},
	},
},
"XS_shengxi":{
	audio:"ext:血色衣冠:2",
    trigger:{
        global:"phaseJieshuBegin",
    },
	priority:99,
    filter:function (event,player){
		return event.player!=player&&(!event.player.getStat('damage')||event.player.getStat('damage')<=1)&&player.countCards('h');
    },
    direct:true,
    content:function (){
        'step 0'
        player.chooseCard(get.prompt('XS_shengxi',trigger.player),'是否交给'+get.translation(trigger.player)+'1张手牌，称为“息”，然后你摸1张牌？',1).ai=function(card){
			var trigger=_status.event.getTrigger();
            if(get.attitude(player,trigger.player)>0) return 7-get.value(card);
            return card.name=='du';
        }
        'step 1'
        if(result.bool){
            player.logSkill('XS_shengxi',trigger.player);
			player.$give(1,trigger.player);
			trigger.player.gain(result.cards[0],player);
			player.draw();
        }
    },
    ai:{
        expose:0.4,
    },
	group:["XS_shengxi_gain"],
    subSkill:{
        gain:{
			trigger:{
				global:['gainEnd'],
			},
			filter:function (event,player){
				return event.getParent().name=='XS_shengxi'&&player!=event.player;
			},
			direct:true,
			content:function(){
				trigger.player.addGaintag(trigger.cards,'XS_shengxi');
			},
        },
    },
},
"XS_renxian":{
	audio:"ext:血色衣冠:2",
	trigger:{global:'phaseZhunbeiBegin'},
	direct:true,
	filter:function(event,player){
		if(event.player==player) return false;
		var hs=event.player.getCards('h');
		for(var i=0;i<hs.length;i++) {
			if(hs[i].hasGaintag('XS_shengxi')) return true;
		}
		return false;
	},
	content:function(){
		'step 0'
		trigger.player.chooseBool('展示所有“息”并取消其标记，如此你获得1个额外的出牌阶段。').set('ai',function(){
			return true;
		});
		'step 1'
		if(result.bool) {
			player.logSkill('XS_renxian',trigger.player);
			var hs=trigger.player.getCards('h'),cds=[];
			for(var i=0;i<hs.length;i++) {
				if(hs[i].hasGaintag('XS_shengxi')) {
					cds.push(hs[i]);
					hs.splice(i--,1);
				}
			}
			trigger.player.showCards(cds);
			trigger.player.removeGaintag('XS_shengxi');
			var next=trigger.player.phaseUse();
			event.next.remove(next);
			trigger.next.push(next);
		}
	},
},
"XS_chuijiang":{
	audio:"ext:血色衣冠:2",
	unique:true,
	zhuSkill:true,
 	trigger:{
		player:"dying",
	},
	priority:10,
	filter:function(event,player){
		if(!player.hasZhuSkill('XS_chuijiang')) return false;
		if(player.hp<=0) return player.getEquip(3)||player.getEquip(4);
	},
	frequent:true,
	content:function(){	
		'step 0'
		player.chooseCardButton('垂缰：选择1张坐骑牌',player.getCards('e',{subtype:['equip3','equip4']}),1,false).ai=function(button){
			return 6-get.value(button.link);
		}
		'step 1'
		if(result.bool){
			event.cd=result.links[0];
			player.chooseTarget('你可令1名其他与你同势力角色获得'+get.translation(event.cd)+'，否则弃置之',function(card,player,target){
				return player!=target&&target.group==player.group;
			}).ai=function(target){
				var att=get.attitude(player,target);
				if(target.hasSkill('XS_yonglue')) return att*4;
				return att;
			}
		}
		else event.finish();
		'step 2'
		if(result.bool){
			result.targets[0].gain(event.cd,player,'giveAuto');
		}
		else {
			player.discard(event.cd);
		}
		'step 3'
		var nm=Math.max(0,1-player.hp)
        player.recover(nm);
		game.delay(0.6);
	},
},
"XS_tianming":{
    audio:"ext:血色衣冠:2",
    trigger:{
        global:"judge",
    },
	priority:3,
	check:function (event,player){
		var res=event.judge(event.player.judging[0]);
		var att=get.attitude(player,event.player);
		//if(att==0||res==0) return 1;
		if(att>0){
			return res<0;
		}
		else{
			return res>=0;
		}	
    },
    content:function (){
		"step 0"
		event.cards=get.cards();
		player.showCards(event.cards);
		player.respond(event.cards[0],'highlight');
		if(trigger.player.judging[0].clone){
			trigger.player.judging[0].clone.classList.remove('thrownhighlight');
			game.broadcast(function(card){
				if(card.clone){
					card.clone.classList.remove('thrownhighlight');
				}
			},trigger.player.judging[0]);
			game.addVideo('deletenode',player,get.cardsInfo([trigger.player.judging[0].clone]));
		}
		player.$gain2(trigger.player.judging[0]);
		player.gain(trigger.player.judging[0]);
		trigger.player.judging[0]=event.cards[0];
		if(!get.owner(event.cards[0],'judge')){
			trigger.position.appendChild(event.cards[0]);
		}
		game.log(trigger.player,'的判定牌改为',event.cards[0]);
		game.delay();
		if(player.hasSkill('XS_tianming_temp')) {
			player.chooseToDiscard(1,'he',true);
		}
		"step 1"
		if(!player.hasSkill('XS_tianming_temp')){
			player.addTempSkill('XS_tianming_temp','roundStart');
		}
    },
    ai:{
		expose:0.2,
		threaten:1.2,
		effect:{
　　		player:function(card,player){
				if(card.name=='shandian'||card.name=='fulei') {
					return [1,3];
				}
			}
		},
        tag:{
            rejudge:1,
        },
    },
    subSkill:{
		temp:{
			charlotte:true,
			sub:true,
        },
    },
},
"XS_zhujian":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:1,
	position:"h",
	filterCard:true,
	selectCard:2,
	derivation:['XS_tianming','XS_weiya','XS_renzheng','XS_weijia','XS_tianjiao'],
	check:function (card){
        return 4.5-get.value(card);
    },
	init:function (player){
        player.storage.XS_zhujian=[];
    },
	content:function (){
        'step 0'
        var num=cards[0].number+cards[1].number;
        if(num<6) {
            player.useCard(game.createCard('XS_longquan','diamond',13),player);
            if(!player.storage.XS_zhujian.contains('XS_longquan')) {
                player.storage.XS_zhujian.push('XS_longquan');
            }
        }
        if(num>=6&&num<11) {
            player.useCard(game.createCard('XS_taie','club',1),player);
            if(!player.storage.XS_zhujian.contains('XS_taie')) {
                player.storage.XS_zhujian.push('XS_taie');
            }
        }
        if(num>=11&&num<16) {
            player.useCard(game.createCard('XS_zhanlu','heart',1),player);
            if(!player.storage.XS_zhujian.contains('XS_zhanlu')) {
                player.storage.XS_zhujian.push('XS_zhanlu');
            }
        }
        if(num>=16&&num<21) {
            player.useCard(game.createCard('XS_chunjun','diamond',1),player);
            if(!player.storage.XS_zhujian.contains('XS_chunjun')) {
                player.storage.XS_zhujian.push('XS_chunjun');
            }
        }
        if(num>=21) {
            player.useCard(game.createCard('XS_gongbu','spade',1),player);
            if(!player.storage.XS_zhujian.contains('XS_gongbu')) {
                player.storage.XS_zhujian.push('XS_gongbu');
            }
        }
    },
	ai:{
		order:10,
		result:{
			player:function (player){
				if(player.countCards('h')<3) return -1;
				if(player.storage.XS_zhujian.length>=3) return -1;
				if(player.getEquip(1)&&player.countCards('h')<4) return -1;
				return 1;
            },
		},
	},
},
"XS_jujiang":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"phaseDrawBegin",
	},
	filter:function (event,player){
		return player.storage.XS_zhujian.length>0;
	},
	forced:true,
	content:function (){
        var num=player.storage.XS_zhujian.length;
        if(num!=0) {
            trigger.num+=num;
        }
    },
},
"XS_yongjue":{
	mod:{
		globalFrom:function (from,to,current){
			var num=from.countCards('e');
			if(!from.isDamaged()) return current-num;
		},
	},
	trigger:{
		player:"damageBegin4",
	},
	priority:-19,
	check:function (event,player){
		return player.hp==1||event.num>player.hp;
	},
	filter:function (event,player){
        return player.isDamaged()&&event.num>0;
    },
	content:function (){
        var num1=player.getDamagedHp();
        if(trigger.num<=num1) {
			player.loseMaxHp(trigger.num);
            trigger.num=0;
        }
        else {
            var num2=trigger.num-num1;
			player.loseMaxHp(num1);
            trigger.num=num2;
        }
    },
},
"XS_yuanyang":{
	group:['XS_yuanyang1','XS_yuanyang2'],
	subSkill:{
		shamark:{
			mark:true,
			marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"55px")+" src="+lib.assetURL+"extension/血色衣冠/icon/yuanyang1.png>":"鸳",
			intro:{
				content:function(storage,player,skill){
					return '“鸳鸯”已使用【杀】';
				},
			},
			init:function(player){
				if(player.hasSkill('XS_yuanyang_shanmark')) player.removeSkill('XS_yuanyang_shanmark');
			},
			charlotte:true,
        },
		shanmark:{
			mark:true,
			marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"55px")+" src="+lib.assetURL+"extension/血色衣冠/icon/yuanyang2.png>":"鸯",
			intro:{
				content:function(storage,player,skill){
					return '“鸳鸯”已使用【闪】';
				},
			},
			init:function(player){
				if(player.hasSkill('XS_yuanyang_shamark')) player.removeSkill('XS_yuanyang_shamark');
			},
			charlotte:true,
        },
    },
},
"XS_yuanyang1":{
	enable:["chooseToRespond","chooseToUse"],
	filterCard:function (card,player){
		return true;
	},
	filter:function (event,player){
		return player.countCards('h');
	},
	position:"h",
	viewAs:{
		name:"sha",
	},
	prompt:"将一张手牌当杀使用或打出，若上一次因“鸳鸯”使用或打出的牌是杀，你失去1点体力",
	check:function (card){
		var player=_status.event.player;
		if(player.hasSkill('XS_yuanyang_shamark')) return false;
		return 5-get.value(card)
	},
	onrespond:function(){return this.onuse.apply(this,arguments)},
	onuse:function(result,player){
		game.playXSAudio('XS_yuanyang',2);
		if(player.hasSkill('XS_yuanyang_shamark')) player.loseHp();
		player.addSkill('XS_yuanyang_shamark');
	},
	ai:{
		skillTagFilter:function (player){
			if(!player.countCards('h')) return false;
		},
		respondSha:true,
	},
},
"XS_yuanyang2":{
	enable:['chooseToRespond','chooseToUse'],
	filterCard:function(card){
		return true;
	},
	filter:function (event,player){
		return player.countCards('h');
	},
	position:'h',
	viewAs:{name:'shan'},
	prompt:"将一张手牌当闪使用或打出，若上一次因“鸳鸯”使用或打出的牌是闪，你失去1点体力",
	check:function (card){
		var player=_status.event.player;
		if(player.hasSkill('XS_yuanyang_shanmark')) return false;
		return 7-get.value(card)
	},
	onrespond:function(){return this.onuse.apply(this,arguments)},
	onuse:function(result,player){
		game.playXSAudio('XS_yuanyang',2);
		if(player.hasSkill('XS_yuanyang_shanmark')) player.loseHp();
		player.addSkill('XS_yuanyang_shanmark');
	},
	ai:{
		respondShan:true,
		skillTagFilter:function(player){
			if(!player.countCards('h')) return false;
		},
	}
},
"XS_kedi":{
	audio:"ext:血色衣冠:2",
	trigger:{
        target:"shaMiss",
    },
	filter:function (event,player){
        return player.inRange(event.player);
    },
	forced:true,
    content:function (){
		player.chooseToUse({name:'sha'},trigger.player,-1,'克敌：是否对'+get.translation(trigger.player)+'使用一张杀？若造成伤害你摸1张牌，否则你使用的下一张杀伤害基数+1。');
    },
	ai:{
		expose:0.3,
        effect:{
            target:function (card,player,target){
                if(card.name=='sha'&&player!=target) return [1,1];
            },
        },
	},
	group:["XS_kedi_res"],
    subSkill:{
		res:{
			trigger:{
				player:["useCardAfter"],
			},	
			priority:35,
			direct:true,
			filter:function (event,player){
				return event.getParent(2).name=='XS_kedi';
			},
			content:function (){
				if(!game.hasPlayer2(function(current){
					return current.getHistory('damage',function(evt){
						return evt.card==trigger.card;
					}).length>0;
				})) {
					player.addSkill('XS_kedi_dam');
				}
				else {
					player.draw();
				}
			},
			sub:true,
		},
		dam:{
			trigger:{
				player:["shaBegin"],
			},	
			mark:true,
			intro:{
				content:function(storage,player,skill){
					return '你使用的下一张杀伤害基数+1';
				},
			},
			priority:48,
			direct:true,
			content:function (){
				trigger.baseDamage++;
				player.removeSkill('XS_kedi_dam');
			},
			ai:{
				damageBonus:true,
			},
			sub:true,
		},
    },
},
"XS_zongheng":{
	group:["XS_zongheng1","XS_zongheng2"],
	subSkill:{
		phase:{
			charlotte:true,
			sub:true,
		},
		off:{
			charlotte:true,
			sub:true,
		},
	},
	trigger:{
		player:"phaseZhunbeiBegin",
	},
	direct:true,
	filter:function (event,player){
        if(player.hasSkill('XS_zongheng_off')) return false;
        return !game.hasPlayer(function(current){
            return current.hasSkill('XS_hezong2')||current.hasSkill('XS_lianheng2');
        });
    },
	content:function (){
        "step 0"
        player.addTempSkill('XS_zongheng_phase');
        player.addSkill('XS_zongheng_off');
        player.chooseTarget('请将【纵术】（出牌阶段限1次，你可令手牌数不为最多的至多4名角色各摸1张牌并横置。）交给一名其他角色',true,function(card,player,target){
            return target!=player;
        }).set('ai',function(target){
            var player=_status.event.player;
            return 10+get.attitude(player,target);
        });
        "step 1"
        if(result.bool&&result.targets&&result.targets.length){
            var target=result.targets[0];
            player.logSkill('XS_zongheng',target);
            player.line(target,'fire');
            target.addSkill('XS_hezong2');
			game.playAudio('..','extension','血色衣冠','XS_zongheng1');
            game.delay();
        }
        if(game.hasPlayer(function(current){
            return !current.hasSkill('XS_hezong2')&&current!=player
        })){
        player.chooseTarget('请将【横术】（出牌阶段限1次，你可交给1名其他角色1张手牌，如此其解除其横置并选择1项：视为对你指定的另1名角色使用决斗；令你摸2张牌。）交给一名其他角色',true,function(card,player,target){
            return target!=player&&!target.hasSkill('XS_hezong2');
        }).set('ai',function(target){
            var player=_status.event.player;
            return 10+get.attitude(player,target);
        });
        }else event.finish();
        "step 2"
        if(result.bool&&result.targets&&result.targets.length){
            var target=result.targets[0];
            player.logSkill('XS_zongheng',target);
            player.line(target,'green');
            target.addSkill('XS_lianheng2');
			game.playAudio('..','extension','血色衣冠','XS_zongheng2');
            game.delay();
        }
    },
	ai:{
		expose:0.3,
	},
},
"XS_zongheng1":{
	prompt:"你的首个准备阶段，可令2名其他角色分别获得纵术与横术；出牌阶段限1次（首回合除外），或当拥有纵术、横术的角色死亡时，你可以转移纵术、横术。",
	enable:"phaseUse",
	usable:1,
	filter:function (event,player){
        if(!game.hasPlayer(function(current){
            return current.hasSkill('XS_hezong2')||current.hasSkill('XS_lianheng2');
        })) return false;
        return !player.hasSkill('XS_zongheng_phase');
    },
	filterTarget:function (card,player,target){
        if(ui.selected.targets.length==1){
            return true;
        }else{
            return target.hasSkill('XS_hezong2')||target.hasSkill('XS_lianheng2');
        }
    },
	targetprompt:["移走","得到"],
	selectTarget:2,
	multitarget:true,
	content:function (){
        'step 0'
		player.logSkill('XS_zongheng');
        if(targets[0].hasSkill('XS_hezong2')&&targets[0].hasSkill('XS_lianheng2')){
            player.chooseControl('纵术','横术').prompt='请选择要移动的术';
        }
        else{
            if(targets[0].hasSkill('XS_hezong2')) event._result={control:'纵术'};
            else event._result={control:'横术'};
        }
        'step 1'
        if(result.control=='纵术'){
            targets[0].removeSkill('XS_hezong2');
            targets[1].addSkill('XS_hezong2');
			game.playAudio('..','extension','血色衣冠','XS_zongheng1');
        }
        else{
            targets[0].removeSkill('XS_lianheng2');
            targets[1].addSkill('XS_lianheng2');
			game.playAudio('..','extension','血色衣冠','XS_zongheng2');
        }
    },
	ai:{
		order:8,
		result:{
			target:function (player,target){
				if(ui.selected.targets.length==0){
					return get.attitude(player,target)<0?-999:-3;
				}
				else{
					return target.countCards('h');
				}
			},
		},
		expose:0.4,
		threaten:2,
	},
},
"XS_zongheng2":{
	trigger:{
		global:"dieAfter",
	},
	direct:true,
	filter:function (event,player){
        return event.player.hasSkill('XS_hezong2')||event.player.hasSkill('XS_lianheng2');
    },
	content:function (){
        "step 0"
        player.logSkill('XS_zongheng');
        "step 1"
        if(trigger.player.hasSkill('XS_hezong2')){
            player.chooseTarget('请将'+get.translation(trigger.player)+'的【纵术】（出牌阶段限1次，你可以指定手牌数不为最多的至多4名角色各摸1张牌，然后这些角色横置）交给一名角色',true).set('ai',function(target){
                var player=_status.event.player;
                return 10+get.attitude(player,target);
            });
        }else event.goto(2);
        "step 2"
        if(result.bool&&result.targets&&result.targets.length){
            var target=result.targets[0];
            player.line(target,'fire');
            target.addSkill('XS_hezong2');
			game.playAudio('..','extension','血色衣冠','XS_zongheng1');
            game.delay();
        }
        "step 3"
        if(trigger.player.hasSkill('XS_lianheng2')){
            player.chooseTarget('请将'+get.translation(trigger.player)+'的【横术】（出牌阶段限1次，你可令1名其他角色摸1张牌并解除横置状态，然后选择1项：视为对你指定的目标使用1张杀；交给你1张牌。）交给一名角色',true).set('ai',function(target){
                var player=_status.event.player;
                return 10+get.attitude(player,target);
            });
        }else event.finish();
        "step 4"
        if(result.bool&&result.targets&&result.targets.length){
            var target=result.targets[0];
            player.line(target,'green');
            target.addSkill('XS_lianheng2');
			game.playAudio('..','extension','血色衣冠','XS_zongheng2');
            game.delay();
        }
    },
},
"XS_hezong2":{
	charlotte:true,
	mark:true,
	marktext:"纵",
	intro:{
		name:"纵术",
		content:"出牌阶段限1次，你可令手牌数不为最多的至多4名角色各摸1张牌并横置。",
	},
	enable:"phaseUse",
	usable:1,
	multitarget:true,
	multiline:true,
	selectTarget:[1,4],
	filterTarget:function (card,player,target){
        return !target.isMaxHandcard();
    },
	prompt:"出牌阶段限1次，你可令手牌数不为最多的至多4名角色各摸1张牌并横置。",
	content:function (){
        if(targets.length) {
            for(var i=0;i<targets.length;i++){
                targets[i].link(true);
            }
            game.asyncDraw(targets);
        }
    },
	ai:{
		order:8,
		expose:0.1,
		threaten:1.1,
		result:{
			target:function (player,target){
                if(target.isLinked()||!target.hasFriend()) return 1;
                return -0.5;
            },
		},
	},
},
"XS_lianheng2":{
	charlotte:true,
	mark:true,
	marktext:"横",
	intro:{
		name:"横术",
		content:"出牌阶段限1次，你可令1名其他角色摸1张牌并解除横置状态，然后选择1项：视为对你指定的目标使用1张杀；交给你1张牌。",
	},
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:1,
	selectTarget:1,
	filterTarget:function (card,player,target){
		return player!=target;
	},
	prompt:"出牌阶段限1次，你可令1名其他角色摸1张牌并解除横置状态，然后选择1项：视为对你指定的目标使用1张杀；交给你1张牌。",
	content:function (){
		"step 0"
		target.draw();
		target.link(false);
		event.tar=target;
        "step 1"
        player.chooseTarget(true,'选择“连横”的目标',function(card,player,target){
            return target!=player&&target!=event.tar;
        }).set('ai',function(target){
            var eff=get.effect(target,{name:'sha'},event.tar,player);
            return eff;
        });
        "step 2"
		event.tars2=result.targets[0];
		event.tar.chooseControlList(
			['视为对'+get.translation(event.tars2)+'使用1张杀',
			'交给'+get.translation(player)+'1张牌'],
			true).set('ai',function(event,player){
				var eff=get.effect(event.tars2,{name:'sha'},event.tar,event.tar);
				if(eff>2) return 0;
				return 1;
		});
        "step 3"
        if(result.index==1){
            event.goto(4);
        }
		else {
            event.tar.useCard({name:'sha',isCard:true},event.tars2);
            event.finish();
        }
		"step 4"
		event.tar.chooseCard('he',1,'交给'+get.translation(player)+'1张牌',true).ai=function(card){
			return 8-get.value(card);
		}
		"step 5"
		if(result.bool){
			player.gain(result.cards,event.tar,'giveAuto');
		}
    },
	ai:{
		order:8,
		result:{
			player:1,
			target:function (player,target){
                if(target.isLinked()) return 2;
				return 1;
            },
		},
		expose:0.3,
	},	
},
"XS_xiushen":{
	frequent:true,
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"phaseJieshuBegin",
	},
	filter:function (event,player){
         return !player.hasSkill('XS_hezong2')&&!player.hasSkill('XS_lianheng2');
    },
	content:function (){
        player.draw(2);
	},
},
"XS_jinggong":{
	audio:"ext:血色衣冠:2",
	mod:{
		maxHandcard:function (player,num){
			var num1=0;
            if(player.getEquip(1)||player.getEquip(2)){
                num1++;
            }
            return num+num1;
        },
	},
},
"XS_baihe":{
	enable:"phaseUse",
	usable:1,
	audio:"ext:血色衣冠:2",
	content:function (){
        player.link();
    },
	ai:{
		order:4,
		result:{
			player:function (player){
                var check1=game.hasPlayer(function(current){
                    return get.attitude(player,current)<0&&current.isLinked();
                });
                var check2=game.hasPlayer(function(current){
                    return get.attitude(player,current)>0&&current.isLinked();
                })
                if(!player.isLinked()) {
                    if(!check1&&!check2) return 3;
                    return -2;
                }
                else {
                    if(!check1&&!check2) return -2;
                    return 3;
                }
            },
		},
	},
	group:["XS_baihe_end"],
	subSkill:{
		end:{
			trigger:{
				player:"phaseUseAfter",
			},
			forced:true,
			content:function (){
                'step 0'
                player.chooseControl().set('choiceList',['所有横置角色弃牌','所有横置角色摸牌','所有非横置角色弃牌','所有非横置角色摸牌','取消']).set('ai',function(event,player){
                    var gain1=0,gain2=0,players=game.filterPlayer();
                    for(var i=0;i<players.length;i++){
                        if(get.attitude(player,players[i])>0) {
                            if(!players[i].isLinked()) {
                                gain1++;
                            }
                            else gain2++;
                        }
                        else {
                            if(!players[i].isLinked()) {
                                gain1--;
                            }
                            else gain2--;
                        }
                    }
                    if(gain1>0) {
                        if(gain1>gain2) return 3;
                        if(gain1<gain2) return 1;
                        return 4;
                    }
                    if(gain1<0) {
                        if(gain1>gain2) return 0;
                        if(gain1<gain2) return 2;
                        return 4;
                    }
                    else {
                        if(gain2>0) return 1;
                        if(gain2<0) return 0;
                        return 4;
                    }
                }).set('prompt','捭阖');
                "step 1"
				if(result.index!=4) {
					game.playXSAudio('XS_baihe',2);
					if(result.index==0){
						for(var i=0;i<game.players.length;i++){
							if(game.players[i].isLinked()) {
								game.players[i].chooseToDiscard(1,'he',true);
							}
						}
					}
					if(result.index==1){
						for(var i=0;i<game.players.length;i++){
							if(game.players[i].isLinked()) {
								game.players[i].draw();;
							}
						}
					}
					if(result.index==2){
						for(var i=0;i<game.players.length;i++){
							if(!game.players[i].isLinked()) {
								game.players[i].chooseToDiscard(1,'he',true);
							}
						}
					}
					else{
						if(result.index==3) {
							for(var i=0;i<game.players.length;i++){
								if(!game.players[i].isLinked()) {
									game.players[i].draw();
								}
							}
						}
						event.finish();
					}
				}

            },
			sub:true,
		},
	},
},
"XS_zhifa":{
	selectCard:[1,3],
	filterCard:true,
	charlotte:true,
	mark:true,
	marktext:"法",
	intro:{
		name:"治法",
		content:"出牌阶段限1次，你可以弃置至多3张牌，然后摸等量的牌。",
	},
	prompt:"出牌阶段限1次，你可以弃置至多3张牌，然后摸等量的牌。",
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:1,
	position:"he",
	check:function (card){
        return 6-get.value(card)
    },
                content:function (){
        player.draw(cards.length);
    },
                ai:{
                    order:1,
                    result:{
                        player:1,
                    },
                    threaten:1.2,
                },
            },
            "XS_yongshu":{
                charlotte:true,
                mark:true,
                marktext:"术",
                intro:{
                    name:"用术",
                    content:"出牌阶段限1次，你可以观看1名其他角色的手牌，然后弃置其中1张红桃牌。",
                },
				prompt:"出牌阶段限1次，你可以观看1名其他角色的手牌，然后弃置其中1张红桃牌。",
                enable:"phaseUse",
                usable:1,
                filterTarget:function (card,player,target){
        return target!=player&&target.countCards('h');
    },
                content:function (){
        'step 0'
        player.viewCards('用术',target.getCards('h'));
        event.cards=target.getCards('h',function(card){
            return get.suit(card)=='heart';
        });
        if(!event.cards.length){
            event.finish();
        }
        'step 1'
        player.chooseCardButton('选择一张红桃牌弃置之',event.cards).ai=function(button){
            return get.value(button.link);
        }
        'step 2'
        if(result.bool){
            target.discard(result.links[0]);
        }
    },
                ai:{
                    threaten:1.2,
                    result:{
                        target:function (player,target){
                return -target.countCards('h');
            },
                    },
                    order:10,
                    expose:0.4,
                },
            },
"XS_doushen":{
	enable:['chooseToUse'],
	filterCard:function(card){
		return true;
	},
	position:'he',
	viewAs:{
		name:'sha'
	},
	selectCard:function (){
		var player=_status.event.player;
		return player.hp;
	},
	viewAsFilter:function(player){
		return player.countCards('he')>=player.hp;
	},
	prompt:'你可将X张牌当作1张伤害基数+1的杀使用，若以此杀杀死了角色，你摸X张牌，X为你的体力值',
	check:function(card){
		var player=_status.event.player;
		return get.value(card)<5&&player.hp<=3;
	},
	ai:{
		threaten:function (player,target){
			var nm=(4-player.hp)*0.3;
            return 1+nm;
        },
	},
	group:["XS_doushen_use","XS_doushen_draw"],
	subSkill:{
		use:{
			trigger:{
				player:["shaBegin"],
			},	
			priority:78,
			direct:true,
			filter:function (event,player){
				return event.skill&&event.skill=='XS_doushen';
			},
			content:function (){
				trigger.baseDamage++;
			},
			ai:{
				damageBonus:true,
			},
			sub:true,
		},
		draw:{
			trigger:{
				source:"dieBegin",
			},
			direct:true,
			filter:function(event,player){
				return event.getParent(4).skill&&event.getParent(4).skill=='XS_doushen';
			},
			content:function(){
				player.draw(player.hp);
			},
			sub:true,
		},
	},
},
"XS_bencao":{
 	audio:"ext:血色衣冠:2",
	enable:"chooseToUse",
	filterCard:function(card){
		return get.color(card)=='black';
	},
	usable:1,
	viewAsFilter:function(player){
		return player.countCards('h',{color:'black'});
	},
	viewAs:{
		name:"tao",
	},
	position:"h",
	prompt:"将一张黑色手牌当桃使用",
	check:function (card){return 8-get.value(card)},
	ai:{
        skillTagFilter:function (player){
            return player.countCards('h',{color:'black'});
        },
        threaten:1.2,
        save:true,
        respondTao:true,
        basic:{
            order:function (card,player){
                if(player.hasSkillTag('pretao')) return 5;
                return 2;
            },
            useful:[8,6.5,5,4],
            value:[8,6.5,5,4],
        },
    },
	group:["XS_bencao_du"],
	subSkill:{
        du:{
			trigger:{
				global:"loseHpBegin",
			},
			check:function (event,player){
				return get.attitude(player,event.player)>0;
			},
			logTarget:'player',
			filter:function(event,player){
				if(event.getParent().name=='g_du') return true;
				return false;
			},
			"prompt2":function (event,player){
				return '是否使'+get.translation(event.player)+'防止体力流失并摸1张牌？';
			},
			content:function (){
				trigger.player.draw();
				trigger.cancel();
			},
        },
    },
},
"XS_quji":{
	audio:"ext:血色衣冠:2",
    enable:"phaseUse",
    usable:1,
    filterTarget:function (card,player,target){
        return target!=player&&target.countCards('h');
    },
	filter:function (event,player){
        return game.hasPlayer(function(current){
            return current!=player&&current.countCards('h');
        });
    },
    selectTarget:1,
    content:function (){
        "step 0"
		player.chooseCardButton('祛疾：你可重铸'+get.translation(target)+'至多2张手牌，若重铸了2张黑色手牌，你视为对其使用1张桃。',target.getCards('h'),[1,2],false).ai=function(button){
			var att=get.attitude(player,target);
			if(att>0) {
				var col=get.color(button.link);
				if(ui.selected.buttons.length==0) {
					if(col=='black') return 7-get.value(button.link);
					else return 5.5-get.value(button.link);
				}
				else {
					if(get.color(ui.selected.buttons[0])=='black') {
						if(col=='black') return 8-get.value(button.link);
						else return 4.5-get.value(button.link);
					}
					else return 5.5-get.value(button.link);
				}
			}
			else {
				var col=get.color(button.link);
				if(ui.selected.buttons.length==0) {
					return get.value(button.link)-6;
				}
				else {
					if(get.color(ui.selected.buttons[0])=='black') {
						if(col=='black') return -20;
						else return get.value(button.link)-6;
					}
					else return get.value(button.link)-6;
				}
			}
		}
		"step 1"
		if(result.bool){
			var cards=result.links;
			if(cards.length==2&&get.color(cards[0])=='black'&&get.color(cards[1])=='black') event.rec=true;
			target.chongzhuCards(cards);
		}
		else event.finish();
		"step 2"
		if(event.rec) {
			player.useCard({name:'tao',isCard:true},target);
		}
    },
    ai:{
		order:9,
		expose:0.2,
		result:{
			player:1,
			target:function (player,target){
				var att=get.attitude(player,target);
				var hs=target.countCards('h')-2;
				if(target.isDamaged()) hs*=5;
				return hs*att;
            },
		},
    },
},
"XS_heshi":{
	charlotte:true,
	mark:true,
	marktext:"势",
	intro:{
		name:"合势",
		content:"出牌阶段限3次，你可以将1张武器或防具手牌置于1名其他角色装备区里（无法替换原装备），然后摸1张牌。",
	},
	prompt:"出牌阶段限3次，你可以将1张武器或防具手牌置于1名其他角色装备区里（无法替换原装备），然后摸1张牌。",
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:3,
	filter:function (event,player){
        return player.countCards('h',{subtype:'equip1'})>0||player.countCards('h',{subtype:'equip2'})>0;
    },
                filterCard:function (card){
        return get.subtype(card)=='equip1'||get.subtype(card)=='equip2';
    },
    check:function (card){
		var player=_status.currentPhase;
        if(player.countCards('he',{subtype:get.subtype(card)})>1){
            return 11-get.equipValue(card);
        }
        return 6-get.value(card);
    },
                filterTarget:function (card,player,target){
        if(target.isMin()) return false;
        var type=get.subtype(card);
        return player!=target&&target.isEmpty(type);
    },
                content:function (){
        target.equip(cards[0]);
        player.draw();
    },
                discard:false,
                prepare:function (cards,player,targets){
        player.$give(cards,targets[0],false);
    },
	ai:{
		expose:0.3,
		order:10,
		result:{
			target:3,
		},
		threaten:1.1,
	},
},
"XS_falun":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:"gameStart",
		player:["enterGame"],
	},
	forced:true,
	group:["XS_falun1","XS_falun2"],
	content:function (){
        player.addSkill('XS_zhifa');
        player.addSkill('XS_yongshu');
        player.addSkill('XS_heshi');
    },
},
"XS_falun1":{
	prompt:"游戏开始你获得法、术、势标记，出牌阶段限一次，或当拥有法、术、势标记的角色死亡时，你可以转移法、术、势。",
	enable:"phaseUse",
	usable:1,
	filter:function (event,player){
        if(!game.hasPlayer(function(current){
            return current.hasSkill('XS_zhifa')||current.hasSkill('XS_yongshu')||current.hasSkill('XS_heshi');
        })) return false;
        return true;
    },
                filterTarget:function (card,player,target){
        if(ui.selected.targets.length==1){
            return true;
        }else{
            return target.hasSkill('XS_zhifa')||target.hasSkill('XS_yongshu')||target.hasSkill('XS_heshi');
        }
    },
                targetprompt:["移走","得到"],
                selectTarget:2,
                multitarget:true,
                content:function (){
        'step 0'
        var list=[];
        if(targets[0].hasSkill('XS_zhifa')){
            list.push('法');
        }
        if(targets[0].hasSkill('XS_yongshu')){
            list.push('术');
        }
        if(targets[0].hasSkill('XS_heshi')){
            list.push('势');
        }
        if(list.length){
            player.chooseControl(list).set('prompt','请选择要移动的标记');
        }
        'step 1'
        if(result.control=='法'){
            targets[0].removeSkill('XS_zhifa');
            targets[1].addSkill('XS_zhifa');
        }
        else{
            if(result.control=='术') {
                targets[0].removeSkill('XS_yongshu');
                targets[1].addSkill('XS_yongshu');
            }
            else {
                targets[0].removeSkill('XS_heshi');
                targets[1].addSkill('XS_heshi');
            }
        }
    },
                ai:{
                    order:8,
                    result:{
                        target:function (player,target){
                if(ui.selected.targets.length==0){
                    return get.attitude(player,target)<0?-999:-3;
                }
                else{
                    return target.countCards('h');
                }
            },
		},
		expose:0.4,
		threaten:2,
	},
},
"XS_falun2":{
	trigger:{
		global:"dieAfter",
	},
	direct:true,
	filter:function (event,player){
        return event.player.hasSkill('XS_zhifa')||event.player.hasSkill('XS_yongshu')||event.player.hasSkill('XS_heshi');
    },
                content:function (){
        "step 0"
        player.logSkill('XS_falun');
        "step 1"
        if(trigger.player.hasSkill('XS_zhifa')){
            player.chooseTarget('请将'+get.translation(trigger.player)+'的「法」交给一名角色',true).set('ai',function(target){
                var player=_status.event.player;
                return 10+get.attitude(player,target);
            });
        }else event.goto(2);
        "step 2"
        if(result.bool&&result.targets&&result.targets.length){
            var target=result.targets[0];
            player.line(target,'fire');
            target.addSkill('XS_zhifa');
            game.delay();
        }
        "step 3"
        if(trigger.player.hasSkill('XS_yongshu')){
            player.chooseTarget('请将'+get.translation(trigger.player)+'的「术」交给一名角色',true).set('ai',function(target){
                var player=_status.event.player;
                return 10+get.attitude(player,target);
            });
        }else event.goto(4);
        "step 4"
        if(result.bool&&result.targets&&result.targets.length){
            var target=result.targets[0];
            player.line(target,'water');
            target.addSkill('XS_yongshu');
            game.delay();
        }
        "step 5"
        if(trigger.player.hasSkill('XS_heshi')){
            player.chooseTarget('请将'+get.translation(trigger.player)+'的「势」交给一名角色',true).set('ai',function(target){
                var player=_status.event.player;
                return 10+get.attitude(player,target);
            });
        }else event.finish();
        "step 6"
        if(result.bool&&result.targets&&result.targets.length){
            var target=result.targets[0];
            player.line(target,'green');
            target.addSkill('XS_heshi');
            game.delay();
        }
    },
},
            "XS_shuonan":{
                audio:"ext:血色衣冠:2",
                mod:{
                    maxHandcard:function (player,num){
            if(!player.hasSkill('XS_zhifa')) return num+1;
            return num;
        },
                    globalTo:function (from,to,current){
            if(!to.hasSkill('XS_yongshu')) return current+1;
            return current;
        },
                },
                trigger:{
                    player:"phaseDrawBegin",
                },
                forced:true,
                filter:function (event,player){
        return !player.hasSkill('XS_heshi');
    },
                content:function (){
        trigger.num++;
    },
            },
"XS_gufen":{
	mod:{
		maxHandcard:function (player,num){
            if(!player.hasSkill('XS_zhifa')) return num+2;
            return num;
        },
		globalFrom:function (from,to,current){
			if(!from.hasSkill('XS_yongshu')) return current-1;
		},
		globalTo:function (from,to,current){
            if(!to.hasSkill('XS_yongshu')) return current+1;
		},
	},
	trigger:{
		player:"phaseDrawBegin",
	},
	forced:true,
	filter:function (event,player){
        return !player.hasSkill('XS_heshi');
    },
	content:function (){
        trigger.num++;
    },
},
"XS_lianbing":{
	init:function (player){
		player.storage.XS_lianbing=[];
	},
	intro:{
		content:"cards",
	},
	marktext:"练",
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:1,
	content:function (){
        'step 0'
        event.cards=[];
        event.getResultString=function(str){
            switch(str){
                case '武器':return 'equip1';
                case '防具':return 'equip2';
                case '防御马':return 'equip3';
                case '攻击马':return 'equip4';
            }
            return str;
        };
        'step 1'
        player.chooseControl('武器','防具','防御马','攻击马',function(){
            if(Math.random()<0.3) return '武器';
            if(Math.random()<0.6&&Math.random()>=0.3) return '防具';
            if(Math.random()<0.8&&Math.random()>=0.6) return '防御马';
            return '攻击马'
        }).set('prompt','练兵：请选择想要获得的装备牌类型');
        'step 2'
        event.control=event.getResultString(result.control);
        var card=get.cardPile(function(card){
            return get.subtype(card)==event.control;
        });
        if(card){
            player.gain(card,'gain2','log');
        }
        else {
            player.draw();
        }
    },
	ai:{
		order:8,
		result:{
			player:3,
		},
	},
	group:["XS_lianbing_lose","XS_lianbing_clear"],
	subSkill:{
		lose:{
			trigger:{
				player:'loseAfter',
				global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter'],
			},
			forced:true,
			filter:function(event,player){
				var evt=event.getl(player);
				return evt&&evt.player==player&&evt.es&&evt.es.length>0;
			},
			content:function (){
				"step 0"
				event.eqs=trigger.getl(player).es;
				"step 1"
				if(event.eqs.length){
					var eq=event.eqs.shift();
					event.current=eq;
				}
				else event.finish();
				"step 2"
				var card=[];
				var check=true,tp=player.storage.XS_lianbing;
				if(tp.length) {
					for(var j=0;j<tp.length;j++) {
						if(tp[j].name==event.current.name) { check=false; }
					}
					if(check) {
						card[0]=event.current;
					}
				}
				else {
					card[0]=event.current;
				}
				if(card[0]){
					var info=get.info(card[0]);
					if(info.skills){
						if(card[0].clone){
							card[0].clone.moveDelete(player);
						}
						player.storage.XS_lianbing.push(card[0]);
						player.markSkill('XS_lianbing');
						player.syncStorage('XS_lianbing');
						player.addAdditionalSkill('XS_lianbing',info.skills,true);
					}
				}
				"step 3"
				event.goto(1);
			},
			ai:{
				effect:{
					target:function (card,player,target,current){
						if(get.subtype(card)=='equip1') return [1,3];
					},
				},
			},
			sub:true,
		},
		clear:{
			trigger:{
				player:"phaseAfter",
			},
			direct:true,
			filter:function (event,player){
                return player.storage.XS_lianbing.length>0;
            },
			content:function (){
				player.discard(player.storage.XS_lianbing);
				player.storage.XS_lianbing=[];
				player.unmarkSkill('XS_lianbing');
				player.removeAdditionalSkill('XS_lianbing');
            },
			sub:true,
		},
	},
},
"XS_lunke":{
	init:function (player){
        player.storage.XS_lunke=[];
    },
	marktext:"论",
	intro:{
		content:"cards",
	},
	enable:"phaseUse",
	usable:1,
	filter:function (event,player){
        return player.countCards('h')>0;
    },
	filterTarget:function (card,player,target){
        return player.canCompare(target);
    },
	selectTarget:function (){
        var player=_status.event.player
        return [1,Math.min(3,player.countCards('h'))];
    },
	multitarget:true,
	multiline:true,
	group:["XS_lunke_win"],
	content:function (){
        for(i=0;i<targets.length;i++) {
            player.chooseToCompare(targets[i]).callback=lib.skill.XS_lunke.callback;
        }
    },
	ai:{
		expose:0.4,
		result:{
			target:function (player,target){
				return -1;
			},
		},
		order:9,
	},
},
"XS_lunke_win":{
	trigger:{
		player:["chooseToCompareAfter","compareMultipleAfter"],
	},
	filter:function (event,player){
        if(event.preserve) return false;
        return event.parent.name=='XS_lunke';
    },
	direct:true,
	content:function (){
        if(get.number(trigger.card1)>get.number(trigger.card2)) {
			trigger.target.$give(trigger.card2,player);
            trigger.target.lose(trigger.card2,ui.special,'toStorage');
            player.storage.XS_lunke.push(trigger.card2);
            player.markSkill('XS_lunke');
            player.syncStorage('XS_lunke');
        }
        else {
            player.draw();
        }
    },
},
"XS_xianghe":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:"phaseDiscardAfter",
	},
	filter:function (event,player){
		if(event.player==player) return false;
        if(event.player.isIn()&&event.cards&&event.cards.length>0) {
            return player.storage.XS_lunke.length>0
        }
        return false;
    },
	logTarget:"player",
	check:function (event,player){
        for(var i=0;i<event.cards.length;i++){
            if(event.cards[i].name=='du') return false;
        }
        return event.cards.length>1&&get.attitude(event.player,player)>0;
    },
	content:function (){
        'step 0'
        event.cards=trigger.cards;
        if(trigger.delay==false) game.delay();
        player.chooseCardButton('移除1张“论”',player.storage.XS_lunke);
        "step 1"
        if(result.bool){
            player.storage.XS_lunke.remove(result.links[0]);
            player.$throw(result.links);
            game.cardsDiscard(result.links);
            player.syncStorage('XS_lunke');
			if(player.storage.XS_lunke.length<=0) {
				player.unmarkSkill('XS_lunke');
			}
            var num=event.cards.length;
			player.gain(trigger.cards,'log','gain2');
			if(trigger.player==player) {
				event.finish();
			}
			else {
				player.chooseCard('he',[1,num],'请选择需要交给'+get.translation(trigger.player)+'的牌',true).set('ai',function(card){
					var player=_status.event.player;
					var trigger=_status.event.getTrigger();
					if(get.attitude(trigger.player,player)>0){
						return 5-get.value(card);
					}
					else{
						return 2-get.value(card);
					}
				});
			}
        }
        else event.finish();
        "step 2"
        if(result.bool){
            player.$give(result.cards,trigger.player);
            trigger.player.gain(result.cards);
        }
    },
},
"XS_yanshi":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:1,
	filter:function (event,player){
        return player.countCards('h');
    },
	filterTarget:function (card,player,target){
        return player!=target&&target.countCards('h')&&!target.hasSkill('XS_yanshi_temp');
    },
	content:function (){
        'step 0'
		player.chooseCard('选择展示1张手牌','h',true).set('ai',function(card){
			return 6.5-get.value(card);
		});
		'step 1'
		event.cd1=result.cards[0];
		target.chooseCard('选择展示1张手牌','h',true).set('ai',function(card){
			return 6.5-get.value(card);
		});
		'step 2'
		event.cd2=result.cards[0];
		player.showCards(event.cd1);
		'step 3'
		target.showCards(event.cd2);
		if(get.suit(event.cd1)!=get.suit(event.cd2)) {
			target.damage(player,1,'fire');
		}
		else {
			target.addTempSkill('XS_yanshi_temp');
			player.getStat().skill.XS_yanshi--;
		}
    },
	ai:{
		expose:0.3,
		order:9,
		result:{
			target:function (player,target){
				var hs=target.countCards('h')+0.01;
                return -2/hs;
            },
		},
	},
	subSkill:{
        temp:{
			charlotte:true,
			sub:true,
        },
    },
},
"XS_shenhuo":{
	trigger:{
		source:"damageBegin2",
	},
	filter:function (event,player){
        return player.countCards('h')&&player.isDamaged();
    },
	firstDo:true,
	direct:true,
	content:function (){
		"step 0"
		player.chooseToDiscard(get.prompt('XS_shenhuo'),'是否弃置至多'+player.getDamagedHp()+'张手牌，令你对'+get.translation(trigger.player)+'造成的伤害改为火属性，且伤害值增加相同数值？',[1,player.getDamagedHp()],'h',false).set('ai',function(card){
			var tri=_status.event.getTrigger();
			var eff=get.damageEffect(tri.player,player,player);
			return eff>0?(7-get.value(card)):-1;
		});
		"step 1"
		if(result.bool) {
			player.logSkill('XS_shenhuo',trigger.player);
			player.line(trigger.player);
			trigger.nature='fire';
			trigger.num+=result.cards.length;
		}
	},
	group:["XS_shenhuo_defend"],
    subSkill:{
        defend:{
			trigger:{
				player:"damageBefore",
			},
			filter:function (event,player){
				return event.nature=='fire';
			},
			firstDo:true,
			priority:8199,
			forced:true,
			content:function (){
				trigger.cancel();
			},
			ai:{
				nofire:true,
				effect:{
					target:function(card,player,target,current){
						if(get.tag(card,'fireDamage')) return 'zeroplayertarget';
					}
				}
			},
			sub:true,
        },
    },
},
"XS_wohu":{
 	trigger:{
		player:"damageAfter",
	},
	filter:function (event,player){
        return !event.nature&&event.num>0;
    },
	frequent:true,
	content:function (){
		player.draw(player.getDamagedHp());
        player.addTempSkill('XS_wohu_skip',{player:'phaseAfter'});
    },
	ai:{
		effect:{
			target:function (card,player,target){
                if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
                if(!get.tag(card,'natureDamage')) return [1,1];
            },
		},
	},
	subSkill:{
		skip:{
			intro:{
				content:function(storage,player,skill){
					return '跳过下回合判定及弃牌阶段';
				},
			},
			mark:true,
			charlotte:true,
			trigger:{
				player:["phaseBefore"],
			},
			direct:true,
			content:function (){
				player.skip('phaseJudge');
				player.skip('phaseDiscard');
				player.removeSkill('XS_wohu_skip');
            },
			sub:true,
		},
	},
},
"XS_wangmen":{
	trigger:{
		player:"phaseDrawEnd",
	},
	filter:function (event){
		return event.cards&&event.cards.length;
	},
	direct:true,
	content:function (){
		"step 0"
		event.cards=trigger.cards.slice(0);
		var num=event.cards.length;
		player.chooseCardTarget({
			filterCard:function(card){
				return _status.event.getParent().cards.contains(card);
			},
			selectCard:[1,num],
			filterTarget:function(card,player,target){
				return player!=target;
			},
			ai1:function(card){
				if(card.name=='du') return 20;
				var hs=_status.event.player.countCards('h');
				return hs>2;
			},
			ai2:function(target){
				var att=get.attitude(_status.event.player,target);
				var hs=target.countCards('h')+0.01;
				return att/hs;
			},
			prompt:'是否发动【雅望】？</br></br>你可将于摸牌阶段获得的任意张牌交给1名其他角色，若你因此未获得牌，可视为使用1张【声东击西】。'
		});
		"step 1"
		if(result.bool){
			event.mark=false;
			if(result.cards.length==event.cards.length) {
				event.mark=true;
			}
			player.logSkill('XS_wangmen',result.targets[0]);
			result.targets[0].gain(result.cards,player,'giveAuto');
			game.delay(0.7);
		}
		"step 2"
		if(event.mark) {
			player.chooseUseTarget({name:'shengdong',isCard:true});
		}
	},
},
"XS_laoyi":{
	trigger:{player:'phaseDiscardBefore'},
	audio:"ext:血色衣冠:2",
	forced:true,
	firstDo:true,
	filter:function(event,player){
		return player.needsToDiscard();
	},
	content:function(){},
	mod:{
		maxHandcard:function (player,num){
			return Math.ceil(player.hp/2);
		},
	},
},
"XS_yingbian":{
	audio:"ext:血色衣冠:2",
	trigger:{player:'damageEnd'},
	frequent:true,
	filter:function(event,player){
		if(player.isHealthy()) return false;
		return game.hasPlayer(function(current){
			var ejs=current.getCards('ej');
			for(var i=0;i<ejs.length;i++){
				if(game.hasPlayer(function(current2){
					return current!=current2&&!current2.isMin()&&((get.position(ejs[i])=='e'&&current2.isEmpty(get.subtype(ejs[i])))||(get.position(ejs[i])=='j'&&!current2.hasJudge(ejs[i])));
				})){
					return true;
				}
			}
		});
	},
	content:function(){
		"step 0"
		event.count=player.getDamagedHp();
		event.cards=[];
		"step 1"
		event.count--;
		if(!game.hasPlayer(function(current){
			var ejs=current.getCards('ej',function(card){
				return !event.cards.contains(card);
			});
			for(var i=0;i<ejs.length;i++){
				if(game.hasPlayer(function(current2){
					return current!=current2&&!current2.isMin()&&((get.position(ejs[i])=='e'&&current2.isEmpty(get.subtype(ejs[i])))||(get.position(ejs[i])=='j'&&!current2.hasJudge(ejs[i])));
				})){
					return true;
				}
			}
		})){
			event.finish();
			return;
		};
		var next=player.chooseTarget(2,function(card,player,target){
			if(ui.selected.targets.length){
				var from=ui.selected.targets[0];
				if(target.isMin()) return false;
				var ejs=from.getCards('ej',function(card){
					return !event.cards.contains(card);
				});
				for(var i=0;i<ejs.length;i++){
					if((get.position(ejs[i])=='e'&&target.isEmpty(get.subtype(ejs[i])))||(get.position(ejs[i])=='j'&&!target.hasJudge(ejs[i]))) return true;
				}
				return false;
			}
			else{
				return target.countCards('ej',function(card){
					return !event.cards.contains(card);
				})>0;
			}
		});
		next.set('ai',function(target){
			var att=get.attitude(player,target);
			var sgnatt=get.sgn(att);
			if(ui.selected.targets.length==0){
				if(att>0){
					if(target.countCards('e',function(card){
						return get.value(card,target)<0&&!event.cards.contains(card)&&game.hasPlayer(function(current){
							return current!=target&&((get.position(card)=='e'&&current.isEmpty(get.subtype(card)))||(get.position(card)=='j'&&!current.hasJudge(card)))&&get.effect(current,card,player,player)<0;
						});
					})>0) return 9;
				}
				else if(att<0){
					if(game.hasPlayer(function(current){
						if(current!=target&&get.attitude(player,current)>0){
							var ejs=target.getCards('ej',function(card){
								return !event.cards.contains(card);
							});
							for(var i=0;i<ejs.length;i++){
								if(get.value(ejs[i],target)>0&&((get.position(ejs[i])=='e'&&current.isEmpty(get.subtype(ejs[i])))||(get.position(ejs[i])=='j'&&!current.hasJudge(ejs[i])))&&get.effect(current,ejs[i],player,current)>0) return true;
							}
						}
					})){
						return -att;
					}
				}
				return 0;
			}
			var ejs=ui.selected.targets[0].getCards('ej',function(card){
				return !event.cards.contains(card);
			});
			var i;
			var att2=get.sgn(get.attitude(player,ui.selected.targets[0]));
			for(i=0;i<ejs.length;i++){
				if(sgnatt!=0&&att2!=0&&sgnatt!=att2&&
					get.sgn(get.value(ejs[i],ui.selected.targets[0]))==-att2&&
					get.sgn(get.effect(target,ejs[i],player,target))==sgnatt&&
					target.isEmpty(get.subtype(ejs[i]))){
					return Math.abs(att);
				}
			}
			if(i==ejs.length){
				return 0;
			}
			return -att*get.attitude(player,ui.selected.targets[0]);
		});
		next.set('multitarget',true);
		next.set('targetprompt',['被移走','移动目标']);
		next.set('prompt','移动场上的一张牌');
		"step 2"
		if(result.bool){
			player.line2(result.targets,'green');
			event.tar0=result.targets[0];
			event.tar1=result.targets[1];
		}
		else{
			event.finish();
		}
		"step 3"
		game.delay();
		"step 4"
		player.choosePlayerCard('ej',true,function(button){
			if(get.attitude(player,event.tar0)>0&&get.attitude(player,event.tar1)<0){
				if(get.value(button.link,event.tar0)<0&&get.effect(event.tar1,button.link,player,event.tar1)>0) return 10;
				return 0;
			}
			else{
				return get.value(button.link)*get.effect(event.tar1,button.link,player,player);
			}
		},event.tar0).set('filterButton',function(button){
			if(event.cards.contains(button.link)) return false;
			return (get.position(button.link)=='e'&&event.tar1.isEmpty(get.subtype(button.link)))||(get.position(button.link)=='j'&&!event.tar1.hasJudge(button.link));
		});
		"step 5"
		if(result.bool&&result.links.length){
			var link=result.links[0];
			event.cards.add(link);
			if(get.position(link)=='e') {
				event.tar1.equip(link);
			}
			else {
				event.tar1.addJudge(link);
			}
			event.tar0.$give(link,event.tar1)		
			game.delay();
		}
		else event.finish();
		"step 6"
		if(event.count>0) event.goto(1);
	},
	ai:{
		maixie:true,
        "maixie_defend":true,
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')){
					if(!target.hasFriend()) return;
					if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
					if(target.canMoveCard(true)) return [1,1.5]
				}
			},
		},
    },
},
"XS_xianji":{
	init:function (player){
		player.storage.XS_xianji=0;
	},
	intro:{
		content:function (storage){
			return '你使用牌的次数、进攻距离+<span class="bluetext">'+storage+'</span>';
		},
	},
	mod:{
		cardUsable:function(card,player,num){
			if(card.name=='sha') {
				return num+player.storage.XS_xianji;
			}
		},
		globalFrom:function(from,to,distance){
			return distance-from.storage.XS_xianji;
		}
	},
	trigger:{player:'phaseBegin'},
	priority:848,
	frequent:true,
	audio:"ext:血色衣冠:2",
	content:function(){
		"step 0"
		player.chooseControl(['摸牌阶段','出牌阶段']).set('ai',function(event){
			return player.countCards('j')?'出牌阶段':'摸牌阶段';
		}).set('prompt','你可获得1个额外的出牌或摸牌阶段，若为出牌阶段，你可弃置你场上任意张牌并摸等量牌，如此你本回合进攻距离、使用杀的次数+弃置牌数');
		"step 1"
		if(result.control=='摸牌阶段') {
			var next=player.phaseDraw();
			event.next.remove(next);
			trigger.next.push(next);
			event.finish();
		}
		else {
			var next=player.phaseUse();
			event.next.remove(next);
			trigger.next.push(next);
			if(player.countCards('ej')) {
				player.discardPlayerCard(player,'ej',[1,Infinity]);
			}
		}
		"step 2"
		if(result.bool) {
			player.draw(result.cards.length);
			player.storage.XS_xianji=result.cards.length;
			player.markSkill('XS_xianji');
		}
	},
	ai:{
		effect:{
			target:function (card,player,target,current){
                if(get.type(card)=='delay') return [0,1];
            },
		},
	},
	group:["XS_xianji_clear"],
	subSkill:{
		clear:{
			trigger:{
				player:'phaseAfter'
			},
			filter:function(event,player){
				return player.storage.XS_xianji!=0;
			},
			direct:true,
			content:function(){
				player.storage.XS_xianji=0;
				player.unmarkSkill('XS_xianji');
			},
			sub:true,
		},
	},
},
"XS_jiebing":{
    trigger:{
        global:"gainEnd",
    },
	usable:1,
    audio:2,
	logTarget:"source",
	frequent:true,
    filter:function (event,player){
		if(!event.source) return false;
		if(event.source==player) return false;
		return event.source.isAlive();
    },
    content:function (){
		"step 0"
		game.delay(0.7);
		"step 1"
		event.pla=player;
		trigger.source.chooseControl().set('choiceList',['令'+get.translation(player)+'摸1张牌','弃置1张牌'],true).set('ai',function(event,player){	
			return 0;
		}).set('prompt','皆兵：请选择1项');
		"step 2"
		if(result.index==0||!trigger.source.countCards('he')){
			player.draw();
		}
		else{
			trigger.source.chooseToDiscard(1,'he',true);
		}
    },
    ai:{
		expose:0.3,
        threaten:1.2,
    },
},
"XS_wangzuo":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"phaseZhunbeiBegin",
	},
	priority:15,
	direct:true,
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt2('XS_wangzuo'),1,false,function(card,player,target){
			return true;
		},true).set('ai',function(target){
			var att=get.attitude(player,target);
			return att;
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_wangzuo',result.targets[0]);
			event.tar=result.targets[0];
		}
		else event.finish();
		"step 2"
		var list1=[];
        var list=get.inpile('equip');
        for(var i=0;i<list.length;i++){
            var card={name:list[i]};
            var info=get.info(card);
            if(info.subtype=='equip1'&&info.skills){
				list1.push(list[i]);
            }
        }
        for(var i=0;i<list1.length;i++){
            list1[i]=['武器','',list1[i]];
        }
        if(list1.length>0){
            var dialog=ui.create.dialog('声明一张武器牌令'+get.translation(event.tar)+'获得其特效直到下回合开始',[list1,'vcard'],'hidden');
            player.chooseButton(dialog,true).set('ai',function(button){
				var nm=button.link[2];
				if(player.countCards('h',{name:nm})>1) return 20;
                return Math.random();
            });
        }
		"step 3"
        if(result.bool){
			event.tar.addTempSkill('XS_wangzuo_mark',{player:'phaseAfter'});
            var card={name:result.buttons[0].link[2]};
            var name=result.buttons[0].link[2];
			event.tar.storage.XS_wangzuo_mark=name;
            game.log(event.tar,'获得了',get.translation(name),'的技能。');
            var info=get.info(card);
			if(info.skills){
				event.tar.addAdditionalSkill('XS_wangzuo_mark',info.skills);
				event.tar.markSkill('XS_wangzuo_mark');
			}
			else{
				event.tar.removeAdditionalSkill('XS_wangzuo_mark');
			}
        }
	},
	ai:{
		expose:0.3,
	},
    subSkill:{
		mark:{
			charlotte:true,
			marktext:'佐',
			intro:{
				content:function (storage){
					if(storage){
						return '获得了：'+get.translation(storage)+'的效果';
					}
				},
			},
			onremove:function(player){
				player.unmarkSkill('XS_wangzuo_mark');
			},
			filter:function (event,player){
				if(!player.storage.XS_wangzuo_mark) return false;
				return event.card.name==player.storage.XS_wangzuo_mark;
			},
            trigger:{
                player:["equipAfter"],
            },
			forced:true,
            content:function (){
				player.draw(2);
            },
        },
    },
},
"XS_jindao":{
	enable:"phaseUse",
	usable:1,
	audio:"ext:血色衣冠:2",
	filter:function (event,player){
		return game.hasPlayer(function(current){
			return current!=player&&current.countCards('e');
		});
    },
	filterTarget:function (card,player,target){
        return player!=target&&target.countGainableCards(player,'e')>0;
    },
	content:function (){
        'step 0'
        event.target1=targets[0];
        player.line(event.target1,'green');
        var next=player.chooseButton();
        next.set('createDialog',['“金刀”：是否获得'+get.translation(event.target1)+'的一张装备牌？',event.target1.getCards('e')]);
        next.set('ai',function(button){
            return get.buttonValue(button);
        });
        'step 1'
        if(result.bool){
            player.logSkill('XS_jindao',event.target1);
            player.gain(result.links[0],event.target1,'giveAuto');
        }
        else event.finish();
        'step 2'
        player.chooseTarget(get.prompt('XS_jindao'),'令1名其他角色装备1张装备牌',function(card,player,target){
            return target!=player;
        }).set('ai',function(target){
            var player=_status.event.player;
            var att=get.attitude(player,target)
            return att;
        });
        'step 3'
        if(result.bool){
            event.target2=result.targets[0];
            player.line(event.target2,'green');
            var next=player.chooseButton();
            next.set('createDialog',['“金刀”：是否令'+get.translation(event.target2)+'装备1张装备牌？',player.getCards('he',{type:'equip'})]);
            next.set('ai',function(button){
				if(event.target2.storage.XS_wangzuo_mark) {
					var nm=button.link.name;
					if(nm==event.target2.storage.XS_wangzuo_mark) return 20;
				}
                return 8-get.value(button.link);
            });
        }
        else event.finish();
        'step 4'
        if(result.bool){
            var sub=get.subtype(result.links[0]);
            if(!event.target2.isEmpty(sub)) player.draw();
			event.target2.gain(result.links[0],player,'giveAuto');
            event.target2.equip(result.links[0]);
        }
    },
	ai:{
		order:5,
		result:{
			target:-1.5,
		},
		expose:0.4,
		threaten:1.1,
	},
},
"XS_shanmou":{
	init:function (player){
		player.storage.XS_shanmou=0;
	},
	intro:{
		content:function (storage){
			return '“善谋”判定失败次数：'+storage;
		},
	},
	trigger:{player:'useCard'},
	marktext:'谋',
	frequent:true,
	priority:3,
	filter:function(event,player){
		if(!player.isPhaseUsing()) return false;
		return (get.type(event.card)=='trick'&&event.card.isCard);
	},
	content:function (){
		"step 0"
		player.judge('善谋',function(card){
			var sui=get.color(trigger.card);
			if(get.color(card)==sui) return 3;
			return -3;
		});
		"step 1"
		if(result.bool){
			player.draw(2);
		}
		else {
			player.storage.XS_shanmou++;
			player.markSkill('XS_shanmou');
		}
    },
	ai:{
		threaten:1.2,
		noautowuxie:true,
	},
},
"XS_yunchou":{
	trigger:{
		player:"phaseAfter",
	},
	forced:true,
	filter:function (event,player){
		return player.storage.XS_shanmou&&player.storage.XS_shanmou>0;
	},
	priority:18,
	content:function (){
		"step 0"
		if(player.storage.XS_shanmou>=1) {
			player.chooseUseTarget('你可视为使用1张“过河拆桥”',{name:"guohe",isCard:true},false);
		}
		"step 1"
		if(player.storage.XS_shanmou>=2) {
			player.chooseUseTarget('你可视为使用1张“打草惊蛇”',{name:"XS_dacao",isCard:true},false);
		}
		"step 2"
		if(player.storage.XS_shanmou>=3) {
			player.chooseUseTarget('你可视为使用1张“顺手牵羊”',{name:"shunshou",isCard:true},false);
		}
		"step 3"
		player.storage.XS_shanmou=0;
		player.unmarkSkill('XS_shanmou');
	},
	ai:{
		combo:'XS_shanmou',
	},
},
"XS_quzhu":{
	audio:"ext:血色衣冠:2",
	enable:["chooseToRespond","chooseToUse"],
	filter:function (event,player){
        return _status.currentPhase==player;
    },
	filterCard:function (card,player){
        return get.color(card)=='red';
    },
	position:"he",
	viewAs:{
		name:"sha",
	},
	viewAsFilter:function (player){
        if(!player.countCards('he',{color:'red'})) return false;
    },
	prompt:"将一张红色牌当杀使用或打出",
	check:function (card){return 4-get.value(card)},
	ai:{
		skillTagFilter:function (player){
			if(_status.currentPhase!=player) return false;
            if(!player.countCards('he',{color:'red'})) return false;
        },
		respondSha:true,
		basic:{
			useful:[5,1],
			value:[5,1],
		},
		order:function (){
            if(_status.event.player.hasSkillTag('presha',true,null,true)) return 10;
            return 3;
        },
		result:{
			target:function (player,target){
                if(player.hasSkill('jiu')&&!target.getEquip('baiyin')){
                    if(get.attitude(player,target)>0){
                        return -6;
                    }
                    else{
                        return -3;
                    }
                }
                return -1.5;
            },
		},
	},
	group:["XS_quzhu_sha"],
	subSkill:{
		sha:{
			trigger:{
				source:"damageEnd",
			},
			forced:true,
			filter:function (event,player){
				return event.card&&event.card.name=='sha'&&_status.currentPhase==player;
			},
			content:function (){
				if(player.stat[player.stat.length-1].card.sha>0){
					player.stat[player.stat.length-1].card.sha--;
				}
			},
			sub:true,
		},
	},
},
"XS_yangzhan":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:1,
	filterTarget:function (card,player,target){
        return target!=player&&target.countCards('h')>0;
    },
	content:function (){
        'step 0'
        event.cards=target.getCards('h',function(card){
            return lib.filter.cardEnabled(card,player);
        });
        if(!event.cards.length){
            event.finish();
        }
        'step 1'
        player.chooseCardButton('养战：选择一张牌使用',event.cards).ai=function(button){
            return get.value(button.link);
        }
        'step 2'
        if(result.bool){
            event.gained=result.links[0];
            player.gain(event.gained,target);
            target.$give(1,player);
            var next=player.chooseToUse();
            next.filterCard=function(card){
                return card==event.gained;
            };
            next.prompt='是否使用'+get.translation(event.gained)+'？';
        }
        else {
            event.finish();
        }
        'step 3'
        if(get.position(event.gained)=='h') {
            player.discard(event.gained);
        }
    },
	ai:{
		expose:0.3,
		order:9,
		result:{
			target:function (target,player){
                return -2;
            },
		},
	},
},
"XS_yongguan":{
	init:function(player){
		player.storage.XS_yongguan=0;
	},
	enable:['chooseToRespond','chooseToUse'],
	filterCard:function(card){
		return false;
	},
	position:'he',
	viewAs:{
		name:'sha'
	},
	selectCard:-1,
	viewAsFilter:function(player){
		var nm=player.storage.XS_yongguan;
		return (player.countCards('he')+1)>nm;
	},
	prompt:'你可摸1张牌然后弃置X张牌，视为使用或打出1张杀，X为你本轮发动此技能次数',
	check:function(card){
		var num=_status.event.player.storage.XS_yongguan;
		return num<3;
	},
	onuse:function(result,player){
		player.draw();
		var num=player.storage.XS_yongguan;
		if(num>0) {
			player.chooseToDiscard('he',num,true);
		}
		player.storage.XS_yongguan++;
	},
	onrespond:function(event,player){
		player.draw();
		var num=player.storage.XS_yongguan;
		if(num>0) {
			player.chooseToDiscard('he',num,true);
		}
		player.storage.XS_yongguan++;
	},
	ai:{
		respondSha:true,
	},
	group:["XS_yongguan_clear"],
	subSkill:{
		clear:{
			trigger:{
				global:"roundStart",
			},
			priority:20,
			direct:true,
			content:function (){
				player.storage.XS_yongguan=0;
			},
			sub:true,
		},
	},
},
"XS_duoshuo":{
	priority:9,
	trigger:{
		target:"useCardToTargeted",
	},
	logTarget:'player',
	check:function (event,player){
		return get.attitude(player,event.player);
	},
	"prompt2":function (event,player){
		return '是否进行一次判定？若结果颜色与'+get.translation(event.card)+'相同，你可获得'+get.translation(event.player)+'装备区的1张牌，若类型相同，你可对其使用1张杀。';
	},
	filter:function (event,player){
		if(event.player==player) return false;
		if(!get.tag(event.card,'damage')) return false;
		return true;
	},
	priority:-2,
	content:function (){
		"step 0"
		player.judge('夺槊',function(card){
			var tp=get.type(trigger.card),col=get.color(trigger.card);
			if(get.type(card)==tp||get.color(card)==col) return 3;
			return -3;
		});
		"step 1"
		if(result.bool==true){
			if(get.color(result.card)==get.color(trigger.card)) {
				player.gainPlayerCard('e',trigger.player);
			}
			if(get.type(result.card)==get.type(trigger.card)&&player.canUse({name:'sha'},trigger.player)) {
				player.chooseToUse({name:'sha'},trigger.player,-1,'你可对'+get.translation(trigger.player)+'使用1张杀').set('targetRequired',true);
			}
		}
	},
	ai:{
		expose:0.4,
		threaten:0.8,
	},
},
"XS_zhushi":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:"roundStart",
	},
	priority:-99,
	filter:function (event,player){
		return game.hasPlayer(function(current){
			return !current.hasSkill('XS_zhushi_mark');
		});
	},
	direct:true,
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt2('XS_zhushi'),1,false,function(card,player,target){
			return !target.hasSkill('XS_zhushi_mark');
		}).set('ai',function(target){
			var att=get.attitude(player,target),tp=3-target.maxHp
			return get.attitude(player,target)+tp;
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_zhushi',result.targets[0]);
			result.targets[0].addTempSkill('XS_zhushi_mark','roundStart');
			result.targets[0].markSkillCharacter('XS_zhushi_mark',player,'著史','你其需于每名角色回合结束时摸或弃置X张牌，X为其手牌数与3之差');
		}
	},
    subSkill:{
        mark:{
			onremove:function (player,skill){
				player.unmarkSkill('XS_zhushi_mark');
			},
			trigger:{
				global:"phaseEnd",
			},
			filter:function (event,player){
				return player.countCards('h')!=3;
			},
			forced:true,
			content:function(){
				var nm=3-player.countCards('h');
				if(player.hasSkill('XS_zhishu_temp')) {
					nm+=player.countCards('h',{color:'red'});
					nm-=player.countCards('h',{color:'black'});
				}
				if(nm>0) player.draw(nm);
				else player.chooseToDiscard('h',true,-nm);
			},
			charlotte:true,
        },
    },
},
"XS_zhishu":{
	usable:1,
	enable:"phaseUse",
	filter:function(event,player){
		return game.hasPlayer(function(current){
			return current.countCards('h');
		});
	},
    filterTarget:function (card,player,target){
        return target.countCards('h');
    },
	selectTarget:1,
	content:function(){
		"step 0"
		target.showHandcards();
		"step 1"
		if(target.hasSkill('XS_zhushi_mark')) {
			player.chooseBool('是否令'+get.translation(target)+'本回合触发“著史”时，红色牌不计入手牌数，黑色牌计数翻倍？').set('ai',function(){
				if(target.countCards('h',{color:'red'})>target.countCards('h',{color:'black'})) return true;
				return false;
			});
		}
		"step 2"
		if(result.bool) target.addTempSkill('XS_zhishu_temp');
	},
	ai:{
		order:9,
		result:{
			target:1,
		},
	},
	subSkill:{
        temp:{
			onremove:function (player,skill){
				player.unmarkSkill('XS_zhishu_temp');
			},
			mark:true,
			intro:{
				content:function(storage,player,skill){
					return '本回合触发“著史”时，红色牌不计入手牌数，黑色牌计数翻倍';
				},
			},
			charlotte:true,
        },
    },
},
"XS_gonggao":{
	mod:{
		globalFrom:function (from,to,current){
			var tp=Math.max(1,Math.floor(from.storage.XS_gonggao/2))
			return current-tp;
		},
	},
	ai:{
		halfneg:true,
	},
    forced:true,
	trigger:{
        source:"damageEnd",
    },
    init:function (player){
        player.storage.XS_gonggao=0;
    },
    intro:{
        content:function (content,player){
			var num=player.storage.XS_gonggao;
			var tp=Math.max(1,Math.floor(num/2))
            return '当前值：<span class="bluetext">'+num+'</span>，你的进攻距离+<span class="bluetext">'+tp+'</span>';
        },
    },
    filter:function (event,player){
        return event.num>0;
    },
    content:function (){
        player.storage.XS_gonggao+=trigger.num;
		player.markSkill('XS_gonggao');
		if(!trigger.card||trigger.card.name!='sha') {
			game.playAudio('..','extension','血色衣冠','XS_gonggao1');
		}
    },
	group:["XS_gonggao_zhenzhu"],
    subSkill:{
		zhenzhu:{
			forced:true,
            priority:6,
            trigger:{
                player:"phaseJieshuBegin",
            },
            filter:function (event,player){
                return player.storage.XS_gonggao>=10;
            },
            content:function (){
                player.storage.XS_gonggao=0;
				player.unmarkSkill('XS_gonggao');
				player.loseMaxHp();
				game.playAudio('..','extension','血色衣冠','XS_gonggao2');
            },
        },
    },
},
"XS_dianbing":{
	audio:"ext:血色衣冠:2",
	init:function (player){
		player.storage.XS_dianbing=[];
	},
	intro:{
		content:"cards",
	},
	marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"40px")+" src="+lib.assetURL+"extension/血色衣冠/icon/dianbing1.png>":"兵",
	trigger:{
		player:"useCardAfter",
	},
	filter:function(event,player){
		if(player.storage.XS_dianbing.length>=3) return false;
		return true;
	},
	frequent:true,
	content:function (){
		"step 0"
		player.draw();
		"step 1"
		var sts=[];
		for(var i=0;i<player.storage.XS_dianbing.length;i++) {
			sts.add(get.suit(player.storage.XS_dianbing[i]));
		}
		event.cds=player.getCards('h');
		for(var j=0;j<event.cds.length;j++) {
			if(sts.contains(get.suit(event.cds[j]))) event.cds.splice(j--,1);
		}
		"step 2"
		if(event.cds.length) {
			player.chooseCardButton('点兵：将一张手牌置于武将牌上。',event.cds,1,true).ai=function(button){
				return 9-get.value(button.link);
			}
		}
		else event.finish();
		"step 3"
		if(result.bool){
			var cd=result.links[0];
			player.lose(cd,ui.special,'toStorage');
			player.storage.XS_dianbing.push(cd);
			if(player.storage.XS_dianbing.length!=0){
				player.markSkill('XS_dianbing');
			}
		}
	},
	group:["XS_dianbing_dam"],
    subSkill:{
		dam:{
		    trigger:{
				player:["damageAfter"],
			},
			filter:function(event,player){
				if(player.storage.XS_dianbing.length>=3) return false;
				return true;
			},
			frequent:true,
			content:function (){
				"step 0"
				game.playXSAudio('XS_dianbing',2);
				player.draw();
				"step 1"
				var sts=[];
				for(var i=0;i<player.storage.XS_dianbing.length;i++) {
					sts.add(get.suit(player.storage.XS_dianbing[i]));
				}
				event.cds=player.getCards('h');
				for(var j=0;j<event.cds.length;j++) {
					if(sts.contains(get.suit(event.cds[j]))) event.cds.splice(j--,1);
				}
				"step 2"
				if(event.cds.length) {
					player.chooseCardButton('点兵：将一张手牌置于武将牌上。',event.cds,1,true).ai=function(button){
						return 9-get.value(button.link);
					}
				}
				else event.finish();
				"step 3"
				if(result.bool){
					var cd=result.links[0];
					player.lose(cd,ui.special,'toStorage');
					player.storage.XS_dianbing.push(cd);
					if(player.storage.XS_dianbing.length!=0){
						player.markSkill('XS_dianbing');
						player.syncStorage('XS_dianbing');
					}
				}			
			},
        },
    },
},
"XS_andu":{
	trigger:{
		player:"phaseZhunbeiBegin",
	},
	audio:"ext:血色衣冠:2",
	filter:function (event,player){
		return player.storage.XS_dianbing.length>0;
	},	
	check:function (event,player){
		return player.storage.XS_dianbing.length>=3;
	},
	"prompt2":function (event,player){
		return '你可获得任意张“兵”并弃置其余，每弃置1张，本回合你依次获得1项效果：使用牌无距离限制、无次数限制、无法被响应。';
	},
	content:function (){
		"step 0"
		var cdx=player.storage.XS_dianbing;
		player.chooseCardButton('暗度：请选择想要获得的“兵”。',[0,cdx.length],cdx,false).ai=function(button){
			return get.value(button.link)-5.9;
		}
		"step 1"
		if(result.bool){
			player.gain(result.links,'gain2');
			for(var i=0;i<result.links.length;i++) {
				player.storage.XS_dianbing.remove(result.links[i]);
			}
			player.syncStorage('XS_dianbing');
		}
		"step 2"
		var nm=player.storage.XS_dianbing.length;
		game.cardsDiscard(player.storage.XS_dianbing);
		player.storage.XS_dianbing=[];
		player.unmarkSkill('XS_dianbing');
		if(nm>=1) {
			player.addTempSkill('XS_andu_buff1');
		}
		if(nm>=2) {
			player.addTempSkill('XS_andu_buff2');
		}
		if(nm>=3) {
			player.addTempSkill('XS_andu_buff3');
		}
		if(nm>=1) {
			player.markSkill('XS_andu_buff1');
		}
	},
	subSkill:{
		buff1:{
			charlotte:true,
			marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"38px")+" src="+lib.assetURL+"extension/血色衣冠/icon/andu.png>":"渡",
			intro:{
				content:function(storage,player,skill){
					var str='使用牌无距离限制';
					if(player.hasSkill('XS_andu_buff2')) {
						str+='、无次数限制';
					}
					if(player.hasSkill('XS_andu_buff3')) {
						str+='、无法被响应';
					}
					return str;
				},
			},
			mod:{
				targetInRange:function (card){
					return true;
				},
			},
			sub:true,
        },
		buff2:{
			charlotte:true,
			mod:{
				cardUsable:function(card,player,num){
					return Infinity;
				}
			},
			sub:true,
        },
		buff3:{
			charlotte:true,
			trigger:{
				player:"useCard",
			},
			silent:true,
			filter:function (event,player){
				return true;
			},
			content:function(){
				trigger.nowuxie=true;
				trigger.directHit.addArray(game.players);
			},
			sub:true,
        },
    },
},
"XS_jianbi":{
	audio:"ext:血色衣冠:2",
	forced:true,
	trigger:{
		player:"phaseJieshuBegin",
	},
	content:function (){
		var num=4,mark1=false,mark2=false;
		var history=player.getHistory('useCard');
		for(var i=0;i<history.length;i++){
			if(history[i].card.name=='sha') mark1=true;
		}
		if(player.getStat('damage')) {
			mark2=true;
		}
		if(!mark1||!mark2) {
			num++;
		}
        player.draw(num);
    },
	ai:{
        effect:{
            target:function (card,player,target,current){
                if(card.name=='bingliang') return 0;
            },
        },
    },
	group:["XS_jianbi_tiaoguo"],
	subSkill:{
		tiaoguo:{
			trigger:{
				player:"phaseDrawBefore",
			},
			direct:true,
			content:function (){
				trigger.cancel();
			},
			sub:true,
		},
	},
},
"XS_bawang":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"useCardBegin",
	},
	forced:true,
	filter:function (event,player){
		return event.card.name=='juedou';
	},
	priority:-1,
	content:function (){
		player.draw();
	},
	ai:{
		unequip:true,
		skillTagFilter:function(player,tag,arg){
			if(!arg||!arg.card||arg.card.name!='sha') return false;
		},
	},
	group:["XS_bawang_sha","XS_bawang_juedou"],
	preHidden:['XS_bawang_sha','XS_bawang_juedou'],
    subSkill:{
		sha:{
			trigger:{player:'useCardToPlayered'},
			direct:true,
			filter:function(event,player){
				return event.card.name=='sha'&&!event.getParent().directHit.contains(event.target);
			},
			content:function(){
				player.logSkill('XS_bawang',trigger.target);
				var id=trigger.target.playerid;
				var map=trigger.getParent().customArgs;
				if(!map[id]) map[id]={};
				if(typeof map[id].shanRequired=='number'){
					map[id].shanRequired++;
				}
				else{
					map[id].shanRequired=2;
				}
			},
			ai:{
				directHit_ai:true,
				skillTagFilter:function(player,tag,arg){
					if(arg.card.name!='sha'||arg.target.countCards('h','shan')>1) return false;
				},
			},
        },
		juedou:{
			trigger:{player:'useCardToPlayered',target:'useCardToTargeted'},
			direct:true,
			filter:function(event,player){
				return event.card.name=='juedou';
			},
			content:function(){
				player.logSkill('XS_bawang',player==trigger.player?trigger.target:trigger.player);
				var id=(player==trigger.player?trigger.target:trigger.player)['playerid'];
				var idt=trigger.target.playerid;
				var map=trigger.getParent().customArgs;
				if(!map[idt]) map[idt]={};
				if(!map[idt].shaReq) map[idt].shaReq={};
				if(!map[idt].shaReq[id]) map[idt].shaReq[id]=1;
				map[idt].shaReq[id]++;
			},
			ai:{
				directHit_ai:true,
				skillTagFilter:function(player,tag,arg){
					if(arg.card.name!='juedou'||Math.floor(arg.target.countCards('h','sha')/2)>player.countCards('h','sha')) return false;
				}
			}
        },
    },
},
"XS_pofu":{
 	trigger:{
		player:'phaseEnd',
	},
	audio:"ext:血色衣冠:2",
	priority:25,
	check:function (event,player){
		return player.countCards('h')<=2;
	},
	filter:function (event,player){
		return player.countCards('h')>0;
	},
	content:function(){
		"step 0"
		player.chooseControl(['杀','决斗']).set('ai',function(event){
			return '决斗';
		}).set('prompt','视为使用一张');
		"step 1"
		var next=player.chooseToUse();
		if(result.control=='杀') {
			next.set('openskilldialog','将所有手牌当做一张杀使用');
			next.set('norestore',true);
			next.set('_backupevent','XS_pofu_sha');
			next.backup('XS_pofu_sha');
		}
		else {
			next.set('openskilldialog','将所有手牌当做一张决斗使用');
			next.set('norestore',true);
			next.set('_backupevent','XS_pofu_juedou');
			next.backup('XS_pofu_juedou');
		}
	},
	group:["XS_pofu_draw"],
	subSkill:{
		draw:{
			trigger:{
				player:["useCardAfter"],
			},	
			priority:38,
			direct:true,
			filter:function (event,player){
				return event.getParent(2).name&&event.getParent(2).name=='XS_pofu';
			},
			content:function (){
				var players=game.players.slice(0).concat(game.dead),nm=0;
				for(var i=0;i<players.length;i++) {
					var eve=players[i].getHistory('damage',function(evt){
						return evt.card==trigger.card;
					});
					for(var j=0;j<eve.length;j++) {
						nm+=eve[j].num;
					}
				}
				if(nm>0) player.draw(nm);
			},
			sub:true,
		},
		sha:{
			filterCard:true,
			selectCard:-1,
			popname:true,
			viewAs:{
				name:'sha',
			},
			sub:true,
		},
		juedou:{
			filterCard:true,
			selectCard:-1,
			popname:true,
			viewAs:{
				name:'juedou',
			},
			sub:true,
		},
	},
},
"XS_ciqiu":{
	enable:"phaseUse",
	usable:1,
	audio:"ext:血色衣冠:2",
	filterTarget:function (card,player,target){
        return player!=target&&player.inRange(target);
    },
	selectTarget:1,
	content:function (){
		"step 0"
        target.damage(player,1,'nocard');
		"step 1"
		player.judge('刺酋',function(card){
			if(get.type(card)=='basic') return 3;
			return -3;
		});
		"step 2"
		if(result.bool==false){
			player.damage(target,1,'nocard');
		}
    },
	ai:{
		order:8,
		result:{
			player:-1,
			target:function (player,target){
				if(player.hp>2) return -2;
				if(player.hp==1) return 0;
            },
		},
		expose:0.4,
	},
},
"XS_fenyong":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:["damageEnd"],
	},
	forced:true,
	filter:function (event,player){
        return event.source&&event.source!=player;
    },
	content:function (){
        if(trigger.source.hp>player.hp) {
            player.draw(2);
        }
        else if(trigger.source.hp==player.hp) {
            if(!player.hasSkill('XS_fenyong_damage')) {
                player.addSkill('XS_fenyong_damage');
            }
			player.storage.XS_fenyong_damage++;
			player.markSkill('XS_fenyong_damage');
			player.syncStorage('XS_fenyong_damage');
        }
		else {
			var card=get.cardPile(function(card){
				return get.type(card)=='equip';
			});
			if(card){
				player.gain(card,'gain2','log');
			}
			else {
				player.draw();
			}
		}
    },
	ai:{
		maixie:true,
		"maixie_hp":true,
		effect:{
			target:function (card,player,target){
                if(get.tag(card,'damage')){
                    if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
                    if(!target.hasFriend()) return;
                    return [1,1];
                }
            },
		},
	},
	subSkill:{
		damage:{
			marktext:"勇",
			intro:{
				content:function (storage){
                    return '你造成的下 <span class="bluetext">'+storage+'</span> 次伤害+1';
                },
			},
			trigger:{
				source:"damageBegin",
			},
			priority:3,
			init:function (player){
                player.storage.XS_fenyong_damage=0;
            },
			filter:function (event){
                return event.notLink();
            },
			silent:true,
			forced:true,
			content:function (){
                "step 0"
                trigger.num++;
                "step 1"
                player.storage.XS_fenyong_damage--;
                player.syncStorage('XS_fenyong_damage');
				"step 2"
                if(player.storage.XS_fenyong_damage==0) {
                    player.removeSkill('XS_fenyong_damage');
                }
            },
			ai:{
				damageBonus:true,
			},
			sub:true,
		},
	},
},
"XS_shenjiang":{
	trigger:{
		player:"phaseZhunbeiBegin",
	},
	audio:"ext:血色衣冠:2",
	frequent:true,
	content:function (){
        "step 0"
		event.card=get.cards(1);
		player.showCards(event.card);
		"step 1"
		switch(get.suit(event.card)){
            case 'heart':player.addTempSkill('XS_shenjiang1',{player:'phaseBefore'});break;
			case 'spade':player.addTempSkill('XS_shenjiang2',{player:'phaseBefore'});break;
            case 'diamond':player.addTempSkill('XS_shenjiang3',{player:'phaseBefore'});break;
            case 'club':player.addTempSkill('XS_shenjiang4',{player:'phaseBefore'});break;
        }
		game.cardsDiscard(event.card);
    },
},
"XS_shenjiang1":{
	intro:{
		content:function(storage,player,skill){
			return "你的杀伤害基数+1";
		},
	},
	marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"55px")+" src="+lib.assetURL+"extension/血色衣冠/icon/SJheart.png>":"鸷",
	mark:true,
	trigger:{
		player:["shaBegin"],
	},	
	priority:17,
	forced:true,
	content:function (){
		trigger.baseDamage++;
	},
	charlotte:true,
	ai:{
		damageBonus:true,
	},
},
"XS_shenjiang2":{
	marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"55px")+" src="+lib.assetURL+"extension/血色衣冠/icon/SJspade.png>":"鸷",
	intro:{
		content:function(storage,player,skill){
			return "你的杀可以额外指定1个目标";
		},
	},
	mark:true,
	mod:{
		selectTarget:function (card,player,range){
			if(_status.currentPhase==player&&card.name=='sha') range[1]+=1;
		},
	},
	charlotte:true,
},
"XS_shenjiang3":{
	marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"55px")+" src="+lib.assetURL+"extension/血色衣冠/icon/SJdianmond.png>":"鸷",
	intro:{
		content:function(storage,player,skill){
			return "你的杀需2张闪响应";
		},
	},
	mark:true,
	trigger:{
		player:"shaBegin",
	},
	forced:true,
	filter:function (event,player){
        return !event.directHit;
    },
	priority:-1,
	content:function (){
		if(typeof trigger.shanRequired=='number'){
            trigger.shanRequired++;
        }
        else{
            trigger.shanRequired=2;
        }
    },
	charlotte:true,
},
"XS_shenjiang4":{
	marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"55px")+" src="+lib.assetURL+"extension/血色衣冠/icon/SJclub.png>":"鸷",
	intro:{
		content:function(storage,player,skill){
			return "你使用杀无次数限制";
		},
	},
	mark:true,
	mod:{
		cardUsable:function(card,player,num){
			if(card.name=='sha') return Infinity;
		}
	},
	charlotte:true,
},
"XS_modang":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:["loseAfter","cardsDiscardAfter"],
	},
	mod:{
		aiOrder:function(player,card,num){
			if(typeof card=='object'){
				if(player.storage.XS_modang.length) {
					var color=player.storage.XS_modang[player.storage.XS_modang.length-1];
					if(get.color(card)==color&&color=='black') return num+10;
				}
			}
		},
	},
	init:function (player){
        player.storage.XS_modang=[];
    },
	marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"40px")+" src="+lib.assetURL+"extension/血色衣冠/icon/modang.png>":"当",
	direct:true,
	filter:function(event,player){
		for(var i=0;i<event.cards.length;i++){
			if(get.position(event.cards[i],true)=='d'&&get.color(event.cards[i])!='none') return true;
		}
		return false;
	},
	priority:888,
	content:function(){
		"step 0"
		event.cds=trigger.cards;
		"step 1"
		if(event.cds.length){
			var card=event.cds.shift();
			event.current=card;
		}
		else event.finish();
		"step 2"
		if(get.position(event.current,true)=='d'&&get.color(event.current)!='none') {
			game.log(event.current);
			if(!player.storage.XS_modang.length) player.storage.XS_modang.push(get.color(event.current));
			else {
				if(get.color(event.current)==player.storage.XS_modang[player.storage.XS_modang.length-1]) {
					player.storage.XS_modang.push(get.color(event.current));
				}
				else {
					player.storage.XS_modang=[];
					player.storage.XS_modang.push(get.color(event.current));
				}
			}
		}
		"step 3"
		if(player.storage.XS_modang.length>=3) {
			if(player.storage.XS_modang[0]=='black') {
				player.storage.XS_modang=[];
				player.chooseTarget(get.prompt2('XS_modang'),1,false,function(card,player,target){
					return target!=player;
				}).ai=function(target){
					return get.damageEffect(target,player,player);
				}
			}
			else {
				player.storage.XS_modang=[];
				for(var i=0;i<game.players.length;i++) {
					if(game.players[i].hasSkill('XS_modang_mark')) game.players[i].removeSkill('XS_modang_mark');
				}
			}
		}
		else event.goto(5);
		"step 4"
		if(result.bool) {
			player.logSkill('XS_modang',result.targets[0]);
			result.targets[0].damage(1,'nocard',player);
			result.targets[0].addSkill('XS_modang_mark');
		}
		"step 5"
		event.goto(1);
	},
	group:["XS_modang_hit"],
	subSkill:{
		mark:{
			charlotte:true,
			mark:true,
			intro:{
				content:function (storage){
					return '提三万之众而天下莫当者，孙武子也！';
				},
			},
			sub:true,
		},
		hit:{
			charlotte:true,
			trigger:{player:'useCard1'},
			direct:true,
			content:function(){
				var players=game.players;
				for(var i=0;i<players.length;i++) { 
					if(players[i].hasSkill('XS_modang_mark')) trigger.directHit.add(players[i]);
				}
			},
			ai:{
				directHit_ai:true,
				skillTagFilter:function(player,tag,arg){
					return arg.target.hasSkill('XS_modang_mark');
				},
			},
		},
    },
},
"XS_zhijun":{
	audio:"ext:血色衣冠:2",
	trigger:{
        player:"damage",
    },
	check:function(event,player){
		return (player.countCards('h',{color:'red'})&&player.isDamaged())||(player.countCards('h',{color:'black'})&&get.damageEffect(event.source,player,player)>0);
	},
    filter:function (event,player){
        return (player.countCards('h',{color:'red'})&&player.isDamaged())||(player.countCards('h',{color:'black'})&&event.source);
    },
    content:function (){
		"step 0"
		var str=trigger.source?'弃置1张黑色牌，对'+get.translation(trigger.source)+'造成1点伤害；或弃置1张红色牌，回复1点体力':'弃置1张红色牌，回复1点体力';
		player.chooseToDiscard(str,1,'he',true,function(card){
			var tri=_status.event.getTrigger();
			return tri.source?get.color(card)!='none':get.color(card)=='red';
		}).set('ai',function(card){
			return 6.5-get.value(card);
		});
		"step 1"
		if(get.color(result.cards[0])=='red') {
			player.recover();
		}
		else {
			trigger.source.damage(1,player,'nocard');
		}
    },
    ai:{
		maixie:true,
        "maixie_defend":true,
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')){
					if(!target.hasFriend()) return;
					if(player.hasSkillTag('jueqing',false,target)) return;
					if(target.countCards('he')) return [1,1];
				}
			},
		},
    },
},
"XS_bingtun":{
	init:function(player){
		player.storage.XS_bingtun=0;
	},
	audio:"ext:血色衣冠:2",
    trigger:{
        global:"damageBegin4",
    },
    filter:function (event,player){
		if(event.source&&event.source==player) return false;
		return event.player!=player;
    },
    priority:-9999,
	check:function (event,player){
		if(!event.source) return !event.player.hasSkillTag('maixie_defend');
		if(event.player.hasSkillTag('maixie_defend')) return false;
		if(event.player.identity=='zhong'&&player.identity=='zhu') return false;
		if(event.player.hp>event.num) return false;
 		return true;
	},
    content:function (){
        trigger.source=player;
    },
	ai:{
		expose:0.2,
	},
	group:["XS_bingtun_gain"],
    subSkill:{
		gain:{
			trigger:{
				source:"dieAfter",
			},
			filter:function (event,player){
				return player.storage.XS_bingtun<3;
			},
			forced:true,
			silent:true,
			content:function(){
				player.gainMaxHp();
				player.storage.XS_bingtun++;
			},
			sub:true,
        },
    },
},
"XS_hengzheng":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:"phaseDrawAfter",
	},
	check:function(event,player){
		var att=get.attitude(player,event.player);
		if(att<=0) return true;
		else {
			return event.player.group=='wei';
		}
	},
	"prompt2":function (event,player){
		return '是否令'+get.translation(event.player)+'交给你1张牌？';
	},
	filter:function (event,player){
		if(event.player==player) return false;
        return player.countCards('h')<player.getHandcardLimit();
    },
	content:function (){
        "step 0"
        trigger.player.chooseCard('交给'+get.translation(player)+'1张牌',1,'he',true).ai=function(card){
            var trigger=_status.event.getTrigger();
            if(get.attitude(trigger.player,player)>8){
                return get.value(card);
            }
            else{
                return 8-get.value(card);
            }
        }
        "step 1"
        if(result.bool){
			player.gain(result.cards[0],trigger.player,'giveAuto');
        }
    },
	ai:{
		threaten:1.2,
	},
},
"XS_xuhuai":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"gainAfter",
	},
	frequent:true,
	filter:function (event,player){
		if(event.getParent().name=='XS_xuhuai') return false;
		if(event.getParent(2).name=='phaseDraw') return false;
		return event.cards&&event.cards.length>0
	},
	content:function (){
		"step 0"
		event.type=[];
		for(var i=0;i<trigger.cards.length;i++) {
			var typ=get.type(trigger.cards[i]);
			if(!event.type.contains(typ)) event.type.push(typ);
		}
		event.cars=get.cards(trigger.cards.length);
		player.showCards(event.cars);
		game.delay();
		"step 1"
		var cards2=[];
		for(var i=0;i<event.cars.length;i++){
			if(event.type.contains(get.type(event.cars[i]))){
				cards2.push(event.cars[i]);
				event.cars.splice(i--,1);
			}
		}
		game.cardsDiscard(event.cars);
		if(cards2.length) {
			event.cards1=cards2;
			player.chooseTarget(get.prompt('XS_xuhuai'),'选择1名其他角色获得'+get.translation(cards2),function(card,player,target){
				return target!=player;
			}).set('ai',function(target){
				var att=get.attitude(_status.event.player,target);
				var num=Math.max(0,target.hp-target.countCards('h'));
				if(att>0) {
					return att+num*2;
				}
				return att;
			});
		}
		"step 2"
		if(result.bool){
			var target=result.targets[0];
			player.line(target,'blue');
			target.gain(event.cards1,'gain2');
        }
	},
	ai:{
		expose:0.3,
		effect:{
            target:function (card,player,target){
                if(card.name=='zengbin') return [1,3];
            },
        },
	},
},
"XS_xushi":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"phaseZhunbeiBegin",
	},
	direct:true,
	content:function (){
		"step 0"
		if(player.isMinHandcard(false)) {
			var basiclist=[];
			basiclist.push(['基本','','sha']);
			basiclist.push(['基本','','sha','fire']);
			basiclist.push(['基本','','sha','thunder']);
			basiclist.push(['基本','','jiu']);
			basiclist.push(['基本','','tao']);
			player.chooseButton(['虚实：你可视为使用任意1张基本牌',[basiclist,'vcard']],false).set('ai',function(button){
				if(player.isDamaged()) {
					if(button.link[2]=='tao') return 9;
				}
				else if(button.link[2]=='sha'&&button.link[3]=='fire') return 4;
				return 1;
			});
		}
		else event.goto(2);
		"step 1"
		if(result&&result.bool&&result.links[0]){
			player.logSkill('XS_xushi');
			player.chooseUseTarget({name:result.links[0][2],nature:result.links[0][3],isCard:true},false);
		}
		"step 2"
		if(player.isMinHp(false)) {
			var tricklist=[];
			for(var i=0;i<lib.inpile.length;i++){
				if(get.type(lib.inpile[i])=='trick'&&lib.filter.cardEnabled({name:lib.inpile[i]},player)) tricklist.push(['锦囊','',lib.inpile[i]]);
			}
			player.chooseButton(['虚实：你可视为使用1张普通锦囊牌',[tricklist,'vcard']],false).set('ai',function(button){
				var recover=0,lose=1,players=game.filterPlayer();
				for(var i=0;i<players.length;i++){
					if(players[i].hp==1&&get.damageEffect(players[i],player,player)>0&&!players[i].hasSha()){
						return (button.link[2]=='juedou')?2:-1;
					}
					if(!players[i].isOut()){
						if(players[i].hp<players[i].maxHp){
							if(get.attitude(player,players[i])>0){
								if(players[i].hp<2){
									lose--;
									recover+=0.5;
								}
								lose--;
								recover++;
							}
							else if(get.attitude(player,players[i])<0){
								if(players[i].hp<2){
									lose++;
									recover-=0.5;
								}
								lose++;
								recover--;
							}
						}
						else{
							if(get.attitude(player,players[i])>0){
								lose--;
							}
							else if(get.attitude(player,players[i])<0){
								lose++;
							}
						}
					}
				}
				if(lose>recover&&lose>0) return (button.link[2]=='nanman')?1:-1;
				if(lose<recover&&recover>0) return (button.link[2]=='taoyuan')?1:-1;
				return (button.link[2]=='wuzhong')?1:-1;
			});
		}
		else event.finish();
		"step 3"
		if(result&&result.bool&&result.links[0]){
			player.logSkill('XS_xushi');
			player.chooseUseTarget({name:result.links[0][2],nature:result.links[0][3],isCard:true},false);
		}
	},
},
"XS_jianzao":{
	init:function (player){
		player.storage.XS_jianzao=0;
	},
	trigger:{
		global:"roundStart",
	},
	intro:{
		content:function (storage){
			var str='你受到的伤害-1、造成的伤害+1，共计'+storage+'次';
			return str;
		},
	},
	audio:"ext:血色衣冠:2",
	priority:5,
	direct:true,
	content:function (){
		"step 0"
		player.storage.XS_jianzao=0;
		player.unmarkSkill('XS_jianzao');
		"step 1"
		event.nm=player.countCards('h',{type:'basic'});
		player.chooseBool(get.prompt('XS_jianzao'),'是否弃置所有手牌？如此本轮你受到的伤害-1、造成的伤害+1，共计'+event.nm+'次').set('ai',function(){
			if(player.countCards('h')>4) return false;
			if(player.countCards('h',{type:'basic'})<2) return false;
			return true;
		});
		"step 2"
		if(result.bool) {
			player.logSkill('XS_jianzao');
			player.discard(player.getCards('h'));
			player.storage.XS_jianzao=event.nm;
			if(event.nm>0) {
				player.markSkill('XS_jianzao');
			}
		}
	},
	group:["XS_jianzao_dam","XS_jianzao_dam1"],
	subSkill:{
		dam:{
			trigger:{
				player:"damageBegin3",
			},
			filter:function (event,player){
				return event.num>0&&player.storage.XS_jianzao>0;
			},
			priority:19,
			forced:true,
			content:function (){
				"step 0"
				trigger.num--;
				player.storage.XS_jianzao--;
				"step 1"
				if(player.storage.XS_jianzao<=0) {
					player.unmarkSkill('XS_jianzao');
				}
			},
			ai:{
				effect:{
					target:function (card,player,target,current){
						if(get.tag(card,'damage')) {
							if(player.hasSkillTag('jueqing',false,target)) return;
							if(target.storage.XS_jianzao>0) {
								if(!target.hasFriend()) return;
								return [1,1.5];
							}
						}
					},
				},
			},	
			sub:true,
		},
		dam1:{
			trigger:{
				source:"damageBegin4",
			},
			filter:function (event,player){
				return event.num>0&&player.storage.XS_jianzao>0;
			},
			priority:14,
			forced:true,
			content:function (){
				"step 0"
				trigger.num++;
				player.storage.XS_jianzao--;
				"step 1"
				if(player.storage.XS_jianzao<=0) {
					player.unmarkSkill('XS_jianzao');
				}
			},
			sub:true,
		},
    },
},
"XS_huoniu":{
	init:function (player){
        player.storage.XS_huoniu=3;
    },
	intro:{
		content:function (storage){
			return '出牌阶段，你可将手牌数调整为('+storage+')并令()内-1，视为使用1张火攻，其伤害基数改为你以此法失去牌数；若你未因此造成伤害，重置()且本回合此技能失效';
		},
	},
	marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"40px")+" src="+lib.assetURL+"extension/血色衣冠/icon/huoniu.png>":"牛",
	mark:true,
	enable:"phaseUse",
	"prompt2":function (event,player){
		return '是否将手牌数调整为('+player.storage.XS_huoniu+')并令()内-1，视为使用1张火攻，此牌伤害基数改为你以此法失去的牌数；若你未因此造成伤害，重置()且本回合此技能失效。';
	},
	filter:function(event,player){
		if(player.hasSkill('XS_huoniu_temp')) return false;
		return player.countCards('h')!=player.storage.XS_huoniu;
	},
	content:function (){
        "step 0"
		event.nm=player.countCards('h')-player.storage.XS_huoniu;
		if(event.nm>0) player.chooseToDiscard(event.nm,'h',true);
		else player.draw(-event.nm);
		"step 1"
		player.chooseUseTarget({name:'huogong'},true);
		player.removeMark('XS_huoniu',1);
    },
	ai:{
		order:1,
		expose:0.4,
		result:{
			player:function (player){
				var nm=player.countCards('h')-3;
				if(nm<=0) return nm;
				return player.storage.XS_huoniu/2*nm-nm;
            },
			target:function (player,target){
				return -1;
            },
		},
	},
	group:["XS_huoniu_dam","XS_huoniu_rec"],
    subSkill:{
        dam:{
			filter:function(event,player){
				return event.card.name=='huogong'&&event.getParent(3).name=='XS_huoniu'&&typeof event.getParent(3).nm=='number';
			},
			trigger:{
				player:"huogongBegin",
			},
			direct:true,
			priority:-10,
			content:function (){
				var evt=trigger.getParent(3);
				trigger.baseDamage=evt.nm; 
			},
        },
		rec:{
			trigger:{
				player:"useCardAfter",
			},
			direct:true,
			filter:function (event){
				if(event.card.name!='huogong'||event.getParent(2).name!='XS_huoniu') return false;
				return !game.hasPlayer2(function(current){
					return current.getHistory('damage',function(evt){
						return evt.card==event.card;
					}).length>0;
				});
			},
			content:function (){
				player.storage.XS_huoniu=3;
				player.syncStorage('XS_huoniu');
				player.addTempSkill('XS_huoniu_temp');
			},
			sub:true,
		},
		temp:{
			charlotte:true,
			sub:true,
		}
    },
},
"XS_jijue":{
	enable:"phaseUse",
	usable:1,
	content:function (){
		player.loseHp(3);
		player.draw(3);
		player.addTempSkill('XS_jijue_mark');
    },
	ai:{
		order:12,
		result:{
			player:function (player){
				if(player.hp>=4||(player.hp==3&&player.countCards('hs',{name:['tao','jiu']})>0)) {
					if(player.storage.XS_huoniu==3) return 2;
					if(player.countCards('hs','sha')&&player.countCards('hs','jiu')) return 2;
				}
				return -3;
            },
		},
	},
    subSkill:{
        mark:{
			intro:{
				content:function (storage){
					return '你造成大于1点的伤害(含连锁)后，可回复X点体力或摸X张牌，X为伤害值';
				},
			},
			marktext:lib.config.XS_imagemk===true?"<img style=width:"+(lib.config.extension_十周年UI_newDecadeStyle?"10px":"40px")+" src="+lib.assetURL+"extension/血色衣冠/icon/jijue.png>":"继",
			mark:true,
			filter:function(event,player){
				return event.num>1;
			},
			trigger:{
				source:"damageAfter",
			},
			frequent:true,
			priority:8881,
			content:function (){
				"step 0"
				event.nm=trigger.num;
				player.chooseControlList(['回复'+event.nm+'点体力','摸'+event.nm+'张牌'],true).set('ai',function(event,player){
					if(player.isHealthy()||(event.nm-player.getDamagedHp())>1) return 1;
					return 0;
				}).set('prompt','请选择一项');
				"step 1"
				if(result.index==0){
					player.recover(event.nm);
				}
				else {
					player.draw(event.nm);
				} 
			},
        },
    },
},
"XS_pozhu":{
	locked:false,
	mod:{
		aiOrder:function(player,card,num){
			if(typeof card=='object'&&player==_status.currentPhase){
				var evt=player.getLastUsed();
				if(evt&&evt.card&&get.color(evt.card)!='none'&&get.color(card)!='none'&&get.color(evt.card)!=get.color(card)){
					return num+10;
				}
			}
		},
	},
	audio:2,
	trigger:{player:'useCard'},
	frequent:true,
	usable:3,
	filter:function(event,player){
		if(_status.currentPhase!=player) return false;
		var evt=player.getLastUsed(1);
		if(!evt) return false;
		var color1=get.color(evt.card);
		var color2=get.color(event.card);
		return color1&&color2&&color1!='none'&&color2!='none'&&color1!=color2;
	},
	content:function(){
		player.draw();
	},
	ai:{
		threaten:3,
	},
},
"XS_gongxin":{
	trigger:{
		player:'phaseDrawBegin',
	},
	direct:true,
	filter:function (event,player){
		return true;
	},
	priority:2,
	content:function(){
		"step 0"
		player.chooseTarget(get.prompt2('XS_gongxin'),1,function(card,player,target){
			return target!=player;
		}).set('ai',function(target){
			var att=get.attitude(player,target),hs=target.countCards('h');
			return -att*hs;
		});
		"step 1"
		if(result.bool){
			event.tar=result.targets[0];
			player.logSkill('XS_gongxin',event.tar);
			player.choosePlayerCard('选择交换'+get.translation(event.tar)+'的一张手牌',event.tar,'h',true,'visible').set('ai',function(button){
				var val=get.value(button.link);
				if(get.type(button.link)=='basic') val*=2;
				return val;
			});
		}
		else event.finish();
		"step 2"
		event.cd1=result.links[0];
		player.choosePlayerCard('用一张手牌交换'+get.translation(event.cd1),player,'h',1,true).set('ai',function(button){
			var val=get.value(button.link);
			if(get.type(button.link)=='basic') val/=2;
			return val;
		});
		"step 3"
		event.cd2=result.links[0];
		player.gain(event.cd1,event.tar,'giveAuto');
		event.tar.gain(event.cd2,player,'giveAuto');
		"step 4"
		var tp=player.countCards('h',{type:'basic'});
		player.draw(tp);
		trigger.cancel();
	},
	ai:{
		expose:0.4,
	},
},
"XS_guanjun":{
	mod:{
		canBeGained:function (card){
            if(get.position(card)=='e') return false;
        },
	},
},
"XS_changqu":{
	mod:{
		globalFrom:function (from,to,current){
            return current-1;
        },
	},
	audio:"ext:血色衣冠:2",
	derivation:['XS_jiqu','XS_poqiu','XS_fenglang'],
	trigger:{
		global:"dieAfter",
	},
	frequent:true,
	content:function (){
        'step 0'
		event.lt=[];
		if(!player.hasSkill('XS_jiqu')) event.lt.push('XS_jiqu');
		if(!player.hasSkill('XS_poqiu')) event.lt.push('XS_poqiu');
		if(!player.hasSkill('XS_fenglang')) event.lt.push('XS_fenglang');
		if(player.isDamaged()) {
			var str='是否回复1点体力？';
			if(event.lt.length) str+='否则你可获得以下技能之一：“疾驱”、“破酋”和“封狼”。';
			player.chooseBool(str).set('ai',function(){
				return !event.lt.length;
			});
		}
		else event.goto(2);
		'step 1'
		if(result.bool){
			player.recover();
			event.finish();
		}
		'step 2'
		if(event.lt.length){
			player.chooseControl(event.lt).set('prompt','选择获得一项技能');
        }
		else event.finish();
		'step 3'
        player.addSkill(result.control);
        player.popup(result.control);
        game.log(player,'获得技能','【'+get.translation(result.control)+'】');
    },
	ai:{
		threaten:1.1,
	},
},
"XS_huoxin":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"damageBegin4",
	},
	check:function (event,player){return true;},
	filter:function (event,player){
		if(!event.source||event.source==player) return false;
		if(event.card&&get.type(event.card)=='trick') return false;
		return event.num>0;
	},
	logTarget:'source',
	content:function (){
		"step 0"
		event.pla=player;
		event.sour=trigger.source;
		if(!event.sour.countCards('h',{type:'trick'})) {
			event.goto(2);
		}
		else {
			trigger.source.chooseCard('交给'+get.translation(player)+'一张锦囊牌，否则对其造成的伤害-1。',1,'h',false,function(card){
				return get.type(card)=='trick'
			}).set('ai',function(card){
				var att=get.attitude(event.sour,event.pla);
				if(att>0) return 6-get.value(card);
				return 4-get.value(card);
			});
		}
		"step 1"
		if(result.bool){
			player.gain(result.cards,trigger.source,'giveAuto');
			event.finish();
		}
		"step 2"
		trigger.num--;
	},
	ai:{
        effect:{
            target:function (card,player,target){
				if(get.tag(card,'damage')&&get.type(card)!='trick') {
					if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
					if(!player.countCards('h',{type:'trick'})||!player.hasSkill('jiu')) return 'zeroplayertarget';
					return [1,1.5];
				}
            },
        },
    },
},
"XS_luanmou":{	
	audio:"ext:血色衣冠:2",
	trigger:{player:'useCardToEnd'},
	filter:function(event,player){
		if(!event.target) return false;
		return event.target!=player&&event.target.isAlive();
	},
	check:function(event,player){
		return get.attitude(player,event.target)<0;
	},
	"prompt2":function (event,player){
		return '是否令'+get.translation(event.target)+'手牌上限、防御距离-1直到下回合结束？';
	},
	content:function(){
		"step 0"
		if(!trigger.target.hasSkill('XS_luanmou_mark')) {
			trigger.target.addTempSkill('XS_luanmou_mark',{player:'phaseAfter'});
		}
		"step 1"
		trigger.target.storage.XS_luanmou_mark++;
		trigger.target.syncStorage('XS_luanmou_mark');
	},
	subSkill:{
        mark:{
			charlotte:true,
            mark:true,
            marktext:"惑",
            init:function (player){
                player.storage.XS_luanmou_mark=0;
            },
			onremove:function(player){
				delete player.storage.XS_luanmou_mark;
				player.unmarkSkill('XS_luanmou_mark');
			},
            intro:{
                content:function (storage){
                    return '手牌上限、防御距离- <span class="bluetext">'+storage+'</span> ';
                },
            },
            mod:{
                maxHandcard:function (player,num){
                    return num-player.storage.XS_luanmou_mark;
                },
				globalTo:function (from,to,current){
					var num=to.storage.XS_luanmou_mark;
					return current-num;
				},
            },
            sub:true,
        },
    },
},
"XS_chusai":{
	init:function (player){
        player.storage.XS_chusai=0;
    },
	audio:"ext:血色衣冠:2",
	trigger:{
		player:["useCardAfter","respondAfter"],
	},
	frequent:true,
	filter:function (event,player){
        return player.isPhaseUsing();
    },
	content:function (){
		player.addTempSkill('XS_chusai_mark',{player:'phaseBefore'});
        player.markSkill('XS_chusai_mark');
        player.storage.XS_chusai++;
        player.syncStorage('XS_chusai');
    },
	group:["XS_chusai_draw"],
	subSkill:{
		draw:{
			trigger:{
				player:"phaseJieshuBegin",
			},
			filter:function (event,player){
				return !game.hasPlayer(function(current){
					return player!=current&&current.inRange(player);
				});
			},
			frequent:true,
			"prompt2":function (event,player){
				return '是否摸2张牌？';
			},
			content:function (){
				player.draw(2);
            },
			sub:true,
		},
		mark:{
			charlotte:true,
			mod:{
				globalTo:function (from,to,current){
					var num1=to.storage.XS_chusai;
					return current+num1;
				},
			},
			intro:{
				content:function(storage,player,skill){
					var num=player.storage.XS_chusai;
					return '你的防御距离+'+num;
				},
			},
			onremove:function (player){
				player.storage.XS_chusai=0;
				player.unmarkSkill('XS_chusai_mark');
			},
			charlotte:true,
			sub:true,
		},
	},
},
"XS_jingbing":{
	ai:{
		expose:0.2,
	},
	trigger:{
		global:"damageBefore",
	},
	usable:1,
	audio:"ext:血色衣冠:2",
	priority:-1,
	filter:function (event,player){
		if(event.player==player) return false;
        return !event.player.inRange(player);
    },
	logTarget:'player',
	check:function (event,player){
		var att1=get.attitude(player,event.player);
		var att2=get.attitude(player,event.source);
		if(att1>0&&!event.player.hasSkillTag('maixie')) return true;
		if(att2>0) {
			if(event.num>=event.player.hp) return false;
			if(event.player.hasSkillTag('maixie')) return true;
		}
		return false;
    },
	content:function (){
        trigger.cancel();
        trigger.player.loseHp(trigger.num);
    },
},
"XS_juebie":{
	audio:"ext:血色衣冠:2",
	skillAnimation:true,
	trigger:{
		player:"die",
	},
	forceDie:true,
	direct:true,
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt2('XS_juebie'),1,function(card,player,target){
			return player!=target;
		},function(target){
			var att=get.attitude(player,target);
			if(target.hasSkill('XS_bawang')) att*=5;
			return att;
		});
		"step 1"
		if(result.bool){
			event.tar=result.targets[0];
			player.logSkill('XS_juebie',event.tar);
			var cds=player.getCards('hej');
			player.lose(cds,ui.special,'toStorage');
			if(!event.tar.hasSkill('XS_wujian1')){
				event.tar.addSkill('XS_wujian1');
				event.tar.storage.XS_wujian1_mark=player;
			}
			for(var i=0;i<cds.length;i++) {
				event.tar.storage.XS_wujian1.push(cds[i]);
			}
			event.tar.syncStorage('XS_wujian1');
		}
		else event.finish();
		"step 2"
		var lt=['摸牌阶段','出牌阶段'];
		player.chooseControl(lt,true).set('ai',function(event){
			return '摸牌阶段';  
		}).set('prompt','诀别：令目标在准备阶段结束后追加一个额外的阶段');
		"step 3"
		event.tar.addSkill('XS_juebie_add');
		event.tar.storage.XS_juebie_add=result.control;
	},
	ai:{
		threaten:function(player,target){
			if(target.hp==1) return 0.2;
		},
		effect:{
			target:function(card,player,target,current){
				if(!target.hasFriend()) return;
				if(target.hp<=1&&get.tag(card,'damage')) return [1,0,0,-2];
			}
		}
	},
	subSkill:{
		add:{	
			trigger:{
				player:"phaseZhunbeiAfter",
			},
			forced:true,
			content:function (){
				if(player.storage.XS_juebie_add=='摸牌阶段') {
					var next=player.phaseDraw();
				}
				else {
					var next=player.phaseUse();
				}
				event.next.remove(next);
				trigger.next.push(next);
            },
			sub:true,
		},
	},
},
"XS_wujian":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	filterCard:true,
	usable:1,
	filterTarget:function(card,player,target){
		return target!=player;
	},
	check:function (card){
        if(get.color(card)=='black') return 9-get.value(card);
        return 7-get.value(card);
    },
	position:"he",
	filter:function (event,player){
        return player.countCards('he')>0;
    },
	discard:false,
	lose:false,
	prepare:"give2",
	content:function (){
        player.lose(cards,ui.special,'toStorage');
        if(!target.hasSkill('XS_wujian1')){
            target.addSkill('XS_wujian1');
			target.storage.XS_wujian1_mark=player;
        }
		target.storage.XS_wujian1.push(cards[0]);
		target.syncStorage('XS_wujian1');
    },
	ai:{
		expose:0.4,
		order:8,
		result:{
			target:function (player,target){
				if(target.hasSkill('XS_bawang')) return 10;
				return 3;
			},
		},
	},
},
"XS_wujian1":{
	init:function (player){
		player.storage.XS_wujian1=[];
	},
	mark:true,
	marktext:"剑",
	intro:{
		content:"cards",
	},
	group:["XS_wujian1_red","XS_wujian1_black"],
},
"XS_wujian1_red":{
	usable:1,
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	filter:function (event,player){
        var cardss=player.storage.XS_wujian1;
        if(!cardss.length) return false;
        for(i=0;i<cardss.length;i++) {
            if(get.color(cardss[i])=='red') return true;
        }
        return false;
    },
	chooseButton:{
		dialog:function (event,player){
            var list=[];
            var cardX=player.storage.XS_wujian1;
            for(var i=0;i<cardX.length;i++){
                if(get.color(cardX[i])=='red') list.push(cardX[i]);
            }
            return ui.create.dialog('舞剑',[list,'vcard']);
        },
		backup:function (links,player){
            return {
                filterCard:function (card){
                    return false;
                },
                selectCard:-1,
                viewAs:{name:'sha'},
                cards:links,
                onuse:function(result,player){
                    result.cards=lib.skill[result.skill].cards;
                    var card=result.cards[0];
                    player.storage.XS_wujian1.remove(card);
					game.cardsDiscard(card);
                    player.syncStorage('XS_wujian1');
                    if(!player.storage.XS_wujian1.length){
                        player.removeSkill('XS_wujian1');
                    }
					if(player.storage.XS_wujian1_mark.isAlive()) {
						player.storage.XS_wujian1_mark.draw();
					}  
                }
            }
        },
		prompt:function (links,player){
            return '选择使用杀的目标';
        },
	},
	ai:{
		order:8,
		result:{
			player:1.5,
		},
	},
},
"XS_wujian1_black":{
	usable:1,
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	filter:function (event,player){
        var cardss=player.storage.XS_wujian1;
        if(!cardss.length) return false;
        for(i=0;i<cardss.length;i++) {
            if(get.color(cardss[i])=='black') return true;
        }
        return false;
    },
	chooseButton:{
		dialog:function (event,player){
            var list=[];
            var cardX=player.storage.XS_wujian1;
            for(var i=0;i<cardX.length;i++){
                if(get.color(cardX[i])=='black') list.push(cardX[i]);
            }
            return ui.create.dialog('舞剑',[list,'vcard']);
        },
		backup:function (links,player){
            return {
                filterCard:function (card){
                    return false;
                },
                selectCard:-1,
                viewAs:{name:'juedou'},
                cards:links,
                onuse:function(result,player){
                    result.cards=lib.skill[result.skill].cards;
                    var card=result.cards[0];
                    player.storage.XS_wujian1.remove(card);
					game.cardsDiscard(card);
                    player.syncStorage('XS_wujian1');
                    if(!player.storage.XS_wujian1.length){
                        player.removeSkill('XS_wujian1');
                    }
					if(player.storage.XS_wujian1_mark.isAlive()) {
						player.storage.XS_wujian1_mark.draw();
					} 
                }
            }
        },
		prompt:function (links,player){
            return '选择使用决斗的目标';
        },
	},
	ai:{
		order:8,
		result:{
			player:1.5,
		},
	},
},
"XS_tongku":{
	trigger:{
		player:"loseEnd",
	},
	check:function (event,player){
        return get.attitude(player,_status.currentPhase)<0;
    },
	filter:function (event,player){
		if(_status.currentPhase==player) return false;
		for(var i=0;i<event.cards.length;i++) {
			if(event.cards[i].original=='h') return true;
		}
        return false;
    },
	"prompt2":function (event,player){
		return '是否令'+get.translation(_status.currentPhase)+'选择1项：对你使用1张杀；失去1点体力？';
	},
	content:function (){
        "step 0"
		event.tar=_status.currentPhase;
        event.pla=player;
		event.nm=0;
		for(var i=0;i<trigger.cards.length;i++) {
			if(trigger.cards[i].original=='h') event.nm++;
		}
		"step 1"
		event.tar.chooseToUse(function(card,player,event){
			if(get.name(card)!='sha') return false;
			return lib.filter.filterCard.apply(this,arguments);
		},'对'+get.translation(event.pla)+'使用一张杀，否则你失去1点体力。')
		.set('ai2',function(target,card,player,player2,isLink){
			var eff=get.effect(event.pla,{name:'sha'},event.tar,event.tar);
			return eff+2;
		})
		.set('filterTarget',function(card,player,target){
			if(target!=event.pla) return false;
			return lib.filter.targetEnabled.apply(this,arguments);
		});
        "step 2"
		if(!result.bool){
			event.tar.loseHp();
		}
		"step 3"
		event.nm--;
        if(event.nm>0){
            event.goto(1);
        }
        else event.finish();
    },
	ai:{
		threaten:0.8,
		effect:{
			target:function(card){
				if(card.name=='guohe'||card.name=='shunshou') return 0.5;
			}
		},
	},
},
"XS_bengcheng":{
	priority:15,
	trigger:{
		global:["useCardBegin"],
	},
	filter:function (event,player){
		if(event.card.name!='sha'||!player.countCards('h')||event.player==player||!event.targets.contains(player)) return false;
		return game.hasPlayer(function(current){
			return current!=player&&current.countCards('h')&&event.player.inRange(current)&&!event.targets.contains(current);
		});
    },
	direct:true,
	content:function (){
        "step 0"
		player.chooseTarget(get.prompt('XS_bengcheng'),'你可选择任意名'+get.translation(trigger.player)+'攻击范围内的角色，你们同时选择并展示1张手牌，花色与你不同的角色也成为此杀的目标。',[1,Infinity],function(card,player,target){
			var trigger=_status.event.getTrigger();
            return player!=target&&trigger.player!=target&&trigger.player.inRange(target)&&target.countCards('h')&&!trigger.targets.contains(target);
		}).ai=function(target){
			var trigger=_status.event.getTrigger();
            var eff=get.effect(target,trigger.card,trigger.player,player);
            return eff;
		}
        "step 1"
        if(result.bool) {
			player.logSkill('XS_bengcheng',result.targets);
            var tars=result.targets;
			event.ps=[];
            event.targets=tars.sort(lib.sort.seat);
            player.chooseCard('h',1,'选择一张手牌',true).set('ai',function(card){
                return 10-get.value(card);
            });
        }
        else event.finish();
        "step 2"
        if(result.bool) {
			game.log(player,'选择了1张手牌');
            event.cd1=result.cards[0];
			game.delay();
        }
        else event.finish();
        "step 3"
        if(event.targets.length){
			var target=event.targets.shift();
			event.current=target;
        }
        else event.goto(7);
        "step 4"
		event.current.chooseCard('h',1,'选择一张手牌',true).set('ai',function(card){
			return 10-get.value(card);
		});
		"step 5"
		event.current.showCards(result.cards);
        if(get.suit(result.cards[0])!=get.suit(event.cd1)) {
			trigger.targets.push(event.current);
			event.ps.push(event.current);
        }
		"step 6"
		game.delay();
		event.goto(3);
		"step 7"
		player.showCards(event.cd1);
		for(var i=0;i<event.ps.length;i++) {
			game.log(event.ps[i],'成为了',trigger.player,'使用的',trigger.card,'的额外目标');
		}
    },
	ai:{
		expose:0.3,
		effect:{
			target:function (card,player,target){
                if(card.name=='sha'){
                    var num=0;
					for(var i=0;i<game.players.length;i++) {
						if(game.players[i]!=player&&game.players[i]!=target&&game.players[i].countCards('h')&&player.inRange(game.players[i])) {
							num+=get.effect(game.players[i],card,player,target);
						}
					}
                    return [1,num];
                }
            },
		},
	},
},
"XS_ceshi":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	content:function (){
        'step 0'
        event.cards=[];
        event.getResultString=function(str){
            switch(str){
                case '武器':return 'equip1';
                case '防具':return 'equip2';
                case '防御马':return 'equip3';
                case '锦囊':return 'jinnang';
                case '宝物':return 'equip5';
            }
            return str;
        };
        'step 1'
        player.chooseControl('武器','防具','防御马','锦囊','宝物',function(){
            if(Math.random()<0.3) return '武器';
            if(Math.random()<0.6&&Math.random()>=0.3) return '防具';
            if(Math.random()<0.6&&Math.random()>=0.7) return '防御马';
            if(Math.random()<0.8&&Math.random()>=0.7) return '锦囊';
            return '宝物'
        }).set('prompt','请选择想要获得的装备牌类型');
        'step 2'
        event.control=event.getResultString(result.control);
        if(event.control!='jinnang') {
            var card=get.cardPile(function(card){
                return get.subtype(card)==event.control;
            });
        }
        else {
            var card=get.cardPile(function(card){
                return card.name=='XS_hunshui';
            });
        }
        if(card){
            player.gain(card,'gain2','log');
        }
        else {
            player.draw();
        }
    },
	ai:{
		order:8,
		result:{
			player:3,
		},
	},
},
"XS_gongao":{
	audio:"ext:血色衣冠:2",
	trigger:{
		global:"loseAfter",
	},
	logTarget:'player',
	frequent:true,
	filter:function(event,player){
		if(event.player==player) return false;
		if(player.inRange(event.player)||event.player.inRange(player)) {
			for(var i=0;i<event.cards.length;i++){
				if(event.cards[i].original=='e'&&get.position(event.cards[i])=='d') return true;
			}
		}
		return false;
	},
	content:function(){
		for(i=0;i<trigger.cards.length;i++) {
			if(trigger.cards[i].original=='e'&&get.position(trigger.cards[i])=='d') {
				player.gain(trigger.cards[i],'gain2');
			}
		}
	},
},
"XS_bingfeng":{
	init:function (player){
		player.storage.XS_bingfeng=[];
	},
	marktext:"锋",
	intro:{
		content:"cards",
	},
	trigger:{
		player:'loseAfter',
		global:['equipAfter','addJudgeAfter','gainAfter','loseAsyncAfter'],
	},
	forced:true,
	filter:function(event,player){
		var evt=event.getl(player);
		if(evt&&evt.player==player&&evt.es&&evt.es.length>0) {
			for(var i=0;i<evt.es.length;i++) {
				if(get.subtype(evt.es[i])=='equip1') return true;
			}
		}
		return false;
	},
	forced:true,
	content:function (){
		"step 0"
		event.eqs=trigger.getl(player).es;
		"step 1"
		if(event.eqs.length){
			var eq=event.eqs.shift();
			event.current=eq;
		}
		else event.finish();
		"step 2"
		if(get.subtype(event.current)=='equip1') {
			var card=[];
			var check=true,tp=player.storage.XS_bingfeng;
			if(tp.length) {
				for(var j=0;j<tp.length;j++) {
					if(tp[j].name==event.current.name) { check=false; }
				}
				if(check) {
					card[0]=event.current;
				}
			}
			else {
				card[0]=event.current;
			}
			if(card[0]){
				var info=get.info(card[0]);
				if(info.skills){
					if(card[0].clone){
						card[0].clone.moveDelete(player);
					}
					player.storage.XS_bingfeng.push(card[0]);
					player.markSkill('XS_bingfeng');
					player.addAdditionalSkill('XS_bingfeng',info.skills,true);
				}
			}
		}
		"step 3"
		event.goto(1);	
    },
	ai:{
		effect:{
			target:function (card,player,target,current){
				if(get.subtype(card)=='equip1') return [1,3];
			},
		},
	},
	group:["XS_bingfeng_remove","XS_bingfeng_start"],
	subSkill:{
		remove:{
			trigger:{
				player:"dieBegin",
			},
			direct:true,
			filter:function (event,player){
                return player.storage.XS_bingfeng.length>0;
            },
			content:function (){
				player.discard(player.storage.XS_bingfeng);
				player.storage.XS_bingfeng=[];
				player.unmarkSkill('XS_bingfeng');
				player.removeAdditionalSkill('XS_bingfeng');
            },
			sub:true,
		},
		start:{
			trigger:{
				global:"gameDrawAfter",
			},
			direct:true,
			content:function (){
				var card=get.cardPile(function(card){
                    return get.subtype(card)=='equip1';
                });
                if(card){
                    player.gain(card,'gain2','log');
                }
            },
			sub:true,
		},
	},
},
"XS_xiaoqi":{
	audio:"ext:血色衣冠:2",
	enable:'phaseUse',
	usable:1,
	filterTarget:function(card,player,target){
		return target!=player&&target.countGainableCards(player,'e')>0;
	},
	filter:function (event,player){
		return game.hasPlayer(function(current){
			return current!=player&&current.countCards('e');
		});
	},
	content:function(){
		'step 0'
        event.cards=target.getCards('e');
		player.chooseCardButton('获得'+get.translation(target)+'的1张装备牌，并令其摸1张牌。',event.cards).ai=function(button){
			if(get.subtype(button.link)=='equip1') return get.value(button.link)+1;
			return get.value(button.link);
		}
        'step 1'
        if(result.bool){
			var sub=get.subtype(result.links[0]);
			player.gain(result.links[0],target,'giveAuto');
			target.draw();
			if(sub=='equip1') {
				player.addTempSkill('XS_xiaoqi_eq1');
			}
			else {
				player.addTempSkill('XS_xiaoqi_eq2');
			}
        }
	},
	ai:{
		order:9,
		result:{
			target:function(target,player){
				if(target.hasSkill('XS_lianbing')||target.hasSkill('XS_tianjiao')||target.hasSkill('XS_gongao')) {
					return 1;
				}
				else return -0.5;
			},
			player:3,
		},
	},
	subSkill:{
        eq1:{
			charlotte:true,
			sub:true,
            marktext:"骁",
			mark:true,
            intro:{
                content:function (storage){
                    return '你使用的杀的伤害基数+1';
                },
            },
			trigger:{
				player:["shaBegin"],
			},	
			priority:90,
			forced:true,
			content:function (){
				trigger.baseDamage++;
			},
			ai:{
				damageBonus:true,
			},
        },
		eq2:{
			charlotte:true,
			sub:true,
			marktext:"骁",
			mark:true,
            intro:{
                content:function (storage){
                    return '你使用的杀无法被闪避';
                },
            },
			trigger:{
				player:"shaBegin",
			},
			forced:true,
			content:function (){
				trigger.directHit=true;
			},
		}
    },
},
"XS_canggong":{
	trigger:{
		source:"damageBegin4",
	},
	filter:function (event,player){
        return event.player!=player&&event.num>0;
    },
	check:function (event,player){
		if(get.attitude(player,event.player)>0) return true;
		return event.num<event.player.hp;
	},
	logTarget:"player",
	"prompt2":function (event,player){
		return '是否防止你对'+get.translation(event.player)+'造成的伤害，令其获得'+event.num+'枚“藏”？';
	},
	priority:-99,
	content:function (){
		if(!trigger.player.hasSkill('XS_canggong_mark')) {
			trigger.player.addSkill('XS_canggong_mark');
		}
		trigger.player.storage.XS_canggong_mark+=trigger.num;
		trigger.player.syncStorage('XS_canggong_mark');
		trigger.cancel();
    },
	group:["XS_canggong_add"],
	subSkill:{
		mark:{
			onremove:function(player){
				delete player.storage.XS_canggong_mark;
			},
			mark:true,
			marktext:"藏",
			init:function (player){
                player.storage.XS_canggong_mark=0;
            },
			intro:{
				content:function (storage){
                    return '当前值：<span class="bluetext">'+storage+'</span> ';
                },
			},
			sub:true,
		},
		add:{
			trigger:{
				global:"damageBegin1",
			},
			check:function (event,player){
				if(get.attitude(player,event.player)>0) return false;
				return event.num+event.player.storage.XS_canggong_mark>=event.player.hp;
			},
			"prompt2":function (event,player){
				var num1=event.player.storage.XS_canggong_mark;
				return '是否移除'+get.translation(event.player)+'的“藏”，使其受到的伤害增加+'+num1+'？';
			},
			logTarget:'player',
			filter:function (event,player){
                return event.player.hasSkill('XS_canggong_mark')&&event.player.storage.XS_canggong_mark>0;
            },
			content:function (){
				var num=trigger.player.storage.XS_canggong_mark;
				trigger.player.removeSkill('XS_canggong_mark');
				trigger.num+=num;
            },
			sub:true,
		},
	},
},
"XS_xiongcai":{
	audio:"ext:血色衣冠:2",
	trigger:{
		player:"phaseUseEnd",
	},
	filter:function(event,player){
		if(!player.isMaxHandcard(true)) return false;
		return player.countCards('h',{color:'red'});
	},
	direct:true,
	ai:{
		expose:0.4,
    },
	content:function(){
		"step 0"
		player.chooseCardTarget({
			filterCard:function(card){
				return get.color(card)=='red';
			},
			position:"h",
			selectCard:[1,Infinity],
			selectTarget:1,
			filterTarget:function(card,player,target){
				return player!=target;
			},
			ai1:function(card){
				if(!ui.selected.cards.length) return 9-get.value(card);
				return -1;
			},
			ai2:function(target){
				var player=_status.event.player;
				if(target.hasJudge('lebu')) return 0;
				if(target.hasSkill('XS_xionghao')) return 0;
				if(get.attitude(player,target)>4){
					if(target.hasSkill('XS_quzhu'))
					return get.threaten(target)/Math.sqrt(target.hp+1)/Math.sqrt(target.countCards('h')+1)+1;
					return get.threaten(target)/Math.sqrt(target.hp+1)/Math.sqrt(target.countCards('h')+1);
				}
				return 0;
			},
			prompt:'是否发动【雄才】？</br></br>你可交给1名其他角色至少1张红色手牌令其获得1个额外回合，且其于此回合内杀死角色时你摸2张牌。'
		});
		"step 1"
		if(result.bool){
			player.logSkill('XS_xiongcai',result.targets[0]);
			result.targets[0].gain(result.cards,player,'giveAuto');
			result.targets[0].addTempSkill('XS_xiongcai_draw',{player:'phaseJieshuAfter'});
			result.targets[0].storage.XS_xiongcai_draw=player;
			result.targets[0].markSkillCharacter('XS_xiongcai_draw',player,'雄才','当你杀死角色时，'+get.translation(player)+'摸2张牌');
			result.targets[0].insertPhase();
		}
		else event.finish();
	},
	subSkill:{
         draw:{
			charlotte:true,
			trigger:{
				source:"dieAfter",
			},
			onremove:function (player,skill){
				player.unmarkSkill('XS_xiongcai_draw');
			},
			filter:function(event,player){
				return player.storage.XS_xiongcai_draw;
			},
			forced:true,
			content:function(){
				player.storage.XS_xiongcai_draw.draw(2);
			},
        },
    },
            },
"XS_guhuo":{
	audio:"ext:血色衣冠:2",
	enable:"phaseUse",
	usable:1,
	discard:false,
	filterCard:function (card){
        return get.color(card)=='red';
    },
	filter:function (event,player){
        return player.countCards('h',{color:'red'});
    },
	filterTarget:function (card,player,target){
        return player!=target;
    },
	check:function (card){
        return 4.5-get.value(card);
    },
	content:function (){
        "step 0"
		target.gain(cards,'gain2');
        "step 1"
        var cardsx=target.getCards('h',{color:'black'});
        if(cardsx) {
			player.gain(cardsx,target,'giveAuto');
        }
		"step 2"
		var nm=player.countCards('h')-player.maxHp;
		if(nm>0) {
			player.chooseToDiscard('h',nm,true);
		}
    },
	ai:{
		expose:0.2,
		result:{
			player:function (player,target){
				var nm=player.maxHp-player.countCards('h');
				if(nm<=0) return -10;
				return 0;
			},
			target:function (player,target){
				var hs=target.countCards('h');
				if(hs>2) return -1;
				if(hs==2) return -0.5;
				return 0;
			},
		},
		order:0.5,
	},
},
"XS_zuiji":{
	audio:"ext:血色衣冠:2",
	zhuSkill:true,
	unique:true,
	enable:'phaseUse',
	mark:true,
	skillAnimation:true,
	animationColor:'fire',
	limited:true,
	init:function(player){
		player.storage.XS_zuiji=false;
	},
	filter:function(event,player){
		if(!player.hasZhuSkill('XS_zuiji')) return false;
		if(player.storage.XS_zuiji) return false;
		if(player.countCards('h',{color:'red'})) return false;
		if(!player.countCards('h')) return false;
 		return true;
	},
	content:function(){
		"step 0"
		player.awakenSkill('XS_zuiji');
		player.storage.XS_zuiji=true;
		"step 1"
		var cds=player.getCards('h');
		event.nm=cds.length;
		player.discard(cds);
		player.turnOver();
		player.chooseTarget('令至多'+event.nm+'名与你同势力角色摸3张牌',[1,event.nm],function(card,player,target){
			return target.group==player.group;
		},function(target){
			var att=get.attitude(player,target);
			var hs=target.countCards('h')+0.01;
			return att/hs;
		});
		"step 2"
		if(result.bool){
			game.asyncDraw(result.targets,3)
		}
	},
	ai:{
        skillTagFilter:function (player){
            if(player.storage.XS_zuiji) return false;
			if(!player.countCards('h')) return false;
            if(player.countCards('h',{color:'red'})) return false;
        },	
		order:0.5,
		result:{
            player:function (player){
				var num1=game.countPlayer(function(current){
					return get.attitude(player,current)>0&&current.group==player.group;
				});
				var nm=num1*3-player.countCards('h')-3;
				return nm;
            },
		},
	},
	intro:{
		content:'limited'
	},
},
"XS_jianzhu":{
	trigger:{player:'loseAfter'},
	filter:function(event,player){
		if(event.type!='discard') return false;
		for(var i=0;i<event.cards2.length;i++){
			if(get.position(event.cards2[i],true)=='d'){
				return true;
			}
		}
		return false;
	},
	direct:true,
	content:function(){
		"step 0"
		if(trigger.delay==false) game.delay();
		"step 1"
		player.chooseTarget(get.prompt('XS_jianzhu'),'你可令1名其他角色获得'+get.translation(trigger.cards2)+'，如此其手牌上限+'+player.maxHp+'直到其下回合结束。',false,function(card,player,target){
			return player!=target;
		}).ai=function(target){
			var nm=target.countCards('h')-target.getHandcardLimit()+1;
			var att=Math.max(0,get.attitude(player,target));
			return att*nm;
		}
		"step 2"
		if(result.bool) {
			player.logSkill('XS_jianzhu',result.targets[0]);
			event.tar=result.targets[0];
			event.tar.gain(trigger.cards2,'gain2','log');
			event.tar.addTempSkill('XS_jianzhu_mark',{player:'phaseAfter'});
			event.tar.storage.XS_jianzhu_mark=player.hp;
			event.tar.markSkillCharacter('XS_jianzhu_mark',player,'谏逐','你的手牌上限+'+player.hp);
		}
		else event.finish();
	},
	subSkill:{
         mark:{
			charlotte:true,
			mod:{
				maxHandcard:function (player,num){
					if(player.storage.XS_jianzhu_mark) {
						return num+player.storage.XS_jianzhu_mark;
					}
				},
			},
			onremove:function (player,skill){
				player.unmarkSkill('XS_jianzhu_mark');
			},
			sub:true,
        },
    },
},
"XS_fenshu":{
	trigger:{
		player:"useCardBegin",
	},
	direct:true,
	filter:function (event,player) {
		if(!player.countCards('he')) return false;
		if(get.type(event.card)!='trick') return false;
		return game.hasPlayer(function(current){
			return current!=player&&current.countCards('he')&&event.targets.contains(current);
		});
	},
	priority:7,
	content:function (){
		"step 0"
		player.chooseTarget(get.prompt('XS_fenshu'),'你可令任意名目标与你各弃置1张牌。',[1,Infinity],false,function(card,player,target){
			var tri=_status.event.getTrigger();
			return target!=player&&tri.targets.contains(target)&&target.countCards('he');
		}).ai=function(target){
			var att=get.attitude(player,target);
			return -att;
		}
		"step 1"
		if(result.bool) {
			player.logSkill('XS_fenshu',result.targets);
			event.tars=result.targets;
			player.chooseToDiscard(1,'he',true,function(card){
				var cds=_status.event.getTrigger().cards;
				return !cds.contains(card);
			});
		}	
		else event.finish();
		"step 2"
		for(var i=0;i<event.tars.length;i++) {
			event.tars[i].chooseToDiscard(1,'he',true);
		}
	},
	ai:{
		expose:0.4,
	},
	group:["XS_fenshu_tar"],
	subSkill:{
         tar:{
			trigger:{
				target:"useCardToTargeted",
			},
			check:function (event,player){
				var att=get.attitude(player,event.player);
				return att<=0;
			},
			"prompt2":function (event,player){
				return '是否令你与'+get.translation(event.player)+'各弃置1张牌？';
			},
			filter:function (event,player) {
				if(event.player==player) return false;
				if(!player.countCards('he')||!event.player.countCards('he')) return false;
				if(get.type(event.card)!='trick') return false;
				return true;
			},
			priority:7,
			content:function (){
				"step 0"
				player.chooseToDiscard(1,'he',true);
				"step 1"
				trigger.player.chooseToDiscard(1,'he',true);
			},
			ai:{
				expose:0.3,
				effect:{
					target:function (card,player,target,current){
						if(get.tag(card,'damage')&&get.type(card)=='trick') return [1,0,1,-1];
					},
				},
			},
			sub:true,
        },
    },
},
},//技能

translate:{
	XS_qslh:"秦扫六合",
	XS_wbct:"万邦朝唐",
	XS_chzb:"楚汉争霸",
	XS_lhfy:"两汉风云",
	XS_txqs:"铁血强宋",
	XS_dmfh:"大明风华",
	XS_zzbj:"诸子百家",
	XS_shsd:"神话时代",
	XS_xqwl:"先秦往烈",
	XS_hxrj:"华夏人杰",
	XS_ljfl:"魏晋风流",
	XS_swjg:"塞外金戈",
	XS_mmqg:"遗臭万年",
	XS_cklz:"刺客列传",
	XS_jxwz:"将相无种",
	XS_wyqg:"文耀千古",
	XS_nbbl:"南北并立",
	XS_mysy:"民言书影",
	XS_sdmw:"圣帝明王",
	XS_gsws:"国士无双",
	"XS_guanyiwusp":"神管夷吾",
	"XS_liuqi":"刘启",
	"XS_chaocuo":"晁错",
	"XS_taipinggongzhu":"太平公主",
	"XS_baozheng":"包拯",
	"XS_wangmengsp":"神王猛",
	"XS_jixuanyuan":"姬轩辕",
	"XS_leizu":"嫘祖",
	"XS_jigaoyang":"姬高阳",
	"XS_jijun":"姬俊",
	"XS_lijingsp":"神李靖",
	"XS_suwu":"苏武",
	"XS_huchonghua":"胡充华",
	"XS_qifangxun":"祁放勋",
	"XS_guichonghua":"妫重华",
	"XS_yuefeisp":"神岳飞",
	"XS_luoshixin":"罗士信",
	"XS_yaoli":"要离",
	"XS_fengxiaolian":"冯小怜",
	"XS_lifuren":"李夫人",
	"XS_hanxinsp":"神韩信",
	"XS_liqingzhao":"李清照",
	"XS_baoshuya":"鲍叔牙",
	"XS_zouyan":"邹衍",
	"XS_zhouyafu":"周亚夫",
	"XS_baiqisp":"神白起",
	"XS_xunkuang":"荀况",
	"XS_zhuangzhou":"庄周",
	"XS_nvjiao":"女娇",
	"XS_siyu":"姒禹",
	"XS_jiangxiaobaisp":"神姜小白",
	"XS_weizhongxian":"魏忠贤",
	"XS_yuanchonghuan":"袁崇焕",
	"XS_zhengchenggong":"郑成功",
	"XS_chengyaojin":"程咬金",
	"XS_boertie":"孛尔帖",
	"XS_dugujialuo":"独孤伽罗",
	"XS_chairong":"柴荣",
	"XS_murongke":"慕容恪",
	"XS_liuchesp":"神刘彻",
	"XS_muguiying":"穆桂英",
	"XS_zhuyingtai":"祝英台",
	"XS_liangshanbo":"梁山伯",
	"XS_liyuanba":"李元霸",
	"XS_zhuyuanzhangsp":"神朱元璋",
	"XS_wuyuan":"伍员",
	"XS_helv":"阖闾",
	"XS_miao":"芈敖",
	"XS_milv":"芈侣",
	"XS_yingzhengsp":"神嬴政",
	"XS_xianzhen1":"先轸",
	"XS_jichonger":"姬重耳",
	"XS_jiangxi":"姜奚",
	"XS_yingrenhao":"嬴任好",
	"XS_tiemuzhensp":"神铁木真",
	"XS_weishuyu":"韦叔裕",
	"XS_suchuo":"苏绰",
	"XS_yuwenyong":"宇文邕",
	"XS_yuwentai":"宇文泰",
	"XS_xiangjisp":"神项籍",
	"XS_liubangsp":"神刘邦",
	"XS_lishiminsp":"神李世民",
	"XS_xianying":"冼英",
	"XS_wumingche":"吴明彻",
	"XS_xiaomohe":"萧摩诃",
	"XS_chenbaxian":"陈霸先",
	"XS_yangyin":"杨愔",
	"XS_duanshao":"段韶",
	"XS_hulvguang":"斛律光",
	"XS_louzhaojun":"娄昭君",
	"XS_gaoaocao":"高敖曹",
	"XS_gaosu":"高肃",
	"XS_gaoyang":"高洋",
	"XS_gaohuan":"高欢",
	"XS_xielingyun":"谢灵运",
	"XS_jiayi":"贾谊",
	"XS_xinqiji":"辛弃疾",
	"XS_dufu":"杜甫",
	"XS_yangxiong":"杨雄",
	"XS_taoyuanming":"陶渊明",
	"XS_sushi":"苏轼",
	"XS_libai":"李白",
	"XS_yiyin":"伊尹",
	"XS_chengtang":"成汤",
	"XS_jidan":"姬旦",
	"XS_jifa":"姬发",
	"XS_jichang":"姬昌",
	"XS_dixin":"子受",
	"XS_liukun":"刘琨",
	"XS_huanwen":"桓温",
	"XS_wangdao":"王导",
	"XS_simarui":"司马睿",
	"XS_zuti":"祖逖",
	"XS_dongzhongshu":"董仲舒",
	"XS_zhangqian":"张骞",
	"XS_liling":"李陵",
	"XS_zhuowenjun":"卓文君",
	"XS_xiangru":"司马相如",
	"XS_dongfangshuo":"东方朔",
	"XS_zhufuyan":"主父偃",
	"XS_shangguanwaner":"上官婉儿",
	"XS_huamulan":"花木兰",
	"XS_banzhao":"班昭",
	"XS_dengsui":"邓绥",
	"XS_zhaofeiyan":"赵飞燕",
	"XS_hongfunv":"红拂女",
	"XS_daji":"苏妲己",
	"XS_fangla":"方腊",
	"XS_songjiang":"宋江",
	"XS_lizicheng":"李自成",
	"XS_huangchao":"黄巢",
	"XS_wuguang":"吴广",
	"XS_chensheng":"陈胜",
	"XS_liguangbi":"李光弼",
	"XS_guoziyi":"郭子仪",
	"XS_shisiming":"史思明",
	"XS_anlushan":"安禄山",
	"XS_yangyuhuan":"杨玉环",
	"XS_lilongji":"李隆基",
	"XS_wuzhao":"武曌",
	"XS_liuche":"刘彻",
	"XS_quping":"屈平",
	"XS_xishi":"施夷光",
	"XS_fangqiao":"房乔",
	"XS_guanyiwu":"管夷吾",
	"XS_xueli":"薛礼",
	"XS_tiemuzhen":"铁木真",
	"XS_liuji":"刘基",
	"XS_kongqiu":"孔丘",
	"XS_lier":"李耳",
	"XS_modi":"墨翟",
	"XS_yingzheng":"嬴政",
	"XS_mibazi":"芈八子",
	"XS_zhangjizhongjing":"张机",
	"XS_xiangji":"项籍",
	"XS_jiangshang":"姜尚",
	"XS_weizhe":"魏辙",
	"XS_jiangxiaobai":"姜小白",
	"XS_liji":"李勣",
	"XS_sulie":"苏烈",
	"XS_xuewen":"薛文",
	"XS_lvzhi":"吕雉",
	"XS_huishi":"惠施",
	"XS_mengke":"孟轲",
	"XS_weiwuji":"魏无忌",
	"XS_tianrangju":"田穰苴",
	"XS_yangguang":"杨广",
	"XS_wangxu":"王诩",
	"XS_gongshuban":"公输般",
	"XS_yurang":"豫让",
	"XS_niezheng":"聂政",
	"XS_gaojianli":"高渐离",
	"XS_jingke":"荆轲",
	"XS_huanxuan":"桓玄",
	"XS_zhaogao":"赵高",
	"XS_laijunchen":"来俊臣",
	"XS_qinhui":"秦桧",
	"XS_yansong":"严嵩",
	"XS_zhusheng":"朱升",
	"XS_caobin":"曹彬",
	"XS_jibu":"季布",
	"XS_zhangtang":"张汤",
	"XS_zhoubo":"周勃",
	"XS_dengqiang":"邓羌",
	"XS_liudaogui":"刘道规",
	"XS_yangdayan":"杨大眼",
	"XS_direnjie":"狄仁杰",
	"XS_boershu":"博尔术",
	"XS_cuihong":"崔宏",
	"XS_tuobagui":"拓跋珪",
	"XS_cuihao":"崔浩",
	"XS_tuobatao":"拓跋焘",
	"XS_zhenghe":"郑和",
	"XS_panmei":"潘美",
	"XS_hanqinhu":"韩擒虎",
	"XS_wangben":"王贲",
	"XS_simacuo":"司马错",
	"XS_zhangsunsheng":"长孙晟",
	"XS_zhangsun":"长孙皇后",
	"XS_zhangsunwuji":"长孙无忌",
	"XS_liumuzhi":"刘穆之",
	"XS_xiehui":"谢晦",
	"XS_tandaoji":"檀道济",
	"XS_liuyu":"刘裕",
	"XS_wanganshi":"王安石",
	"XS_zongze":"宗泽",
	"XS_yaoguangxiao":"姚广孝",
	"XS_zhudi":"朱棣",
	"XS_peixingjian":"裴行俭",
	"XS_shiwansui":"史万岁",
	"XS_gaojiong":"高颎",
	"XS_yangjian":"杨坚",
	"XS_wangxizhi":"王羲之",
	"XS_zhaopu":"赵普",
	"XS_caoshen":"曹参",
	"XS_lvbuwei":"吕不韦",
	"XS_muhuali":"木华黎",
	"XS_bizaiyu":"毕再遇",
	"XS_chuliji":"樗里疾",
	"XS_lanyu":"蓝玉",
	"XS_zhangheng":"张衡",
	"XS_yangsu":"杨素",
	"XS_longju":"龙且",
	"XS_liyiji":"郦食其",
	"XS_liurengui":"刘仁轨",
	"XS_nanzi":"南子",
	"XS_qinliangyu":"秦良玉",
	"XS_weiliao":"尉缭",
	"XS_mayuan":"马援",
	"XS_yudayou":"俞大猷",
	"XS_goujian":"勾践",
	"XS_licunxu":"李存勖",
	"XS_sanghongyang":"桑弘羊",
	"XS_wentianxiang":"文天祥",
	"XS_dukang":"杜康",
	"XS_hanshizhong":"韩世忠",
	"XS_zhangjuzheng":"张居正",
	"XS_yuxu":"虞诩",
	"XS_simaguang":"司马光",
	"XS_yuqian":"于谦",
	"XS_yangyouji":"养由基",
	"XS_lishimin":"李世民",
	"XS_yingbu":"英布",
	"XS_duruhui":"杜如晦",
	"XS_wangshouren":"王守仁",
	"XS_banchao":"班超",
	"XS_yinlihua":"阴丽华",
	"XS_xiexuan":"谢玄",
	"XS_fanju":"范雎",
	"XS_chenqingzhi":"陈庆之",
	"XS_menggong":"孟珙",
	"XS_fankuai":"樊哙",
	"XS_zhanghao":"张蚝",
	"XS_gengyan":"耿弇",
	"XS_fusu":"扶苏",
	"XS_fanzeng":"范增",
	"XS_murongchui":"慕容垂",
	"XS_yelvchucai":"耶律楚材",
	"XS_changyuchun":"常遇春",
	"XS_mengtian":"蒙恬",
	"XS_weizifu":"卫子夫",
	"XS_lixiaogong":"李孝恭",
	"XS_lianghongyu":"梁红玉",
	"XS_yumeiren":"虞姬",
	"XS_wangzhaojun":"王昭君",
	"XS_baiqi":"白起",
	"XS_hanxin":"韩信",
	"XS_wuqi":"吴起",
	"XS_sunwu":"孙武",
	"XS_lianpo":"廉颇",
	"XS_lijing":"李靖",
	"XS_yuefei":"岳飞",
	"XS_qinqiong":"秦琼",
	"XS_sunbin":"孙膑",
	"XS_tiandan":"田单",
	"XS_yueyi":"乐毅",
	"XS_huoqubing":"霍去病",
	"XS_yangzaixing":"杨再兴",
	"XS_zhuanzhu":"专诸",
	"XS_fanli":"范蠡",
	"XS_zhuyuanzhang":"朱元璋",
	"XS_shangyang":"商鞅",
	"XS_liubang":"刘邦",
	"XS_liguang":"李广",
	"XS_limu":"李牧",
	"XS_zhangliang":"张良",
	"XS_limi":"李泌",
	"XS_suqin":"苏秦",
	"XS_zhangyixs":"张仪",
	"XS_licunxiao":"李存孝",
	"XS_xiaohe":"萧何",
	"XS_chenping":"陈平",
	"XS_wangjian":"王翦",
	"XS_zhaokuangyin":"赵匡胤",
	"XS_fujian":"苻坚",
	"XS_ouyezi":"欧冶子",
	"XS_ranmin":"冉闵",
	"XS_qijiguang":"戚继光",
	"XS_liuxiu":"刘秀",
	"XS_hanfei":"韩非",
	"XS_lishizhen":"李时珍",
	"XS_linxiangru":"蔺相如",
	"XS_xuda":"徐达",
	"XS_weirui":"韦睿",
	"XS_xiean":"谢安",
	"XS_wangmeng":"王猛",
	"XS_weiqing":"卫青",
	"XS_yuchigong":"尉迟恭",
	"XS_simaqian":"司马迁",
	"XS_mengjiangnv":"孟姜女",
	"XS_subutai":"速不台",
	"XS_yueyun":"岳云",
	"XS_lisi":"李斯",
	"XS_shiba":"始霸",
	"XS_shiba_info":"每回合限1次，1名角色体力变化时，你可令变化数值翻倍，如此其摸其已损失体力值张牌。",
	"XS_zunwang":"尊王",
	"XS_zunwang_info":"限定技，出牌阶段限1次，你可弃置所有手牌并摸3张牌，对1名角色造成1点伤害或令其回复1点体力，若其体力因此变为1或上限，你可令其获得或重置“尊王”。",
	"XS_shuyan":"疏言",
	"XS_shuyan_info":"出牌阶段限1次，你可令1名其他角色摸你体力上限张牌，如此其展示手牌，若其中花色数小于4，你失去1点体力。",
	"XS_zhixian":"直险",
	"XS_zhixian_info":"你受到伤害时，可失去1点体力上限防止之，如此你可弃置来源1张牌。",
	"XS_zunye":"遵业",
	"XS_zunye_info":"出牌阶段结束，你可摸至多3张牌使手牌数变至与此阶段开始相同，如此你可展示手牌，并将其中1种颜色的所有牌交给1名其他角色。",
	"XS_dingfan":"定藩",
	"XS_dingfan_info":"限定技，出牌阶段，你可弃置任意张同颜色手牌，令等量已受伤角色失去体力上限至与体力值相同。",
	"XS_chongsheng":"宠盛",
	"XS_chongsheng_info":"锁定技，当你使用牌时，若该牌名为本局首次被使用，你增加1点体力上限并回复1点体力。",
	"XS_quanqing":"权倾",
	"XS_quanqing_info":"其他角色使用杀时，你可获得其场上1张牌并令其攻击距离+1，如此若你在其攻击范围内，此杀目标改为你。",
	"XS_tiemian":"铁面",
	"XS_tiemian_info":"锁定技，其他角色展示手牌后，若其中有黑色牌，你视为对其使用1张杀。",
	"XS_dongming":"洞明",
	"XS_dongming_info":"每轮限1次，其他角色回合开始，你可弃置1张手牌令其依次展示所有手牌，你可终止此过程令1名角色获得其当前展示的牌。",
	"XS_lingxing":"令行",
	"XS_lingxing_info":"游戏开始，你可选择1项效果令所有角色获得之：手牌上限+1；摸牌阶段摸牌数+1；进攻距离-1；随机废除1个装备栏。",
	"XS_jiezhi":"竭智",
	"XS_jiezhi_info":"一轮开始，你可弃置任意张手牌，令等量角色的“令行”效果进行1项变化：更改；翻转；数值增加1；移除并摸其当前数值张牌。",
	"XS_zhenbing":"振兵",
	"XS_zhenbing_info":"你的主要阶段开始时，可将你1个区域内所有牌置于“仁”，视为使用1张无距离限制的杀。",
	"XS_fumin":"抚民",
	"XS_fumin_info":"每轮限1次，1名角色成为场上手牌数最少的角色时，你可交给其“仁”中的2张牌，若不为你，其可将手牌中1张装备牌置于你的装备区。",
	"XS_xianshi":"先始",
	"XS_xianshi_info":"主公技，锁定技，游戏开始，你获得场上所有其他角色的主公技。",
	"XS_shican":"始蚕",
	"XS_shican_info":"回合开始，你可从牌堆中获得1张你未装备的类型的装备牌并装备之；若无对应类型装备牌，改为摸1张牌。",
	"XS_saosi":"缫丝",
	"XS_saosi_info":"出牌阶段限1次，你可将装备区1张牌移至1名其他角色对应区域，令其摸其有牌区域数张牌；你对装备区无牌角色发动此技能时，重置之。",
	"XS_dinggang":"定纲",
	"XS_dinggang_info":"出牌阶段限1次，你可令1名其他角色将：至多手牌上限张手牌/1张你指定的牌置于“仁”并摸等量的牌，如此其可视为使用1张杀/桃。",
	"XS_chengsi":"诚祀",
	"XS_chengsi_info":"回合结束，你可将“仁”中的任意张装备牌置于1名角色的装备区。",
	"XS_guishi":"规时",
	"XS_guishi_info":"一轮开始时，你可进行1次闪电效果判定，然后获得4个主要阶段。锁定技，当1张牌因判定而进入弃牌堆时，将之置入“仁”。",
	"XS_guishiex":"规时",
	"XS_guishiex_info":"一轮开始时，你可进行1次闪电效果判定，然后获得1个额外回合。",
	"XS_shanren":"善任",
	"XS_shanren_info":"你可将弃牌阶段改为：将至少1张手牌置于“仁”，若此时其中牌数为6，你可令1名其他角色获得“规时”前半部分至你下回合开始。",
	"XS_jidian":"疾电",
	"XS_jidian_info":"你对其他角色使用牌结算完成后，可令你计算与其的距离-1，如此若你与其距离为1，可令其进行1次浮雷效果判定，然后重置与其的距离。",
	"XS_jihou":"积厚",
	"XS_jihou_info":"你使用：基本/普通锦囊/延时锦囊/装备牌时，若你使用的上一张牌类型为4种之一且与此牌不同，可令此牌额外结算1次/指定1个额外目标/摸2张牌/移动场1张装备牌。",
	"XS_mingde":"明德",
	"XS_mingde_info":"你可将摸牌阶段改为：从你开始，所有角色可将1张手牌置于“仁”并摸1张牌；1张牌移出“仁”时，你可令1名角色摸1张牌。",
	"XS_jiaohua":"教化",
	"XS_jiaohua_info":"你受到伤害后，可观看来源手牌，并将其中1张置于“仁”，然后其摸1张牌。",
	"XS_canbing":"餐冰",
	"XS_canbing_info":"你受到实体牌造成的伤害时，可防止之，并将其当作兵粮寸断置于你的判定区，然后你摸1张牌。",
	"XS_zhongjie":"忠节",
	"XS_zhongjie_info":"每轮限1次，1名角色回合开始，你可弃置你所有区域各1张牌令其摸3张牌，且其本回合使用牌无距离、次数限制。",
	"XS_chongshe":"崇奢",
	"XS_chongshe_info":"锁定技，戏开始，你需展示1张手牌，使你体力上限及体力值增加其点数，如此，其他角色可将点数小于此牌的基本牌当作伤害基数为2的火杀对你使用。",
	"XS_chongshe2":"崇奢",
	"XS_chongshe2_info":"",
	"XS_yanxing":"宴兴",
	"XS_yanxing_info":"1名角色进入横置状态后，你可令其摸1张牌。",
	"XS_enze":"恩泽",
	"XS_enze_info":"你可将摸牌阶段改为：交给任意名已损失体力值大于你的角色“仁”中1张牌或令其摸1张牌，若你令所有合法目标都获得了牌，你摸2张牌。",
	"XS_xiebang":"协邦",
	"XS_xiebang_info":"你可将弃牌阶段改为：将任意张字数之和大于你体力值的手牌置于“仁”，然后令任意名角色共回复弃置牌数点体力。",
	"XS_beiwei":"背嵬",
	"XS_beiwei_info":"锁定技，你的杀可指定目标数/响应所需闪数/进攻距离+0/1/2。你使用装备牌后，可将所有数字向左/右移动1位/置为0至你下回合开始，视为使用1张不计次数的酒/杀/摸减少数值张牌。",
	"XS_zhonghun":"忠魂",
	"XS_zhonghun_info":"你同势力角色首次濒死时，可令你选择1项：失去1点体力令其回复1点体力；弃置装备区所有牌令“背嵬”数字共增加弃牌数。",
	"XS_shaoying":"鏖兵",
	"XS_shaoying_info":"每轮限1次，其他角色使用带有伤害标签的牌指定目标时，你可使之改为对你使用1张决斗，若你因此造成伤害，重置此技能。",
	"XS_haoqiang":"豪枪",
	"XS_haoqiang_info":"有杀因打出而进入弃牌堆后，当前回合结束你可进行1次判定，如此你获得其中点数小于判定结果的杀。",
	"XS_qingzi":"倾姿",
	"XS_qingzi_info":"转换技，回合结束，你可：交给1名其他角色2张手牌；令1名其他角色摸3张牌；如此若其与你手牌数之差不大于4，你可与其交换手牌。",
	"XS_jieli":"孑立",
	"XS_jieli_info":"锁定技，若你的手牌数为全场最少，你不在其他角色攻击范围内。",
	"XS_yuchen":"玉陈",
	"XS_yuchen_info":"若你未横置，你可将自身横置，视为使用或打出1张基本牌；一轮开始，你可解除自身的横置状态。",
	"XS_xiahui":"黠慧",
	"XS_xiahui_info":"你解除横置状态后，可摸X张牌或令1名其他角色弃置X张牌，X为此次横置期间你每使用的牌数且至多为3。",
	"XS_kuji":"苦计",
	"XS_kuji_info":"你受到伤害后，可令攻击范围内至多X名其他角色各摸1张牌；你失去体力后，可对攻击范围内至多X名其他角色各造成1点伤害，X为你已损失体力值。",
	"XS_ziqiang":"自戕",
	"XS_ziqiang_info":"限定技，出牌阶段，可令你本回合进攻距离、可使用杀的次数+X，然后失去X点体力并摸X张牌，X为你的体力值。",
	"XS_yangtui":"佯退",
	"XS_yangtui_info":"你的黑/红色牌进入弃牌后，可于当前回合结束时将之当作草木皆兵/四面楚歌置于1名其他角色判定区。锁定技，你受到伤害后，需弃置1张牌。",
	"XS_jufu":"俱伏",
	"XS_jufu_info":"出牌阶段，你可弃置1名其他角色判定区1张牌，视为对其使用X张不计次数的杀，X为弃置前其判定区牌数。",
	"XS_jinglu":"惊鹭",
	"XS_jinglu_info":"你可将你于弃牌阶段弃置的所有牌当作1张未以此法使用过的普通锦囊牌使用，若这些牌颜色相同，你可使用其中1张。",
	"XS_piaoling":"飘零",
	"XS_piaoling_info":"回合开始，可使你本回合任意项-1：手牌上限，使用杀次数，摸牌阶段摸牌数；如此，你可令1名其他角色摸X张牌，X为-1项数。",
	"XS_yanzhen":"严阵",
	"XS_yanzhen_info":"锁定技，出牌阶段你使用的第一张牌需为杀，且其无距离限制、不计次数。",
	"XS_jieao":"桀骜",
	"XS_jieao_info":"你可失去1点体力上限，视为使用1张伤害基数为2的杀。",
	"XS_yinyang":"阴阳",
	"XS_yinyang_info":"一轮开始，你可选择2名角色并指定增加/减少，至下轮开始，一者体力产生该方向变化后，另一者体力进行相反方向的变化。",
	"XS_zhongshi":"终始",
	"XS_zhongshi_info":"你受到/造成伤害时，可以展示所有手牌，若均为红色/黑色，此伤害-1/+1。",
	"XS_zhixian":"知贤",
	"XS_zhixian_info":"出牌阶段限1次，你可令1名其他角色观看你手牌，如此手牌数少者摸1张牌，多者手牌上限+2至其回合结束。",
	"XS_gangzhi":"刚直",
	"XS_gangzhi_info":"其他角色出牌阶段开始，你可令你与其将等量手牌置于你的武将牌上；你的出牌阶段开始，可从你开始令所有角色依次获得你武将牌上的1张牌。",
	"XS_youmie":"诱灭",
	"XS_youmie_info":"出牌阶段(限1次)，你可弃置1张(装备)牌，令1名其他角色弃置手牌中所有(基本)牌；出牌阶段开始你可使任意()内容本回合不生效，如此你各失去(2/3/4-轮数)点体力，至少为1。",
	"XS_jintu":"尽屠",
	"XS_jintu_info":"你对无手牌角色造成伤害时，可令此伤害数值改为目标当前体力值；因此杀死角色后，你失去1点体力上限。",
	"XS_sijun":"思君",
	"XS_sijun_info":"其他角色出牌阶段开始，你可交给其1/2张手牌，如此，其于此阶段使用的第2/1张牌结算完毕后，立即结束其出牌阶段。",
	"XS_wangxiang":"望乡",
	"XS_wangxiang_info":"你失去最后一张手牌时，所有其他角色均可交给你1张手牌并回复1点体力。",
	"XS_qiwuzhuang":"齐物",
	"XS_qiwuzhuang_info":"出牌阶段每项限1次，若你装备区有黑色牌/红色牌/无牌，你可视为使用1张唇枪舌剑/火攻/无中生有。",
	"XS_xiaoyao":"逍遥",
	"XS_xiaoyao_info":"回合结束，你可重铸装备区所有牌。锁定技，你不在其攻击范围内的其他角色无法指定你为卡牌目标。",
	"XS_tianlun":"天论",
	"XS_tianlun_info":"出牌阶段限1次，你可选择1名有手牌的其他角色并将1张手牌置于牌堆顶，其需弃置2张手牌，否则进行1次闪电效果判定。",
	"XS_xinge":"性恶",
	"XS_xinge_info":"你受到伤害时，可令你与来源依次弃置1张手牌，若其未弃置，由其承受此次伤害。",
	"XS_shujun":"疏浚",
	"XS_shujun_info":"其他角色弃牌阶段开始，你可令其此阶段手牌上限-0，并令此值+1，若其因此弃置了所有牌，重置数值为0(若存活角色数小于4，0改为1)。",
	"XS_dingzhou":"定州",
	"XS_dingzhou_info":"限定技，一轮开始，你可为所有角色分配上轮于弃牌阶段弃置的、以及“仁”中的所有牌，若所有角色手牌数因此相同，重置此技能。",
	"XS_liefu":"烈斧",
	"XS_liefu_info":"你可将1张与“斧”花色均不同的手牌置于武将牌上，称为“斧”，视为使用1张杀；根据“斧”的数量，你获得：1.“凶星”；2.“威震”；3.“烈勇”；4.“耀威”。",
	"XS_fuyuan":"福缘",
	"XS_fuyuan_info":"出牌阶段，你可移除4张“斧”，令1名角色视为使用1张无中生有。",
	"XS_xiongxing":"凶星",
	"XS_xiongxing_info":"锁定技，你的攻击距离/可使用杀的次数/使用杀可指定的目标数+X/X-1/X-2，X为你已损失体力值且至少为2。",
	"XS_qiangxi":"强袭",
	"XS_qiangxi_info":"出牌阶段限1次，你可进行1次判定，若结果为黑色，你可视为使用1张不计次数的火杀，否则你可获得判定牌(不入弃牌堆)并重置此技能。",
	"XS_guzhong":"孤忠",
	"XS_guzhong_info":"锁定技，你的结束阶段，若此回合进入弃牌堆的黑牌多于红牌，你失去1点体力；否则，你可将体力上限调整为体力值，视为使用变化数值张火杀。",
	"XS_polu":"破虏",
	"XS_polu_info":"每轮限1次，其他角使用杀指定目标时，你可视为对其使用1张火杀，若造成伤害，此杀对其目标无效，否则你横置。",
	"XS_xianzhuo":"专行",
	"XS_xianzhuo_info":"回合开始时，你可跳过本回合任意个主要阶段并选择等量其他角色，在其回合开始时横置该角色，然后你执行1个跳过的阶段。",
	"XS_shanquan":"擅权",
	"XS_shanquan_info":"出牌阶段限1次，你可废除/恢复1个装备栏，令1名其他角色获得/移除“旨”(拥有“旨”的角色始终处于横置状态)。",
	"XS_shanquan1":"擅权•收",
	"XS_shanquan1_info":"",
	"XS_lianhuo":"连祸",
	"XS_lianhuo_info":"其他角色受到属性伤害后，你可令其选择1项：1.将手牌数弃置至上限，然后若其手牌数与你相同，你摸1张牌；2.翻面。",
	"XS_huimeng":"会盟",
	"XS_huimeng_info":"每轮限1次，其他角色受到伤害后，你可将你与其体力值调整为共计至多5点，如此你与之需各重铸当前体力值张不同花色的牌，否则失去1点体力。",
	"XS_rangyi":"攘夷",
	"XS_rangyi_info":"你的体力增加/减少后，可令1名其他角色：于当前回合结束后获得1个额外的出牌阶段/跳过其下一个出牌阶段。",
	"XS_zhuanglian":"妆奁",
	"XS_zhuanglian_info":"出牌阶段，你可将1张杀置于装备区；你的空装备栏置入牌时，你可摸1张牌。",
	"XS_xinyue":"信约",
	"XS_xinyue_info":"回合结束，你可弃置装备区所有牌并摸等量的牌，若弃置牌中有杀，可令1名其他角色获得之。",
	"XS_dashi":"达识",
	"XS_dashi_info":"其他角色于摸牌阶段外获得牌后，若其手牌数大于上限，你可展示其中1张，若为杀/闪/桃，你可使用/获得/弃置之。",
	"XS_shanchong":"擅宠",
	"XS_shanchong_info":"锁定技，你使用基本牌结算完成后，弃置所有手牌并摸2张牌。",	
	"XS_tuojiang":"拓疆",
	"XS_tuojiang_info":"限定技，出牌阶段，你可视为使用1张南蛮入侵，你获得响应的杀，且其造成伤害时，你可弃置1张杀令1名其他角色承受之。",
	"XS_dingtu":"定土",
	"XS_dingtu_info":"回合开始时，若“拓疆”已发动，你可跳过本回合摸牌/出牌/判定/弃牌阶段，并摸4/3/2/1张牌，每项限1次；若你跳过了所有阶段，回合结束重置“拓疆”。",	
	"XS_enxin":"恩信",
	"XS_enxin_info":"你可将装备区牌弃置至场上最少，视为使用1张闪/无懈可击；若弃牌数为：0，本轮此技能失效；2，获得响应的牌；>=3，回合结束后你获得1个额外回合。",
	"XS_enxin_shan":"恩信•闪",
	"XS_enxin_shan_info":"",
	"XS_enxin_wuxie":"恩信•无懈",
	"XS_enxin_wuxie_info":"",
	"XS_xujin":"虚襟",
	"XS_xujin_info":"每轮限1次，1名角色摸牌阶段开始，你可令其此阶段摸牌数改为(4-其装备区牌数)。",	
	"XS_yangbian":"扬鞭",
	"XS_yangbian_info":"回合开始，你可获得“独尊”“推恩”“驱逐”“征税”之X项直到你下回合开始，X为你已损失体力值且至少为1。",
	"XS_guquan":"固权",
	"XS_guquan_info":"锁定技，其他角色死亡时，你将其1项非觉醒、限定、主公技加入“扬鞭”的选项中，并获得1个额外的出牌阶段。",	
	"XS_pozhen":"破阵",
	"XS_pozhen_info":"出牌阶段限1次，你可与1名其他角色各重铸至少1张手牌，以此法重铸牌数多者视为对对方使用1张不计次数的杀。",
	"XS_lingshuai":"领帅",
	"XS_lingshuai_info":"你使用1张基本牌时，可展示1张与之同名的手牌，如此你摸1张牌。锁定技，杀死你的角色获得“领帅”。",	
	"XS_siyou":"思幽",
	"XS_siyou_info":"你可将你1个区域的所有牌当作1张不计次数的基本牌使用，其结算完成后，你可弃置1名其他角色对应区域至多X张牌，X为你失去的牌数。",
	"XS_youbu":"忧怖",
	"XS_youbu_info":"出牌阶段限1次，你可依次执行：1.摸1张牌；2.弃置1张牌；3.重铸1张牌；若你执行了1/2/3项，可视为使用1张无距离限制的杀/桃/酒。",	
	"XS_huadie":"化蝶",
	"XS_huadie_info":"你使用杀/桃/酒结算完成后，可指定1名其他角色，其可观看你的手牌并将其中1张当作桃/酒/杀使用。",
	"XS_lieyong":"烈勇",
	"XS_lieyong_info":"你使用卡牌造成伤害时，若手牌数或体力值大于目标，可令此伤害+1；若两项均符合，此效果改为伤害翻倍。",	
	"XS_tiandou":"天斗",
	"XS_tiandou_info":"锁定技，你的摸牌阶段改为：进行3次浮雷效果判定并获得未产生效果的判定牌，若未因此受到伤害，此技能判定次数+1。",
	"XS_zhangju":"掌局",
	"XS_zhangju_info":"锁定技，你的摸牌效果改为：展示牌堆顶或牌堆底3X张牌，获得其中X张牌并弃置其余牌，X为此次摸牌数。",	
	"XS_tianhuo":"天火",
	"XS_tianhuo_info":"出牌阶段限1次，你可任意分配共计X点火伤害，X为弃牌堆中火杀的数量；若有角色因此受到至少2点伤害，你失去1点体力。",
	"XS_nishi":"逆施",
	"XS_nishi_info":"出牌阶段开始，你可弃置1名角色2张牌，然后对1名角色造成1点伤害；（若选择了同一不为你的角色，你失去1点体力以及1点体力上限）。",	
	"XS_nufa":"怒发",
	"XS_nufa_info":"锁定技，你受到伤害后，移除“逆施”（）中的内容，直至你下一次发动“逆施”结束。",
	"XS_shoulue":"受略",
	"XS_shoulue_info":"其他角色不因卡牌而造成伤害/回复体力后，你可摸1张牌。",	
	"XS_zhiyuan":"制远",
	"XS_zhiyuan_info":"出牌阶段限1次，你可将至少1张手牌当作1张五谷丰登对等量角色使用，其结算完成后，视为对不为其目标的所有角色使用1张万箭齐发。",
	"XS_xunli":"循吏",
	"XS_xunli_info":"转换技，（你）摸牌时，你可令摸牌数1.翻倍；2.减半，如此，你需失去1点体力将（）中更改为1名其他角色，否则本轮此技能失效。",	
	"XS_mingjie":"铭诫",
	"XS_mingjie_info":"你受到伤害或失去体力后，可令1名其他角色进行X次闪电效果判定，你获得其中未产生效果的判定牌，X为你已损失体力值。",
	"XS_xiongming":"雄鸣",
	"XS_xiongming_info":"你使用杀时，可重铸至少2张手牌，因此重铸了：武器牌，获得其效果至此杀结算完成；杀/酒，此杀伤害基数+1；闪/桃，此杀可无视距离地指定1个额外目标。",	
	"XS_hengding":"衡鼎",
	"XS_hengding_info":"你可将你于出牌阶段使用的第一张牌改为任意花色；出牌阶段，你使用的第三种花色牌结算完成后，可视为使用1张基本牌。",
	"XS_xiaofeng":"销锋",
	"XS_xiaofeng_info":"出牌阶段开始，你可获得所有其他角色装备区1张武器或防具牌，如此此阶段结束，你重铸手牌中所有装备牌。",	
	"XS_tongwen":"同文",
	"XS_tongwen_info":"任意角色可将1张()牌当作()使用，若不为你，其需先交给你1张牌；游戏开始/出牌阶段限1次，你需/重铸1张基本或普通锦囊牌，将两个()分别替换为此牌花色及牌名。",
	"XS_tongwen_gl":"同文(使用)",
	"XS_tongwen_gl_info":"",
	"XS_guizhan":"诡战",
	"XS_guizhan_info":"出牌阶段限1次，你可将1张锦囊牌当作1张可额外使用1次的杀使用，如此直到你下次发动此技能为止，受到的前两次伤害改为2，0。",	
	"XS_xunyi":"殉义",
	"XS_xunyi_info":"一轮开始，你可受到与上轮最后一次相同数值的伤害或回复效果，若为伤害，你可令1名其他角色获得等量体力上限并回复等量体力。",	
	"XS_liuli":"流离",
	"XS_liuli_info":"锁定技，若游戏轮数不小于：1，你拥有“受土”；2，拥有“求贤”；3，拥有“图霸”。",	
	"XS_tuibi":"退避",
	"XS_tuibi_info":"你发动“受土”、“求贤”、“图霸”前，可失去1点体力上限，将其（）中修改为<>中内容。",	
	"XS_shoutu":"受土",
	"XS_shoutu_info":"每回合限1次，其他角色的牌因弃置进入弃牌堆后，你可令其选择其中（1）<任意>张令你获得之。",	
	"XS_qiuxianex":"求贤",
	"XS_qiuxianex_info":"你可将摸牌阶段改为令至多等量角色各摸1张牌，并可依次将这些角色超出上限的手牌当作1张不重复的（基本牌）<普通锦囊牌>使用。",	
	"XS_tubaex":"图霸",
	"XS_tubaex_info":"出牌阶段限X次，你可弃置1名其他角色的1张牌并令其（摸1张牌）<弃置1张牌>，X为与你不同势力角色数且至少为1至多为4。",	
	"XS_wugu":"五羖",
	"XS_wugu_info":"你可将摸牌阶段改为：将手牌补充至5张，如此从你的下家开始，手牌数小于你的其他角色可依次获得你1张手牌。",	
	"XS_qimin":"启民",
	"XS_qimin_info":"回合结束，若你未于当前手牌数时发动过此技能，你可摸2张牌；否则你可失去此技能并摸2X张牌，X为你已发动此技能次数。",
	"XS_qiuxian":"求贤",
	"XS_qiuxian_info":"你可将摸牌阶段改为令至多等量角色各摸1张牌，并可依次将这些角色超出上限的手牌当作1张不重复的基本牌使用。",	
	"XS_weifu":"威服",
	"XS_weifu_info":"你的回合限1次，你可为1张杀指定至多4名目标，此杀造成伤害时防止之，并令目标跳过其下一个由你选择的不重复的主要阶段。",
	"XS_jianlu":"践戮",
	"XS_jianlu_info":"转换技，1名角色使用杀时，你可使之：可更改此杀属性/不计次数；若为你，可选择额外1项。",	
	"XS_chenlue":"沉略",
	"XS_chenlue_info":"你可跳过摸牌阶段并获得1名其他角色1张手牌，将1个状态置于“践戮”最后：可指定1名额外目标/需2张闪响应/可弃置目标至多2张牌；或移除“践戡”1项状态，跳过弃牌阶段并移动场上1张牌。",
	"XS_yongjian":"用间",
	"XS_yongjian_info":"每回合限1次，你受到/造成伤害后，可令对方展示手牌并弃置其中的基本牌/非基本牌，若未弃置牌你失去1点体力。",	
	"XS_gusai":"固塞",
	"XS_gusai_info":"锁定技，体力大于你的其他角色无法对你使用杀或决斗。一轮开始，你可使此技能本轮失效，然后回复1点体力或移动场上1张牌。",
	"XS_liuzheng":"六政",
	"XS_liuzheng_info":"出牌阶段限1次，你可展示1名其他角色手牌与牌堆顶共计6张牌，你可弃置其中手牌中1种花色的牌，并获得其中牌堆顶中的此花色的牌。",	
	"XS_nigao":"拟诰",
	"XS_nigao_info":"转换技，每回合限1次，(你)受到伤害时，你可令数值-1/+1，你可改变伤害数值而未改变时，可重铸1张手牌将()替换为另1名角色并改变此技能状态。",
	"XS_xuanshi":"宣师",
	"XS_xuanshi_info":"你使用带有伤害标签的牌时，可令装备区有牌的目标获得其装备区所有牌，且本回合你的进攻距离+1。",	
	"XS_guiquan":"归权",
	"XS_guiquan_info":"结束阶段开始，若你与所有其他角色的距离均为1，你可获得所有其他角色各1张牌，且直到你下回合开始无法使用或打出这些牌。",
	"XS_weilue":"伟略",
	"XS_weilue_info":"准备阶段开始，你可展示手牌，摸/弃置X张手牌，如此结束阶段开始，你需执行另外一项，X为你手牌中牌的种类数。",	
	"XS_jucai":"举才",
	"XS_jucai_info":"其他角色摸牌阶段开始，你可展示手牌令其此阶段改为：其可依次使用其中任意张牌，如此你与其手牌数少者摸2张牌，若为你，本轮此技能失效。",
	"XS_shenwei":"神威",
	"XS_shenwei_info":"你的杀或决斗结算完成后，可弃置1张牌令此牌对目标1名相邻角色继续结算，你可重复此流程并弃置此牌最后1名目标至多X张牌，X为你因此弃置牌数。",	
	"XS_sidi":"死地",
	"XS_sidi_info":"锁定技，准备阶段开始，若你已损失体力值不小于/小于4，你失去1点体力上限/体力，然后将手牌摸至体力上限/可视为使用1张不计次数的杀。",
	"XS_duoqi":"夺气",
	"XS_duoqi_info":"转换技，每回合限1次，你造成伤害后，可代替目标执行其下一个摸牌/出牌/弃牌阶段，此弃牌阶段结束后，你可交换手牌数与已损失体力值。",	
	"XS_tuotu":"脱兔",
	"XS_tuotu_info":"你成为杀或决斗的唯一目标时，可选择手牌、装备、判定区中的1项和1名其他角色，其需与你交换此区域的牌，否则代替你成为此杀目标。",
	"XS_xuanqi":"玄骑",
	"XS_xuanqi_info":"你/其他角色成为杀的目标时，你可使其改为进行一次闪电效果判定，若你连续2次选择了同一选项，失去1点体力且本轮此技能失效。",	
	"XS_tongding":"统定",
	"XS_tongding_info":"1名角色判定牌生效前，你可重铸1张手牌，使判定结果改为此牌的花色/点数；一轮开始，若你手牌花色、点数均不同，可视为使用1张基本牌。",	
	"XS_fuman":"抚蛮",
	"XS_fuman_info":"你一次获得至少2张牌后，可展示之并将之分配给你以外的任意角色，因此获得至少2张红色/黑色牌的角色回复/失去1点体力。",	
	"XS_shiwu":"识务",
	"XS_shiwu_info":"转换技，每名角色出牌阶段限1次，可视为使用1张杀/桃/酒，若不为你，其需先交给你2张牌。",	
	"XS_shiwu1":"识务",
	"XS_shiwu1_info":"",	
	"XS_changlue":"长略",
	"XS_changlue_info":"你回复体力时，可为任意名角色分配此回复数值。",	
	"XS_congliu":"从流",
	"XS_congliu_info":"距离你为1或体力值为1的其他角色受到伤害时，你可失去等量的体力，若你未因此死亡，你回复等量的体力并摸等量的牌。",	
	"XS_guyong":"孤勇",
	"XS_guyong_info":"你造成伤害时，可为目标与1名其他角色分配此伤害值，每名角色至少1点。",	
	"XS_qianzhen":"搴阵",
	"XS_qianzhen_info":"出牌阶段限1次，你可将1张红/黑色手牌当作乐不思蜀/兵粮寸断置于自己判定区，视为使用1张伤害基数+1的杀，目标需将1张其他颜色手牌置于其判定区，否则此杀无法被闪避。",	
	"XS_jueji":"决机",
	"XS_jueji_info":"一轮开始，你可为你与1名其他角色本轮使用的杀、桃、酒分配共计3点效果基数。",	
	"XS_mixia":"觅峡",
	"XS_mixia_info":"出牌阶段限1次，你可与1名其他角色各展示1张基本牌，若你展示的是(杀)而其未展示或展示的不为(闪)，你摸2张牌，否则，你可替换一个()为另外一张基本牌名。",	
	"XS_weibang":"维邦",
	"XS_weibang_info":"其他角色弃置牌时，你可代替其弃置等量的牌。",	
	"XS_renyong":"仁勇",
	"XS_renyong_info":"每回合限1次，你失去1个区域内的最后1张牌后，可将1名其他角色对应区域的1张牌移动至你的区域。",	
	"XS_jiangjie":"将杰",
	"XS_jiangjie_info":"锁定技，你的出牌阶段，每有1张♦︎/♣︎牌进入弃牌堆，你的进攻、防御距离/使用杀的次数+1直到下回合开始。",	
	"XS_shenlue":"神略",
	"XS_shenlue_info":"出牌阶段限1次，你可与1名其他角色各重铸1张手牌，若你/该角色重铸的是闪/杀，该角色/你获得之。",	
	"XS_lingrui":"领锐",
	"XS_lingrui_info":"锁定技，你的装备区进入第1张牌后，摸2张牌。",	
	"XS_binglie":"冰裂",
	"XS_binglie_info":"你可将全部手牌当作杀/闪使用或打出，如此你可将目标/当前回合角色装备区的1张牌移至你的装备区，或将你装备区的1张牌移至1名其他角色的装备区。",	
	"XS_cihui":"慈诲",
	"XS_cihui_info":"每轮限1次，其他角色使用指定1名目标的基本牌结算完成后，你可弃置1张同颜色/花色/点数的手牌，使此牌额外结算1/2/3次。",	
	"XS_bishi1":"避室",
	"XS_bishi1_info":"回合结束时，你可展示手牌，并将之弃置至颜色/花色/点数均不相同，如此你摸3/2/1张牌。",	
	"XS_qinwang1":"勤王",
	"XS_qinwang1_info":"",	
	"XS_danli":"胆力",
	"XS_danli_info":"出牌阶段结束，你可对1名（此阶段未受伤害的）其他角色造成X点伤害，X为你于此阶段对其使用牌的次数。",	
	"XS_shenwu":"神武",
	"XS_shenwu_info":"觉醒技，准备阶段，若你曾进入濒死状态、或曾使其他角色进入濒死状态，你失去1点体力上限并删除“胆力”（）中的内容。",	
	"XS_xiuluo":"修罗",
	"XS_xiuluo_info":"锁定技，你的攻击距离/手牌上限/使用杀的次数+3/2/1。结束阶段，你可移除任意一项并摸(4-对应数值)张牌。",	
	"XS_chuangzhen":"闯阵",
	"XS_chuangzhen_info":"觉醒技，准备阶段，若“修罗”中已无选项且的你体力值大于2，你失去1点体力，并将1、2、3填入“修罗”的选项中。",	
	"XS_zhengguo":"整国",
	"XS_zhengguo_info":"出牌阶段限1次，你可摸X张牌并弃置2张牌，X为你已发动此技能的次数。",	
	"XS_lingnue":"凌虐",
	"XS_lingnue_info":"觉醒技，一轮开始，若你发动“整国”的次数不小于存活角色数，你摸X张牌，交换“整国”中2与X，并修改“整国”目标为1名其他角色，且X不再增加。",	
	"XS_yushi":"驭师",
	"XS_yushi_info":"转换技，每回合限1次，其他角色使用或打出的杀/闪/桃进入弃牌堆时，你可获得之。",	
	"XS_moubian":"谋变",
	"XS_moubian_info":"觉醒技，准备阶段，若你因“驭师”获得过至少4张牌，你回复1点体力并失去1点体力上限，并将“酒”加入“驭师”任意一个状态中。",	
	"XS_lancai":"揽才",
	"XS_lancai_info":"主公技，出牌阶段限1次，你可交给1名与你同势力的其他角色1张手牌，如其可使用此牌，令其使用之。",	
	"XS_xidi":"析敌",
	"XS_xidi_info":"若你装备区牌数不为全场最多，你可：跳过摸牌阶段并移动场上1张牌；跳过出牌阶段并移动场上1张牌。",	
	"XS_zuoyou":"佐佑",
	"XS_zuoyou_info":"回合结束，若你装备区牌数为全场最多，你可弃置其中至多2张牌，令等量角色各获得1个不同的主要阶段。",	
	"XS_fusao":"赋骚",
	"XS_fusao_info":"每项限1次，你可视为使用1张杀、闪、酒、桃；若已无选项，一轮开始你可失去1点体力上限重置之。",	
	"XS_youfen":"忧愤",
	"XS_youfen_info":"出牌阶段开始，你可重铸1张装备牌令1名角色视为使用1张无中生有；若你体力值为全场唯一最少，可改为令你和任意名其他角色视为使用X张五谷丰登，然后失去此技能，X为所选其他角色数。",	
	"XS_benxi":"奔袭",
	"XS_benxi_info":"出牌阶段开始，你可移动攻击范围内1名其他角色装备区的1张牌。锁定技，若你装备区没有牌，你的进攻距离+1。",	
	"XS_baijiang":"拜将",
	"XS_baijiang_info":"回合结束，你可进行3次判定，若结果为红的次数为0/1/2/3，你：失去1点体力/摸1张牌/获得1名其他角色1张牌/获得4个主要阶段。你可弃置装备区的牌，使之计入次数。",	
	"XS_yisheng":"圣手",
	"XS_yisheng_info":"锁定技，你使用桃时，你每满足一项，此牌基数+1：装备区没有牌；体力值为全场最低；本轮第一次使用桃。",	
	"XS_binglun":"病论",
	"XS_binglun_info":"出牌阶段限1次，你将1张牌当作桃对1名已受伤的其他角色使用，如此其下个摸牌阶段改为：你摸2张牌并交给其2张牌。",	
	"XS_wangqing":"忘情",
	"XS_wangqing_info":"回合开始时，你可弃置至多X张手牌，如此回合结束时你摸等量的牌，X为你的体力值。",	
	"XS_doucai":"斗才",
	"XS_doucai_info":"其他角色摸牌阶段，其可少摸1张牌并令你摸1张牌，如此其回复1点体力，若此角色体力不少于你，其无需少摸牌。",
	"XS_guolun":"过论",
	"XS_guolun_info":"回合开始，你可展示手牌并将其中的黑色牌当作顺手牵羊使用，或将红色牌当作无中生有使用；若你没有手牌，可视为使用任意一项。",	
	"XS_zhiyong":"致用",
	"XS_zhiyong_info":"当你受到伤害时，可交给交给来源1张手牌或获得其1张手牌，若你手牌花色因此减少，防止此伤害。",
	"XS_xionghao":"雄豪",
	"XS_xionghao_info":"锁定技，你跳过你的回合；其他角色回合结束时，若其体力小于/等于/大于你，你获得1个判定/摸牌/出牌阶段。",	
	"XS_zhuanghuai":"壮怀",
	"XS_zhuanghuai_info":"锁定技，每轮开始，你依次获得上轮你未执行的阶段和弃牌阶段各一个；若你仅因此获得了弃牌阶段，你可调整“雄豪”中小于、等于、大于的顺序。",	
	"XS_chendun":"沉顿",
	"XS_chendun_info":"每回合限1次，一名角色一次性失去至少2张牌后，你可令其回复1点体力。",	
	"XS_moshi":"墨史",
	"XS_moshi_info":"回合结束时，你可令1名其他角色弃置至少1张牌，如此其获得一个额外的回合，且于该回合至多使用等量的牌。",
	"XS_moshi1":"墨史",
	"XS_moshi1_info":"",
	"XS_baishou":"白首",
	"XS_baishou_info":"其他角色结束阶段开始时，若你于本回合使用过牌，你可以摸1张牌并获得1个额外的出牌阶段。",	
	"XS_xuanjing":"登玄",
	"XS_xuanjing_info":"若你未损失体力，你可将1张牌当作闪使用并失去1点体力；若你体力为1，你可将1张牌当作无懈可击使用并回复1点体力。",
	"XS_guiyin":"归隐",
	"XS_guiyin_info":"出牌阶段限1次，你可弃置任意张牌，然后弃置等量其他角色各1张牌。",	
	"XS_youran":"悠然",
	"XS_youran_info":"你可将1张杀当桃使用。锁定技，每回合你首次失去带有伤害标签的牌后，摸等量的牌。",
	"XS_bocai":"博才",
	"XS_bocai_info":"锁定技，你：受到体力不多于你的角色锦囊牌造成的伤害-1；对体力不等于你的角色进攻、防御距离+1；对体力不少于你的角色使用卡牌造成的伤害+1。",	
	"XS_tongda":"通达",
	"XS_tongda_info":"每回合限1次，你受到伤害/流失体力后，可调整“博才”中不多于、不等于、不少于的顺序。",
	"XS_zhexian":"谪仙",
	"XS_zhexian_info":"回合开始，你可弃置所有手牌并将手牌数摸至上限，如此本回合你无法使用或打出手牌中的杀，且手牌数变至与体力相同时，可视为使用1张杀。",	
	"XS_jiushi":"醉梦",
	"XS_jiushi_info":"锁定技，你使用酒后，需弃置至少1张牌并摸等量的牌。",	
	"XS_dingzhi":"鼎治",
	"XS_dingzhi_info":"转换技，准备阶段/其他角色死亡后，你可展示牌堆顶3张牌，并依次使用其中的/基本牌/锦囊牌/装备牌，然后弃置其余的牌。",	
	"XS_tiaohe":"调和",
	"XS_tiaohe_info":"“鼎治”完成1轮转换后，你可选择一项：1.对1名角色造成1点伤害；2.令1名角色增加1点体力上限并摸1张牌；3.失去1点体力上限并令“鼎治”展示牌数+1。",	
	"XS_shiren":"施仁",
	"XS_shiren_info":"每回合限1次，其他角色受到伤害时，你可交给其1张牌，伤害结算完成后若其未死亡，你摸1张牌。",	
	"XS_jianyu":"剪羽",
	"XS_jianyu_info":"1名角色死亡后，你可弃置1张牌并摸X张牌，X为该角色的体力上限且至多为5。",	
	"XS_zhili":"制礼",
	"XS_zhili_info":"结束阶段，你可摸X张牌，如此你下个准备阶段若手牌数不大于X，回复1点体力，否则弃置X张手牌，X为结束阶段你的手牌数。",	
	"XS_buding":"卜定",
	"XS_buding_info":"其他角色回合开始，若其手牌数与你不同，你可弃置1张手牌并弃置其任意区域1张牌，若其此回合未造成伤害，结束阶段其摸2张牌。",	
	"XS_guanbing":"观兵",
	"XS_guanbing_info":"出牌阶段每名其他角色限1次，你可令其弃置1张手牌，然后你将手牌数调整至与之相同，若你因此获得了牌，立即结束出牌阶段。",	
	"XS_zhengtao":"征讨",
	"XS_zhengtao_info":"每轮限1次，其他角色回合结束时，若其手牌数大于你，你可令其将手牌弃置至与你相同。",	
	"XS_erxian":"饵贤",
	"XS_erxian_info":"回合开始时，你可令所有其他角色打出1张杀或闪，如此本回合你使用指定1名目标的基本牌/普通锦囊牌时，可令至多2名未打出牌的角色成为额外目标。",	
	"XS_yanyi":"演易",
	"XS_yanyi_info":"回合结束时，若你于出牌阶段对所有其他角色使用过牌，可视为使用1张南蛮入侵/万剑齐发，否则你摸1张牌。",	
	"XS_duwu":"黩武",
	"XS_duwu_info":"你可跳过摸牌阶段并视为使用1张未以此法使用过的带有伤害标签的基本牌或普通锦囊牌，此牌结算后摸X张牌，X为此牌造成的伤害数。",	
	"XS_feide":"废德",
	"XS_feide_info":"你可跳过弃牌阶段并视为使用1张未以此法使用过的没有伤害标签的基本牌或普通锦囊牌，此牌结算后弃置X张牌，X为此牌指定的目标数。",	
	"XS_zhixiao1":"志枭",
	"XS_zhixiao1_info":"其他角色出牌阶段开始，你可声明一种类型的牌，其使用第1张牌结算完成后，若类型与你声明相同，你可重铸1张牌。",	
	"XS_daidan":"待旦",
	"XS_daidan_info":"每轮限3次，你于回合外摸牌时，可令摸牌数+1。",	
	"XS_lianzheng":"连征",
	"XS_lianzheng_info":"出牌阶段，每当你达成以下条件后，可重铸1张牌：使用1张装备牌；回复体力；造成伤害。",	
	"XS_kuiding":"窥鼎",
	"XS_kuiding_info":"弃牌阶段开始，你可弃置至多X张牌对等量其他角色各造成1点伤害，X为你本回合达成“连征”的项数。",	
	"XS_tiche":"提掣",
	"XS_tiche_info":"转换技，出牌阶段限1次，你可重铸2种颜色/3种类型/4种花色的牌各1张，如此，你令1名角色摸1/2/3张牌。",	
	"XS_chouwang":"俦望",
	"XS_chouwang_info":"其他角色回合开始时，若其手牌数为全场唯一最多，可令你回复1点体力并使“提掣”变至下一个状态。",	
	"XS_nandu":"南渡",
	"XS_nandu_info":"若你的手牌数不为全场最多，你弃置牌时可改为重铸等量的牌。",	
	"XS_bingsheng":"并圣",
	"XS_bingsheng_info":"出牌阶段限1次，你可将至多2张手牌置于等量角色武将牌上，称为“圣”；1名角色摸牌时，可移除其所有“圣”，每移除1张此摸牌数+2。",	
	"XS_pianyu":"偏隅",
	"XS_pianyu_info":"主公技，锁定技，与你同势力角色攻击距离-1，每有1名角色受此效果影响，你的防御距离+1。",	
	"XS_pianyu_from":"偏隅",
	"XS_pianyu_from_info":"",	
	"XS_huaizhi":"怀志",
	"XS_huaizhi_info":"回合开始，你可重铸所有手牌，如此本回合你的不为摸牌/出牌的主要阶段开始时，若你的手牌数为全场唯一最少/最多，将其改为摸牌/出牌阶段。",	
	"XS_qiwu":"起舞",
	"XS_qiwu_info":"一轮开始，你可使用1张杀，或失去1点体力并摸2张牌。",	
	"XS_bachu":"罢黜",
	"XS_bachu_info":"你可跳过摸牌阶段并展示牌堆顶2张牌，使用其中你可使用的并获得其余的牌，如此，本技能展示的牌数+1。",	
	"XS_duzun":"独尊",
	"XS_duzun_info":"你可跳过出牌阶段并展示所有手牌，将其中你不能使用的牌交给1名其他角色，若你的手牌数因此成为全场最少，你摸2张牌。",	
	"XS_zaokong":"凿空",
	"XS_zaokong_info":"其他角色回合结束时，若其体力值与你体力上限相同，你可失去1点体力上限并获得1个额外回合。",	
	"XS_chijie":"持节",
	"XS_chijie_info":"锁定技，一轮开始，若你未受伤，你增加1点体力上限并摸1张牌；若已受伤，你回复1点体力。",	
	"XS_juemo":"绝漠",
	"XS_juemo_info":"当你使用黑色的杀或普通锦囊牌指定1名其他目标时，可弃置其所有区域各1张牌，如此其于此牌结算完成后获得此牌。",	
	"XS_zhaxiang":"诈降",
	"XS_zhaxiang_info":"出牌阶段结束，你可观看1名其他角色的手牌，其中每有1张杀，你对其造成1点伤害，若你因此造成了至少2点伤害，你失去1点体力。",	
	"XS_qinyin":"琴音",
	"XS_qinyin_info":"你每使用或打出3张牌后，可以摸1张牌并清空所有卡牌的使用次数。",	
	"XS_zhongchang":"衷肠",
	"XS_zhongchang_info":"每回合限1次，其他角色于你的回合外使用1张牌后，若你手牌中没有此类型的牌，你可以展示手牌并令当前琴音记录的牌数+1。",	
	"XS_xianfu":"献赋",
	"XS_xianfu_info":"准备阶段，你可声明并记录1张未以此法记录的普通锦囊牌，直到你下回合开始，1名角色使用此牌时，你可令之额外结算1次。",	
	"XS_qiuhuang":"求凰",
	"XS_qiuhuang_info":"其他角色使用的牌进入弃牌堆时，若你因“献赋”记录了此牌名，你可移除此记录并获得该牌，每种牌名限1次。",	
	"XS_cifu":"辞赋",
	"XS_cifu_info":"一轮内，当1种基本牌被首次使用时，你可令使用者摸1张牌；本轮杀、闪、酒、桃都被使用后，你可令1名角色回复或失去1点体力。",	
	"XS_huixie":"诙谐",
	"XS_huixie_info":"出牌阶段限1次，你可令1名手牌数大于/小于体力值的角色回复/失去1点体力，然后将手牌数调整至与体力相同（上限变化4张）。",	
	"XS_tuien":"推恩",
	"XS_tuien_info":"出牌阶段限1次，你可交给1名其他角色X张同颜色手牌，如此其需交给其下家X+1张此颜色手牌，否则受到你造成的X点伤害，X为任意值。",	
	"XS_lianshu":"连疏",
	"XS_lianshu_info":"出牌阶段开始，你可：摸1张牌/弃置1张牌并回复1点体力，如此本回合“推恩”目标的下家继续对其上家/下家执行“推恩”效果。",	
	"XS_mifeng":"靡风",
	"XS_mifeng_info":"其他角色摸牌/弃牌阶段结束，你可弃置1张基本牌/非基本牌，令其摸/弃置2张牌。",	
	"XS_chengliang":"称量",
	"XS_chengliang_info":"锁定技，回合开始时若场上手牌数多于/少于你的角色较多，你视为拥有“屈伸”/“才思”，否则你视为拥有“梅妆”，直到下回合开始。",	
	"XS_meizhuang":"梅妆",
	"XS_meizhuang_info":"弃牌阶段结束，你可令1名其他角色弃置你1张牌，若此牌为：黑色，你可弃置其任意区域1张牌；基本牌，你可视为使用1张基本牌；梅花牌，你摸2张牌。",	
	"XS_congzheng":"从征",
	"XS_congzheng_info":"其他角色出牌阶段限1次，其需要使用1张杀时，你可将手牌中1张杀置于武将牌上，视为其使用1张杀。锁定技，若武将牌上有牌，你视为装备雌雄双股剑。",	
	"XS_congzheng2":"从征",
	"XS_congzheng2_info":"",	
	"XS_pushuo":"扑朔",
	"XS_pushuo_info":"你的牌被弃置或受到伤害后，可使用武将牌上1张杀，且根据其颜色更改你的性别为：黑色，男；红色，女。",	
	"XS_caisi":"才思",
	"XS_caisi_info":"每轮限2次，你可视为使用1张本轮有角色使用过的基本牌。",	
	"XS_xushu":"续书",
	"XS_xushu_info":"每回合限1次，1名角色使用的非转化普通锦囊牌进入弃牌堆时，你可弃置1至2张手牌令其获得之，若你弃置了2张牌，该角色使用此牌时可使你也成为目标。",	
	"XS_enshi":"恩施",
	"XS_enshi_info":"当你使用杀或普通锦囊牌指定唯一目标时，可令成为过你使用此类型牌的目标的所有其他角色也成为此牌目标。",	
	"XS_enshi1":"恩施",
	"XS_enshi1_info":"",	
	"XS_xingmie":"兴灭",
	"XS_xingmie_info":"限定技，当你使用1张牌指定多名目标时，可令此牌仅对其中1名目标结算X次，X为此牌的目标数且不大4。",	
	"XS_qingwu":"轻舞",
	"XS_qingwu_info":"出牌阶段限1次，你可重铸2/3/4种花色的牌各1张，且首次触发各项时，视为使用1张基本牌/非宝物装备牌/普通锦囊牌，并增加“踽步”选项：弃置手牌数最多的角色1张牌/摸1张牌/令1名角色回复1点体力。",	
	"XS_jubu":"踽步",
	"XS_jubu_info":"准备、结束阶段，你可发动1项本回合未发动过的效果：交给1名其他角色1张牌。",	
	"XS_huiyan":"慧眼",
	"XS_huiyan_info":"魏势力技，1名角色判定牌生效前，你可展示牌堆顶(3)张牌，将其中1张作为判定结果，获得其余并翻面，然后使()内-1，若()内为0，重置()且本轮此技能失效。",	
	"XS_chuchen":"出尘",
	"XS_chuchen_info":"群势力技，若你未翻面，可将武将牌翻至背面，令1张杀伤害基数+1或令1张闪无效。",	
	"XS_chuchen1":"出尘",
	"XS_chuchen1_info":"",	
	"XS_chuchen2":"出尘",
	"XS_chuchen2_info":"",	
	"XS_hongfu":"红拂",
	"XS_hongfu_info":"若你已翻面，当：你失去装备区1张牌后/你受到伤害后/1名角色濒死时，你可移除对应选项并翻面；一轮开始，若“红拂”已无选项，重置之并回复一点体力。",	
	"XS_luanxing":"乱行",
	"XS_luanxing_info":"当你使用杀对其他角色造成伤害时，可防止此伤害，将此杀当作乐不思蜀置于目标判定区并弃置其1张牌。",	
	"XS_humei":"狐媚",
	"XS_humei_info":"每轮限1次，当其他角色回复体力时，你可令回复值-1，并获得1枚“媚”；当你受到非属性伤害时，可移除1枚“媚”，使此伤害-1并获得造成伤害的牌。",	
	"XS_jilun":"际论",
	"XS_jilun_info":"回合开始时，你可令以下1项数值与手牌数交换至回合结束：攻击距离/手牌上限/使用杀的次数（上限为5）；若你的手牌数因此变化，可令1名其他角色也获得此效果。",	
	"XS_tiandie":"天牒",
	"XS_tiandie_info":"出牌阶段限1次，你可移除“际论”中的1个选项，令以下任意两项+1：摸牌阶段摸牌数，体力上限，进攻距离。",	
	"XS_shucai":"疏财",
	"XS_shucai_info":"出牌阶段每名其他角色限1次，你可令其选择是否展示2张手牌，若其展示你可交给其1张与这之类别均不同的手牌，令其回复1点体力。",	
	"XS_juyi":"聚义",
	"XS_juyi_info":"其他角色回复体力后，若其武将牌状态与你不同，你可令其变更至与你相同，如此你摸2张牌。",
	"XS_mengchuang":"猛闯",
	"XS_mengchuang_info":"每回合限1次，你的杀或指定你为目标的杀结算完成后，你可展示牌并弃置堆顶2张牌，如此你可立即使用其中1张基本牌。",
	"XS_juntian":"均田",
	"XS_juntian_info":"转换技，当你1.受到伤害后；2.造成伤害后，可令来源/目标将手牌数调整至与你相同。",
	"XS_baihua":"百花",
	"XS_baihua_info":"出牌阶段限1次，你可将1张手牌置于牌堆顶，并从牌堆中随机获得2张与此牌类型各不相同的牌。",
	"XS_dufang":"独放",
	"XS_dufang_info":"当你成为普通锦囊牌或基本牌的非唯一目标时，可使你成为其唯一目标，如此你摸X张牌，X为你本轮发动此技能次数。",
	"XS_yongwang":"拥王",
	"XS_yongwang_info":"你摸牌结束后，可令1名其他角色摸1张牌。",
	"XS_juji":"举计",
	"XS_juji_info":"出牌阶段结束，若你于此阶段仅使用了1种类型的牌，你可跳过弃牌阶段；若使用了基本、锦囊、装备牌每种至少1张，你可在此回合结束后获得1个额外回合，每轮限1次。",
	"XS_shouyi":"首义",
	"XS_shouyi_info":"转换技，锁定技，你每使用1张牌，需要：1.摸1张牌；2.重铸1张牌；3.弃置1张牌。",
	"XS_liaoyuan":"燎原",
	"XS_liaoyuan_info":"当你的回合开始/体力变化时，你可选择1项：1.令“首义”变为下一个状态；2.令1名其他角色获得当前状态的“首义”直至其发动一次。",
	"XS_zhenghe1":"正合",
	"XS_zhenghe1_info":"出牌阶段，你可将1张手牌当杀使用，若其与上一次此法使用的牌颜色：不同，其不计次数；相同，其伤害基数+1。",
	"XS_qisheng":"奇胜",
	"XS_qisheng_info":"出牌阶段结束，若你手牌数为/不为全场最少，你可获得1名手牌数不少于你的其他角色1张手牌/弃置1名手牌数少于你的其他角色1张手牌。",
	"XS_zaizao":"再造",
	"XS_zaizao_info":"限定技，你对其他角色使用桃时，可令其将体力回复至上限，如此其下一次对你使用桃时，令你将体力回复至上限。",
	"XS_zaizao1":"再造",
	"XS_zaizao1_info":"",
	"XS_zhechong":"折冲",
	"XS_zhechong_info":"出牌阶段限1次，你可弃置1张手牌，令攻击范围内所有其他角色各弃置1张手牌，你可令场上1名未受伤的角色获得其中点数最大的牌。",
	"XS_hanhu":"悍胡",
	"XS_hanhu_info":"锁定技，你使用杀可指定的目标数、攻击距离+X，X为本轮你已使用过杀的次数。",
	"XS_niluan":"逆乱",
	"XS_niluan_info":"出牌阶段，你可将X张牌当作1张不计次数的杀使用，如此你可弃置1名目标所有区域各1张牌，并令其获得你转化为杀的牌，X为你本回合发动此技能的次数+1。",
	"XS_zuijiu":"醉酒",
	"XS_zuijiu_info":"当你成为杀的目标时，可选择1项：令来源攻击范围内1名其他角色代替你成为目标；令来源攻击范围内至多2名其他角色也成为目标。",
	"XS_boxing":"薄幸",
	"XS_boxing_info":"每回合限1次，你可将1名其他角色装备区的1张牌、当前回合角色可将其装备区的1张牌当作杀对你使用。",
	"XS_boxing1":"薄幸",
	"XS_boxing1_info":"",
	"XS_chixiao":"鸱枭",
	"XS_chixiao_info":"你的杀被闪避后，可弃置至少1张牌，令目标角色选择1项：1.弃置X+1张牌；2.令此杀仍生效。X为你以此法弃置的牌数。",
	"XS_hanni":"酣溺",
	"XS_hanni_info":"出牌阶段开始时，你可令所有角色均视为使用1张酒；当你对酒状态的角色造成伤害后，解除其酒状态，并可获得其1张牌。",
	"XS_yuhe":"欲壑",
	"XS_yuhe_info":"锁定技，你的出牌阶段结束，拥有酒效果的角色可对你使用1张无距离限制的杀。",
	"XS_jishe":"极奢",
	"XS_jishe_info":"锁定技，你造成伤害时，需弃置装备区的1张牌使此伤害+1，否则此伤害-1。",
	"XS_tianwei":"天威",
	"XS_tianwei_info":"锁定技，你使用卡牌造成伤害时，若(0,2)中有数值，你将伤害变为其中1个数值；你装备区牌数变为1个新值时，若()中无此值，加入之。",
	"XS_shengshuai":"盛衰",
	"XS_shengshuai_info":"觉醒技，准备阶段，若你装备区牌数为全场唯一最多，你废除所有空装备栏，并获得技能“极奢”。",
	"XS_xiachang":"侠肠",
	"XS_xiachang_info":"其他角色出牌阶段开始，你可获得其1张牌，如此此阶段结束，你需交给其至少1张牌。",
	"XS_sijie":"死节",
	"XS_sijie_info":"每轮限1次，你的牌被其他角色获得时，你可弃置之，并(弃置其等量牌)；若你体力为全场最少，()内可改为：视为对其使用等量的杀；你受到伤害后，重置此技能。",
	"XS_tongyi1":"同义",
	"XS_tongyi1_info":"回合开始，你可依次发动以下效果：1.摸1张牌；2.本回合攻击距离+1；3.弃置1张锦囊牌；4.失去1点体力。",
	"XS_guanri":"贯日",
	"XS_guanri_info":"出牌阶段开始，你可令你本回合使用杀的次数、杀可指定的目标数总计增加X，X为你本回合发动“同义”效果的项数。",
	"XS_xiantu":"献图",
	"XS_xiantu_info":"准备阶段，你可交给1名其他角色1张手牌，如此你可移动场上1张牌或令其回复1点体力。",
	"XS_juebi":"绝匕",
	"XS_juebi_info":"结束阶段，你可视为对获得过你手牌的角色使用共计X张杀，X为你已发动过“献图”的次数。",
	"XS_sizhi":"死志",
	"XS_sizhi_info":"若你：手牌数为全场最少，可跳过摸牌阶段；装备区牌数为全场最少，可跳过出牌阶段；体力为全场最少，可跳过弃牌阶段。",
	"XS_zhuge":"筑歌",
	"XS_zhuge_info":"回合结束时你可令不同的角色分别获得一个本回合你跳过的主要阶段。锁定技，根据本回合跳过的阶段数你：≥1，重置武将牌；≥2，回复1点体力；≥3，摸3张牌。",
	"XS_baolian":"暴敛",
	"XS_baolian_info":"转换技，出牌阶段开始，你可令你本回合使用的下一张牌点数需小于上一张牌，如此出牌阶段结束你获得本回合因使用而进入弃牌堆的：1.红色牌；2.黑色牌。",
	"XS_qiongyu":"穷欲",
	"XS_qiongyu_info":"弃牌阶段结束，你可指定1名其他角色，对其使用所有本阶段弃置的你可对其使用的牌。",
	"XS_zisui":"恣睢",
	"XS_zisui_info":"当其他角色使用杀或普通锦囊牌指定你为唯一目标时，你可令此牌先对你攻击范围内的1名其他角色结算，若此牌被响应，则对你与该角色无效。",
	"XS_haogong":"好功",
	"XS_haogong_info":"每回合限1次，处于你攻击范围内的其他角色受到伤害后，你可观看其2张手牌并使用其中1张与造成伤害的牌同类别的牌。",
	"XS_zhilu":"指鹿",
	"XS_zhilu_info":"转换技，每回合限1次，1名角色使用基本牌或锦囊牌指定1名目标时，你可弃置1张牌：1.用1张手牌替换此牌；2.为此牌重新指定目标；3.视为对所有成为过“指鹿”目标的角色使用1张杀。",
	"XS_gaizhao":"改诏",
	"XS_gaizhao_info":"你受到伤害后，可选择1项：1.使“指鹿”变为下一个状态；2.移除“指鹿”的一个效果并失去此技能。",
	"XS_luozhi":"罗织",
	"XS_luozhi_info":"当你使用杀时，可为此杀选择任意个效果：此杀造成的伤害为火伤害；将你和目标横置；令此杀伤害+1。若此杀被闪避，目标视为对你使用拥有这些效果的此杀。",
	"XS_xingyu":"兴狱",
	"XS_xingyu_info":"回合内你使用的第1张基本牌结算完成后，可选择1项：使之不计入次数；本回合使用牌无距离限制。",
	"XS_xuyou":"莫须",
	"XS_xuyou_info":"每轮限1次，1名其他角色使用装备牌后，你可令其选择1项：失去1点体力；弃置装备区所有牌；其他角色濒死时，你可重置此技能并回复1点体力。",
	"XS_xianyi":"陷异",
	"XS_xianyi_info":"其他角色弃置牌后，若你的手牌中没有此类型的牌，你可弃置其至多X张牌，X为其弃置的此类牌数。",
	"XS_fujin":"复进",
	"XS_fujin_info":"结束阶段，你可翻面并回复1点体力；你从背面翻至正面后，可弃置1/2/3张手牌为3/2/1名其他角色分配共计3点伤害。",	
	"XS_zhuanshan":"专擅",
	"XS_zhuanshan_info":"锁定技，当1名角色回复体力时，若你没有手牌，你取消之并摸2张牌。",	
	"XS_weiditrj":"威敌",
	"XS_weiditrj_info":"你使用杀对处于横置状态的角色造成伤害时，可使此伤害增加X，如此所有横置角色解除横置，X为场上横置角色数。",	
	"XS_yanfa":"严法",
	"XS_yanfa_info":"1名角色使用或打出闪后，你可令其选择1项：1.横置，若其已横置你摸1张牌；2.翻面，且当前回合角色立即结束出牌阶段并失去1点体力。",	
	"XS_guangji":"广积",
	"XS_guangji_info":"出牌阶段限1次，你可获得手牌数不为最少的1名角色的1张手牌，并将其当作五谷丰登使用。",	
	"XS_huanwang":"缓王",
	"XS_huanwang_info":"当1张牌指定了包括你在内的多名目标时，你可取消至多X名角色成为此牌目标，X为你已损失体力值且至少为1。",	
	"XS_diding":"砥定",
	"XS_diding_info":"其他角色出牌阶段开始你可交给其1张手牌，本回合其使用此牌名的牌时需弃置1张牌，否则你可为之指定1个额外目标；结束阶段若其未使用此牌名的牌，你可获得其1张牌。",	
	"XS_qingshen":"清慎",
	"XS_qingshen_info":"锁定技，若你没有手牌，当你获得牌时，你摸1张牌。",
	"XS_buqu":"不屈",
	"XS_buqu_info":"回合开始时，你可弃置1张手牌，根据其颜色直到你下回合开始：红，使用牌无次数限制；黑，防止受到的下一次伤害。",
	"XS_shounuo":"守诺",
	"XS_shounuo_info":"每轮限1次，回合结束你可展示手牌并其中重铸1种颜色的牌，如此你获得1个额外回合，且该回合结束时你展示手牌并弃置另一种颜色的牌。",
	"XS_xingxun":"刑讯",
	"XS_xingxun_info":"出牌阶段限1次，你可展示1名其他角色的手牌，令其弃置其中红色牌并摸等量的牌。",
	"XS_chenqu":"陈屈",
	"XS_chenqu_info":"出牌阶段限1次，你可交给1名其他角色任意张牌，如此其直至你下回合开始，每失去1张红色牌令你摸1张牌，你以此法获得的牌数不超过给出牌数*2。",
	"XS_kuangan":"匡安",
	"XS_kuangan_info":"出牌阶段限1次，你可指定1名其他角色并选择1项：令其摸3张牌视为你对其使用1张杀；你摸3张牌视为其对你使用1张杀，此杀不计次数。",
	"XS_xiancheng":"陷城",
	"XS_xiancheng_info":"弃牌阶段结束，若你于此阶段弃置了牌，你可弃置1名其他角色至多X张牌，X为你弃置的牌数。",
	"XS_huimao":"挥矛",
	"XS_huimao_info":"回合结束时，你可将弃牌堆中1张装备牌置于牌堆顶任意张牌下方（0~5），视为使用了1张无距离限制的杀。",	
	"XS_zongqin":"纵擒",
	"XS_zongqin_info":"每回合限1次，你在其攻击范围内的其他角色成为杀的目标时，你可交给其1张手牌，如此此杀结算完成后你观看其手牌并获得其中1张。",
	"XS_quanzhen":"全阵",
	"XS_quanzhen_info":"你受到伤害后，可将手牌数调整至与来源相同，如此你可展示手牌中任意张杀，并于当前回合结束时依次使用之。",
	"XS_yuping":"预平",
	"XS_yuping_info":"锁定技，你使用杀指定目标后，目标获得1枚“预”且此杀无效并不计入使用次数；有“预”的角色受到伤害后，其移除1枚“预”并失去1点体力。",
	"XS_yaowei":"耀威",
	"XS_yaowei_info":"你受到卡牌造成的伤害后，根据此牌颜色可令来源：红色，回复1点体力；黑色，摸2张牌；否则，回复1点体力并摸1张牌。",
	"XS_furen":"复任",
	"XS_furen_info":"限定技，当你濒死时，可减少1点体力上限并弃置任意张牌，然后回复弃置牌数的体力，且“耀威”描述更改为：可令你。",
	"XS_shenduan":"神断",
	"XS_shenduan_info":"出牌阶段限1次，你可展示手牌并弃置其中1张，若此时你的手牌：颜色相同，可视为使用1张过河拆桥；种类相同，本回合使用牌无距离次数限制；花色相同，摸3张牌。",
	"XS_fupi":"伏辟",
	"XS_fupi_info":"每轮限1次，1名角色回合结束时，你可令其将手牌数调整至与其此回合开始相同。",
	"XS_mingcha":"明察",
	"XS_mingcha_info":"每回合限1次，其他角色受到来源不为你的伤害后，可令你获得造成伤害的牌。",
	"XS_qushen":"屈伸",
	"XS_qushen_info":"每轮限1次，你可将1张♠牌/♦︎牌当作兵粮寸断/乐不思蜀置于自己的判定区，如此出牌阶段结束你摸3张牌并获得1个额外的出牌阶段。",
	"XS_bacai":"拔才",
	"XS_bacai_info":"主公技，锁定技，场上每有1名其他与你同势力角色存活，你的手牌上限、防御距离+1。",
	"XS_yuanxing":"辕行",
	"XS_yuanxing_info":"出牌阶段限1次，你可将1张手牌置于1名角色的武器栏并摸2张牌，根据花色此牌视为：♥︎，双股剑；♦︎，青钢剑；♣︎，寒冰剑；♠︎，古锭刀。",
	"XS_qiexue":"怯薛",
	"XS_qiexue_info":"出牌阶段，你可在1名其他角色的武器牌上放置1张与之同花色的手牌，使此武器攻击距离和使用杀的次数+1；当角色失去该武器时，获得其上所有牌。",
	"XS_zongji":"总机",
	"XS_zongji_info":"每回合限1次，当你受到伤害时，可将1张装备牌置于1名其他角色的装备区，如此其承受此伤害。",
	"XS_lishi":"历仕",
	"XS_lishi_info":"当1名角色体力变为1时，你可选择1项：1.弃置其1张牌；2.摸1张牌。",
	"XS_jifen":"激奋",
	"XS_jifen_info":"处于你攻击范围内的其他角色回合开始时，你可令其直到其下个回合开始，所有手牌均视为杀且使用杀的次数+1。",
	"XS_fangnan":"方难",
	"XS_fangnan_info":"每回合限1次，你受到1点伤害/失去装备区1张牌后，可弃置1张手牌以移动场上1张牌，若有角色因此失去了区域内最后1张牌，你可对其造成1点伤害。",
	"XS_mingjian":"明见",
	"XS_mingjian_info":"当你的牌被其他角色弃置时，你可选择被弃置的牌。",
	"XS_yuanmou":"远谋",
	"XS_yuanmou_info":"游戏开始时/回合结束时，你可记录1张牌，你于回合外失去此牌时，可令1名角色摸3张牌。",
	"XS_jiandang":"翦荡",
	"XS_jiandang_info":"当你使用杀时，可弃置1张手牌使其指定你攻击范围内所有角色为目标；当你使用杀时，可令其中任意名目标弃置1张牌以防止其成为此牌目标。",
	"XS_zhufo":"诛佛",
	"XS_zhufo_info":"你因弃置而失去牌后，可视为使用1张过河拆桥。",
	"XS_kexing":"苛刑",
	"XS_kexing_info":"主公技，每回合限1次，当你需要弃置1张牌时，可选择1名其他与你同势力角色，其可代替你弃置1张牌。",
	"XS_polang":"破浪",
	"XS_polang_info":"回合结束时，根据你本回合使用牌的花色数你可：1.摸2张牌；2.横置1名其他角色；3.对1名其他角色造成1点伤害；4.令1名其他角色将手牌补充至上限并翻面。",
	"XS_xuanwei":"宣威",
	"XS_xuanwei_info":"当你对处于横置/翻面/判定区内有牌的角色造成伤害时，可摸1张牌/令伤害+1/弃置目标1张牌。",
	"XS_zhuoyan":"浊焰",
	"XS_zhuoyan_info":"出牌阶段限1次，你可将1张带有伤害标签的牌当作火攻使用，且其无法被无懈可击响应。锁定技，你使用火攻时，将描述更改为：展示1张同花色的手牌。",
	"XS_fenzi":"焚辎",
	"XS_fenzi_info":"你对其他角色造成火伤害后，可令其每回合只能使用1张牌，其结束阶段其可交给你1张手牌以移除此效果。",
	"XS_fenzi1":"焚辎",
	"XS_fenzi1_info":"",
	"XS_lunbing":"论兵",
	"XS_lunbing_info":"出牌阶段限1次，你可令场上体力最高的1名角色摸2张牌，或令手牌数最多的1名角色回复1点体力。",
	"XS_zhenggong":"争功",
	"XS_zhenggong_info":"一轮开始，你可获得任意名其他角色各1张手牌，如此，这些角色回合结束时，你需交给其1张牌。",
	"XS_qiangbing":"强兵",
	"XS_qiangbing_info":"摸牌阶段开始，你可摸/弃置1张牌并声明1张武器牌，拥有此武器技能直到下个回合开始，若为弃牌，本回合使用杀无距离限制。",
	"XS_qigong":"奇攻",
	"XS_qigong_info":"出牌阶段/你的手牌被其他角色获得后，你可将全部手牌当作杀使用，因此杀而濒死的角色无法使用手牌直至其脱离濒死，并令你摸1张牌。",
	"XS_qigong1":"奇攻",
	"XS_qigong1_info":"",
	"XS_qigong2":"奇攻",
	"XS_qigong2_info":"",
	"XS_zuozhan":"佐战",
	"XS_zuozhan_info":"当你使用杀/决斗时，可令1名其他角色成为此杀/决斗的使用者，且此牌造成伤害时你为来源。",
	"XS_gongfa":"攻伐",
	"XS_gongfa_info":"转换技，回合内外各限1次，1名角色回合开始时，你可令该角色本回合：1.普通锦囊牌均视为杀；2.杀均视为决斗；如果目标为你，描述中“全部”改为“可将”。",
	"XS_yushe":"御射",
	"XS_yushe_info":"出牌阶段限1次，你可摸2张牌令手牌上限-1，或弃置1张牌令手牌上限+2，直至下回合开始；回合内你可再一次发动此技能，但只能选择首次的选项。",
	"XS_zhiyi":"制夷",
	"XS_zhiyi_info":"其他角色回合开始，你可摸1张牌，如此若你的手牌数不小于手牌上限，你失去1点体力。",
	"XS_yujin":"嘉君",
	"XS_yujin_info":"出牌阶段限1次，你可交给1名其他角色1张手牌，如此你本回合手牌上限+2。",
	"XS_muyi":"母仪",
	"XS_muyi_info":"结束阶段，你可将手牌补充至手牌上限，若此时你手牌数为全场最多，需交给任意名其他角色各1张手牌使手牌数不为全场最多。",
	"XS_tonggu":"律疏",
	"XS_tonggu_info":"每回合限1次，你可将1种颜色的所有手牌交给1名其他角色，视为使用1张本轮你未以此法使用过的基本牌。",
	"XS_jianfa":"谏伐",
	"XS_jianfa_info":"每轮限1次，当1名角色使用杀指定1名目标时，你可令任意名角色选择弃置1张与此杀颜色不同/相同的手牌，令此杀伤害基数+1/-1。",
	"XS_zhiyu":"知遇",
	"XS_zhiyu_info":"一轮开始，你可指定1名其他角色，本轮你受到与其等量的伤害效果，其受到与你等量的体力回复效果。",
	"XS_zhiyu1":"知遇",
	"XS_zhiyu1_info":"",
	"XS_duanxing":"断行",
	"XS_duanxing_info":"你受到伤害后，可获得至多X名其他角色各1张手牌，X为你已损失的体力值。",
	"XS_zhuzheng":"助政",
	"XS_zhuzheng_info":"每回合限1次，你的杀被抵消后，可令1名其他角色视为使用1张桃。",
	"XS_mouji":"牟机",
	"XS_mouji_info":"每轮限1次，弃牌阶段结束，若你本回合使用牌数不大于1且于此阶段未弃置牌，你可于回合结束后获得1个额外回合。",
	"XS_feili":"废立",
	"XS_feili_info":"每回合限1次，当前回合角色使用杀指定1名目标时，你可弃置1张手牌令此牌目标成为原目标的上家或下家，且此杀无法被响应。",
	"XS_jice":"集策",
	"XS_jice_info":"出牌阶段限1次，你可摸X张牌并将等量的手牌依次置于牌堆顶，X为你的体力值。",
	"XS_chousha":"筹沙",
	"XS_chousha_info":"每回合限1次，其他角色使用带有伤害标签牌指定1名目标时，你可使其效果改为：展示牌堆顶1张牌，若其可对目标使用该牌则使用之。",
	"XS_queyue":"却月",
	"XS_queyue_info":"每回合限1次，你使用杀结算完成后，可令1名角色和你各摸1张牌，使此杀对该角色继续结算且无视防具。",
	"XS_qitun":"气吞",
	"XS_qitun_info":"你使用杀造成伤害后，可弃置攻击范围内所有角色各1张牌，并对因此失去最后1张手牌的角色造成1点伤害。",
	"XS_daixing":"代兴",
	"XS_daixing_info":"主公技，你对其他与你同势力角色造成伤害后，可交给其1张红色牌令其回复1点体力。",
	"XS_tubian":"图变",
	"XS_tubian_info":"1名角色回合结束时，你可令其重铸1张手牌，若其本回合造成过伤害，此效果改为观看其手牌并弃置其中1张。",
	"XS_suwen":"速文",
	"XS_suwen_info":"每轮限1次，其他角色摸牌阶段结束或你的出牌阶段，你可令该角色/1名其他角色选择将你的体力和手牌数中与其不相同的1项调整至与其相同。",
	"XS_yilv":"义旅",
	"XS_yilv_info":"每回合限1次，其他角色可将其被抵消的杀交给你，你可将你造成伤害的杀交给1名其他角色。",
	"XS_yizhize":"遗志",
	"XS_yizhize_info":"觉醒技，弃牌阶段开始若你的手牌中杀的数量不小于2，你可将其交给1名其他角色并摸数量*2张牌，令其获得一项技能：沉鸷，陷阵，骁骑，然后你跳过弃牌阶段并翻面。",
	"XS_quluan":"取乱",
	"XS_quluan_info":"每轮限1次，当1名其他角色使用带有伤害标签的牌指定了1名目标后，你可为此牌重新指定来源和目标；当你受到伤害后，重置此技能。",
	"XS_xueci":"血慈",
	"XS_xueci_info":"每回合限1次，1名角色使用普通锦囊牌造成伤害后，你可令其选择其攻击范围内1名其他角色，使之回复1点体力。",
	"XS_zhulie":"逐烈",
	"XS_zhulie_info":"当你受到伤害时，可弃置1张手牌并令来源弃置1张手牌，若两张牌花色不同，此伤害-1。",
	"XS_jingnan":"靖难",
	"XS_jingnan_info":"出牌阶段限1次，你可观看1名其他角色的手牌并弃置其中1张，若此牌带有伤害标签且你可对其使用，你对其无距离、次数限制地使用之。",
	"XS_shengwei":"盛威",
	"XS_shengwei_info":"主公技，回合开始你可声明1种花色，令与你同势力角色直到下个回合开始：区域内的牌均视为此花色，直至进行X次判定后，X为其当前体力值且至多为3。",
	"XS_shengwei1":"盛威",
	"XS_shengwei1_info":"",
	"XS_yangxing":"佯行",
	"XS_yangxing_info":"回合开始时，你可使你本回合任意项减半（向下取整），如此下回合对应的项目翻倍：摸牌阶段摸牌数；手牌上限；使用牌的次数；使用牌可指定的目标数。",
	"XS_chuanlie":"传烈",
	"XS_chuanlie_info":"一轮开始，你可指定1名其他角色，本轮其受到1点伤害/流失1点体力时，你代其承受之，并令你与其各摸1张牌。",
	"XS_chuanliemark":"传烈",
	"XS_chuanliemark_info":"",
	"XS_fenwei":"奋威",
	"XS_fenwei_info":"弃牌阶段开始，你可弃置至少1张手牌使手牌数为全场最少，如此你视为使用1张杀，且此杀造成的伤害+弃置牌数/2（向下取整）。",
	"XS_chijing":"驰境",
	"XS_chijing_info":"每轮限1次，1名角色于回合内弃置了带有伤害标签的牌后，你可对其造成1点伤害，如此其获得这些牌并获得1个额外的出牌阶段。",
	"XS_quchi":"驱驰",
	"XS_quchi_info":"其他角色回合开始时，你可摸1张牌，如此本回合你无法使用或打出手牌。",
	"XS_fenjian":"愤谏",
	"XS_fenjian_info":"你任意区域内的牌被弃置后，可令至多X名其他角色依次将对应区域的1张牌置于牌堆顶，X为此区域你弃置的牌数。",
	"XS_kejian":"克俭",
	"XS_kejian_info":"出牌阶段限1次，你可交给1名其他角色至少1张手牌，如此手牌数少于该角色的其他角色可依次弃置其1张牌。",
	"XS_qingya":"倾轧",
	"XS_qingya_info":"当你被指定为杀或决斗的目标时，可观看并交换来源的1张手牌，如此若你的手牌数小于来源，你摸1张牌。",
	"XS_xianzheng":"贤政",
	"XS_xianzheng_info":"主公技，每轮限1次，当你失去最后1张手牌时，可令1名其他与你同势力角色摸2张牌或回复1点体力。",
	"XS_shusheng":"入木",
	"XS_shusheng_info":"出牌阶段，当你使用1张未以此法使用过的基本、普通锦囊牌时，可将1张手牌代替此牌使用，如此回合结束你获得代替打出的这张牌。",
	"XS_huihao":"挥毫",
	"XS_huihao_info":"出牌阶段，若你手牌中没有可使用的牌，你可弃置所有手牌并摸等量的牌。",
	"XS_jinglue":"经略",
	"XS_jinglue_info":"出牌阶段限1次，你可令1名其他角色将手牌中所有杀依次对其攻击范围内你指定的1名角色使用，否则你可观看其手牌并获得其中1张。",
	"XS_simou":"私谋",
	"XS_simou_info":"1名角色于你的回合内受到杀造成的伤害后，你可摸/弃置1张牌，令其回复/失去1点体力。",
	"XS_zhanye":"攻略",
	"XS_zhanye_info":"当你使用杀指定目标时，你可令此杀响应所需闪数、伤害基数、额外目标数共计增加X，X为你已损失的体力值且至少为1。",
	"XS_hedao":"无为",
	"XS_hedao_info":"结束阶段，你可失去1点体力并获得至多2名其他角色各1张手牌，然后将2张手牌依次置于牌堆顶。",
	"XS_juqi":"居奇",
	"XS_juqi_info":"准备阶段，你可失去1点体力上限，令1名其他角色获得1种未选择过的效果：1.摸牌阶段摸牌数、手牌上限+1；2.出牌阶段结束后，获得1个额外的出牌阶段；3.出牌阶段，使用牌的点数不可小于上一张牌；4.结束阶段，若本回合曾于出牌阶段使用牌且于弃牌阶段曾弃置牌，失去1点体力。",
	"XS_juqi0":"居奇•天",
	"XS_juqi0_info":"锁定技，你于摸牌阶段摸牌数、手牌上限+1。",
	"XS_juqi1":"居奇•地",
	"XS_juqi1_info":"锁定技，你的出牌阶段结束后，获得1个额外的出牌阶段。",
	"XS_juqi2":"居奇•玄",
	"XS_juqi2_info":"锁定技，出牌阶段，你使用的下1张牌的点数不可小于使用的上1张牌。",
	"XS_juqi3":"居奇•黄",
	"XS_juqi3_info":"锁定技，若你本回合使用了牌且于弃牌阶段弃置了牌，结束阶段失去1点体力。",
	"XS_chenfu":"沉浮",
	"XS_chenfu_info":"锁定技，你失去体力上限后，回复1点体力；你受到伤害后，增加1点体力上限。",
	"XS_jiuyi":"酒意",
	"XS_jiuyi_info":"锁定技，你使用酒附加额外效果：决斗造成的伤害+1，你的杀/决斗需要2张闪/杀来响应。",
	"XS_lungong":"论功",
	"XS_lungong_info":"主公技，每回合限1次，与你同势力角色使用杀造成伤害后，其他群势力角色可交给该角色1张装备牌并令其装备之。",
	"XS_shixian":"释嫌",
	"XS_shixian_info":"主公技，其他与你同势力角色因“图霸”而弃置牌后，可交给你1张牌，令你本回合发动“图霸”的次数+1。",
	"XS_baowei":"暴威",
	"XS_baowei_info":"主公技，限定技，出牌阶段你可指定至多X名与你同势力角色，令其分别选择1项：1.视为使用1张决斗；2.视为使用1张杀；X为你已损失的体力值。",
	"XS_bingbian":"兵变",
	"XS_bingbian_info":"主公技，每轮限1次，你受到伤害后，可令所有其他与你同势力角色依次选择对伤害来源使用1张合法的杀。",
	"XS_yuxia":"御下",
	"XS_yuxia_info":"主公技，当你需要使用或打出1张闪时，可交给1名与你同势力其他角色1张手牌，令其可替你使用或打出之，否则展示其手牌。",
	"XS_enwei":"恩威",
	"XS_enwei_info":"主公技，每轮限1次，你受到伤害后，可对1名其他与你同势力角色造成1点伤害并令其回复1点体力，如此其获得1个额外的出牌阶段。",
	"XS_xinshi":"信士",
	"XS_xinshi_info":"主公技，其他与你同势力角色对你使用桃后，你可令其摸1张牌。",
	"XS_fadu":"法度",
	"XS_fadu_info":"主公技，每回合限1次，你获得1名其他与你同势力角色的手牌后，可交给其1张手牌。",
	"XS_yingduan":"英断",
	"XS_yingduan_info":"主公技，每回合限1次，其他与你同势力角色于出牌阶段获得牌后，可令你选择重铸任意张手牌。",
	"XS_bishi":"臂使",
	"XS_bishi_info":"锁定技，装备区牌数等于你的角色摸牌阶段额外摸1张牌。",
	"XS_hengge":"横戈",
	"XS_hengge_info":"其他角色使用装备牌后，若其装备区内牌数多/少于你，你可令其弃置/摸1张牌；其他角色失去装备区的牌后，若其装备区内牌数多/少于你，你可令其摸/弃置1张牌。",
	"XS_xiandeng":"先登",
	"XS_xiandeng_info":"出牌阶段开始，你可令你此回合使用牌无次数、距离限制，如此，出牌阶段结束你弃置所有手牌。",
	"XS_yongjiang":"遒健",
	"XS_yongjiang_info":"锁定技，每轮你对手牌数少于你的角色的第1次伤害-1并摸2张牌，受到手牌数多于你的角色的第1次伤害-1并回复1点体力。",
	"XS_wanwei":"挽危",
	"XS_wanwei_info":"限定技，1名角色濒死时，你可失去1点体力令其回复体力至1，如此你摸已损失体力值张牌并获得“窃符”。",
	"XS_qiefu":"窃符",
	"XS_qiefu_info":"限定技，其他角色回合结束时，若其本回合曾造成伤害，你可获得其1项技能并令对应技能失效直至其下回合结束或死亡，如此你获得“避居”。",
	"XS_qiefu1":"窃符",
	"XS_qiefu1_info":"",
	"XS_qiefu2":"窃符",
	"XS_qiefu2_info":"",
	"XS_biju":"避居",
	"XS_biju_info":"限定技，你的体力减少时，可将其改为回复等量体力，然后获得随机4名非场上先秦角色的1项技能，如此你可将势力更改为任意。",
	"XS_zhinang":"智囊",
	"XS_zhinang_info":"回合开始时，你可依次视为使用至多X张不同的普通锦囊牌，如此你跳过该回合，X为你已废除的装备栏数。",
	"XS_kanyu":"堪舆",
	"XS_kanyu_info":"每回合限1次，你可废除1个装备栏，视为使用1张本轮你未使用过的基本牌。",
	"XS_xingshan":"性善",
	"XS_xingshan_info":"你受到伤害时，可令你与来源各摸1张牌，如此若其手牌数不小于上限，你回复1点体力。",
	"XS_quyi":"取义",
	"XS_quyi_info":"每回合限1次，其他角色受到不小于其体力值的伤害时，你可代替其成为目标；若“取义”为每回合/轮限1次，你可无视限制地发动之，并将之改为每轮限1次/限定技。",
	"XS_jichi":"疾驰",
	"XS_jichi_info":"出牌阶段限1次，你可将1张非基本牌当作决斗使用。锁定技，当你使用决斗时，目标需弃置1张与此牌花色相同的牌，否则你可为此牌指定1个额外目标。",
	"XS_jugong":"据功",
	"XS_jugong_info":"限定技，当你濒死时，可依次获得牌堆顶5张牌并使用之，如此你回复X点体力，X为其中你使用的牌数。",
	"XS_jingtian":"经天",
	"XS_jingtian_info":"锁定技，1名角色死亡后，你在你的准备阶段后永久追加1个不同的主要阶段。",
	"XS_weidi":"纬地",
	"XS_weidi_info":"你可跳过摸牌或出牌阶段，视为对攻击范围内的1名其他角色使用1张不计入次数的杀。",
	"XS_qiaobianys":"巧变",
	"XS_qiaobianys_info":"当你使用不为杀的牌指定其他角色为目标时，可使之转化为对目标使用1张无次数、距离限制的杀。",
	"XS_bingji":"并击",
	"XS_bingji_info":"锁定技，你于出牌阶段使用的第X张牌造成的伤害翻倍，X为你的体力值。",
	"XS_tongyi":"同异",
	"XS_tongyi_info":"其他角色出牌阶段，你连续成为其使用牌的目标时，可摸1张牌。",
	"XS_fanlun":"反论",
	"XS_fanlun_info":"你的回合外，当你首次被指定为普通锦囊牌或杀的目标时，可交换此牌的使用者和目标；如此，本回合你成为普通锦囊牌或杀的目标时，其额外结算1次。",
	"XS_mengjin":"猛进",
	"XS_mengjin_info":"出牌阶段限1次，你可将任意张手牌当作1张无距离限制的杀使用，且此杀需等量的闪响应。",
	"XS_zhuiji":"追击",
	"XS_zhuiji_info":"你使用杀结算完成后，可进行1次判定，若结果不小3X，可令其再次结算直至判定失败为止，X为(你与目标距离+此杀结算次数+此杀被闪避次数)。",
	"XS_youshui":"游说",
	"XS_youshui_info":"每回合各限1次，其他角色需要使用1张闪时，你可与杀的来源拼点，若你赢则视为其使用之；你需要使用1张闪时，可进行1次判定，若结果大于7，你视为使用之。",
	"XS_kuangke":"狂客",
	"XS_kuangke_info":"锁定技，你的拼点点数+你的体力值；你的判定点数+你已损失的体力值。",
	"XS_huoji":"火计",
	"XS_huoji_info":"出牌阶段限1次，你可将1名角色场上的1张牌当作火攻对其使用。",
	"XS_jieyong":"节用",
	"XS_jieyong_info":"你因火攻而需要弃置牌时，可使之改为弃置1张与目标展示牌颜色相同的牌，如此，你可令1名其他角色获得你因此弃置的牌。",
	"XS_huoluan":"祸乱",
	"XS_huoluan_info":"你在其攻击范围内的其他角色出牌阶段开始时，你可令其对你使用1张杀，否则其此阶段无法使用杀。",
	"XS_beiqi":"悲泣",
	"XS_beiqi_info":"你受到非转化牌造成的伤害后，可摸1张牌并将造成伤害的牌置于1名角色判定区，根据其颜色使之视为：红，乐不思蜀；黑，兵粮寸断。",
	"XS_pingluan":"平乱",
	"XS_pingluan_info":"出牌阶段限1次，你可令1名本回合未移除过“平”的角色获得“平”，视为对其使用1张不计次数的杀。锁定技，你对有“平”的角色的进攻、防御距离+1。",
	"XS_nizhan":"逆战",
	"XS_nizhan_info":"出牌阶段限1次，你可移除1名本回合未获得过“平”的角色的“平”并摸1张牌，令其本回合其无法使用或打出闪。",
	"XS_duji":"毒计",
	"XS_duji_info":"每回合每名角色限1次，当你对其他角色使用普通锦囊牌时，若你不为此牌目标，可使此牌效果变为：令其失去1点体力。",
	"XS_xumou":"蓄谋",
	"XS_xumou_info":"锁定技，结束阶段你需将手牌数调整为(5,4,3,2)中与当前轮数不同的一项并移除对应选项，若()中已无选项，重置此技能。",
	"XS_daizheng":"代政",
	"XS_daizheng_info":"2名角色拼点时，你可用1张手牌替换其中1名角色的拼点牌，若其因此赢/没赢，你可令其摸/弃置2张牌。",
	"XS_tuiyin":"退隐",
	"XS_tuiyin_info":"出牌阶段结束，你可与1名在你攻击范围内的角色拼点，若你赢，你视为使用1张桃，否则，其视为使用1张杀。",
	"XS_xiangmian":"相面",
	"XS_xiangmian_info":"出牌阶段限1次，你可展示1名其他角色的手牌，根据花色数其直至你的下个回合开始：1，进攻距离+1；≥2，摸牌阶段摸牌数+1；≥3，手牌上限+2；4，获得“横征”。",
	"XS_wujing":"武经",
	"XS_wujing_info":"你受到伤害后，可展示牌堆顶2张牌，并将之分配给任意角色。",
	"XS_duanshui":"断水",
	"XS_duanshui_info":"出牌阶段，你可将1张黑桃牌当作铁锁连环使用；在你攻击范围内的其他角色摸牌阶段开始时，若其横置状态与你不同，你可使其摸牌数-1。",
	"XS_guoshi":"裹尸",
	"XS_guoshi_info":"当你受到属性/非属性伤害时，若处于横置/非横置状态，可使伤害值+1，如此你摸当前体力值张牌。",
	"XS_baizhan":"百战",
	"XS_baizhan_info":"其他角色使用装备后，若你装备区对应位置没有牌，你可视为对其使用1张杀，若此杀造成伤害，你获得并使用其对应位置装备牌。",
	"XS_gangrou":"刚柔",
	"XS_gangrou_info":"转换技，你造成伤害后：1.可令目标回复1点体力，然后你摸2张牌；2.可弃置2张牌对目标造成1点伤害。",
	"XS_yinren":"隐忍",
	"XS_yinren_info":"锁定技，当你受到伤害时防止之，并获得等量“忍”；你的准备阶段，移除所有“忍”并失去等量体力，然后摸数值*2张牌。",
	"XS_qiying":"奇英",
	"XS_qiying_info":"你对目标使用杀时，可弃置至少1张带有伤害标签的牌使此杀的基数与响应所需的闪增加等量的值，且此杀无视防具。",
	"XS_jiusheng":"酒圣",
	"XS_jiusheng_info":"出牌阶段限1次，你可将1张手牌置于1名角色武将牌上，其可将之当作酒使用。锁定技，你使用酒无次数限制。",
	"XS_jiushengdk":"酒圣",
	"XS_jiushengdk_info":"",
	"XS_chunniang":"醇酿",
	"XS_chunniang_info":"锁定技，1名角色使用以“酒圣”转化的酒时，根据其类型获得效果：装备牌，回复1点体力；锦囊牌，摸2张牌；基本牌，此牌基数+1。",
	"XS_wangyou":"忘忧",
	"XS_wangyou_info":"你使用酒后，可令你和至多2名其他角色展示1张手牌，然后你可将这些牌按任意顺序置于牌堆顶或牌堆底。",
	"XS_zhengqi":"正气",
	"XS_zhengqi_info":"当你进入濒死状态时，可对当前回合角色造成1点火属性伤害；当你脱离濒死状态时，可摸X张牌，X为你已损失体力值。",
	"XS_danxin":"丹心",
	"XS_danxin_info":"锁定技，当你的体力值<=3/2/1时，你依次获得效果：可将1张♣︎/♦︎/♥︎花色的手牌当作无懈可击/闪/桃使用或打出；弃牌阶段，你的桃不计入手牌上限。",
	"XS_jianshi":"箭誓",
	"XS_jianshi_info":"出牌阶段限1次，你增加1点体力上限并摸2张牌，且使用杀的次数、进攻距离+1直至回合结束。",
	"XS_jingong1":"矜功",
	"XS_jingong1_info":"觉醒技，结束阶段，若你累计已发动3次“箭誓”，你回复1点体力并摸2张牌，然后失去“箭誓”并获得“倾覆”。",
	"XS_qingfu":"倾覆",
	"XS_qingfu_info":"锁定技，你受到伤害后，减少1点体力上限并摸伤害数值张牌，然后可横置1名其角色。",
	"XS_zhengshui":"征税",
	"XS_zhengshui_info":"出牌阶段限1次，你可弃置1张手牌并令2名角色拼点，失败方需要将1张红色手牌交给你指定的1名其他角色。",
	"XS_xinsuan":"心算",
	"XS_xinsuan_info":"每回合限1次，2名角色拼点结束后，你可获得其中1张拼点牌，直至你下回合开始其他角色对你使用与之点数奇偶不同的基本、普通锦囊牌牌时需弃置1张牌，否则其对你无效。",
	"XS_jiejiang":"截江",
	"XS_jiejiang_info":"每回合限1次，1名角色于回合内使用装备后，你可弃置1张手牌并移动此牌。",
	"XS_liqi":"利器",
	"XS_liqi_info":"出牌阶段限1次，你可强化1名角色装备区的武器牌并摸1张牌，若无法强化，此摸牌数+1。锁定技，你装备区的牌无法被弃置。",
	"XS_chuangge":"创革",
	"XS_chuangge_info":"出牌阶段，你可将装备区的1张牌交给1名其他角色，如此你摸2张牌；你可废除此装备栏，令任意名其他角色弃置其对应区域的所有牌。",
	"XS_fuqing":"扶倾",
	"XS_fuqing_info":"每名角色限1次，当其体力降至1时，你可令其于当前回合结束后获得1个额外的回合，如此你的体力上限+1。",
	"XS_zengzao":"增灶",
	"XS_zengzao_info":"限定技，出牌阶段你可令1名角色弃置1张手牌并摸3张牌，若其有已发动的限定技，你可令其中1项于本回合结束后重置。",
	"XS_liaodi":"料敌",
	"XS_liaodi_info":"弃牌阶段开始，你可将至少1张手牌置于武将牌上，你的回合外，你可移除武将牌上1张牌视为使用了1张闪或无懈可击。",
	"XS_tongjian":"通鉴",
	"XS_tongjian_info":"每轮限1次，你可视为使用或打出1张无懈可击或闪，然后令1名其他角色获得其响应的牌。",
	"XS_gufa":"故法",
	"XS_gufa_info":"锁定技，摸牌阶段你的摸牌数+2；你的手牌上限-你装备区牌数。",
	"XS_shuwei":"戍卫",
	"XS_shuwei_info":"每回合限1次，你可跳过摸牌或出牌阶段，令至多2名其他角色获得1个额外的对应阶段，若仅选择1了名其他角色，你摸1张牌。",
	"XS_lianjian":"廉俭",
	"XS_lianjian_info":"当其他角色的牌因弃置或判定而进入弃牌堆时，你可获得其中1张你手牌中没有的花色的牌。",
	"XS_chuanyang":"穿杨",
	"XS_chuanyang_info":"锁定技，若你装备了武器，你使用杀无距离限制；你使用杀造成伤害后，随机废弃目标1个装备栏。",
	"XS_tujin":"突进",
	"XS_tujin_info":"出牌阶段限1次，你可使你直至下回合开始，闪均视为杀，使用杀的次数+1且可额外指定1个目标；你受到伤害后，移除此效果。",
	"XS_xingkun":"刑困",
	"XS_xingkun_info":"锁定技，每轮你可使用杀、被使用杀的次数和上限为3；以你为目标的啥结算完成后，你摸1张牌。",
	"XS_liyongyb":"厉勇",
	"XS_liyongyb_info":"当你使用杀时，若其为你本轮可使用的第一张/最后一张杀，你可：令此杀伤害基数+1/获得目标装备区1张牌。",
	"XS_mouduan":"谋断",
	"XS_mouduan_info":"1名角色的判定牌生效前，你可打出1张手牌替换之，若其花色为红桃，你可令其回复1点体力。",
	"XS_hongliang":"宏量",
	"XS_hongliang_info":"你每受到1点伤害，可从牌堆中随机获得1张延时锦囊牌置于1名角色的判定区。",
	"XS_zhixing":"知行",
	"XS_zhixing_info":"锁定技，你每使用或打出2张基本/普通锦囊牌，随机获得1张普通锦囊/基本牌；你每通过“知行”获得2张牌，失去1点体力上限并依次获得“立德”“立功”“立言”，然后失去此技能。",
	"XS_liyan":"立言",
	"XS_liyan_info":"结束阶段，你可获得随机1张杀或闪；若你体力为全场最少，可使之改为获得杀、闪、酒、桃各1张，然后失去此技能。",
	"XS_ligong":"立功",
	"XS_ligong_info":"当你使用杀指定目标时，可观看其手牌并将其中1张牌置于其武将牌上，当前回合结束，若此牌为黑色则弃置之，否则其获得之。",
	"XS_ligong1":"立功",
	"XS_ligong1_info":"",
	"XS_lide":"立德",
	"XS_lide_info":"你一次获得至少2张牌后，可弃置1名其他角色1张牌；你一次至少失去2张牌后，可移动场上1张牌。",
	"XS_pincai":"聘才",
	"XS_pincai_info":"其他角色出牌阶段开始，你可交给其任意张牌，若数量不少于2，你可回复1点体力或摸1张牌。锁定技，你的手牌上限+你的体力上限。",
	"XS_sanku":"三窟",
	"XS_sanku_info":"当你受到不小于你体力值的伤害时，可废弃：武器与攻击马栏，防具与防御马栏，判定与宝物栏3种之一，令此伤害无效并摸1张牌。",
	"XS_dingyuan":"定远",
	"XS_dingyuan_info":"其他角色一次弃置至少2张手牌后，你可令你或该角色获得其中1张，若你未因此获得牌，你的进攻范围+1直至你回合结束。",
	"XS_pingrong":"平戎",
	"XS_pingrong_info":"你于出牌阶段使用牌连续指定同一名其他角色为目标（或之一）时，可依次：弃置其1张手牌；弃置其1张牌；获得其1张牌。",
	"XS_qinwang":"擒王",
	"XS_qinwang_info":"每轮各限1次，你可失去X点体力视为使用1张杀/闪，X为你当前手牌数，如此，你对目标/当前回合角色造成1点伤害。",
	"XS_zhenyi":"镇夷",
	"XS_zhenyi_info":"你使用杀或决斗造成伤害时，可使伤害值变为X，X为你已损失体力值，如此此技能失效直至你体力变化。",
	"XS_tanli":"叹丽",
	"XS_tanli_info":"每轮限3次，1名角色受到伤害时，你可展示其手牌并弃置其中1张，若如此，其回复1点体力。",
	"XS_qianjie":"谦节",
	"XS_qianjie_info":"当你成为带有伤害标签的牌的目标时，可令1名不为此牌目标的其他角色也成为此牌的目标，如此其于其下个准备阶段开始摸2张牌。",
	"XS_poshi":"破势",
	"XS_poshi_info":"出牌阶段限1次，你可获得1名其他角色1张手牌并使用之，若未使用，你失去1点体力并重置此技能。",
	"XS_fubing":"府兵",
	"XS_fubing_info":"锁定技，每轮你奇数次的受到伤害/体力流失效果改为弃置1张牌。",
	"XS_yuanjiao":"远交",
	"XS_yuanjiao_info":"出牌阶段开始，你可弃置1张手牌，如此你可令1名其他角色将手牌补充至与你相同，且你的防御距离+1直到你下回合开始。",
	"XS_jingong":"近攻",
	"XS_jingong_info":"出牌阶段结束，你可摸1张牌，如此你可令1名其他角色将手牌弃置至与你相同，且其防御距离-1直到你下回合开始。",
	"XS_baipao":"白袍",
	"XS_baipao_info":"出牌阶段每种花色限1次，你可将1张牌当作不计次数的杀使用，你因此造成伤害后，可弃置1张“励战”牌或摸1张牌。",
	"XS_lizhan":"励战",
	"XS_lizhan_info":"你成为其他角色不因“励战”使用的非转化实体牌的唯一目标时，可取消之并将其置于你的武将牌上，回合结束，此牌的原使用者依次对你使用之。",
	"XS_gongshu":"拱戍",
	"XS_gongshu_info":"摸牌阶段你可少摸任意数量的牌并获得至多等量的其他角色各1张装备牌，若其因此失去装备区最后一张牌，你可令其摸2张牌。",
	"XS_qingtian":"擎天",
	"XS_qingtian_info":"锁定技，若你使用的杀使你为最后的手牌，此杀无法被闪避；你使用杀造成伤害时，若目标装备区无牌，此伤害+1。",
	"XS_yinzhi":"饮卮",
	"XS_yinzhi_info":"出牌阶段，你可移除1枚“饮”视为使用1张酒。锁定技，你每受到1点伤害/失去1点体力后，获得1枚“饮”。",
	"XS_tuishang":"推赏",
	"XS_tuishang_info":"你可将摸牌阶段改为：展示牌堆顶X+2张牌，并将之分配给任意角色，X为你手牌中颜色数。",
	"XS_pingliao":"筹度",
	"XS_pingliao_info":"你于出牌阶段使用第一张杀或决斗指定唯一目标时，可选择1项：摸X+1张牌；使此之造成的伤害+X；X为目标手牌中锦囊牌数量。",
	"XS_yejian":"曳犍",
	"XS_yejian_info":"你使用杀或决斗造成伤害后，若目标装备区无坐骑，你可随机获得1张坐骑牌并令1名角色装备之；否则，你可获得其中1张并令1名角色装备之。",
	"XS_pingbu":"平步",
	"XS_pingbu_info":"锁定技，你无视其他角色的马匹效果；若你未装备攻击/防御马，你的进攻/防御距离+1，否则防御/进攻距离+1。",
	"XS_qiaozhan":"巧战",
	"XS_qiaozhan_info":"出牌阶段限1次，你可观看1名其他角色手牌并用1张手牌替换其中1张，若其手牌花色数因此：增加，其摸2张牌；减少，你摸2张牌；不变，你与其各摸1张牌。",
	"XS_shijing":"事竟",
	"XS_shijing_info":"锁定技，若你：体力值不为全场最少，使用牌无距离限制；手牌数不为全场最少，使用牌无次数限制。",
	"XS_renhou":"仁厚",
	"XS_renhou_info":"当其他角色受到来源不为你的伤害时，你可选择1项：代替其承受此伤害；交给其伤害数值张手牌。",
	"XS_sisheng":"死生",
	"XS_sisheng_info":"锁定技，当你进入或脱离濒死状态时、失去最后的手牌时摸1张牌；你的手牌上限+与你同势力的其他角色数。",
	"XS_shouba":"图霸",
	"XS_shouba_info":"出牌阶段限X次，你可弃置1名其他角色的1张牌并令其摸1张牌，X为与你不同势力角色数且至少为1至多为4。。",
	"XS_chuizhi":"垂治",
	"XS_chuizhi_info":"回合结束，你可令1名其他角色获得1个只有前X个阶段的回合（准备、判定、摸牌、出牌），X为你本回合发动“图霸”的次数。",
	"XS_qudou":"驱斗",
	"XS_qudou_info":"出牌阶段，你可弃置X张牌视为1名其他角色对另1名同性别其他角色使用1张决斗，X为本回合发动此技能次数+1。",
	"XS_laomou":"老谋",
	"XS_laomou_info":"当你没有手牌时，可摸1张牌视为使用1张闪；当你有手牌时，可将全部手牌当作1张无懈可击使用。",
	"XS_shicheng":"试诚",
	"XS_shicheng_info":"一轮开始，你可令1名其他角色依次选择是否将：手牌数调整为3；体力值调整为2；装备区牌数调整为1；其每有1项因此减少，摸1张牌。",
	"XS_shouye":"授业",
	"XS_shouye_info":"1名角色累计通过“试诚”选择3次是后，你可令其本轮获得随机3名不在场角色中任意1名的全部非觉醒、限定、主公技。",
	"XS_huashi":"化石",
	"XS_huashi_info":"每轮限1次，1名角色濒死时，若其未翻面，你可以将其武将牌翻面，然后其回复1点体力并摸2张牌。",
	"XS_yonglue":"勇略",
	"XS_yonglue_info":"1张牌置入你的装备区后，你可视为使用1张本轮未以此法使用过的带有伤害标签的普通锦囊牌。锁定技，你失去装备区的牌后，失去1点体力。",
	"XS_xiongao":"雄傲",
	"XS_xiongao_info":"1名角色死亡后，你可令1名角色摸3张牌，若为你，可立即使用1张手牌。",
	"XS_fubi":"辅弼",
	"XS_fubi_info":"一轮开始，你可指定1名其他角色，其于此轮使用杀造成伤害后，你可展示牌堆顶2张牌并任意分配给你或该角色。",
	"XS_kuangzuo":"匡佐",
	"XS_kuangzuo_info":"摸牌阶段结束，若你的手牌数大于体力值，你可交给1名其他角色至少1张手牌，若你因此手牌数小于体力上限，你回复1点体力。",
	"XS_hengxing1":"横行",
	"XS_hengxing1_info":"",
	"XS_hengxing":"横行",
	"XS_hengxing_info":"限定技，出牌阶段你可将手牌补充至体力上限，如此你本回合使用牌无次数、距离限制，无法被响应，出牌阶段结束，你废除所有装备栏。",
	"XS_yuxue":"浴血",
	"XS_yuxue_info":"当你受到伤害时，可弃置全部手牌防止之，若因此弃置的牌数不小于体力值，你回复1点体力并增加1点体力上限。",
	"XS_aozhan":"鏖战",
	"XS_aozhan_info":"你受到伤害后，可弃置1张手牌增加1点体力上限，并根据所弃置牌的花色获得对应技能直到下回合结束：♥，浴血；♦，陷阵；♠，逐虏；♣，破竹。",
	"XS_zhucheng":"筑城",
	"XS_zhucheng_info":"结束阶段，你可摸X张牌，如此你于下个准备阶段需弃置X-1张手牌（X为你已废弃的装备栏数）。",
	"XS_jihu":"击胡",
	"XS_jihu_info":"出牌阶段限1次，你可废除1个装备栏视为使用1张不计次数的杀。锁定技，若你装备区没有牌，你使用杀无距离限制。",
	"XS_jiezhong":"戒终",
	"XS_jiezhong_info":"你成为其他角色使用牌的目标时，可展示手牌，若其中无此类型牌，其需弃置1张牌，若其因此造成伤害，你令其失去1点体力或立即结束出牌阶段。",
	"XS_yinxian":"引贤",
	"XS_yinxian_info":"出牌阶段，你可弃置1张手牌并令1名本回合未以此法选择过的其他角色选择1项：获得此牌；从牌堆中获得1张与之同类型牌。",
	"XS_feizhao":"飞诏",
	"XS_feizhao_info":"出牌阶段结束，你可交给1名其他角色任意张杀，令其直至你下回合开始使用杀无距离限制；你可翻面使此效果增加：其使用杀造成伤害后，令你摸伤害数值张牌。",
	"XS_zhigu":"执鼓",
	"XS_zhigu_info":"1名角色使用杀时，你可弃置任意张花色不同的手牌，根据花色令此杀：♥︎，伤害基数+1；♠︎，可额外指定1个目标；♦︎，需两张闪响应；♣︎，不计入使用次数。",
	"XS_shenjian":"神箭",
	"XS_shenjian_info":"转换技，锁定技，你使用杀：1.无视防具；2.响应所需闪数+1；3.令目标本回合所有非锁定技失效，且无法使用或打出牌。你使用杀无距离限制。",
	"XS_weizhen":"威震",
	"XS_weizhen_info":"你使用杀造成伤害后，可弃置目标1张牌，若为基本牌，你可获得之。",
	"XS_jiqu":"疾驱",
	"XS_jiqu_info":"出牌阶段限1次，你可将1张红色牌当作杀使用。锁定技，你使用♥︎杀不计次数，使用♦︎杀无距离限制。",
	"XS_poqiu":"破酋",
	"XS_poqiu_info":"你使用杀造成伤害后，可将目标装备区的1张牌置于1名任意角色的的装备区。",
	"XS_fenglang":"封狼",
	"XS_fenglang_info":"结束阶段，你可摸X张牌，X为你此回合造成的伤害值且至多为3。",
	"XS_faming":"发明",
	"XS_faming_info":"回合内外各限1次，你可令你使用的1张牌无效，以视为使用1张无中生有。",
	"XS_jiqiao":"机巧",
	"XS_jiqiao_info":"你获得牌后，可将其中1张当作井阑/云梯/冲车/木兽中不存在于场上的1者置于1名角色宝物栏（不可替换），然后弃置其余牌。",
	"XS_tiandao":"天道",
	"XS_tiandao_info":"出牌阶段限1次，你可重铸所有黑色/红色手牌，令1名角色直到你下回合开始，受到的属性伤害+1/防止所受雷属性以外的伤害。",
	"XS_yingxu":"盈虚",
	"XS_yingxu_info":"结束阶段，若你红色手牌数多于/少于黑色，你摸1张牌，可令1名角色进行一次闪电效果的判定/你视为装备八卦阵直到下回合开始；若相等，获得两种效果。",
	"XS_xuezhan":"血战",
	"XS_xuezhan_info":"弃牌阶段开始，若你已受伤，可减少1点体力上限并跳过此阶段。锁定技，结束阶段，若你的体力上限为1你摸1张牌。",
	"XS_xiaoyong":"骁勇",
	"XS_xiaoyong_info":"锁定技，根据你的体力值，你拥有技能：<=3，“疾驱”；<=2，“陷阵”；=1，“沉鸷”。",
	"XS_xianzhen":"陷阵",
	"XS_xianzhen_info":"当你成为杀的目标时，可选择1项：1.视为对来源使用1张杀；2.摸1张牌。",
	"XS_moxin":"墨心",
	"XS_moxin_info":"你可弃置1张：红色牌令1名角色体力回复值+1/黑色牌取消1张杀的1个目标；你可令其中1项效果失效，以无需弃牌地发动另一项。",
	"XS_moshou":"墨守",
	"XS_moshou_info":"锁定技，你使用“墨心”失效项颜色牌无距离、次数限制，且使用该颜色牌造成伤害时防止之，并恢复“墨心”对应效果。",
	"XS_yuchang":"鱼肠",
	"XS_yuchang_info":"出牌阶段限1次，你可将1张手牌交给1名其他角色。锁定技，其他角色使用、打出或失去从你处获得的牌后，你对其造成1点伤害并摸1张牌。",
	"XS_yuchanglose":"鱼肠",
	"XS_yuchanglose_info":"",
	"XS_cuidu":"淬毒",
	"XS_cuidu_info":"锁定技，你使用杀造成伤害后，若你手牌中有毒，你交给其1张毒，否则其从牌堆中随机获得1张毒。",
	"XS_shangcai":"商才",
	"XS_shangcai_info":"出牌阶段限1次，你可将任意张点数和不大于13的手牌交给1名其他角色，其选择1项：你摸X+1张牌；你对其使用的前X张牌不计次数、伤害值+1，X为给出牌数。",
	"XS_shangcai1":"商才",
	"XS_shangcai1_info":"",
	"XS_zhouyin":"舟隐",
	"XS_zhouyin_info":"指定你为目标的带有伤害标签的牌进入弃牌堆时，你可获得之。锁定技，结束阶段，你重铸手牌中带有伤害标签的牌。",
	"XS_weiya":"威压",
	"XS_weiya_info":"锁定技，你于摸牌阶段摸牌数+1；体力值小于你的其他角色手牌上限-1，每有1名角色受此影响，你的手牌上限+1。",
	"XS_zhulu":"逐虏",
	"XS_zhulu_info":"1名角色不因此技能使用带有伤害标签的牌结算完成后，你可弃置1张基本牌视为对其中1名目标使用1张杀，若此牌为红色，其伤害基数+1。",
	"XS_bianfa":"变法",
	"XS_bianfa_info":"出牌阶段限1次，你可重铸任意张同花色的牌，并指定至多等量角色，其可重铸所有该花色牌，若无人重铸，你摸1张牌。",
	"XS_yizhi":"易制",
	"XS_yizhi_info":"锁定技，你1次失去至少2张同花色牌后，若花色为：♥︎，回复1点体力；♠︎，失去1点体力并摸3张牌；♦︎，视为使用1张不计次数的杀；♣︎，本回合“变法”使用次数+1。",
	"XS_weijia":"威加",
	"XS_weijia_info":"其他角色结束阶段，若其手牌数大于你的体力值，你可获得其1张手牌。",
	"XS_jianyi":"翦异",
	"XS_jianyi_info":"出牌阶段限1次，你可指定1名角色，你与其分别选择弃置2张牌或失去1点体力，若其选择与你不同，你视为对其使用1张不计入次数的杀。",
	"XS_zhisheng":"师表",
	"XS_zhisheng_info":"你进行拼点时，可令你的点数视为1或K。",
	"XS_renli":"仁礼",
	"XS_renli_info":"每回合限1次，其他角色造成伤害时，你可与之拼点，点数大者回复1点体力，小者摸1张牌；若相等，由你选择效果。",
	"XS_huahu":"化胡",
	"XS_huahu_info":"其他角色使用普通锦囊牌指定不为你的目标时，你可使你也成为此牌目标。",
	"XS_shangshan":"上善",
	"XS_shangshan_info":"你可将1名角色的最后一张手牌当作杀或闪使用或打出，然后令其摸2张牌。",
	"XS_sutan":"肃贪",
	"XS_sutan_info":"主公技，出牌阶段限1次，你可观看1名与你同势力其他角色的手牌并重铸其中任意张牌，如此“威压”对其失效直至你下回合开始。",
	"XS_mocu":"没簇",
	"XS_mocu_info":"你使用杀造成伤害时，可进行1次判定，若结果为黑色，此伤害+1，否则你可弃置1张黑色手牌令伤害+1。",
	"XS_feijiang":"飞将",
	"XS_feijiang_info":"锁定技，若你的体力值大于2，你的进攻距离+1，否则防御距离+1；你使用杀时，若你与目标的距离小于你的进攻距离，此杀无法被闪响应。",
	"XS_youdi":"诱敌",
	"XS_youdi_info":"其他角色使用杀指定不为你的目标时，你可弃置1张牌使目标变为你，若如此，来源需弃置1张杀，否则你对其造成1点伤害。",
	"XS_lianque":"连却",
	"XS_lianque_info":"锁定技，你成为杀的目标时获得1枚“却”；你的手牌上限+“却”的数量。准备阶段，你可移除所有“却”并摸等量的牌，若移除了至少3枚，回复1点体力。",
	"XS_mousheng":"神算",
	"XS_mousheng_info":"出牌阶段限1次，你可将1张手牌当作1张普通锦囊牌使用。锁定技，你使用的普通锦囊牌无法被其他角色的无懈可击响应。",
	"XS_dushan":"独善",
	"XS_dushan_info":"你成为锦囊牌目标时，可摸1张牌，若为普通锦囊牌，你可使之对你无效。",
	"XS_guicai":"鬼才",
	"XS_guicai_info":"其他角色使用的以你为目标的普通锦囊牌进入弃牌堆时，你可获得此牌并摸1张牌。锁定技，你使用普通锦囊牌无距离限制。",
	"XS_fangyuan":"方圆",
	"XS_fangyuan_info":"你使用普通锦囊牌时，可使之增加或减少X个目标，X为你已损失体力值且至少为1。",
	"XS_sijian":"死间",
	"XS_sijian_info":"一轮开始，若无角色拥有“间”，你可令1名其他角色获得“间”；你的结束阶段，若手牌数少于此角色，可获得其1张手牌；若体力值少于此角色，你回复1点体力；你死亡时，所有其他角色需依次对其使用1张杀，否则失去1点体力。",
	"XS_sijian1":"死间",
	"XS_sijian1_info":"",
	"XS_hezong":"合纵",
	"XS_hezong_info":"出牌阶段限1次，你可令手牌数不为最多的任意名角色各摸1张牌并横置。",
	"XS_lianheng":"连横",
	"XS_lianheng_info":"出牌阶段限1次，你可令1名其他角色摸1张牌并解除横置状态，然后选择1项：视为对你指定的目标使用1张杀；交给你1张牌。",
	"XS_kuolun":"阔论",
	"XS_kuolun_info":"每回合限1次，1名角色成为杀的目标时，你可与来源拼点，若你胜利，获得双方的拼点牌，否则此杀无法被闪避。",
	"XS_shoushang":"受伤",
	"XS_shoushang_info":"",
	"XS_bugua":"卜卦",
	"XS_bugua_info":"摸牌阶段开始，你可指定1种花色，并选择获得牌堆顶或牌堆底5张牌中所有与指定花色不同的牌，然后跳过摸牌阶段。",
	"XS_xiuli":"修历",
	"XS_xiuli_info":"结束阶段，你可观看牌堆顶的X张牌（X为你本回合使用的牌数且至多为5），然后以任意顺序放回牌堆顶或牌堆底。",
	"XS_shicai":"识才",
	"XS_shicai_info":"出牌阶段限1次，你可交给1名其他角色1张牌，令其使用基本牌的次数、进攻距离+1，其下个回合结束失去此效果并需交给你2张牌。",
	"XS_shicaimark":"识才",
	"XS_shicaimark_info":"",
	"XS_houqin":"后勤",
	"XS_houqin_info":"每回合限1次，1名角色手牌数小于2时，你可令其将手牌摸至2张。",
	"XS_zhanshen":"战神",
	"XS_zhanshen_info":"你的杀被闪避后，可重置本回合基本牌使用次数。锁定技，你使用杀、酒效果基数+1。",
	"XS_qice":"奇策",
	"XS_qice_info":"你受到/造成伤害后，可将手牌数调整至你已损失体力值/当前体力值，若你因此失去了牌，可对对方造成1点伤害。",
	"XS_diaohu":"调虎",
	"XS_diaohu_info":"你受到伤害时，可令来源摸1张牌，如此其跳过下一个摸牌阶段。",
	"XS_mengzhe":"猛者",
	"XS_mengzhe_info":"你使用杀被闪避时，可弃置2张牌令此杀依然造成伤害。锁定技，你使用杀造成伤害后，令目标下一次回复体力时取消之。",
	"XS_henglian":"横练",
	"XS_henglian_info":"锁定技，你始终处于横置状态；你受到以你/不以你为起点的属性伤害时，回复X点体力/摸2X张牌，X为伤害值。",
	"XS_kuangshi":"匡世",
	"XS_kuangshi_info":"出牌阶段限1次，你可令1名角色弃置手牌及判定区所有牌，然后将手牌摸至4张。",
	"XS_zhijiao":"知交",
	"XS_zhijiao_info":"每名角色限1次，当你需要使用或打出1张闪时，可令其展示所有手牌，若其中有闪，视为你使用或打出了1张闪，否则令你摸1张牌。",
	"XS_poguo":"破国",
	"XS_poguo_info":"1名角色死亡后，你可选择1项：获得该角色的所有牌；弃置1张牌并于当前回合结束后获得1个额外回合。",
	"XS_suoci":"索赐",
	"XS_suoci_info":"每回合限1次，你使用杀造成伤害后，可令1名其他角色选择1项：交给你1张牌，并使你本回合使用杀的次数+1；此杀对其继续结算。",
	"XS_yingong":"引弓",
	"XS_yingong_info":"出牌阶段限1次，若你未装备射雕弓，你可弃置装备区的武器牌并装备射雕弓；否则，你随机获得1张杀。",
	"XS_tianjiao":"天骄",
	"XS_tianjiao_info":"你使用杀造成伤害后，根据此杀的目标个数你可：1，回复1点体力；2，摸1张牌；>=3，重铸1张牌。锁定技，你点数大于6的杀可指定额外1个目标。",
	"XS_shiquan":"释权",
	"XS_shiquan_info":"出牌阶段限1次，你可令1名装备区有牌的其他角色选择1项：弃置装备区1张牌并令你摸1张牌；交给你装备区的1张牌，并可对你使用1张无距离限制的杀。",
	"XS_renzheng":"仁政",
	"XS_renzheng_info":"你受到伤害后，可摸1张牌，并可令1名其他角色获得造成伤害的牌。",
	"XS_tianzhao":"天兆",
	"XS_tianzhao_info":"当你成为其他角色带有伤害标签的牌的目标时，可展示牌堆顶1张牌及手牌，若你手牌无此牌花色，你对该角色造成1点雷伤害，否则你获得此牌。",
	"XS_shengxi":"生息",
	"XS_shengxi_info":"其他角色结束阶段，若其本回合造成伤害值不大于1，你可交给其1张手牌并标记其为“息”，然后你摸1张牌。",
	"XS_renxian":"任贤",
	"XS_renxian_info":"其他角色准备阶段，若其手牌中有“息”，其可展示所有“息”并取消其标记，如此其获得1个额外的出牌阶段。",
	"XS_chuijiang":"垂缰",
	"XS_chuijiang_info":"主公技，当你濒死时，可将装备区1张坐骑牌弃置或交给1名其他与你同势力角色，如此你回复至1点体力。",
	"XS_tianming":"天命",
	"XS_tianming_info":"1名角色的判定牌生效前，你可展示牌堆顶1张牌，用其代替并获得该判定牌，若非每轮首次发动此技能，你需弃置1张牌。",
	"XS_zhujian":"铸剑",
	"XS_zhujian_info":"出牌阶段限1次，你可弃置2张手牌，根据点数和装备武器：1至5，龙泉剑【天命】；6至10，太阿剑【威压】；11至15，湛卢剑【仁政】；16至20，纯钧剑【威加】；21+，工部剑【天骄】。",
	"XS_jujiang":"巨匠",
	"XS_jujiang_info":"锁定技，你摸牌阶段摸牌数+X，X为你通过“铸剑”装备过的武器种数。",
	"XS_yongjue":"勇绝",
	"XS_yongjue_info":"若你已受伤，当你受到伤害时可减少体力上限代替减少体力。锁定技，若你未受伤，你的进攻距离+你装备区牌数。",
	"XS_yuanyang":"鸳鸯",
	"XS_yuanyang_info":"你可将1张手牌当作杀/闪使用或打出，你因此连续使用或打出同一牌名后，失去1点体力。",
	"XS_yuanyang1":"鸳鸯•杀",
	"XS_yuanyang_sha_info":"",
	"XS_yuanyang2":"鸳鸯•闪",
	"XS_yuanyang_shan_info":"",
	"XS_kedi":"克敌",
	"XS_kedi_info":"你使用闪抵消杀时，若来源在你攻击范围内，你可对其使用1张杀，若造成伤害你摸1张牌，否则你使用的下一张杀伤害基数+1。",
	"XS_zongheng":"纵横",
	"XS_zongheng_info":"你的首个准备阶段，可令2名其他角色分别获得纵术与横术；出牌阶段限1次（首回合除外），或当拥有纵术、横术的角色死亡时，你可以转移纵术、横术。",
	"XS_zongheng1":"纵横",
	"XS_zongheng1_info":"",
	"XS_zongheng2":"纵横",
	"XS_zongheng2_info":"",
	"XS_hezong2":"纵术",
	"XS_hezong2_info":"",
	"XS_lianheng2":"横术",
	"XS_lianheng2_info":"",
	"XS_xiushen":"修身",
	"XS_xiushen_info":"结束阶段，若你没有纵术和横术，你可摸2张牌。",
	"XS_jinggong":"精工",
	"XS_jinggong_info":"锁定技，若你的装备区不为空，手牌上限+1。",
	"XS_baihe":"捭阖",
	"XS_baihe_info":"出牌阶段限1次，你可改变自己的横置状态；出牌阶段结束，你可令所有横置/未横置的角色摸或弃置1张牌。",
	"XS_zhifa":"治法",
	"XS_zhifa_info":"",
	"XS_yongshu":"用术",
	"XS_yongshu_info":"",
	"XS_doushen":"斗神",
	"XS_doushen_info":"你可将X张牌当作1张伤害基数+1的杀使用，你以此杀杀死角色时，你摸X张牌，X为你的体力值。",
	"XS_xinglue":"兴略",
	"XS_xinglue_info":"回合开始，你可将手牌数摸至体力上限，如此，回合结束时，你弃置已损失体力值张牌。",
	"XS_heshi":"合势",
	"XS_heshi_info":"",
	"XS_falun":"法论",
	"XS_falun_info":"游戏开始你获得法、术、势标记。出牌阶段限1次，或当拥有法、术、势标记的角色死亡时，你可以转移法、术、势。",
	"XS_falun1":"法论",
	"XS_falun1_info":"",
	"XS_falun2":"法论",
	"XS_falun2_info":"",
	"XS_gufen":"孤愤",
	"XS_gufen_info":"锁定技，若你没有法，你的手牌上限+2；若你没有术，你的进攻、防御距离+1；若你没有势，摸牌阶段你额外摸1张牌。",
	"XS_lianbing":"练兵",
	"XS_lianbing_info":"出牌阶段限1次，你可从牌堆中随机获得1张指定类型装备牌。锁定技，你失去装备区的装备牌后，获得其技能效果直至你回合结束。",
	"XS_bencao":"本草",
	"XS_bencao_info":"出牌阶段限1次，你可将1张黑色手牌当作桃使用；当1名角色因毒而失去体力时，你可防止之并令其摸1张牌。",
	"XS_quji":"祛疾",
	"XS_quji_info":"出牌阶段限1次，你可观看1名其他角色的手牌并重铸其中至多2张牌，若重铸了2张黑色手牌，你视为对其使用1张桃。",
	"XS_quji_temp":"祛疾",
	"XS_quji_temp_info":"",
	"XS_lunke":"论客",
	"XS_lunke_info":"出牌阶段限1次，你可与至多3名角色拼点，若你的点数大于对方，你将对方的拼点牌置于自己的武将牌上，称为“论”，否则你摸1张牌。",
	"XS_lunke_win":"论客",
	"XS_lunke_win_info":"",
	"XS_xianghe":"相和",
	"XS_xianghe_info":"其他角色弃牌阶段结束，你可移除1张“论”并获得其于此阶段弃置的全部牌，然后交给该角色至少1张牌。",
	"XS_lingzhi":"令止",
	"XS_lingzhi_info":"每轮限1次，当你弃置手牌时，可防止之；你失去最后1张手牌后，重置此技能。",
	"XS_yanshi":"炎势",
	"XS_yanshi_info":"出牌阶段限1次，你可与1名本回合未成为此技能目标的其他角色各展示1张手牌，若花色不同，你对其造成1点火伤害，否则重置此技能。",
	"XS_shenhuo":"神火",
	"XS_shenhuo_info":"当你造成伤害时，可弃置至多X张手牌，令此伤害改为火属性且伤害值+X，X为你已损失的体力值。锁定技，你受到火伤害时，防止之。",
	"XS_wohu":"卧虎",
	"XS_wohu_info":"你受到非属性伤害后，可摸X张牌，如此你跳过下回合判定及弃牌阶段，X为你已损失体力值。",
	"XS_wangmen":"雅望",
	"XS_wangmen_info":"摸牌阶段结束，你可将此阶段获得的任意张牌交给1名其他角色，若你因此未获得牌，可视为使用1张声东击西。",
	"XS_laoyi":"老矣",
	"XS_laoyi_info":"锁定技，你的手牌上限等于体力的一半（向上取整）。",
	"XS_yingbian":"应变",
	"XS_yingbian_info":"你受到伤害后，可移动场上至多X张不同的牌，X为你已损失体力值。",
	"XS_xianji":"先机",
	"XS_xianji_info":"回合开始，你可获得1个额外的出牌或摸牌阶段，若为出牌阶段，你可弃置你场上任意张牌并摸等量牌，如此你本回合进攻距离、使用杀的次数+弃置牌数。",
	"XS_jiebing":"皆兵",
	"XS_jiebing_info":"每回合限1次，其他角色的牌被1名角色获得后，你可令其选择1项：弃置1张牌或令你摸1张牌。",
	"XS_wangzuo":"王佐",
	"XS_wangzuo_info":"回合开始时，你可声明1张武器牌，令1名角色拥有此武器效果直到其下回合结束；期间，若其装备区进入此牌，你可令其摸2张牌。",
	"XS_jindao":"金刀",
	"XS_jindao_info":"出牌阶段限1次，你可获得1名其他角色装备区的1张牌，然后可将1张装备牌置于另一名角色对应的区域，若因此替换原装备，你摸1张牌。",
	"XS_shanmou":"善谋",
	"XS_shanmou_info":"你于出牌阶段使用非转化的普通锦囊牌时，可进行1次判定，若结果颜色与此牌相同，你摸2张牌。",
	"XS_yunchou":"运筹",
	"XS_yunchou_info":"回合结束时，根据你此回合“善谋”判定失败的次数，你可依次视为使用1张：>=1,过河拆桥；>=2,打草惊蛇；>=3,顺手牵羊。",
	"XS_quzhu":"驱逐",
	"XS_quzhu_info":"你于回合内可将1张红色牌当杀使用或打出。锁定技，你使用杀造成伤害后，本回合使用杀的次数+1。",
	"XS_yangzhan":"养战",
	"XS_yangzhan_info":"出牌阶段限1次，你可获得1名其他角色1张你可使用的手牌，然后使用或弃置此牌。",
	"XS_yongguan":"勇冠",
	"XS_yongguan_info":"你可摸1张牌然后弃置X张牌，视为使用或打出1张杀，X为你本轮已发动此技能次数。",
	"XS_duoshuo":"夺槊",
	"XS_duoshuo_info":"当你成为带有伤害标签的牌的目标时，可进行1次判定，若结果颜色与之相同，你可获得来源装备区的1张牌，若类型相同，你可对其使用1张杀。",
	"XS_gonggao":"功高",
	"XS_gonggao_info":"锁定技，你造成后伤害，获得等量“功”，你的进攻距离+“功”/2且至少为1；结束阶段，若“功”不小于10，你移除之并失去1点体力上限。",
	"XS_dianbing":"点兵",
	"XS_dianbing_info":"若你“兵”的数量小于3，你使用1张牌/受到伤害后，可摸1张牌并将1张与“兵”花色均不同的手牌置于武将牌上，称为“兵”。",
	"XS_andu":"暗度",
	"XS_andu_info":"准备阶段，你可获得任意张“兵”并弃置其余，每弃置1张，本回合你依次获得1项效果：使用牌无距离限制、无次数限制、无法被响应。",
	"XS_jianbi":"坚壁",
	"XS_jianbi_info":"锁定技，你始终跳过摸牌阶段；结束阶段你摸4张牌，若你本回合未使用杀或未造成伤害，此摸牌数+1。",
	"XS_bawang":"霸王",
	"XS_bawang_info":"锁定技，你使用的决斗/杀需要两张杀/闪来响应；你使用决斗时摸1张牌，使用杀时无视对方防具。",
	"XS_pofu":"破釜",
	"XS_pofu_info":"回合结束，你可将所有手牌当作1张杀/决斗使用，如此你摸此牌造成伤害数值张牌。",
	"XS_ciqiu":"刺酋",
	"XS_ciqiu_info":"出牌阶段限1次，你可对攻击范围内1名其他角色造成1点伤害并进行1次判定，若结果不为基本牌，其对你造成1点伤害。",
	"XS_fenyong":"奋勇",
	"XS_fenyong_info":"锁定技，你受到伤害后，若来源体力值：大于你，你摸2张牌；等于你，你造成的下1次伤害+1；小于你，你随机获得1张装备牌。",
	"XS_shenjiang":"沉鸷",
	"XS_shenjiang_info":"回合开始时你可展示牌堆顶1张牌，根据花色直到下回合开始你的杀：♥︎，伤害基数+1；♠︎，可额外指定1个目标；♦︎，需两张闪响应；♣︎，无次数限制。",
	"XS_shenjiang1":"沉鸷",
	"XS_shenjiang1_info":"",
	"XS_shenjiang2":"沉鸷",
	"XS_shenjiang2_info":"",
	"XS_shenjiang3":"沉鸷",
	"XS_shenjiang3_info":"",
	"XS_shenjiang4":"沉鸷",
	"XS_shenjiang4_info":"",
	"XS_modang":"莫当",
	"XS_modang_info":"连续3张黑色牌进入弃牌堆后，你可对1名其他角色造成1点伤害并令其无法响应你使用的牌，至连续3张红色牌进入弃牌堆后。",
	"XS_zhijun":"治军",
	"XS_zhijun_info":"你受到伤害时，可弃置1张黑色牌/红色牌，对来源造成1点伤害/回复1点体力。",
	"XS_bingtun":"并吞",
	"XS_bingtun_info":"其他角色造成伤害时，你可使你成为此伤害的来源。锁定技，你杀死1名角色后，体力上限+1，至多3点。",
	"XS_hengzheng":"横征",
	"XS_hengzheng_info":"其他角色摸牌阶段结束时，若你的手牌数小于上限，可令其交给你1张牌。",
	"XS_hengzheng2":"横征",
	"XS_hengzheng2_info":"其他角色摸牌阶段结束时，若你的手牌数小于上限，可令其交给你1张牌。",
	"XS_xuhuai":"虚怀",
	"XS_xuhuai_info":"你于摸牌阶段以外获得牌后，可展示牌堆顶等量的牌，然后将其中与你获得的牌类型相同的牌交给1名其他角色。",
	"XS_xushi":"虚实",
	"XS_xushi_info":"准备阶段，若你的手牌数为全场最少，可视为使用任意1张基本牌；若体力为全场最少，可视为使用1张普通锦囊牌。",
	"XS_jianzao":"减灶",
	"XS_jianzao_info":"一轮开始，你可弃置所有手牌，本轮你受到的伤害-1、造成的伤害+1，共计X次，X为其中基本牌数。",
	"XS_huoniu":"火牛",
	"XS_huoniu_info":"出牌阶段，你可将手牌数调整为(3)并令()内-1，视为使用1张火攻，其伤害基数改为你以此法失去牌数；若你未因此造成伤害，重置()且本回合此技能失效。",
	"XS_jijue":"继绝",
	"XS_jijue_info":"出牌阶段限1次，你可失去3点体力并摸3张牌，如此本回合你造成大于1点的伤害(含连锁)后，可回复X点体力或摸X张牌，X为伤害值。",
	"XS_pozhu":"破竹",
	"XS_pozhu_info":"你的回合限3次，若你使用的牌与你于本回合使用的上一张牌颜色不同，你可摸1张牌。",
	"XS_gongxin":"攻心",
	"XS_gongxin_info":"你可将你的摸牌阶段改为：观看1名其他角色手牌，并交换其中1张，然后你摸X张牌，X为你手牌中基本牌数。",
	"XS_guanjun":"冠军",
	"XS_guanjun_info":"锁定技，你装备区的牌无法被其他角色获得。",
	"XS_changqu":"长驱",
	"XS_changqu_info":"锁定技，你的进攻距离+1。其他角色死亡后，你可选择1项：1.回复1点体力；2.获得以下技能之一：“疾驱”、“破酋”和“封狼”。",
	"XS_zhushi":"著史",
	"XS_zhushi_info":"一轮开始，你可指定1名角色，本轮其需于每名角色回合结束时摸或弃置X张牌，X为其手牌数与3之差。",
	"XS_zhishu":"直书",
	"XS_zhishu_info":"出牌阶段限1次，你可令1名角色展示手牌，如此你可令其本回合触发“著史”时，红色牌不计入手牌数，黑色牌计数翻倍。",
	"XS_huoxin":"乱谋",
	"XS_huoxin_info":"当你受到非锦囊牌造成的伤害时，可令来源交给你1张锦囊牌，否则此伤害-1。",
	"XS_luanmou":"惑心",
	"XS_luanmou_info":"你对其他角色使用牌结算完成后，可令其手牌上限、防御距离-1直至其下回合结束。",
	"XS_chusai":"出塞",
	"XS_chusai_info":"出牌阶段，你每使用或打出1张牌，你的防御距离+1直到下回合开始；结束阶段，若你不在任何角色的攻击范围内，你可摸2张牌。",
	"XS_jingbing":"靖兵",
	"XS_jingbing_info":"每回合限1次，其他角色受到伤害时，若你不在其攻击范围内，可令此伤害视为体力流失。",
	"XS_juebie":"诀别",
	"XS_juebie_info":"当你死亡时，可将区域内所有牌当作“舞”置于1名其他角色武将牌上，并令其于准备阶段后永久追加一个摸牌或出牌阶段。",
	"XS_wujian":"舞剑",
	"XS_wujian_info":"出牌阶段限1次，你可将1张牌置于1名其他角色的武将牌上，称为“舞”；其出牌阶段各限1次，可将黑色/红色的“舞”当作决斗/杀使用，并令你摸1张牌。",
	"XS_wujian1":"舞剑",
	"XS_wujian1_info":"",
	"XS_wujian1_red":"舞剑♥︎♦︎",
	"XS_wujian1_red_info":"",
	"XS_wujian1_black":"舞剑♠︎♣︎",
	"XS_wujian1_black_info":"",
	"XS_tongku":"恸哭",
	"XS_tongku_info":"你于回合外每失去1张手牌，可令当前回合角色选择1项：对你使用1张杀；失去1点体力。",
	"XS_bengcheng":"崩城",
	"XS_bengcheng_info":"当你成为杀的目标时，可指定杀的来源攻击范围内任意名其他角色，你们同时选择1张手牌，花色与你不同的角色也成为此杀的目标。",
	"XS_ceshi":"测试",
	"XS_ceshi_info":"出牌阶段限1次，你可以指定1种牌类型，然后从牌堆中随机获得1张；若牌堆没有该种牌，你摸1张牌。",
	"XS_gongao":"功獒",
	"XS_gongao_info":"当其他角色装备区的牌进入弃牌堆时，若你在其攻击范围内或其在你的攻击范围内，你可获得此牌。",
	"XS_bingfeng":"兵锋",
	"XS_bingfeng_info":"锁定技，游戏开始时，你从牌堆中随机获得1张武器牌；当你失去武器时，你获得此武器的效果。",
	"XS_xiaoqi":"骁骑",
	"XS_xiaoqi_info":"出牌阶段限1次，你可获得1名其他角色装备区的1张牌并令其摸1张牌，根据此牌类型你本回合使用杀：武器，伤害基数+1；其他：无法被闪避。",
	"XS_canggong":"藏功",
	"XS_canggong_info":"当你造成伤害时，可防止此伤害，令目标获得伤害数值的“藏”；有“藏”的角色受到伤害时，你可移除其所有“藏”令伤害增加等量数值。",
	"XS_xiongcai":"雄才",
	"XS_xiongcai_info":"出牌阶段结束，若你手牌数为全场唯一最多，你可交给1名其他角色至少1张红色手牌令其获得1个额外回合，且其于此回合内杀死角色时你摸2张牌。",
	"XS_guhuo":"蛊祸",
	"XS_guhuo_info":"出牌阶段限1次，你可交给1名其他角色1张红色手牌并获得其全部黑色手牌，如此你需将手牌数弃置至体力值。",
	"XS_zuiji":"罪己",
	"XS_zuiji_info":"主公技，限定技，出牌阶段若你没有红色手牌，你可翻面并弃置所有手牌，令至多等量与你同势力角色各摸3张牌。",
	"XS_jianzhu":"谏逐",
	"XS_jianzhu_info":"你的牌因弃置而进入弃牌堆后，你可令1名其他角色获得之，如此其手牌上限+你当前体力值，直到其下回合结束。",
	"XS_fenshu":"焚书",
	"XS_fenshu_info":"当你使用普通锦囊牌或成为普通锦囊牌的目标时，可令其中任意名目标或来源与你各弃置1张牌。",
	},//翻译
// characterReplace:{
	// XS_liubang:['XS_liubang','XS_liubangsp'],
	// XS_lishimin:['XS_lishimin','XS_lishiminsp'],
	// XS_zhuyuanzhang:['XS_zhuyuanzhang','XS_zhuyuanzhangsp'],
	// XS_tiemuzhen:['XS_tiemuzhen','XS_tiemuzhensp'],
	// XS_xiangji:['XS_xiangji','XS_xiangjisp'],
	// XS_yingzheng:['XS_yingzheng','XS_yingzhengsp'],
	// XS_liuche:['XS_liuche','XS_liuchesp'],
// },
dynamicTranslate:{  //动态翻译
	XS_quyi:function(player){
		if(player.storage.XS_quyi==2) return '每回合限1次，其他角色受到不小于其体力值的伤害时，你可代替其成为目标；你可无视限制地发动之，并将之改为每轮限1次。';
		else if(player.storage.XS_quyi==1) return '每轮限1次，其他角色受到不小于其体力值的伤害时，你可代替其成为目标；你可无视限制地发动之，并将之改为限定技。';
		else return '限定技，其他角色受到不小于其体力值的伤害时，你可代替其成为目标。';
	},
	XS_jubu:function(player){
		var str='准备、结束阶段，你可发动1项本回合未发动过的效果：交给1名其他角色1张牌';
		if(player.storage.XS_jubu.length>1) {
			for(var i=1;i<player.storage.XS_jubu.length;i++) {
				str+='；'+player.storage.XS_jubu[i];
			}
		}
		str+='。';
		return str;
	},
	XS_zhilu:function(player){
		if(player.storage.XS_zhilu.length==2) {
			if(!player.storage.XS_zhilu.contains(1)) return '转换技，每回合限1次，1名角色使用基本牌或锦囊牌指定1名目标时，你可以弃置1张牌：1.为此牌重新指定目标；2.视为对所有成为过指鹿目标的角色使用1张杀。';
			else if(!player.storage.XS_zhilu.contains(2)) return '转换技，每回合限1次，1名角色使用基本牌或锦囊牌指定1名目标时，你可以弃置1张牌：1.用1张手牌替换此牌；2.视为对所有成为过指鹿目标的角色使用1张杀。';
			else if(!player.storage.XS_zhilu.contains(3)) return '转换技，每回合限1次，1名角色使用基本牌或锦囊牌指定1名目标时，你可以弃置1张牌：1.用1张手牌替换此牌；2.为此牌重新指定目标。';
		}
		return '转换技，每回合限1次，1名角色使用基本牌或锦囊牌指定1名目标时，你可弃置1张牌：1.用1张手牌替换此牌；2.为此牌重新指定目标；3.视为对所有成为过“指鹿”目标的角色使用1张杀。';
	},
	XS_yaowei:function(player){
		if(player.storage.XS_furen===true) return '你受到卡牌造成的伤害后，根据此牌颜色可令你：红色，回复1点体力；黑色，摸2张牌；否则，回复1点体力并摸1张牌。';
		return '你受到卡牌造成的伤害后，根据此牌颜色可令来源：红色，回复1点体力；黑色，摸2张牌；否则，回复1点体力并摸1张牌。';
	},
},
};
if(lib.device||lib.node){
	for(var i in XSYG.character){XSYG.character[i][4].push('ext:血色衣冠/'+i+'.jpg');}
	}else{
		for(var i in XSYG.character){XSYG.character[i][4].push('db:extension-血色衣冠:'+i+'.jpg');}
	}
	return XSYG;
});
lib.config.all.characters.push('XSYG');
if(!lib.config.characters.contains('XSYG')) lib.config.characters.remove('XSYG');
lib.translate['XSYG_character_config']='血色衣冠';


		//(以上从第22行到第74行为一个扩展小包的框架，保留了例子，将整个框架复制到此行下面就可另创单独新扩展小包）

	// ---------------------------------------卡牌------------------------------------------//

game.import('card',function(){
	var XS_card={
	name:'XS_card',
	connect:true,
	card:{	//卡牌
"XS_jinzun":{
	image:"ext:血色衣冠/XS_jinzun.png",
	fullskin:true,
	type:"equip",
	subtype:"equip5",
	skills:["XS_jinzun_skill"],
	ai:{
		basic:{
			equipValue:7.3
		}
	},
},
"XS_jinglan":{
	image:"ext:血色衣冠/XS_jinglan.png",
	fullskin:true,
	type:"equip",
	subtype:"equip5",
	skills:["XS_jinglan_skill"],
	ai:{
		basic:{
			equipValue:6.2
		}
	},
},
"XS_yunti":{
	image:"ext:血色衣冠/XS_yunti.png",
	fullskin:true,
	type:"equip",
	subtype:"equip5",
	skills:["XS_yunti_skill"],
	ai:{
		basic:{
			equipValue:6.1
		}
	},
},
"XS_chongche":{
	image:"ext:血色衣冠/XS_chongche.png",
	fullskin:true,
	type:"equip",
	subtype:"equip5",
	skills:["XS_chongche_skill"],
	ai:{
		basic:{
			equipValue:6.8
		}
	},
},
"XS_mushou":{
	image:"ext:血色衣冠/XS_mushou.png",
	fullskin:true,
	type:"equip",
	subtype:"equip5",
	skills:["XS_mushou_skill"],
	ai:{
		basic:{
			equipValue:6.7
		}
	},
},
"XS_liquanqiang":{
	image:"ext:血色衣冠/XS_liquanqiang.png",
	fullskin:true,
	type:"equip",
	subtype:"equip1",
	distance:{
		attackFrom:-2,
	},
	ai:{
		basic:{
			equipValue:5.5
		}
	},
	skills:["XS_liquan_skill","XS_liquan_skill1"],
},
"XS_luodiaogong":{
	image:"ext:血色衣冠/XS_luodiaogong.png",
	fullskin:true,
	type:"equip",
	subtype:"equip1",
	distance:{
		attackFrom:-4,
	},
	ai:{
		basic:{
			equipValue:5.5
		}
	},
	onLose:function(){
		player.draw();
	},
	skills:["XS_luodiao_skill"],
},
"XS_simian":{
	image:"ext:血色衣冠/XS_simian.png",
	fullskin:true,
	enable:true,
	type:'delay',
	filterTarget:function(card,player,target){
		return (lib.filter.judge(card,player,target)&&player!=target);
	},
	judge:function(card){
		if(get.suit(card)=='heart') return 1;
		return -3;
	},
	effect:function(){
		if(result.bool==false){
			player.addTempSkill('XS_simian_skill');
			player.addTempSkill('XS_simian_skill1');
		}
	},
	ai:{
		basic:{
			order:1,
			useful:1,
			value:4.5,
		},
		result:{
			player:function(player,target){
				return game.countPlayer(function(current){
					if(get.distance(target,current)<=1&&current!=target){
						var att=get.attitude(player,current);
						if(att>3){
							return 1.1;
						}
						else if(att>0){
							return 1;
						}
						else if(att<-3){
							return -1.1;
						}
						else if(att<0){
							return -1;
						}
					}
				});
			},
			target:function(player,target){
				if(target.hasJudge('lebu')) return 0;
				return -Math.sqrt(target.countCards('h')+1);
			}
		},
	}
},	
"XS_jin":{
	image:"ext:血色衣冠/XS_jin.png",
	audio:"ext:血色衣冠",
	fullskin:true,
	type:'basic',
	global:['XS_jinskill'],
	notarget:true,
	content:function(){
		var evt=event.getParent(3)._trigger;
		evt.num--;
		var cardx=event.getParent().card;
		evt.source.gain(cardx.cards.filterInD(),'gain2','log');
	},
	ai:{
		basic:{
			useful:[7,3],
			value:[7,3],
		},
		result:{player:1},
	},
},	
"XS_zouweishang":{
	image:"ext:血色衣冠/XS_zouweishang.png",
	audio:"ext:血色衣冠",
	fullskin:true,
	type:'trick',
	wuxieable:true,
	global:['XS_zouweishangskill'],
	notarget:true,
	content:function(){
		"step 0"
		var evt=event.getParent(3)._trigger;
		event.col=get.color(evt);
		player.chooseCard('【走为上计】：展示1张手牌使'+get.translation(evt.card)+'对你无效，若展示的牌颜色不为'+get.translation(event.col)+'，你需弃置1张牌。','h',1,true).ai=function(card){
			if(get.color(card)!=event.col) return 3-get.value(card);
			return 8-get.value(card);
		}
		"step 1"
		if(result.bool){
			player.showCards(result.cards[0]);
			var col=get.color(result.cards[0]);
			var evt=event.getParent(3)._trigger;
			evt.targets.remove(player);
			if(col!=event.col) {
				player.chooseToDiscard('he',1,true);
			}
		}
	},
	ai:{
		basic:{
			useful:[7,3],
			value:[7,3],
		},
		result:{player:1},
	},
},	
"XS_nichang":{
	image:"ext:血色衣冠/XS_nichang.png",
	fullskin:true,
    type:"equip",
    subtype:"equip2",
	ai:{
		order:9.5,
		basic:{
			equipValue:6.4
		}
	},
    skills:["XS_nichangskill"],
},
"XS_chiyoufu":{
	onLose:function(){
		delete player.storage.XS_chiyouskill;
		player.unmarkSkill('XS_chiyouskill');
	},
	image:"ext:血色衣冠/XS_chiyoufu.png",
	fullskin:true,
	type:"equip",
	subtype:"equip1",
	distance:{
		attackFrom:-3,
	},
	ai:{
		basic:{
			equipValue:9.5
		}
	},
	skills:["XS_chiyouskill"],
},
"XS_yiyidailao":{
	image:"ext:血色衣冠/XS_yiyidailao.png",
	audio:"ext:血色衣冠",
	audio:true,
	fullskin:true,
	type:'trick',
	enable:true,
	selectTarget:-1,
	filterTarget:function(card,player,target){
		return true;
	},
	reverseOrder:true,
	content:function(){
		if(target.countCards('e')) {
			target.chooseToDiscard('he',1,true);
		}
		else target.draw();
	},
	ai:{
		basic:{
			order:9,
			useful:[4,1],
			value:4
		},
		result:{
			target:function(player,target){
				return (target.countCards('e'))?-1:1;
			},
		},
		tag:{
			multitarget:1,
		}
	}				
},
"XS_wuzhui":{
image:"ext:血色衣冠/XS_wuzhui.png",
    fullskin:true,
    type:"equip",
    subtype:"equip4",
    distance:{
        globalFrom:-1,
    },
	onLose:function(){
		game.playAudio('..','extension','血色衣冠','XS_wuzhui_skill1');
		player.chooseUseTarget({name:"juedou",isCard:true},true,true);
	},
	skills:['XS_wuzhui_skill'],
	ai:{
		basic:{
			equipValue:5
		}
	},
},
"XS_saluzi":{
image:"ext:血色衣冠/XS_saluzi.png",
	fullskin:true,
    type:"equip",
    subtype:"equip3",
    distance:{
        globalTo:1,
    },
	skills:['XS_saluzi_skill'],
	ai:{
		basic:{
			equipValue:7.5
		}
	},
},
"XS_hufu":{
	image:"ext:血色衣冠/XS_hufu.png",
	audio:"ext:血色衣冠",
	fullskin:true,
    type:"basic",
    toself:true,
    enable:function (event,player){
        return true;
    },
    usable:1,
    selectTarget:-1,
    modTarget:true,
    filterTarget:function (card,player,target){
        return target==player;
    },
    content:function (){
		target.stat.push({card:{},skill:{}});
    },
    ai:{
        basic:{
            useful:3,
            value:8,
        },
        order:0.5,
        result:{
            target:function (player,target){
				var num1=0;
				if(target.getStat().allSkills>0) num1+=target.getStat().allSkills;
				if(target.getStat().card.sha>0) num1++;
				return num1;
            },
        },
    },
},
"XS_mantian":{
	image:"ext:血色衣冠/XS_mantian.png",
	audio:"ext:血色衣冠",
    fullskin:true,
    type:"delay",
    filterTarget:function (card,player,target){
        return (lib.filter.judge(card,player,target));
    },
    judge:function (card){
        if(get.suit(card)!='diamond') return 1;
        return -3;
    },
    effect:function (){
        if(result.bool==true){
			player.addTempSkill('XS_mantianskill',{player:'phaseJudgeBefore'})
        }
    },
    ai:{
        basic:{
            order:1,
            useful:1,
            value:8,
        },
        result:{
            target:function (player,target){
                var num1=target.countCards('h');
				var num2=target.hp;
				if(num1==0||num2<2) return 2;
				else return 1;
            },
        },
    },
    selectTarget:1,
    enable:true,
    content:function (){
        target.addJudge(card,cards);
    },
    allowMultiple:false,
},
"XS_shediaogong":{
	onLose:function(){
		player.draw(2);
	},
	image:"ext:血色衣冠/XS_shediaogong.png",
	fullskin:true,
	vanish:true,
	derivation:"XS_tiemuzhen",
	type:"equip",
	subtype:"equip1",
	distance:{
		attackFrom:-4,
	},
	skills:["XS_shediao"],
	destroy:"XS_yingong",
	ai:{
		basic:{
			equipValue:7
		}
	},
},
"XS_longquan":{
	onLose:function(){
		player.removeAdditionalSkill('XS_zhujian');
	},
	image:"ext:血色衣冠/XS_longquan.png",
	fullskin:true,
	vanish:true,
	derivation:"XS_ouyezi",
	type:"equip",
	subtype:"equip1",
	distance:{
		attackFrom:-3,
	},
	skills:["XS_longquanskill","XS_pojia"],
	destroy:"XS_zhujian",
	ai:{
		basic:{
			equipValue:8
		}
	},
},
"XS_taie":{
	onLose:function(){
		player.removeAdditionalSkill('XS_zhujian');
	},
	image:"ext:血色衣冠/XS_taie.png",
	fullskin:true,
	vanish:true,
	derivation:"XS_ouyezi",
	type:"equip",
	subtype:"equip1",
	distance:{
		attackFrom:-2,
	},
	skills:["XS_taieskill","XS_pojia"],
	destroy:"XS_zhujian",
	ai:{
		basic:{
			equipValue:7.5
		}
	},
},
"XS_zhanlu":{
	onLose:function(){
		player.removeAdditionalSkill('XS_zhujian');
	},
	image:"ext:血色衣冠/XS_zhanlu.png",
	fullskin:true,
	vanish:true,
	derivation:"XS_ouyezi",
	type:"equip",
	subtype:"equip1",
	distance:{
		attackFrom:-2,
	},
	skills:["XS_zhanluskill","XS_pojia"],
	destroy:"XS_zhujian",
	ai:{
		basic:{
			equipValue:8
		}
	},
},
"XS_chunjun":{
	onLose:function(){
		player.removeAdditionalSkill('XS_zhujian');
	},
	image:"ext:血色衣冠/XS_chunjun.png",
	fullskin:true,
	vanish:true,
	derivation:"XS_ouyezi",
	type:"equip",
	subtype:"equip1",
	distance:{
		attackFrom:-2,
	},
	skills:["XS_chunjunskill","XS_pojia"],
	destroy:"XS_zhujian",
	ai:{
		basic:{
			equipValue:7
		}
	},
},
"XS_gongbu":{
	onLose:function(){
		player.removeAdditionalSkill('XS_zhujian');
	},
	image:"ext:血色衣冠/XS_gongbu.png",
	fullskin:true,
	vanish:true,
	derivation:"XS_ouyezi",
	type:"equip",
	subtype:"equip1",
	distance:{
		attackFrom:-2,
	},
	skills:["XS_gongbuskill","XS_pojia"],
	destroy:"XS_zhujian",
	ai:{
		basic:{
			equipValue:7.5
		}
	},
},
"XS_chunqiangshejian":{
	image:"ext:血色衣冠/XS_chunqiangshejian.png",
	audio:"ext:血色衣冠",
	fullskin:true,
	type:"trick",
	enable:true,
	filterTarget:function (card,player,target){
		return player!=target&&target.countCards('h');
    },
	content:function (){
        "step 0"
        player.chooseToCompare(target).set('preserve','win').clear=false;
        "step 1"
		if(!result.tie){
			if(result.bool){
				player.useCard({name:'sha',isCard:true},target,false);	
			}
		}	
    },
	ai:{
		order:4,
		value:[4,1],
		result:{
			target:function (player){
                if(player.countCards('h')<=1) return 0;
                return -1;
            },
			player:function (player){
                if(player.countCards('h')<=1) return 0;
                return 0.5;
            },
		},
		tag:{
			loseCard:1,
			damage:1,
		},
	},
	selectTarget:1,
},
"XS_yuxi":{
	onLose:function(){
		player.unmarkSkill('XS_yuxiskill_show');
	},
	image:"ext:血色衣冠/XS_yuxi.png",
	fullskin:true,
	type:"equip",
	subtype:"equip5",
	skills:["XS_yuxiskill"],
	ai:{
		basic:{
			equipValue:9
		}
	}
},
"XS_xuanyuanjian":{
	image:"ext:血色衣冠/XS_xuanyuanjian.png",
	fullskin:true,
	type:"equip",
	subtype:"equip1",
	distance:{
		attackFrom:-3,
	},
	ai:{
		basic:{
			equipValue:9.5
		}
	},
	skills:["XS_xuanyuan_skill"],
},
"XS_paozhuanyinyu":{
	image:"ext:血色衣冠/XS_paozhuanyinyu.png",
	audio:"ext:血色衣冠",
	fullskin:true,
	type:"trick",
	enable:true,
	filterTarget:function (card,player,target){
        var check1=target.isMinHp(false)&&target.isDamaged()&&player.hp>0;
        var check2=target.isMinHandcard(false)&&player.countCards('h');
        return check1||check2;
    },
     content:function (){
        'step 0'
        if(target.isMinHp(false)&&target.isDamaged()){
			player.chooseBool(get.prompt('XS_paozhuanyinyu'),'是否失去1点体力，令'+get.translation(target)+'回复2点体力？').set('ai',function(){
				if(target==player) return true;
 				var num=target.maxHp-target.hp;
				if(num>1&&player.hp>2) return true;
				return false;
			});
        }
        'step 1'
		if(result.bool){
			player.loseHp();
			target.recover(2);
            event.rec=true;
        }
		'step 2'
        if(!event.rec&&target.isMinHandcard(false)&&player.countCards('h')){
			player.chooseBool(get.prompt('XS_paozhuanyinyu'),'是否弃置1张手牌，令'+get.translation(target)+'摸3张牌？').set('ai',function(){
				if(target==player) return true;
				if(player.countCards('h')>2) return true;
				return false;
			});
        }
		else event.finish();
		'step 3'
		if(result.bool){
			player.chooseToDiscard('h',1,true);
			target.draw(3);
        }
    },
    ai:{
        order:1,
        value:7,
        result:{
            target:function (player,target){
                var num=0;
                if(target.isMinHp()&&get.recoverEffect(target)>0){
					var num1=target.maxHp-target.hp;
					if(num1>1&&player.hp>2)
					num=3;
                }
                if(target.isMinHandcard()){
					if(target==player) num=3;
					else if(player.countCards('h')>3) num=3;
                }
                return num;
            },
        },
    },
	selectTarget:1,
},
"XS_hunshui":{
	image:"ext:血色衣冠/XS_hunshui.png",
	audio:"ext:血色衣冠",
	fullskin:true,
	type:"trick",
	filterTarget:true,
	global:"XS_hunshuimoyu",
	content:function (){
        if(target.countCards('he')){
            player.gainPlayerCard('he',target,true);
        }
	},
	ai:{
		order:1,
		useful:6,
		value:5,
		result:{
			target:-1,
		},
		tag:{
			loseCard:1,
		},
	},
	selectTarget:1,
},
"XS_shushang":{
	image:"ext:血色衣冠/XS_shushang.png",
	audio:"ext:血色衣冠",
	fullskin:true,
	type:"trick",
	enable:true,
	selectTarget:-1,
	toself:true,
	filterTarget:function (card,player,target){
        return target==player;
    },
	content:function (){
        target.addSkill('XS_shushangkaihua')
    },
	ai:{
		order:7,
		useful:6,
		value:8,
		result:{
			target:function (player,target){
				if(target.hasSkill('XS_shushangkaihua')) return 0;
				if(_status.currentPhase==target) return 2;
				return -2;
			},
		},
	},
},
"XS_jiuding":{
	onLose:function(){
		player.unmarkSkill('XS_jiudingskill');
	},
	image:"ext:血色衣冠/XS_jiuding.png",
	fullskin:true,
	type:"equip",
	subtype:"equip5",
	skills:["XS_jiudingskill"],
	ai:{
		basic:{
			equipValue:6
		}
	},
},
"XS_dacao":{
	image:"ext:血色衣冠/XS_dacao.png",
	audio:"ext:血色衣冠",
	fullskin:true,
	type:"trick",
	enable:true,
	filterTarget:function (card,player,target){
        return target.countCards('h')>0&&target!=player;
    },
	content:function (){
        if(target.countCards('h','sha')){
			var cards=target.getCards('h','sha')
            target.useCard({name:'sha'},cards,player);
        }
        else{
            if(!player.isUnderControl(true)){
                target.showHandcards();
            }
            else{
                game.log(target,'展示了',target.getCards('h'));
            }
            player.discardPlayerCard(target,'h',true,'visible');
        }
    },
	ai:{
		order:4,
		value:[4,1],
		result:{
			target:function (player,target){
                if(player.hasShan()) return -1;
                return 0;
            },
		},
	},
	selectTarget:1,
},
"XS_jiadao":{
	image:"ext:血色衣冠/XS_jiadao.png",
	audio:"ext:血色衣冠",
	fullskin:true,
	type:"trick",
	enable:true,
	filterTarget:function (card,player,target){
        return target!=player.next&&player.previous!=target;
    },
	chongzhu:function (){
        return game.countPlayer()<=3;
    },
	content:function (){
        player.addTempSkill('XS_jiadaoskill');
		target.addTempSkill('XS_jiadaoskill_mark');
		target.markSkillCharacter('XS_jiadaoskill_mark',player,'假道伐虢','你成为了'+get.translation(player)+'“假道伐虢”的目标');
    },
	ai:{
		order:8,
		value:[6,1],
		result:{
			target:function (player,target){
                var dis=get.distance(player,target);
                var att=get.attitude(player,target.previous);
                if(att<0) {
                    if(dis>1) return -1;
                    return -0.5;
                }
                return 0;
            },
		},
	},
	selectTarget:1,
},
"XS_jiuxi":{
	image:"ext:血色衣冠/XS_jiuxi.png",
	fullskin:true,
	type:"equip",
	subtype:"equip2",
	ai:{
		basic:{
			equipValue:6.5
		}
	},
	skills:["XS_jiuxi_skill"],
},
},//卡牌

skill:{	//卡牌的技能
"XS_jinzun_skill":{
	enable:'phaseUse',
	usable:1,
	content:function(){
		"step 0"
		player.loseHp();
		player.useCard({name:'jiu'},player);
		"step 1"
		if(!player.hasSkill('XS_jinzun_skilla')) {
			player.chooseBool('是否失去一点体力上限，使本回合此技能前半部分发动次数+1？').set('ai',function(){
				return player.isDamaged()&&player.maxHp>3;
			});
		}
		else event.finish();
		"step 2"
		if(result.bool) {
			player.addTempSkill('XS_jinzun_skilla');
			player.loseMaxHp();
			player.getStat().skill.XS_jinzun_skill--;
		}
	},
	ai:{
		order:9,
		result:{
			player:function(player,target){
				if(player.hasUsableCard('sha')&&game.hasPlayer(function(current){
					return current!=player&&player.canUse({name:'sha'},current,null,true)&&get.effect(current,{name:'sha'},player,player)>0;
				})&&player.hp>2) {
					return 1;
				}
				return -1;
			}
		},
	},
},
"XS_jinzun_skilla":{
	charlotte:true,
},
"XS_jinglan_skill":{
	equipSkill:true,
	trigger:{
        player:"useCardBegin",
    },
    filter:function (event,player){
        return event.card.name=='sha'&&game.hasPlayer(function(current){
			return !event.targets.contains(current)&&lib.filter.targetEnabled2(event.card,player,current)&&get.distance(player,current)<=1;
		});
    },
	direct:true,
    content:function (){
		"step 0"
		player.chooseTarget(get.prompt2('XS_jinglan_skill'),[1,2],function(card,player,target){
			var tri=_status.event.getTrigger();
			return !tri.targets.contains(target)&&lib.filter.targetEnabled2(tri.card,player,target)&&get.distance(player,target)<=1;
		}).ai=function(target){
			var tri=_status.event.getTrigger();
			return get.effect(target,tri.card,player,player);
		}
		"step 1"
		if(result.bool) {
			player.logSkill('XS_jinglan_skill',result.targets);
			trigger.targets.addArray(result.targets);
		}
    },
	ai:{
		expose:0.3,
	},
},
"XS_yunti_skill":{
	equipSkill:true,
	mod:{
		cardUsableTarget:function(card,player,target){
			if(get.distance(player,target)<=1) return true;
		},
	},
},
"XS_chongche_skill":{
	equipSkill:true,
	trigger:{
		player:["phaseDiscardBefore"],
	},
	check:function (event,player){return true;},
	filter:function (event,player){
		return player.countCards('e');
	},
	content:function(){
		"step 0"
		var sts=[],es=player.getCards('e');
		for(var i=0;i<es.length;i++) {
			sts.add(get.suit(es[i]));
		}
		if(!sts.length) event.finish();
		else player.draw(sts.length);
		"step 1"
		if(player.countCards('h')<=player.getHandcardLimit()) {
			player.chooseTarget('你可弃置一名其他角色装备区一张牌',1,function(card,player,target){
				return target.countCards('e');
			}).ai=function(target){
				return -get.attitude(player,target);
			}
		}
		"step 2"
		if(result.bool) player.discardPlayerCard(result.targets[0],'e',1);
	},
	ai:{
		expose:0.3,
	},
},
"XS_mushou_skill":{
	equipSkill:true,
	trigger:{
		player:["damageAfter"],
	},
	priority:79,
	direct:true,
	filter:function(event,player){
		return !player.hasSkill('XS_mushou_skill1');
	},
	content:function(){
		"step 0"
		player.addTempSkill('XS_mushou_skill1');
		player.chooseBool(get.prompt2('XS_mushou_skill')).set('ai',function(){ 
			return true;
		}); 
		"step 1"
		if(result.bool){
			player.logSkill('XS_mushou_skill1');
			player.draw(2);
			player.addTempSkill('XS_yilv_temp');
		}  
		else event.finish();
		"step 2"
		event.cds=result;
		game.log(event.cds);
		player.showCards(event.cds);
		if(get.suit(event.cds[0])==get.suit(event.cds[1])) {
			player.chooseUseTarget({name:"sha",nature:'fire'},event.cds).viewAs=true;
			event.finish();
		}
		else {
			player.chooseCardButton('弃置其中一张',event.cds,true).ai=function(button){
				var val=get.value(button.link);
				return 9-val;
			}
		}
		"step 3"
		if(result.bool){
			player.discard(result.links[0]);
        }
	},
	ai:{
		maixie:true,
		"maixie_defend":true,
		effect:{
			target:function (card,player,target){
				if(get.tag(card,'damage')&&!target.hasSkill('XS_mushou_skill1')) {
					if(player.hasSkillTag('jueqing',false,target)) return [1,-2];
					if(!target.hasFriend()) return;
					return [1,1];
				}
			},
		},
	},
},
"XS_mushou_skill1":{
	equipSkill:true,
	charlotte:true,
},
"XS_liquan_skill":{
	audio:"ext:血色衣冠:1",
	equipSkill:true,
	enable:["chooseToUse"],
	filterCard:function (card,player){
		return get.tag(card,'damage');
	},
	filter:function (event,player){
		return player.getCards('h',function(cardx){
			return get.tag(cardx,'damage');
		}).length>0;
	},
	position:"h",
	viewAs:{
		name:"sha",
	},
	usable:1,
	prompt:"你可将1张带有伤害标签的牌当作杀使用，若其未造成伤害，你可对目标使用该未转化的牌。",
	check:function (card){
		return 6-get.value(card)
	},
},
"XS_liquan_skill1":{
	equipSkill:true,
	trigger:{
		player:["useCardAfter"],
	},	
	priority:48,
	direct:true,
	filter:function (event,player){
		if(event.skill!='XS_liquan_skill') return false;
		return !game.hasPlayer2(function(current){
			return current.getHistory('damage',function(evt){
				return evt.card==event.card;
			}).length>0;
		})&&event.targets.length;
	},
	content:function (){
		"step 0"
		player.chooseBool('是否对'+get.translation(trigger.targets)+'使用'+get.translation(trigger.cards[0])+'？').set('ai',function(){
			var trigger=_status.event.getTrigger();
			return get.effect(trigger.targets[0],trigger.cards[0],player,player)>0;
		});
		"step 1"
		if(result.bool) {
			player.useCard(trigger.cards[0],trigger.targets);
		}
	},
},
"XS_luodiao_skill":{
	equipSkill:true,
	init:function (player){
		player.draw();
	},
},
"XS_simian_skill":{
	cardSkill:true,
	unique:true,
	mark:true,
	charlotte:true,
	intro:{
		content:"出牌阶段，对每名角色仅能使用一张牌",
	},
	mod:{
		playerEnabled:function(card,player,target){
			if(target.hasSkill('XS_simian_skill2')) return false;
		}	
	},
	trigger:{player:'phaseUseAfter'},
	silent:true,
	content:function(){
		"step 0"
		var targets=game.filterPlayer(function(current){
			return get.distance(player,current)<=1&&player!=current;
		});
		event.tars=targets;
		"step 1"
		if(event.tars.length){
			var tar=event.tars.shift();
			event.tar=tar;
		}
		else event.finish();
		"step 2"
		event.tar.chooseToUse({
			filterCard:function(card){
				return get.name(card)=='sha'&&lib.filter.cardEnabled.apply(this,arguments);
			},
			prompt:'你可使用一张杀',
		});
		"step 3"
		event.goto(1);
	}
},
"XS_simian_skill1":{
	trigger:{player:'useCardToTargeted'},
	direct:true,
	content:function(){
		trigger.target.addTempSkill('XS_simian_skill2');
	}
},
"XS_simian_skill2":{
	charlotte:true,
},
"XS_jinskill":{
	trigger:{player:'damageBegin4'},
	forced:true,
	priority:-16,
	filter:function(event,player){
		if(!event.source) return false;
		if(event.source==player) return false;
		return player.countCards('h','XS_jin')&&event.num>0;
	},
	content:function(){
		var next=player.chooseToUse();
		next.set('prompt','是否交给'+get.translation(trigger.source)+'一张【珠玉】，令其对你造成的伤害-1？');
		next.set('filterCard',function(card){
			if(get.name(card)!='XS_jin') return false;
			return lib.filter.cardEnabled(card,player,'forceEnable');
		});
		next.set('goon',player.hp<=trigger.num);
		next.set('ai1',function(card){
			return _status.event.goon;
		})
	},
},
"XS_zouweishangskill":{
	trigger:{target:'useCardToTarget'},
	forced:true,
	priority:-10,
	filter:function(event,player){
		if(event.player==player) return false;
		if(event.card.name!='sha'&&get.type(event.card)!='trick') return false;
		return player.hasUsableCard('XS_zouweishang')&&player.countCards('h')>1;
	},
	content:function(){
		var next=player.chooseToUse();
		next.set('prompt','是否使用【走为上计】响应'+get.translation(trigger.player)+'使用的'+get.translation(trigger.card)+'？');
		next.set('filterCard',function(card){
			if(get.name(card)!='XS_zouweishang') return false;
			return lib.filter.cardEnabled(card,player,'forceEnable');
		});
		next.set('goon',-get.effect(player,trigger.card,trigger.player,player));
		next.set('ai1',function(card){
			return _status.event.goon-0.95;
		})
	},
},
"XS_nichangskill":{
	equipSkill:true,
	audio:"ext:血色衣冠:1",
	trigger:{player:'dyingAfter'},
	forced:true,
	filter:function(event,player){
		return player.isDamaged();
	},
	content:function(){
		player.recover();
	},
},
"XS_chiyouskill":{
	mod:{
		attackFrom:function (from,to,distance){
			if(from.storage.XS_chiyouskill) {
				return distance+from.storage.XS_chiyouskill.length;
			}
        },
	},
	intro:{
        content:function (storage){
			var num=storage.length;
            return '当前进攻范围-'+num+'，使用杀的伤害+'+num;
        },
	},
	init:function (player){
        player.storage.XS_chiyouskill=[];
		player.markSkill('XS_chiyouskill');
    },
	equipSkill:true,
    trigger:{
        source:"damageAfter",
    },
	audio:"ext:血色衣冠:1",
    filter:function (event,player){
		if(player.storage.XS_chiyouskill.length>3) return false;
		var list=['heart','diamond','spade','club'];
		var num1=0;
		for(var i=0;i<list.length;i++) {
			if(!player.storage.XS_chiyouskill.contains(list[i])) {
				num1+=player.countCards('h',{suit:list[i]});
			}
		}
        return num1>0;
    },
    direct:true,
    content:function (){
		"step 0"
		var cards=[];
		var list=['heart','diamond','spade','club'];
		var cardx=player.getCards('h');
		for(var i=0;i<cardx.length;i++) {
			var suit1=get.suit(cardx[i]);
			if(!player.storage.XS_chiyouskill.contains(suit1)) {
				cards.push(cardx[i]);
			}
		}
		if(cards.length>0) {
			player.chooseCardButton(get.prompt2('XS_chiyoufu'),cards,false).ai=function(button){
				return 4-get.value(button.link);
			}
		} 
		else event.finish();
        "step 1"
        if(result.bool){
			player.storage.XS_chiyouskill.push(get.suit(result.links[0]));
			player.discard(result.links[0]);
			player.logSkill('XS_chiyouskill');
        }
    },
	group:["XS_chiyouskill_dam"],
    subSkill:{
        dam:{
			trigger:{
				source:"damageBegin",
			},
			filter:function (event,player){
				if(!player.storage.XS_chiyouskill||player.storage.XS_chiyouskill.length<1) return false;
				return event.card&&event.card.name=='sha'&&event.notLink();
			},
			forced:true,
			content:function (){
				var nu=player.storage.XS_chiyouskill.length;
				trigger.num+=nu;
			},
			ai:{
				damageBonus:true,
			},
        },
    },
},
"XS_wuzhui_skill":{
	equipSkill:true,
	init:function (player){
		game.playAudio('..','extension','血色衣冠','');
		player.chooseUseTarget({name:"sha",isCard:true},true,true);
	},
},
"XS_saluzi_skill":{
	equipSkill:true,
	trigger:{
		player:["damageBefore","loseHpBefore"],
	},
	audio:"ext:血色衣冠:1",
	filter:function (event,player){
		return player.getEquip('XS_saluzi');
	},
	check:function (event,player){
		return event.num>=player.hp||event.num>1;
	},
	content:function (){
		player.discard(player.getEquip('XS_saluzi'));
		trigger.cancel();
	},
},
"XS_mantianskill":{
	charlotte:true,
	marktext:"瞒",
	init:function (player){
		player.markSkill('XS_mantianskill');
	},
	intro:{
		content:"你无法被指定为带有伤害标签牌的目标",
	},
	mod:{
		targetEnabled:function(card,player,target){
			if(get.tag(card,'damage')) return false;
		},
	},
},
"EXqibao_skill":{
	equipSkill:true,
	trigger:{source:'damageBegin1'},
	forced:true,
	filter:function(event){
		if(event.card&&event.card.name=='sha') {
			return event.player.isHealthy()||event.player.hp==1;
		}
		return false;
	},
	content:function(){
		trigger.num++;
	},
	ai:{
		effect:{
			player:function(card,player,target){
				if(card.name=='sha'&&target.isHealthy()&&get.attitude(player,target)>0){
					return [1,-2];
				}
			}
		}
	},
},
"EXqinggang_skill":{
	equipSkill:true,
	audio:"ext:血色衣冠:1",
	trigger:{
		player:"shaBegin",
	},
	forced:true,
	check:function (event,player){
        return get.attitude(player,event.target)<=0;
    },
	logTarget:"target",
	content:function (){
		if(!trigger.target.hasSkill('baiban')){
		trigger.target.addTempSkill('baiban','shaAfter');
        }
    },
	filter:function (event,player){
        return true;
    },
	ai:{
		unequip:true,
		skillTagFilter:function (player,tag,arg){
			if(arg&&arg.name=='sha') return true;
            return false;
        },
	},
},
"EXzhuque_skill":{
	group:["EXzhuque_skill3"],
	equipSkill:true,
	trigger:{player:'useCard1'},
	filter:function(event,player){
		if(event.card.name=='sha'&&!event.card.nature) return true;
	},
	audio:"ext:血色衣冠:1",
	check:function(event,player){
		var eff=0;
		for(var i=0;i<event.targets.length;i++){
			var target=event.targets[i];
			var eff1=get.damageEffect(target,player,player);
			var eff2=get.damageEffect(target,player,player,'fire');
			eff+=eff2;
			eff-=eff1;
		}
		return eff>=0;
	},
	content:function(){
		trigger.card.nature='fire';
		player.addSkill('EXzhuque_skill2');
		player.storage.EXzhuque_skill=trigger.card;
	},
},
"EXzhuque_skill2":{
	trigger:{player:'useCardAfter'},
	forced:true,
	popup:false,
	content:function(){
		delete player.storage.EXzhuque_skill.nature;
	}
            },
		   "EXzhuque_skill3":{
	trigger:{
		source:"damageBefore",
	},
	forced:true,
	content:function (){
        trigger.nature='fire';
    },
},
"EXqinglong_skill":{
	audio:"ext:血色衣冠:1",
	equipSkill:true,
	trigger:{player:'shaMiss'},
	direct:true,
	filter:function(event,player){
		if(get.mode()=='guozhan') return false;
		return player.canUse('sha',event.target,false)&&(player.hasSha()||_status.connectMode&&player.countCards('h'));
	},
	content:function(){
		"step 0"
		if(player.hasSkill('jiu')){
			game.broadcastAll(function(player){
				player.removeSkill('jiu');
			},player);
			event.jiu=true;
		}
		player.chooseToUse('每当你使用的杀被目标角色使用的闪抵消时，若此杀为红色你获得之，且你可以对其使用1张杀（无距离限制）。',{name:'sha'},trigger.target,-1).set('addCount',false).logSkill='EXqinglong_skill';
		"step 1"
		if(result.bool) {
			if(get.itemtype(trigger.cards)=='cards') {
				var card=trigger.cards.slice(0);
				if(get.color(card)=='red') {
					player.gain(card,'gain2','log');
				}
			}
		}
		else if(event.jiu){
			player.addSkill('jiu');
		}
	}
},
"EXzhangba_skill":{
	equipSkill:true,
	enable:['chooseToUse','chooseToRespond'],
	filterCard:true,
	selectCard:function (){
        var player=_status.event.player;
		if(player.countCards('h')==1) return 1;
		return 2;
    },
	position:'he',
	viewAs:{name:'sha'},
	filter:function(event,player){
		return player.countCards('h')>=1;
	},
	audio:"ext:血色衣冠:1",
	prompt:'将2张手牌当杀使用或打出，或将最后1张手牌当作杀使用或打出。',
	check:function(card){
		if(card.name=='sha') return 0;
		return 6-get.useful(card)
	},
	ai:{
		respondSha:true,
		skillTagFilter:function(player){
			return player.countCards('h')>=1;
		},
	}
},
"EXfangtian_skill":{
	audio:"ext:血色衣冠:1",
	equipSkill:true,
	mod:{
		selectTarget:function(card,player,range){
			if(card.name!='sha') return;
			if(get.mode()=='guozhan') return;
			if(range[1]==-1) return;
			var cards=player.getCards('h');
			for(var i=0;i<cards.length;i++){
				if(cards[i].classList.contains('selected')==false)
					return;
			}
			range[1]+=2;
		}
	},
	forced:true,
	trigger:{
		player:"shaMiss",
	},
	content:function (){
		player.draw();
	},
},
"EXqilin_skill":{
	trigger:{player:'useCardToPlayered'},
	direct:true,
	filter:function(event,player){
		return event.card.name=='sha'&&event.target.isAlive()&&event.target.countCards('e')>0;
	},
	equipSkill:true,
	audio:"ext:血色衣冠:1",
	content:function(){
		"step 0"
		var att=(get.attitude(player,trigger.target)<=0);
		var next=player.chooseButton();
		next.set('att',att);
		next.set('createDialog',['是否发动【强化麒麟弓】，弃置'+get.translation(trigger.target)+'的一张装备牌？',trigger.target.getCards('e')]);
		next.set('ai',function(button){
			if(_status.event.att) return get.buttonValue(button);
			return 0;
		});
		"step 1"
		if(result.bool){
			player.logSkill('EXqilin_skill',trigger.target);
			trigger.target.discard(result.links[0]);
		}
	},
},
"EXshuanggu_skill":{
	equipSkill:true,
	trigger:{player:'useCardToPlayered'},
	audio:"ext:血色衣冠:1",
	logTarget:'target',
	filter:function(event,player){
		if(event.card.name!='sha') return false;
		if(player.sex=='male'&&event.target.sex=='female') return true;
		if(player.sex=='female'&&event.target.sex=='male') return true;
		if(player.hp==event.target.hp) return true;
		return false;
	},
	content:function(){
		"step 0"
		trigger.target.chooseToDiscard('弃置一张手牌，或令'+get.translation(player)+'摸一张牌').set('ai',function(card){
			var trigger=_status.event.getTrigger();
			return -get.attitude(trigger.target,trigger.player)-get.value(card);
		});
		"step 1"
		if(result.bool==false) player.draw();
	}
},
"EXhanbing_skill":{
	equipSkill:true,
	audio:"ext:血色衣冠:1",
	trigger:{source:'damageBegin2'},
	filter:function(event){
		return event.card&&event.card.name=='sha'&&event.notLink()&&event.player.getCards('he').length>0;
	},
	check:function(event,player){
		var target=event.player;
		var eff=get.damageEffect(target,player,player);
		if(get.attitude(player,target)>0){
			if(eff>=0) return false;
			return true;
		}
		if(eff<=0) return true;
		if(target.hp==1) return false;
		if(event.num>1||player.hasSkill('tianxianjiu')||
		player.hasSkill('luoyi2')||player.hasSkill('reluoyi2')) return false;
		if(target.countCards('he')<3) return -1;
		var num=0;
		var cards=target.getCards('he');
		for(var i=0;i<cards.length;i++){
			if(get.value(cards[i])>6) num++;
		}
		if(num>=2) return true;
		return false;
	},
	logTarget:"player",
	content:function(){
		"step 0"
		trigger.cancel();
		"step 1"
		if(trigger.player.countDiscardableCards(player,'he')){
			player.line(trigger.player);
			player.discardPlayerCard('he',trigger.player,true);
		}
		"step 2"
		if(trigger.player.countDiscardableCards(player,'he')){
		player.line(trigger.player);
			player.discardPlayerCard('he',trigger.player,true);
		}
		"step 3"
		if(trigger.player.countDiscardableCards(player,'he')){
		player.line(trigger.player);
			player.discardPlayerCard('he',trigger.player,true);
		}
	}
},
"EXguanshi_skill":{
	equipSkill:true,
	audio:"ext:血色衣冠:1",
	trigger:{player:'shaMiss'},
	direct:true,
	filter:function(event,player){
		return player.countCards('he')>1&&event.target.isAlive();
	},
	content:function(){
		"step 0"
		var next=player.chooseToDiscard('弃置1张牌令此杀依然造成伤害',1,'he',function(card){
			return _status.event.player.getCards('e',{subtype:'equip1'}).contains(card)==false;
		});
		next.logSkill='EXguanshi_skill';
		next.set('ai',function(card){
			var evt=_status.event.getParent();
			if(get.attitude(evt.player,evt._trigger.target)<0){
				if(evt.player.hasSkill('jiu')||
				evt.player.hasSkill('tianxianjiu')||
				evt._trigger.target.hp==1){
					return 8-get.value(card)
				}
				return 5-get.value(card)
			}
			return -1;
		});
		"step 1"
		if(result.bool){
			trigger.untrigger();
			trigger.trigger('shaHit');
			trigger._result.bool=false;
		}
	}
},
"EXguding_skill":{
	equipSkill:true,
	audio:"ext:血色衣冠:1",
	trigger:{source:'damageBegin1'},
	filter:function(event){
		if(event.parent.name=='_lianhuan'||event.parent.name=='_lianhuan2') return false;
		if(event.card&&event.card.name=='sha'){
			if(event.player.countCards('h')==0||(event.player.countCards('e')==0&&event.player.countCards('j')==0)) return true;
		}
		return false;
	},
	forced:true,
	content:function(){
		trigger.num++;
	},
	ai:{
		effect:{
			target:function(card,player,target,current){
				if(card.name=='sha'&&target.countCards('h')==0) return [1,-2];
			}
		}
	}
},
"EXyinyue_skill":{
	equipSkill:true,
	trigger:{player:['useCard','respondAfter']},
	direct:true,
	filter:function(event,player){
		if(_status.currentPhase==player) return false;
		if(!event.cards) return false;
		if(event.cards.length!=1) return false;
		if(lib.filter.autoRespondSha.call({player:player})) return false;
		return true;
	},
	content:function(){
		'step 0'
		var next=player.chooseToUse(get.prompt('EXyinyue_skill'),{name:'sha'});
		next.aidelay=true;
		next.logSkill='EXyinyue_skill';
		next.noButton=true;
		'step 1'
		if(result.bool){
			game.delay();
		}
	}
},
"EXzhungang_skill":{
	equipSkill:true,
	trigger:{player:'useCardToPlayered'},
	logTarget:'target',
	filter:function(event,player){
		return event.card.name=='sha'&&event.player.countCards('h');
	},
	check:function(event,player){
		var target=event.target;
		if(get.attitude(player,target)>=0) return false;
		return true;
	},
	content:function(){
		'step 0'
		game.delayx();
		'step 1'
		player.discardPlayerCard('h',trigger.target,true);
	}
            },
"XS_gongbuskill":{
	init:function (player){
		player.addAdditionalSkill('XS_zhujian','XS_tianjiao');
	},
},
"XS_chunjunskill":{
	init:function (player){
		player.addAdditionalSkill('XS_zhujian','XS_weijia');
	},
},
"XS_zhanluskill":{
	init:function (player){
		player.addAdditionalSkill('XS_zhujian','XS_renzheng');
	},
},
"XS_taieskill":{
	init:function (player){
		player.addAdditionalSkill('XS_zhujian','XS_weiya');
	},
},
"XS_longquanskill":{
	init:function (player){
		player.addAdditionalSkill('XS_zhujian','XS_tianming');
	},
},
"XS_pojia":{
	ai:{
        unequip:true,
        skillTagFilter:function (player,tag,arg){
            if(arg&&arg.name=='sha') return true;
            return false;
        },
    },
},
"XS_shediao":{
	mod:{
		selectTarget:function (card,player,range){
			if(card.name=='sha'&&get.color(card)=='red') range[1]+=1;
		},
	},
	trigger:{
		source:"damageBegin",
	},
	filter:function (event,player){
		return event.card&&event.card.name=='sha'&&event.notLink()&&event.player.getCards('e').length>0
	},
	direct:true,
	audio:"ext:血色衣冠:true",
	content:function (){
        "step 0"
        var att=(get.attitude(player,trigger.player)<=0);
        var next=player.chooseButton();
        next.set('att',att);
        next.set('createDialog',['是否发动【射雕弓】，弃置'+get.translation(trigger.player)+'装备区的1张牌？',trigger.player.getCards('e')]);
        next.set('ai',function(button){
            if(_status.event.att) return get.buttonValue(button);
            return 0;
        });
        "step 1"
        if(result.bool){
            player.logSkill('XS_shediao',trigger.player);
            trigger.player.discard(result.links[0]);
        }
    },
},
"XS_hunshuimoyu":{
	trigger:{
		global:"loseEnd",
	},
	direct:true,
	filter:function (event,player){
        if(event.player==player) return false;
        if(!event.player.countCards('he')) return false;
        if(!lib.filter.targetEnabled({name:'XS_hunshui'},player,event.player)) return false;
        if(event._notrigger.contains(event.player)) return false;
        if(event.cards.length<2) return false;
        return player.hasCard('XS_hunshui');
    },
	content:function (){
        player.chooseToUse(get.prompt('XS_hunshui',trigger.player).replace(/发动/,'使用'),function(card,player){
            if(card.name!='XS_hunshui') return false;
            return lib.filter.cardEnabled(card,player,'forceEnable');
        },trigger.player,-1).targetRequired=true;
    },
},
"XS_shushangkaihua":{
	trigger:{
		player:"phaseBefore",
	},
	direct:true,
	content:function (){
        var num=Math.min(4,player.maxHp);
        player.chooseToDiscard(num,'h',true);
		player.removeSkill('XS_shushangkaihua');
    },
	group:["XS_shushangkaihua_draw"],
	subSkill:{
		draw:{
			trigger:{
				player:"phaseJieshuBegin",
			},
			forced:true,
			content:function (){
                var num=Math.min(4,player.maxHp);
                player.draw(num);
            },
			sub:true,
		},
	},
},
"XS_jiudingskill":{
	equipSkill:true,
	mod:{
		suit:function (card,suit){
			var player=_status.event.player;
			if(!player||!player.storage.XS_jiudingskill) return;
			if(player.storage.XS_jiudingskill_rec>=Math.min(4,player.hp)) return;
			return player.storage.XS_jiudingskill;
		},
	},
	marktext:'鼎',
	intro:{
		content:function (content,player){
			var str=get.translation(player.storage.XS_jiudingskill);
			return '你区域内的牌花色均视为：'+str+'</br>已判定次数：'+player.storage.XS_jiudingskill_rec;
		},
	},
	audio:"ext:血色衣冠:1",
	trigger:{
		player:"phaseZhunbeiBegin",
	},
	direct:true,
	content:function (){
        "step 0"
        var suits=['heart2','spade2','diamond2','club2','cancel2'];
        player.chooseControl(suits,true).set('ai',function(event){
			if(player.hasJudge('bingliang')||player.hasJudge('caomu')) return 'club2';
			if(player.hasJudge('lebu')||player.hasSkill('bagua_skill')) return 'heart2'
	 		return 'cancel2';
        }).set('prompt','九鼎：你可声明1种花色，令你直到下个回合开始：你区域内的牌均视为此花色，直至你进行X次判定后，X为你当前体力值。');
        "step 1"
        if(result.control!='cancel2'){
			player.logSkill('XS_jiudingskill');
			var suit=result.control.slice(0,result.control.length-1);
            player.storage.XS_jiudingskill=suit;
			player.storage.XS_jiudingskill_rec=0;
			player.markSkill('XS_jiudingskill');
        }
    },
	group:["XS_jiudingskill_clear","XS_jiudingskill_rec"],
	subSkill:{
		clear:{
			trigger:{
				player:"phaseBefore",
			},
			filter:function (event,player){
                return player.storage.XS_jiudingskill;
            },
			direct:true,
			content:function (){
                delete player.storage.XS_jiudingskill;
				delete player.storage.XS_jiudingskill_rec;
				player.unmarkSkill('XS_jiudingskill');
            },
			sub:true,
		},
		rec:{
			trigger:{
				player:"judgeAfter",
			},
			filter:function (event,player){
                return player.storage.XS_jiudingskill_rec!=null&&player.storage.XS_jiudingskill_rec!=undefined;
            },
			priority:92,
			direct:true,
			content:function (){
				player.storage.XS_jiudingskill_rec++;
				player.syncStorage('XS_jiudingskill_rec');
            },
			sub:true,
		},
	},
},
"XS_jiadaoskill":{
	charlotte:true,
	mod:{
		targetInRange:function (card,player,target){
			if(target.hasSkill('XS_jiadaoskill_mark')){
				return true;
			}
		},
	},
	trigger:{
		source:"damageEnd",
	},
	filter:function (event,player){
		if(!event.card||event.card.name!='sha'||!event.notLink()) return false;
		if(!event.player.hasSkill('XS_jiadaoskill_mark')) return false;
        if(!lib.filter.targetEnabled2(event.card,player,event.player.previous)) return false;
        return true;
    },
	direct:true,
	content:function (){
        "step 0"
        player.chooseBool(get.prompt('XS_jiadao'),'是否令'+get.translation(trigger.card)+'对'+get.translation(trigger.player.previous)+'继续结算？').set('ai',function(){
            var trigger=_status.event.getTrigger();
            if(get.effect(trigger.player.previous,trigger.card,player,player)>0) return true;
            return false;
        });
        "step 1"
        if(result.bool){
            player.useCard(trigger.card,trigger.cards,trigger.player.previous,false);
        }
    },
	subSkill:{
		mark:{
			charlotte:true,
			onremove:function(player){
				player.unmarkSkill('XS_jiadaoskill_mark');
			},
			sub:true,
		},
	},
},
"XS_xuanyuan_skill":{
	equipSkill:true,
    trigger:{
        source:"damageAfter",
    },
	audio:"ext:血色衣冠:1",
    filter:function (event,player){
		if(event.getParent().name=='XS_xuanyuan_skill') return false;
		if(!player.countCards('h')) return false;
        return event.card&&event.card.name=='sha'&&event.notLink();
    },
	priority:4,
    direct:true,
    content:function (){
		"step 0"
		player.chooseToDiscard(get.prompt('XS_xuanyuanjian'),'你可弃置至多3张手牌，令'+get.translation(trigger.player)+'的至多下3家（'+get.translation(trigger.player.next)+'、'+get.translation(trigger.player.next.next)+'、'+get.translation(trigger.player.next.next.next)+'）受到'+trigger.num+'点无属性伤害？',[1,3]).set('ai',function(card){
			var tri=_status.event.getTrigger();
			var dam=tri.num,tar=tri.player;
			var dameff1=get.damageEffect(tar.next,player,player);
			var dameff2=get.damageEffect(tar.next.next,player,player);
			var dameff3=get.damageEffect(tar.next.next.next,player,player);
			if(ui.selected.cards.length==0&&dameff1>0) {
				return 6-get.value(card);
			}
			if(ui.selected.cards.length==1&&dameff2>0) {
				return 6-get.value(card);
			}
			if(ui.selected.cards.length==2&&dameff3>0) {
				return 6-get.value(card);
			}
			return -1;
		});
		"step 1"
		if(result.bool&&result.cards.length){
			var num1=result.cards.length;
			player.logSkill('XS_xuanyuan_skill');
			if(num1>=1) {	
				trigger.player.next.damage(trigger.nature,1,'nocard',player);
			}
			if(num1>=2){
				trigger.player.next.next.damage(trigger.nature,1,'nocard',player);
			}		
			if(num1>=3){
				trigger.player.next.next.next.damage(trigger.nature,1,'nocard',player);
			}				
		}
    },
},
"XS_yuxiskill":{
	mod:{
		maxHandcard:function (player,num){
            return num+2;
        },
	},
	trigger:{
		player:"phaseDrawBegin",
	},
	priority:99,
	forced:true,
	content:function (){
        trigger.num++;
    },
	group:["XS_yuxiskill_show"],
	subSkill:{
		show:{
			init:function (player){
                player.markSkill('XS_yuxiskill_show');
            },
			intro:{
				mark:function (dialog,content,player){
                var hs=player.getCards('h');
                    if(hs.length){
                        dialog.addText('手牌')&&dialog.addSmall(hs);
                    }
                    else{
                        dialog.addText('无手牌');
                    }
                },
                            content:function (content,player){
                    var hs=player.getCards('h');
                    if(hs.length){
                        return get.translation(hs);
                    }
                    else{
                        return '无手牌';
                    }
                },
                        },
                        sub:true,
                    },
                },
            },
"XS_jiuxi_skill":{
	trigger:{
		target:"useCardToTargeted",
	},
	usable:3,
	filter:function (event,player){
		return event.card.name=='sha';
	},
	audio:"ext:血色衣冠:1",
	check:function (event,player){
		return get.attitude(player,event.player)>0;
	},
	content:function (){
        "step 0"
		event.pla=player;
		var translation=get.translation(trigger.card);
		trigger.player.chooseBool(get.prompt('XS_jiuxi'),'是否使'+translation+'对'+get.translation(player)+'无效？').set('ai',function(){
			var trigger=_status.event.getTrigger();
			return get.attitude(trigger.player,event.pla)>0;
		});
        "step 1"
        if(result.bool){
			trigger.getParent().excluded.add(player);
			trigger.player.chooseControl().set('choiceList',['回复1点体力','摸2张牌']).set('ai',function(event,player){
				var trigger=_status.event.getTrigger();
				if(trigger.player.isDamaged()) return 0;
				return 1;
			});
        }
		else event.finish();
        "step 2"
		if(result.index==0){
			trigger.player.recover();
		}
		else{
			trigger.player.draw(2);
		}
    },
	ai:{
		maixie:true,
		"maixie_hp":true,
		effect:{
			target:function (card,player,target){
				if(card.name=='sha'){
					if(!target.hasFriend()) return;
					if(player.hasSkill('jiu')) return;
					if(get.attitude(player,target)>0){
						return [0,0,1,2];
					}
					else return;
				}
			},
		},
	},
            },
},//卡牌的技能

translate:{
	"XS_jinzun":"金樽",
	"XS_jinzun_info":"出牌阶段限1次，你可失去1点体力视为使用1张酒；如此你可减少1点体力上限，使本回合此技能前半部分发动次数+1。",
	"XS_jinzun_skill":"金樽",
	"XS_jinzun_skill_info":"",
	"XS_jinglan":"井阑",
	"XS_jinglan_info":"你使用杀时，可指定至多2名与你距离为1的其他角色为此牌额外目标。",
	"XS_jinglan_skill":"井阑",
	"XS_jinglan_skill_info":"",
	"XS_yunti":"云梯",
	"XS_yunti_info":"锁定技，你对与你距离为1的角色使用牌无次数限制。",
	"XS_yunti_skill":"云梯",
	"XS_yunti_skill_info":"",
	"XS_chongche":"冲车",
	"XS_chongche_info":"弃牌阶段开始，你可摸X张牌，X为你装备区花色数，如此若你手牌数不大于上限，你可弃置1名角色装备区1张牌。",
	"XS_chongche_skill":"冲车",
	"XS_chongche_skill_info":"",
	"XS_mushou":"木兽",
	"XS_mushou_info":"每回合你首次受到伤害后，可摸2张牌并展示之，若花色相同，你可将其当作1张火杀使用，否则弃置其中1张。",
	"XS_mushou_skill":"木兽",
	"XS_mushou_skill_info":"",
	"XS_liquanqiang":"沥泉枪",
	"XS_liquanqiang_info":"出牌阶段限1次，你可将1张带有伤害标签的牌当作杀使用，若其未造成伤害，你可对目标使用该未转化的牌。",
	"XS_liquan_skill":"沥泉",
	"XS_liquan_skill_info":"",
	"XS_liquan_skill1":"沥泉",
	"XS_liquan_skill1_info":"",
	"XS_luodiaogong":"落雕弓",
	"XS_luodiaogong_info":"锁定技，当此牌进入、离开你的装备区时，你摸1张牌。",
	"XS_luodiao_skill":"落雕",
	"XS_luodiao_skill_info":"",
	"XS_simian":"四面楚歌",
	"XS_simian_info":"出牌阶段对1名其他角色使用，将此牌置于该角色判定区，若判定结果不为红桃，出牌阶段，其对每名角色仅能使用1张牌；出牌阶段结束时，与其距离为1的角色可依次使用1张杀。",
	"XS_simian_skill":"楚歌",
	"XS_simian_skill_info":"",
	"XS_simian_skill1":"楚歌",
	"XS_simian_skill1_info":"",
	"XS_simian_skill2":"楚歌",
	"XS_simian_skill2_info":"",
	"XS_jin":"珠玉",
	"XS_jin_info":"受到不为你的来源的伤害时，对伤害来源使用手牌中的此牌，该角色获得此牌并令此伤害-1。",
	"XS_zouweishang":"走为上计",
	"XS_zouweishang_info":"当你成为其他角色的杀或普通锦囊牌的目标时，对你使用，你展示1张手牌使你不为此牌目标，若展示的手牌颜色与此牌不同，你需弃置1张牌。",
	"XS_nichang":"霓裳",
	"XS_nichang_info":"锁定技，你脱离濒死状态后，回复1点体力。",
	"XS_nichangskill":"霓裳",
	"XS_nichangskill_info":"",
	"XS_chiyoufu":"蚩尤斧",
	"XS_chiyoufu_info":"当你造成伤害后，可弃置1张未以此法弃置过的花色的手牌，令此武器的进攻距离-1且使用杀造成的伤害+1。",
	"XS_chiyouskill":"蚩尤斧",
	"XS_chiyouskill_info":"",
	"XS_yiyidailao":"以逸待劳",
	"XS_yiyidailao_info":"出牌阶段对所有角色使用，装备区有牌的角色需弃置1张牌，装备区无牌的角色摸1张牌。",
	"XS_wuzhui":"乌骓",
	"XS_wuzhui_info":"当你装备此牌时，视为你使用1张杀；当你失去装备区的此牌时，视为你使用1张决斗。",
	"XS_wuzhui_skill":"乌骓",
	"XS_wuzhui_skill_info":"",
	"XS_saluzi":"飒露紫",
	"XS_saluzi_info":"当你受到伤害/体力流失时，可弃置装备区的此牌防止之。",
	"XS_saluzi_skill":"飒露紫",
	"XS_saluzi_skill_info":"",
	"XS_hufu":"虎符",
	"XS_hufu_info":"出牌阶段对自己使用，重置当前回合卡牌和技能使用次数。",
	"XS_mantian":"瞒天过海",
	"XS_mantian_info":"出牌阶段对1名其他角色使用，将此牌置于该角色判定区，若判定结果不为方片，其直到下一个准备阶段无法被指定为带有伤害标签牌的目标。",
	"XS_mantianskill":"瞒天",
	"XS_mantianskill_info":"",
	"EXqibao_skill":"强化七宝刀",
	"EXqibao_skill_info":"你使用杀无视目标防具，若目标角色未损失体力值或体力值为1，此杀伤害+1。",
	"EXqinggang_skill":"强化青钢剑",
	"EXqinggang_skill_info":"你使用杀无视防具，当你使用杀指定目标时，其武将技能失效直到此杀结束。",
	"EXzhuque_skill":"强化朱雀扇",
	"EXzhuque_skill_info":"你的普通杀可以视为火杀，你造成的所有伤害都视为火伤害。",
	"EXzhuque_skill2":"强化朱雀扇",
	"EXzhuque_skill2_info":"",
	"EXzhuque_skill3":"强化朱雀扇",
	"EXzhuque_skill3_info":"",
	"EXqinglong_skill":"强化青龙刀",
	"EXqinglong_skill_info":"每当你使用的杀被目标角色使用的闪抵消时，若此杀为红色你获得之，且你可以对其使用1张杀（无距离限制）。",
	"EXzhangba_skill":"强化丈八矛",
	"EXzhangba_skill_info":"你可以将2张手牌当杀使用或打出，或将最后1张手牌当作杀使用或打出。",
	"EXfangtian_skill":"强化方天戟",
	"EXfangtian_skill_info":"若你使用的杀是最后的手牌时，你可以额外指定2个目标；当你的杀被闪抵消时，你摸1张牌。",
	"EXqilin_skill":"强化麒麟弓",
	"EXqilin_skill_info":"当你使用杀指定目标时，你可以弃置其1张装备牌。",
	"EXshuanggu_skill":"强化双股剑",
	"EXshuanggu_skill_info":"每当你使用杀指定异性或体力等于你的目标后，你可以令其选择1项：1.弃置1张手牌；2.令你摸1张牌。",
	"EXhanbing_skill":"强化寒冰剑",
	"EXhanbing_skill_info":"当你的杀造成伤害时，你可以取消之并依次弃置其3张牌。",
	"EXguanshi_skill":"强化贯石斧",
	"EXguanshi_skill_info":"当你的杀被闪抵消时，你可以弃置1张牌令此杀依然造成伤害。",
	"EXguding_skill":"强化古锭刀",
	"EXguding_skill_info":"当你使用杀造成伤害时，若目标没有手牌或区域内没有牌，此伤害+1。",
	"EXyinyue_skill":"强化银月枪",
	"EXyinyue_skill_info":"你的回合外，每当你使用或打出了1张手牌（若为使用则在它结算之前），你可以立即对你攻击范围内的任意1名角色使用1杀。",
	"EXzhungang_skill":"强化衠钢槊",
	"EXzhungang_skill_info":"当你使用杀指定目标后，你可以弃置其1张手牌。",
	"XS_taieskill":"太阿剑",
	"XS_taieskill_info":"",
	"XS_gongbuskill":"工部剑",
	"XS_gongbuskill_info":"",
	"XS_zhanluskill":"湛卢剑",
	"XS_zhanluskill_info":"",
	"XS_chunjunskill":"纯钧剑",
	"XS_chunjunskill_info":"",
	"XS_longquanskill":"龙泉剑",
	"XS_longquanskill_info":"",
	"XS_shediao":"射雕",
	"XS_shediao_info":"",
	"XS_shediaogong":"射雕弓",
	"XS_shediaogong_info":"你的红色杀可以额外指定1个目标；你使用杀造成伤害时，可以弃置目标装备区的1张牌；当你失去此装备时，摸2张牌。",
	"XS_longquan":"龙泉剑",
	"XS_longquan_info":"当你使用杀指定1名角色后，无视其防具；获得技能“天命”。",
	"XS_taie":"太阿剑",
	"XS_taie_info":"当你使用杀指定1名角色后，无视其防具；获得技能“威压”。",
	"XS_zhanlu":"湛卢剑",
	"XS_zhanlu_info":"当你使用杀指定1名角色后，无视其防具；获得技能“仁政”。",
	"XS_chunjun":"纯钧剑",
	"XS_chunjun_info":"当你使用杀指定1名角色后，无视其防具；获得技能“威加”。",
	"XS_gongbu":"工部剑",
	"XS_gongbu_info":"当你使用杀指定1名角色后，无视其防具；获得技能“天骄”。",
	"XS_chunqiangshejian":"唇枪舌剑",
	"XS_chunqiangshejian_info":"出牌阶段对1名有手牌的其他角色使用，并与之拼点，若成功则视为对其使用1张不计次数的杀。",
	"XS_yuxi":"玉玺",
	"XS_yuxi_info":"锁定技，你于摸牌阶段摸牌数+1，手牌上限+2；你的手牌对他人始终可见。",
	"XS_xuanyuanjian":"轩辕剑",
	"XS_xuanyuanjian_info":"你使用杀造成伤害后，可弃置至多3张手牌，令目标的至多下3家受到1点无属性伤害。",
	"XS_paozhuanyinyu":"抛砖引玉",
	"XS_paozhuanyinyu_info":"出牌阶段对1名角色使用：若其体力为全场最少，你可失去1点体力令其回复2点体力；或者，若其手牌为全场最少，你可弃置1张手牌并令其摸3张牌。",
	"XS_hunshui":"浑水摸鱼",
	"XS_hunshui_info":"其他角色一次失去至少2张牌时可对其使用，你可获得其1张牌。",
	"XS_shushang":"树上开花",
	"XS_shushang_info":"出牌阶段对自己使用，结束阶段你摸X张牌，如此你下回合开始时弃置X张牌（X为你的体力上限且至多为4）。",
	"XS_jiuding":"九鼎",
	"XS_jiuding_info":"准备阶段，你可声明1种花色，令你直到下个回合开始：你区域内的牌均视为此花色，直至你进行X次判定后，X为你当前体力值。",
	"XS_dacao":"打草惊蛇",
	"XS_dacao_info":"出牌阶段对1名有手牌的其他角色使用，其将手牌中全部的杀当作1张无距离、次数限制的杀对你使用；否则，你观看其手牌并弃置其中1张。",
	"XS_jiadao":"假道伐虢",
	"XS_jiadao_info":"出牌阶段对1名与你不相邻的角色使用，本回合你对其使用牌无距离限制，且当你使用杀对其造成伤害时，可令此杀对其上家继续结算。",
	"XS_jiuxi":"九锡",
	"XS_jiuxi_info":"每回合限3次，当你被指定为杀的目标时，可令来源选择取消你为此杀目标，如此其选择1项：回复1点体力；摸2张牌。",
	"XS_yuxiskill":"玉玺",
	"XS_yuxiskill_info":"",
	"XS_xuanyuan_skill":"轩辕剑",
	"XS_xuanyuan_skill_info":"",
	"XS_shushangkaihua":"树上",
	"XS_shushangkaihua_info":"准备阶段，你可声明1种花色，令你直到下个回合开始：你区域内的牌均视为此花色，直至你进行X次判定后，X为你当前体力值。",
	"XS_jiudingskill":"九鼎",
	"XS_jiudingskill_info":"",
	"XS_jiadaoskill":"假道",
	"XS_jiadaoskill_info":"",
	"XS_jiuxi_skill":"九锡",
	"XS_jiuxi_skill_info":"",
},//翻译
				list:[["heart",8,"XS_xuanyuanjian"],["diamond",10,"XS_yuxi"],["heart",4,"XS_shushang"],["heart",7,"XS_shushang"],["club",8,"XS_chunqiangshejian"],["spade",10,"XS_chunqiangshejian"],["diamond",11,"XS_paozhuanyinyu"],["spade",6,"XS_paozhuanyinyu"],["diamond",5,"XS_hunshui"],["diamond",13,"XS_hunshui"],["club",13,"XS_jiuding"],["heart",7,"XS_dacao"],["diamond",8,"XS_dacao"],["club",1,"XS_jiadao"],["spade",10,"XS_jiuxi"],["heart",11,"XS_mantian"],["club",4,"XS_hufu"],["club",5,"XS_wuzhui"],["diamond",13,"XS_saluzi"],["club",13,"XS_yiyidailao"],["diamond",11,"XS_chiyoufu"],["heart",1,"XS_nichang"],["spade",3,"XS_zouweishang"],["club",10,"XS_zouweishang"],["diamond",8,"XS_jin"],["heart",8,"XS_jin"],["spade",6,"XS_jin"],["club",6,"XS_jin"],["club",2,"XS_liquanqiang"],["spade",12,"XS_luodiaogong"],["heart",11,"XS_jinzun"]]//卡牌的花色点数及数量
			};
			return XS_card;
			});
		lib.translate['XS_card_card_config']='血色衣冠';
lib.config.all.cards.push('XS_card');
if(!lib.config.cards.contains('XS_card')) lib.config.cards.remove('XS_card');
};

},help:{"血色衣冠":"<br>&emsp;名词解释:<ul><li>主要阶段：判定阶段、摸牌阶段、出牌阶段、弃牌阶段<li>进攻距离：你计算与其他角色的距离<li>防御距离：其他角色与你的距离<li>攻击距离：武器牌等带来的使用杀的距离<li>攻击范围：结合计算进攻距离、攻击距离后的范围<li>带有伤害标签的牌：可以造成伤害的所有牌<li>某角色的牌：指手牌和装备区的牌<li>某角色所有/任意区域内的牌：指手牌区、装备区和判定区的牌<li>场上的牌：指装备区、判定区的牌</ul>"},config:{
		"XS_help":{
				"name":"血色衣冠重置版","init":"1","item":{"1":"查看介绍","2":"<li>本扩展所涉及的角色为上溯殷商、下迄明末，跨度三千余年间中华大地上出现过的杰出历史人物。","3":"<li>本扩展技能强度与官方接近，同时完全适应面杀环境，除武将外还包括2张基本牌，9张锦囊牌，11张装备牌，支持联机。","4":"<li>建议开启军争卡牌包、SP卡牌包以及血色衣冠卡牌包以获得最佳的游戏体验。","5":"<li>本扩展附带群像（图鉴）模式，请于游戏模式中查看。","6":"<li>可通过“常用名称”开关更改角色名称为常用名称，如：武曌—武则天，姜小白—齐桓公，王诩—鬼谷子等。"}
		},
		"XS_update":{
				"name":"版本：1.92","init":"1","item":{"1":"查看更新","2":"<li>修正bug","3":"<li>新增角色：神王猛、姬轩辕、嫘祖、姬高阳、姬俊","4":"<li>增加配音：神王猛、姬轩辕、嫘祖、姬高阳、姬俊、拓跋焘、梁山伯、祝英台、苏绰、韦叔裕、赢任好、阖闾、养由基、陶渊明、惠施、贾谊、南子、王猛","5":"<li>技能修改：神刘彻——扬鞭","6":"<li>角色重置：孙武、祖逖、陈庆之、司马光、司马睿、慕容垂"}
		},
		"XS_nicheng":{
			"name":'常用名称',
           "intro":"替换角色名称为常用名称（如：武曌-武则天，姜小白—齐桓公），重新加载游戏后生效。",
            init:false
		},
		"XS_buchang":{
			"name":'忠臣补偿',
           "intro":"作为对主公/忠臣一方劣势的补偿，开启后将为忠臣/内奸增加技能“勤王”（忠臣/内奸每局游戏限一次，出牌阶段，你可亮出你的忠臣身份牌，令主公摸1张牌）。",
            init:false
		},
		"XS_imagemark":{
			"name":"标记图片",
			"intro":"将部分技能的标记替换为图片，不建议在非十周年UI环境下开启。",
			"init":lib.config.XS_imagemk===undefined?false:lib.config.XS_imagemk,
			onclick:function(item){
				game.saveConfig('extension_血色衣冠_XS_imagemark',item);
				game.saveConfig('XS_imagemk',item);
			}
		},
		"libbag":{
			"name":"<b><p align=center><span style=\"font-size:18px\">-----血色群像-----</span>",
			"clear":true,
			"nopointer":true,
		},
		"libhelp":{
			"name":"血色群像",
			"init":"1",
			frequent:true,
			item:{"1":"查看介绍","2":"<li>本模式用于展示《血色衣冠》扩展中的角色信息，包括角色介绍、角色技能、关联角色、角色分析等内容。","3":"<li>左键点击下方小头像查看角色介绍、分析等内容，右键点击头像查看角色技能、称号等信息。"},
		},
		"openlib":{
			"name":"打开群像<div>&gt;</div>",
			"clear":true,
			onclick:function(){
				game.saveConfig('mode','XS_lib');
				localStorage.setItem(lib.configprefix+'directstart',true);
				game.reload();
			},
		},
	
},package:{
	//注：以下为游戏自带编辑器的代码编辑区域
    character:{
        character:{
        },
        translate:{
        },
    },
    card:{
        card:{

        },
        translate:{

        },
        list:[

		],
    },
    skill:{
        skill:{
        },
        translate:{
        },
    },
    intro:"&emsp;风雨华夏血春秋，今朝把酒意还休。王侯业尽碎竹简，将相功名残土丘。汉唐应悔庭中乱，宋明犹难塞外酋。千年故纸空读尽，恨把衣冠祭九州。</br></br><li>作者：Wall•E    （QQ:1687113490）<li>测试：Hiowanyei、花落、贝蒂小熊<li>感谢蝶梦庄生提供的称号、图片等内容<li>感谢Maybe提供的音效、图片素材<li>特别鸣谢九醉书生、血刀少主、不问是非、白袖、蚩羽、剑寒、唐倾歌、牛杂师傅、容返、旅鸽、铭香等大佬提供的配音",
    author:"",
    diskURL:"",
    forumURL:"",
    version:"1.92",
},files:{"character":[],"card":[],"skill":[]}}})
